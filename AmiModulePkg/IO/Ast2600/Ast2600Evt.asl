//***********************************************************************
//*                                                                     *
//*   Copyright (c) 1985-2019, American Megatrends International LLC.   *
//*                                                                     *
//*      All rights reserved. Subject to AMI licensing agreement.       *
//*                                                                     *
//***********************************************************************
//<AMI_FHDR_START>
//
// Name:  <AST2600EVT.asl>
//
// Description: Define event handler for Super IO.
//
//<AMI_FHDR_END>
//**********************************************************************
//Scope(\_SB.PCI0.SBRG) {
//----------------------------------------------------------------------
// SET OF COMMON DATA/CONTROL METHODS USED FOR ALL LDN BASED SIO DEVICES
//----------------------------------------------------------------------
// SIO specific: SIOS - SIO Chipset specific code called from _PTS
// SIO specific: SIOW - SIO Chipset specific code called from _WAK
// SIO specific: SIOH - SIO event handler, to be called from correspondent _Lxx method
// SIO specific: PowerResources & _PR0 object to control Power management for FDC, LPT, UART1,2.

//----------------------------------------------------------------------
// SIO_PME WAKE UP EVENTS //
//----------------------------------------------------------------------
// Following code is the workaround for wake up on RI/Key/Mouse events
// are generated by some SuperIO. The wake up signal (SIO_PME) is
// connected to one of GPIOs of south bridge chip.
// Make sure the correspondent GPIO in south bridge is enabled to generate an SCI
//----------------------------------------------------------------------
// Add Flag for Fix WakeUp Switch bug. 
Name(PMFG, 0x00)    //PME wake status

//----------------------------------------------------------------------
// SIOS - SIO Chipset specific code called from _PTS
//----------------------------------------------------------------------
// input  - Arg0 : Sleep state #
// output - nothing
//----------------------------------------------------------------------
Method(SIOS, 1){
    // Aware wake up events in SIO chip
    Store("SIOS", Debug)

}

//----------------------------------------------------------------------
// SIOW - SIO Chipset specific code called from _WAK
//----------------------------------------------------------------------
// input  - Sleep State #
// output - nothing
//----------------------------------------------------------------------
Method(SIOW, 1){
    Store("SIOW", Debug)

}

//----------------------------------------------------------------------
// SIOH - SIO event handler, to be called from correspondent _Lxx method
// in order to serve the SIO chipset side of wake up event
//----------------------------------------------------------------------
// input  - nothing
// output - nothing
//----------------------------------------------------------------------
Method(SIOH, 0){

}
