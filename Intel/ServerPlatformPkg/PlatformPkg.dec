## @file
# Platform Package
# Cross Platform Modules for Tiano
#
# @copyright
# INTEL CONFIDENTIAL
# Copyright 2008 - 2020 Intel Corporation. <BR>
#
# The source code contained or described herein and all documents related to the
# source code ("Material") are owned by Intel Corporation or its suppliers or
# licensors. Title to the Material remains with Intel Corporation or its suppliers
# and licensors. The Material may contain trade secrets and proprietary    and
# confidential information of Intel Corporation and its suppliers and licensors,
# and is protected by worldwide copyright and trade secret laws and treaty
# provisions. No part of the Material may be used, copied, reproduced, modified,
# published, uploaded, posted, transmitted, distributed, or disclosed in any way
# without Intel's prior express written permission.
#
# No license under any patent, copyright, trade secret or other intellectual
# property right is granted to or conferred upon you by disclosure or delivery
# of the Materials, either expressly, by implication, inducement, estoppel or
# otherwise. Any license under such intellectual property rights must be
# express and approved by Intel in writing.
#
# Unless otherwise agreed by Intel in writing, you may not remove or alter
# this notice or any other notice embedded in Materials by Intel or
# Intel's suppliers or licensors in any way.
##

[Defines]
  DEC_SPECIFICATION              = 0x00010005
  PACKAGE_NAME                   = PlatPkg
  PACKAGE_GUID                   = 454FB726-6A01-49ce-B222-749CD093D3C5
  PACKAGE_VERSION                = 0.91

[Includes]
  Include
  Include/Library
  Include/Guid
  Include/Protocol

  Include/Me
  Include/Me/Policy
  Include/Me/Policy/Ws
  Include/Me/Ws
  # APTIOV_SERVER_OVERRIDE_RC_START
  #Include/Ie/Policy  
  #Include/GenHeaders/
  # APTIOV_SERVER_OVERRIDE_RC_END
  Features
# APTIOV_SERVER_OVERRIDE_RC_START
  Library
  ../../Build
  ../../AmiCompatibilityPkg/Include 
# For DSDT ASL to include from ACPI module
  Features/Acpi/AcpiTables/Dsdt  
#  Features/Acpi/AcpiTables/Ssdt  
  Features/Acpi/AcpiTables  
# APTIOV_SERVER_OVERRIDE_RC_END



[LibraryClasses]
  ##  @libraryclass   Update platform related and customized settings in the RAS RC policy PPI.
  RasRcPolicyPpiUpdateLib|Include/Library/RasRcPolicyPpiUpdateLib.h

  ##  @libraryclass  Provides Platform Beep Map library.
  PlatformBeepMapLib|Include/Library/PlatformStatusCodes.h

  ##  @libraryclass  Provides Platform PostCode Map library.
  PlatformPostCodeMapLib|Include/Library/PlatformStatusCodes.h

[Guids]
# APTIOV_SERVER_OVERRIDE_RC_START
  gEfiSecureBootEnableDisableGuid                     = { 0xf0a30bc7, 0xaf08, 0x4556, { 0x99, 0xc4, 0x00, 0x10, 0x09, 0xc9, 0x3a, 0x44 } }
# APTIOV_SERVER_OVERRIDE_RC_END  
  gBiosInfoGuid                                       = { 0x1b453c67, 0xcb1a, 0x46ec, { 0x86, 0x4b, 0xe2, 0x24, 0xa6, 0xb7, 0xfe, 0xe8 } }
  gEfiIchTokenSpaceGuid                               = { 0x89680aac, 0x452b, 0x4b44, { 0xae, 0xf7, 0x80, 0x0b, 0x6b, 0xfa, 0xf1, 0x95 } }
  gEfiPowerOnHobGuid                                  = { 0x0468a601, 0xc535, 0x46fd, { 0xa9, 0x5d, 0xbb, 0xab, 0x99, 0x1b, 0x17, 0x8c } }
  gEfiAcpiTableStorageGuid                            = { 0x7e374e25, 0x8e01, 0x4fee, { 0x87, 0xf2, 0x39, 0x0c, 0x23, 0xc6, 0x06, 0xcd } }
  gEfiSetupVariableGuid                               = { 0xec87d643, 0xeba4, 0x4bb5, { 0xa1, 0xe5, 0x3f, 0x3e, 0x36, 0xb2, 0x0d, 0xa9 } }
  gEfiSetupVariableDefaultGuid                        = { 0x8d247131, 0x385e, 0x491f, { 0xba, 0x68, 0x8d, 0xe9, 0x55, 0x30, 0xb3, 0xa6 } }
  gEfiMfgUUIDHobGuid                                  = { 0x229f268f, 0x23b0, 0x4436, { 0x83, 0xe3, 0x8b, 0x7a, 0xe0, 0x8a, 0x6b, 0xd8 } }
  gEfiGlobalVariableControlGuid                       = { 0x99a96812, 0x4730, 0x4290, { 0x8b, 0xfe, 0x7b, 0x4e, 0x51, 0x4f, 0xf9, 0x3b } }
  gEfiFlashMapHobGuid                                 = { 0xb091e7d2, 0x05a0, 0x4198, { 0x94, 0xf0, 0x74, 0xb7, 0xb8, 0xc5, 0x54, 0x59 } }
  gEfiSystemNvDataHobGuid                             = { 0xd6e5092d, 0xc7b2, 0x4872, { 0xaf, 0x66, 0xfd, 0xc0, 0xe6, 0xf9, 0x5e, 0x78 } }
  gEfiTcgWakeEventDataHobGuid                         = { 0xBBB810BB, 0x5EF0, 0x4E8F, { 0xB2, 0x98, 0xAD, 0x74, 0xAA, 0x50, 0xEF, 0x0A } }
  gEfiAdminPasswordHobGuid                            = { 0x4E173307, 0x92DB, 0x4a4f, { 0x9A, 0x8E, 0x86, 0xA8, 0x56, 0x49, 0xB4, 0x05 } }
  gPeiCapsuleOnFatFloppyDiskGuid                      = { 0x2e3d2e75, 0x9b2e, 0x412d, { 0xb4, 0xb1, 0x70, 0x41, 0x6b, 0x87, 0x00, 0xff } }
  gPeiCapsuleOnFatIdeDiskGuid                         = { 0xb38573b6, 0x6200, 0x4ac5, { 0xb5, 0x1d, 0x82, 0xe6, 0x59, 0x38, 0xd7, 0x83 } }
  gPeiCapsuleOnFatUsbDiskGuid                         = { 0x0ffbce19, 0x324c, 0x4690, { 0xa0, 0x09, 0x98, 0xc6, 0xae, 0x2e, 0xb1, 0x86 } }
  gPeiCapsuleOnDataCDGuid                             = { 0x5cac0099, 0x0dc9, 0x48e5, { 0x80, 0x68, 0xbb, 0x95, 0xf5, 0x40, 0x0a, 0x9f } }
  gMainPkgListGuid                                    = { 0x6205c3a4, 0x1149, 0x491a, { 0xa6, 0xd6, 0x1e, 0x72, 0x3b, 0x87, 0x83, 0xb1 } }
  gAdvancedPkgListGuid                                = { 0xc09c81cb, 0x31e9, 0x4de6, { 0xa9, 0xf9, 0x17, 0xa1, 0x44, 0x35, 0x42, 0x45 } }
  gTpmPkgListGuid                                     = { 0x7da45aa9, 0x6dbf, 0x4f1b, { 0xa4, 0x3e, 0x32, 0x87, 0xcb, 0xe5, 0x13, 0x51 } }
  gSecurityPkgListGuid                                = { 0x3a885aae, 0x3e30, 0x42b9, { 0xa9, 0x76, 0x2f, 0x1f, 0x13, 0xbd, 0x70, 0x15 } }
  gBootOptionsPkgListGuid                             = { 0x62197ef0, 0x7b7e, 0x11e2, { 0xb9, 0x2a, 0x08, 0x00, 0x20, 0x0c, 0x9a, 0x66 } }
  gBiosGuardModuleGuid                                = { 0x7934156D, 0xCFCE, 0x460e, { 0x92, 0xF5, 0xA0, 0x79, 0x09, 0xA5, 0x9E, 0xCA } }
  gBiosGuardHobGuid                                   = { 0x66f0c42d, 0x0d0e, 0x4c23, { 0x93, 0xc0, 0x2d, 0x52, 0x95, 0xdc, 0x5e, 0x21 } }
  gEfiOcDataGuid                                      = { 0x4af92599, 0x8e76, 0x4bb4, { 0xbf, 0xd2, 0xf5, 0xa6, 0x6e, 0x30, 0x41, 0xd4 } }
  gSmmTxtConfigLockGuid                               = { 0xc282e903, 0x24e5, 0x4418, { 0xa9, 0x78, 0xa7, 0x41, 0x92, 0x49, 0xc9, 0xb0 } }
  gMiscProducerGuid                                   = { 0x62512c92, 0x63c4, 0x4d80, { 0x82, 0xb1, 0xc1, 0xa4, 0xdc, 0x44, 0x80, 0xe5 } }
  gSmbus2HostController                               = { 0xfc3dadec, 0x1e3c, 0x49ac, { 0x9c, 0xc8, 0x3c, 0x35, 0x97, 0xa8, 0xc8, 0x5f } }
  gEfiServerCapsuleGuid                               = { 0xd400d1e4, 0xa314, 0x442b, { 0x89, 0xed, 0xa9, 0x2e, 0x4c, 0x81, 0x97, 0xcb } }
  gIioVVarGuid                                        = { 0xcccd2056, 0xd401, 0x4def, { 0x85, 0xb0, 0x1f, 0xa1, 0x1f, 0xf3, 0xb5, 0xe3 } }
  gEfiDprRegsProgrammedGuid                           = { 0x4b844201, 0x6fe9, 0x41d1, { 0xb4, 0x6f, 0xdf, 0xfc, 0x34, 0xe4, 0x92, 0xa2 } }
  gPchEvaInt15HandlerFileGuid                         = { 0xA2B05C85, 0x8D5B, 0x4FF3, { 0xB7, 0xD1, 0x8F, 0xbE, 0x92, 0xB4, 0xAA, 0x32 } }
  gEfiAcpiParameterGuid                               = { 0xcfd3c49b, 0x56dc, 0x465c, { 0xb3, 0xa0, 0x41, 0x9a, 0x8b, 0x42, 0xcb, 0x60 } }
  gErrRecordNotifyMceGuid                             = { 0xe8f56ffe, 0x919c, 0x4cc5, { 0xba, 0x88, 0x65, 0xab, 0xe1, 0x49, 0x13, 0xbb } }
  gErrRecordNotifyCmcGuid                             = { 0x2DCE8BB1, 0xBDD7, 0x450e, { 0xB9, 0xAD, 0x9C, 0xF4, 0xEB, 0xD4, 0xF8, 0x90 } }
  gErrRecordNotifyCpeGuid                             = { 0x4e292f96, 0xd843, 0x4a55, { 0xa8, 0xc2, 0xd4, 0x81, 0xf2, 0x7e, 0xbe, 0xee } }
  gErrRecordNotifyPcieGuid                            = { 0xcf93c01f, 0x1a16, 0x4dfc, { 0xb8, 0xbc, 0x9c, 0x4d, 0xaf, 0x67, 0xc1, 0x04 } }
  gErrRecordNotifyInitGuid                            = { 0xcc5263e8, 0x9308, 0x454a, { 0x89, 0xd0, 0x34, 0x0b, 0xd3, 0x9b, 0xc9, 0x8e } }
  gErrRecordNotifyNmiGuid                             = { 0x5bad89ff, 0xb7e6, 0x42c9, { 0x81, 0x4a, 0xcf, 0x24, 0x85, 0xd6, 0xe9, 0x8a } }
  gErrRecordNotifyBootGuid                            = { 0x3d61a466, 0xab40, 0x409a, { 0xa6, 0x98, 0xf3, 0x62, 0xd4, 0x64, 0xb3, 0x8f } }
  gErrRecordNotifyDmarGuid                            = { 0x667dd791, 0xc6b3, 0x4c27, { 0x8a, 0x6b, 0x0f, 0x8e, 0x72, 0x2d, 0xeb, 0x41 } }
  gErrRecordProcGenErrGuid                            = { 0x9876ccad, 0x47b4, 0x4bdb, { 0xb6, 0x5e, 0x16, 0xf1, 0x93, 0xc4, 0xf3, 0xdb } }
  gErrRecordProcSpecErrGuid                           = { 0xdc3ea0b0, 0xa144, 0x4797, { 0xb5, 0x5b, 0x53, 0xfa, 0x24, 0x2b, 0x6e, 0x1d } }
  gErrRecordPlatformMemErrGuid                        = { 0xa5bc1114, 0x6f64, 0x4ede, { 0xb8, 0x63, 0x3e, 0x83, 0xed, 0x7c, 0x83, 0xb1 } }
  gErrRecordPcieErrGuid                               = { 0xd995e954, 0xbbc1, 0x430f, { 0xad, 0x91, 0xb4, 0x4d, 0xcb, 0x3c, 0x6f, 0x35 } }
  gErrRecordFirmwareErrGuid                           = { 0x81212a96, 0x09ed, 0x4996, { 0x94, 0x71, 0x8d, 0x72, 0x9c, 0x8e, 0x69, 0xed } }
  gErrRecordPciBusErrGuid                             = { 0xc5753963, 0x3b84, 0x4095, { 0xbf, 0x78, 0xed, 0xda, 0xd3, 0xf9, 0xc9, 0xdd } }
  gErrRecordPciDevErrGuid                             = { 0xeb5e4685, 0xca66, 0x4769, { 0xb6, 0xa2, 0x26, 0x06, 0x8b, 0x00, 0x13, 0x26 } }
  gErrRecordDmarErrGuid                               = { 0x5b51fef7, 0xc79d, 0x4434, { 0x8f, 0x1b, 0xaa, 0x62, 0xde, 0x3e, 0x2c, 0x64 } }
  gErrRecordVtdErrGuid                                = { 0x71761d37, 0x32b2, 0x45cd, { 0xa7, 0xd0, 0xb0, 0xfe, 0xdd, 0x93, 0xe8, 0xcf } }
  gErrRecordIoMmuErrGuid                              = { 0x036f84e1, 0x7f37, 0x428c, { 0xa7, 0x9e, 0x57, 0x5f, 0xdf, 0xaa, 0x84, 0xec } }
  gPlatformModuleTokenSpaceGuid                       = { 0x69d13bf0, 0xaf91, 0x4d96, { 0xaa, 0x9f, 0x21, 0x84, 0xc5, 0xce, 0x3b, 0xc0 } }
  gAttemptUsbFirstHotkeyInfoHobGuid                   = { 0x38b8e214, 0x1468, 0x4bb7, { 0x95, 0xb1, 0x74, 0x59, 0x1e, 0x4c, 0x6e, 0x1d } }
  gTcoWdtHobGuid                                      = { 0x3e405418, 0xd8c,  0x4f1a, { 0xb0, 0x55, 0xbe, 0xf9, 0x08, 0x41, 0x46, 0x8d } }
  gEfiSimpleBootFlagVariableGuid                      = { 0x8BE4DF61, 0x93CA, 0x11d2, { 0xAA, 0x0D, 0x00, 0xE0, 0x98, 0x03, 0x2B, 0x8C } }
  gFastBootExceptionInfoHobGuid                       = { 0x4ed88276, 0xd4df, 0x4d03, { 0x86, 0x61, 0x29, 0x58, 0x01, 0xb2, 0xda, 0x58 } }
  gFastBootFunctionEnabledHobGuid                     = { 0x019fb1ca, 0xd411, 0x4948, { 0xb7, 0x3c, 0x4c, 0x05, 0x4a, 0xba, 0x9e, 0x8e } }
  gDramSharedMailBoxGuid                              = { 0x9d99a394, 0x1878, 0x4d2c, { 0x98, 0xe9, 0xc1, 0x6b, 0x8e, 0xc4, 0x79, 0x33 } }
  gBiosKnobsDataBinGuid                               = { 0x615E6021, 0x603D, 0x4124, { 0xB7, 0xEA, 0xC4, 0x8A, 0x37, 0x37, 0xBA, 0xCD } }
  gCpxBiosKnobsDataBinGuid                            = { 0x731DAA2A, 0x9259, 0x4729, { 0xA1, 0xB5, 0xF7, 0x72, 0x09, 0xEB, 0xF5, 0x4D } }
  gXmlCliVarGuid                                      = { 0x580db3ee, 0x900e, 0x44ca, { 0x84, 0x46, 0x8f, 0x09, 0x2e, 0x02, 0x33, 0x4f } }
  gXmlKnobChecksumVarGuid                             = { 0x2c22148f, 0x8235, 0x4cd7, { 0x82, 0x46, 0x1c, 0x76, 0xe6, 0x0f, 0x34, 0x62 } }
  gTraceHubTokenSpaceGuid                             = { 0xa69b58a9, 0x6c05, 0x4dc1, { 0x85, 0xbf, 0xaf, 0x80, 0xdc, 0xe6, 0xd9, 0x7d } }
  gTraceHubStatusCodeHandlePeiGuid                    = { 0x0fb3bcf9, 0x0a1d, 0x4598, { 0xa5, 0x21, 0xe5, 0xc8, 0x4e, 0x95, 0xd9, 0x7a } }
  gTraceHubStatusCodeHandleRuntimeDxeGuid             = { 0xfcf51e6b, 0x527f, 0x438d, { 0xbe, 0x6d, 0xa6, 0xd1, 0x5f, 0x0c, 0xd9, 0x8b } }
  gTraceHubStatusCodeHandleSmmGuid                    = { 0xae0b5b70, 0xd044, 0x4456, { 0xba, 0x51, 0x97, 0x0e, 0x4c, 0x68, 0x70, 0xbf } }
  gEfiTraceHubDebugLibIa32Guid                        = { 0x23a3e7ba, 0x75d1, 0x4cb9, { 0x9c, 0x8f, 0x56, 0xfa, 0x4e, 0x48, 0xd9, 0x9e } }
  gEfiTraceHubDebugLibX64Guid                         = { 0x8f7e1a3a, 0x9657, 0x44f0, { 0xb9, 0xe6, 0x4e, 0xf7, 0x4b, 0x22, 0xd5, 0x43 } }
  gEfiBiosIdGuid                                      = { 0xC3E36D09, 0x8294, 0x4b97, { 0xA8, 0x57, 0xD5, 0x28, 0x8F, 0xE3, 0x3E, 0x28 } }
  gCpPlatFlashTokenSpaceGuid                          = { 0xc9c39664, 0x96dd, 0x4c5c, { 0xaf, 0xd7, 0xcd, 0x65, 0x76, 0x29, 0xcf, 0xb0 } }
  gPchSetupVariableGuid                               = { 0x4570b7f1, 0xade8, 0x4943, { 0x8d, 0xc3, 0x40, 0x64, 0x72, 0x84, 0x23, 0x84 } }
  gIfwiIdGuid                                         = { 0x8FFA88FB, 0x4395, 0xF6B4, { 0x05, 0x25, 0x93, 0xFF, 0x27, 0x7A, 0x62, 0x15 } }
  gFpgaCapsuleGuid                                    = { 0x74ddf801, 0xa7dc, 0x4410, { 0x9d, 0xf8, 0xc0, 0x8e, 0x6d, 0x9f, 0xd6, 0xbb } }
  gAdapterInfoPlatformTestPointGuid                   = { 0x5381e3ea, 0xb77,  0x4580, { 0xad, 0xdf, 0xa9, 0x1c,  0x8, 0x3b, 0xf2, 0x97 } }
  gVpdFileNameGuid                                    = { 0x8C3D856A, 0x9BE6, 0x468E, { 0x85, 0x0A, 0x24, 0xF7, 0xA8, 0xD3, 0x8E, 0x08 } }
  gEfiAfterTrustConsoleEventGroupGuid                 = { 0xe3313d4b, 0x9d61, 0x4c91, { 0x95, 0x0a, 0x80, 0x80, 0x00, 0xd0, 0xeb, 0x18 } }
  # APTIOV_SERVER_OVERRIDE_RC_START
  gEfiPchSetupGuid                               = { 0xd19a26a3, 0x17f1, 0x48c3, { 0x8a, 0x1e, 0x11, 0xeb, 0x0a, 0x7f, 0x6e, 0x4e } }

  ## GUID used for FormSet and config variable.
  #  Include/Guid/Tcg2ConfigHii.h
  gTcg2ConfigFormSetGuid    = {0x6339d487, 0x26ba, 0x424b, { 0x9a, 0x5d, 0x68, 0x7e, 0x25, 0xd7, 0x40, 0xbc }}

  # APTIOV_SERVER_OVERRIDE_RC_END
#
# eMMC
#
gScsEmmcSoftwareTuningVariableGuid    = {0x565d7cc8, 0xadcb, 0x4ca3, {0x85, 0x74, 0x81, 0x6e, 0x01, 0x99, 0xd1, 0xef}}

#
# UBA_START
#
  #OEM SKU
  gOemSkuTokenSpaceGuid                               = { 0x9e37d253, 0xabf8, 0x4985, { 0x8e, 0x23, 0xba, 0xca, 0x10, 0x39, 0x56, 0x13 } }
  gPlatformKtiEparamUpdateDataGuid                    = { 0x7bc065cf, 0xafe8, 0x4396, { 0xae, 0x9f, 0xba, 0x27, 0xdf, 0xbe, 0xcf, 0x3d } }
  gSmbiosTablesTokenSpaceGuid                         = { 0x5e80ad48, 0xf240, 0x4fe9, { 0x87, 0xef, 0x4b, 0x46, 0xf4, 0xde, 0x78, 0xa0 } }
  gPlatformPchPcieClkReqTableGuid                     = { 0x9282553a, 0xae15, 0x4e17, { 0xb1, 0xdc, 0x7,  0xf,  0x29, 0xf2, 0x70, 0x25 } }
#
# UBA_END
#
  gReserveMemFlagVariableGuid                         = { 0xb87aa73f, 0xdcb3, 0x4533, { 0x83, 0x98, 0x6c, 0x12, 0x84, 0x27, 0x28, 0x40 } }
  gEfiAfterPlatformLocksEventGuid                     = { 0x1c5fdaf2, 0x9fb3, 0x431b, { 0x8e, 0xcd, 0xb7, 0xd3, 0x5c, 0xbe, 0xfa, 0xe9 } }
  gOPAPlatCfgNvVarGuid                                = { 0x56d23d33, 0x07d7, 0x48f9, { 0x81, 0xd6, 0x7e, 0xd5, 0x99, 0x1e, 0xce, 0x88 } }
  gEfiOpaSocketMapHobGuid                             = { 0x829d41d2, 0x6ca5, 0x485b, { 0xa1, 0xa2, 0xd1, 0xb7, 0x96, 0x27, 0xab, 0xcd } }
  gEfiRsaTpmClearOwnershipGuid                        = { 0x801b5c4b, 0x6ae2, 0x4065, { 0x9f, 0x72, 0x82, 0xca, 0x76, 0x0c, 0x2e, 0xca } }
  gEfiDefaultBmpLogoGuid                              = { 0x7BB28B99, 0x61BB, 0x11d5, { 0x9A, 0x5D, 0x00, 0x90, 0x27, 0x3F, 0xC1, 0x4D } }
  gEfiLegacyDevOrderVariableGuid                      = { 0xa56074db, 0x65fe, 0x45f7, { 0xbd, 0x21, 0x2d, 0x2b, 0xdd, 0x8e, 0x96, 0x52 } }
  gEfiLegacyBiosGuid                                  = { 0x2E3044AC, 0x879F, 0x490F, { 0x97, 0x60, 0xBB, 0xDF, 0xAF, 0x69, 0x5F, 0x50 } }
  gBlockIoVendorGuid                                  = { 0xcf31fac5, 0xc24e, 0x11d2, { 0x85, 0xf3, 0x00, 0xa0, 0xc9, 0x3e, 0xc9, 0x3b } }
  gEfiSerialPortTokenSpaceGuid                        = { 0xac274b5f, 0x4d79, 0x48d1, { 0x96, 0xdf, 0xfe, 0xe3, 0x54, 0xcf, 0x70, 0x83 } }
  gEfiIfrFrontPageGuid                                = { 0xe58809f8, 0xfbc1, 0x48e2, { 0x88, 0x3a, 0xa3, 0x0f, 0xdc, 0x4b, 0x44, 0x1e } }
  gEfiPlatformSaltVarGuid                             = { 0x9f71f9af, 0x707f, 0x4d3c, { 0x8c, 0x30, 0x1a, 0x65, 0xeb, 0x18, 0x50, 0x75 } }
  gEfiPlatformTxtPolicyDataGuid                       = { 0xa353290b, 0x867d, 0x4cd3, { 0xa8, 0x1b, 0x4b, 0x7e, 0x5e, 0x10, 0x0e, 0x16 } }
  gEfiHiiExportDatabaseGuid                           = { 0x1b838190, 0x4625, 0x4ead, { 0xab, 0xc9, 0xcd, 0x5e, 0x6a, 0xf1, 0x8f, 0xe0 } }
  gErrorLevelDataCacheGuid                            = { 0x0105944d, 0x499f, 0x4950, { 0xb4, 0x42, 0x51, 0x99, 0xc0, 0xe7, 0x01, 0x5f } }
  gEfiSmmPeiSmramMemoryReserveGuid                    = { 0x6dadf1d1, 0xd4cc, 0x4910, { 0xbb, 0x6e, 0x82, 0xb1, 0xfd, 0x80, 0xff, 0x3d } }
  gSystemBoardInfoConfigDataGuid                      = { 0x68B046F7, 0x15A0, 0x4778, { 0xBE, 0xA3, 0x9B, 0xA2, 0xDB, 0xD1, 0x3B, 0x82 } }
  gSioPilotIIIGuid                                    = { 0x6064589b, 0x653f, 0x43a0, { 0xa3, 0x0c, 0x59, 0x42, 0x9d, 0x84, 0x1b, 0xc9 } }
  gSioAst2500Guid                                     = { 0x6234A07C, 0x4E03, 0x50C1, { 0xF7, 0xB2, 0x63, 0xB9, 0x9D, 0x20, 0xCB, 0x67 } }
  gPlatformGpioInitDataGuid                           = { 0x9282563e, 0xae17, 0x4e12, { 0xb1, 0xdc, 0x7, 0xf, 0x29, 0xf3, 0x71, 0x20 } }

  # Fce multi mode support
  gPlatformVariableHobGuid                            = { 0x71e6d4bc, 0x4837, 0x45f1, { 0xa2, 0xd7, 0x3f, 0x93, 0x08, 0xb1, 0x7e, 0xd7 } }
  gDefaultDataFileGuid                                = { 0x1ae42876, 0x008f, 0x4161, { 0xb2, 0xb7, 0x1c, 0x0d, 0x15, 0xc5, 0xef, 0x43 } }
  gDefaultDataOptSizeFileGuid                         = { 0x003e7b41, 0x98a2, 0x4be2, { 0xb2, 0x7a, 0x6c, 0x30, 0xc7, 0x65, 0x52, 0x25 } }

  gRsaAdminModeGuid                                   = { 0x2767a6ca, 0x5a00, 0x4010, { 0x8b, 0x02, 0xc7, 0x6c, 0x87, 0xce, 0xf3, 0x62 } }
# APTIOV_SERVER_OVERRIDE_RC_START
# gCpPlatIpmiTokenSpaceGuid                           = { 0xd1112ebf, 0xd82, 0x4071,  { 0x96, 0x7c, 0xe1, 0x69, 0x23, 0x27, 0x40, 0xba } }
# APTIOV_SERVER_OVERRIDE_RC_END
  gEfiIpmiFormatFruGuid                               = { 0x3531fdc6, 0xeae,  0x4cd2, { 0xb0, 0xa6, 0x5f, 0x48, 0xa0, 0xdf, 0xe3, 0x8  } }
# APTIOV_SERVER_OVERRIDE_RC_START
# gEfiServerMgmtSetupVariableGuid                     = { 0x1239999, 0xfc0e, 0x4b6e,  { 0x9e, 0x79, 0xd5, 0x4d, 0x5d, 0xb6, 0xcd, 0x20 } }
# APTIOV_SERVER_OVERRIDE_RC_END
  gEfiSystemTypeFruGuid                               = { 0xaab16018, 0x679d, 0x4461, { 0xba, 0x20, 0xe7, 0xc,  0xf7, 0x86, 0x6a, 0x9b } }

  gServerMgmtPkgListGuid = { 0x35dcfcd1, 0xc14e, 0x45e9, { 0xbe, 0xd3, 0xbb, 0x1, 0x64, 0xf8, 0x80, 0x7b } }
  gEfiEpsdSerMgmtDataGuid = { 0x4bf320b4, 0x095a, 0x4f05, {0xba, 0xc5, 0x7b, 0xb3, 0xa6, 0xcb, 0x12, 0x9d }}
  gServerCommonIpmiTokenSpaceGuid = { 0xd1112ebf, 0xd82, 0x4071, { 0x96, 0x7c, 0xe1, 0x69, 0x23, 0x27, 0x40, 0xba } }
  gSetupBmcCfgPkgListGuid        = { 0xf7d83614, 0x8a39, 0x49a2, { 0x9f, 0x34, 0xc9, 0xb2, 0xfc, 0xd, 0x25, 0x5 } }

  gEfiEventBootManagerPauseGuid                       = { 0xa42dc3a9, 0xaeb, 0x476a, { 0xb3, 0x34, 0xcb, 0xe6, 0xe3, 0x12, 0x0, 0xbd } }
  gEfiEventBootManagerResumeGuid                      = { 0x6c1424a3, 0xa6a3, 0x4fb2, { 0x82, 0x8a, 0x53, 0x83, 0xe7, 0x25, 0xa0, 0x2a } }
  gEfiEventPlatformBootManagerAfterConsoleGuid        = { 0xfc7f1b38, 0x7563, 0x40c1, { 0xbf, 0xce, 0xb, 0x84, 0x76, 0xb3, 0xda, 0x45 } }

  ## Include/Guid/CpPlatPkgTokenSpace.h
  gCpPlatTokenSpaceGuid           = { 0xc9c39664, 0x96dd, 0x4c5c, { 0xaf, 0xd7, 0xcd, 0x65, 0x76, 0x29, 0xcf, 0xb0 } }
  gEfiSetupEnterGuid              = { 0x71202EEE, 0x5F53, 0x40d9, { 0xAB, 0x3D, 0x9E, 0x0C, 0x26, 0xD9, 0x66, 0x57 } }
  gEfiSetupExitGuid               = { 0xD6E335EC, 0x0336, 0x4CB1, { 0x87, 0xA2, 0xDA, 0x87, 0xD7, 0xE9, 0x99, 0x40 }}
  gUbaCurrentConfigHobGuid        = { 0xe4b2025b, 0xc7db, 0x4e5d, { 0xa6, 0x5e, 0x2b, 0x25, 0x7e, 0xb1, 0x5,  0x8e } }

  #
  # WHEA Support
  #
  gEfiWheaProcessorGenericErrorSectionGuid    = { 0x9876ccad, 0x47b4, 0x4bdb, { 0xb6, 0x5e, 0x16, 0xf1, 0x93, 0xc4, 0xf3, 0xdb }}
  gEfiWheaProcessorSpecificErrorSectionGuid   = { 0xdc3ea0b0, 0xa144, 0x4797, { 0xb5, 0x5b, 0x53, 0xfa, 0x24, 0x2b, 0x6e, 0x1d }}
  gEfiWheaPlatformMemoryErrorSectionGuid      = { 0xa5bc1114, 0x6f64, 0x4ede, { 0xb8, 0x63, 0x3e, 0x83, 0xed, 0x7c, 0x83, 0xb1 }}
  gEfiWheaPcieErrorSectionGuid                = { 0xd995e954, 0xbbc1, 0x430f, { 0xad, 0x91, 0xb4, 0x4d, 0xcb, 0x3c, 0x6f, 0x35 }}
  gEfiWheaPciBusErrorSectionGuid              = { 0xc5753963, 0x3b84, 0x4095, { 0xbf, 0x78, 0xed, 0xda, 0xd3, 0xf9, 0xc9, 0xdd }}
  gEfiWheaPciDevErrorSectionGuid              = { 0xeb5e4685, 0xca66, 0x4769, { 0xb6, 0xa2, 0x26, 0x06, 0x8b, 0x00, 0x13, 0x26 }}
  gEfiWheaFirmwareErrorSectionGuid            = { 0x81212a96, 0x09ed, 0x4996, { 0x94, 0x71, 0x8d, 0x72, 0x9c, 0x8e, 0x69, 0xed }}
  gEfiWheaPlatformNonStandardErrorSectionGuid = { 0x1b9cd864, 0xda7c, 0x483e, { 0x8d, 0x69, 0xd3, 0x5c, 0xb4, 0xad, 0x27, 0xc9 }}
  gEfiWheaElogFvGuid                          = { 0xd6a1cd70, 0x4b33, 0x4994, { 0xa6, 0xea, 0x37, 0x5f, 0x2c, 0xcc, 0x54, 0x37 }}
  gOutOfBandGuid                              = { 0xbac76586, 0x3515, 0x420b, { 0xa1, 0xb7, 0x23, 0x5a, 0x71, 0x6e, 0xca, 0xad }}
  gPerfOptTokenSpaceGuid                      = { 0x3dfe594a, 0x6f50, 0x4b51, { 0x84, 0xa0, 0xd8, 0xe0, 0x8d, 0x71, 0x74, 0x65 }}



  gXmlCliVarGuid                                      = { 0x580db3ee, 0x900e, 0x44ca, { 0x84, 0x46, 0x8f, 0x09, 0x2e, 0x02, 0x33, 0x4f } }
  gSetupDataHobGuid                           = { 0x3bb57b12, 0xce3b, 0x4253, { 0xb2, 0xcb, 0x4c, 0xfa, 0x1a, 0x2a, 0x6, 0xcb }}
  gSvConfiurationGuid                         = { 0x8F5F20CA, 0x88EB, 0x4BE4, { 0x95, 0x79, 0x8F, 0xF7, 0xCC, 0xBA, 0x92, 0x4C } }
  gBootOrderDataGuid                          = { 0xd2b04f7c, 0x699b, 0x4f9a, { 0x91, 0xf3, 0x4, 0x7, 0x8b, 0x95, 0x63, 0xcb } }

[Ppis]
  gPeiLegacyRegionPpiGuid                             = { 0x1fae70ac, 0x8203, 0x48f0, { 0xb9, 0xef, 0xe8, 0x73, 0xff, 0xec, 0xc1, 0xf2 } }
  gPeiFlashMapPpiGuid                                 = { 0xf34c2fa0, 0xde88, 0x4270, { 0x84, 0x14, 0x96, 0x12, 0x22, 0xf4, 0x52, 0x1c } }
  gPeiAtaPolicyPpiGuid                                = { 0x1b8ddea4, 0xdeb2, 0x4152, { 0x91, 0xc2, 0xb7, 0x3c, 0xb1, 0x6c, 0xe4, 0x64 } }
  gEndOfPeiSignalPpiGuid                              = { 0x605EA650, 0xC65C, 0x42e1, { 0xBA, 0x80, 0x91, 0xA5, 0x2A, 0xB6, 0x18, 0xC6 } }
  gEfiPeiBootInNonS3ModePpiGuid                       = { 0x667ef084, 0x74ef, 0x4707, { 0x90, 0xb3, 0x75, 0x14, 0x59, 0x20, 0xb3, 0x9c } }
  gEfiPeiFpgaBoardPpiGuid                             = { 0xA6432638, 0x32A1, 0x487A, { 0xB9, 0x8D, 0xB3, 0x73, 0x3D, 0x06, 0x20, 0xB4 } }
  gSiPlatformPolicyPpiGuid                            = { 0xaebffa01, 0x7edc, 0x49ff, { 0x8d, 0x88, 0xcb, 0x84, 0x8c, 0x5e, 0x86, 0x70 } }
  gEfiNorthPeakStatusCodeHandlePpi                    = { 0x882c5d54, 0x1dad, 0x4f4a, { 0x83, 0x16, 0x4b, 0xdf, 0x84, 0x1e, 0x9, 0xd0 } }
  gTraceHubStatusCodeHandleHeaderPpi                  = { 0x787e0c4a, 0x4a27, 0x4891, { 0x94, 0x89, 0xaf, 0x50, 0x74, 0xc3, 0x6e, 0x89 } }
  gPeiSpiSoftStrapsPpiGuid                            = { 0x7F19E716, 0x419C, 0x4E79, { 0x8E, 0x37, 0xC2, 0xBD, 0x84, 0xEB, 0x65, 0x28 } }
  gPeiTxtMemoryUnlockedPpiGuid                        = { 0x38cdd10b, 0x767d, 0x4f6e, { 0xa7, 0x44, 0x67, 0xee, 0x1d, 0xfe, 0x2f, 0xa5 } }
  gRequiredVariablesPpiGuid                           = { 0xcdece61d, 0x9392, 0x4cb6, { 0xb9, 0xc8, 0x89, 0xfe, 0x92, 0xcd, 0xe0, 0x78 } }
# APTIOV_SERVER_OVERRIDE_RC_START
# gPeiIpmiTransportPpiGuid                            = { 0x7bf5fecc, 0xc5b5, 0x4b25, { 0x81, 0x1b, 0xb4, 0xb5, 0xb, 0x28, 0x79, 0xf7 } }
# APTIOV_SERVER_OVERRIDE_RC_END
  gUbaConfigDatabasePpiGuid                           = { 0xc1176733, 0x159f, 0x42d5, { 0xbc, 0xb9, 0x32, 0x6, 0x60, 0xb1, 0x73, 0x10 } }

  gEfiVideoPrintPpiGuid                               = { 0xd90da8e7, 0x280d, 0x4df3, { 0x81, 0xa3, 0x83, 0x3a, 0x58, 0x5, 0xa, 0xc9 } }
  gUpdatePcdGuid                                      = { 0xa08e4c6b, 0xff28, 0x4fff, { 0x93, 0x56, 0x78, 0x36, 0x26, 0xc3, 0xe0, 0x38 } }
  gUpdateBootModePpiGuid                              = { 0x927186a0, 0xa13e, 0x4b53, { 0xad, 0x41, 0xad, 0xd1, 0x65, 0x6f, 0x62, 0x62 } }
  gBoardInitGuid                                      = { 0xecc07551, 0xd64c, 0x4c07, { 0xab, 0x95, 0x94, 0x5, 0x66, 0xed, 0x31, 0xf1 } }
  gBoardInitPostMemGuid                               = { 0x289de5f3, 0x1572, 0x4cf7, { 0x8b, 0xce, 0x4b, 0xe, 0xd, 0xe3, 0xdf, 0x8d } }

  gPlatformVariableInitPpiGuid                        = { 0x9b1b911b, 0x4259, 0x4539, { 0xaf, 0x86, 0xe5, 0xf3, 0x61, 0xca, 0x09, 0x02 } }
  gEfiPeiCpuCpxPpiGuid                                = { 0x8bccfc63, 0xb448, 0x4c88, { 0xa1, 0xee, 0xb0, 0x9f, 0x77, 0x2d, 0x6, 0x8a } }
  gEfiPeiCpuIcxPpiGuid                                = { 0x61908a8d, 0xa05c, 0x412d, { 0x8a, 0xd2, 0xb5, 0xaa, 0xb6, 0xf7, 0x7, 0xfa } }

[Protocols]
  gEfiPlatformPolicyProtocolGuid                      = { 0x2977064f, 0xab96, 0x4fa9, { 0x85, 0x45, 0xf9, 0xc4, 0x02, 0x51, 0xe0, 0x7f } }
  gEfiPlatformTypeProtocolGuid                        = { 0x171e9398, 0x269c, 0x4081, { 0x90, 0x99, 0x38, 0x44, 0xe2, 0x60, 0x46, 0x6c } }
  gEfiDmaRemapProtocolGuid                            = { 0x4e873773, 0x8391, 0x4e47, { 0xb7, 0xf4, 0xca, 0xfb, 0xdc, 0xc4, 0xb2, 0x04 } }
  gEfiPciIovPlatformProtocolGuid                      = { 0xf3a4b484, 0x9b26, 0x4eea, { 0x90, 0xe5, 0xa2, 0x06, 0x54, 0x0c, 0xa5, 0x25 } }
  gEfiWindowsInt10Workaround                          = { 0x387f555, 0x20a8, 0x4fc2,  { 0xbb, 0x94, 0xcd, 0x30, 0xda, 0x1b, 0x40, 0x08 } }
  gEfiLegacyBootMarkerGuid                            = { 0x72e07da8, 0x63a9, 0x42d4, { 0x83, 0xd5, 0x0b, 0xb5, 0x18, 0x38, 0x44, 0x75 } }
  gEfiFvbExtensionProtocolGuid                        = { 0x53a4c71b, 0xb581, 0x4170, { 0x91, 0xb3, 0x8d, 0xb8, 0x7a, 0x4b, 0x5c, 0x46 } }
  gEfiAlternateFvBlockGuid                            = { 0xf496922d, 0x172f, 0x4bbc, { 0xa1, 0xeb, 0x0e, 0xeb, 0x94, 0x9c, 0x34, 0x86 } }
  gAmiTseSetupEnterProtocolGuid                       = { 0x71202EEE, 0x5F53, 0x40d9, { 0xAB, 0x3D, 0x9E, 0x0C, 0x26, 0xD9, 0x66, 0x57 } }
  gSmmCpuSyncProtocolGuid                             = { 0xd5950985, 0x8be3, 0x4b1c, { 0xb6, 0x3f, 0x95, 0xd1, 0x5a, 0xb3, 0xb6, 0x5f } }
  gSmmCpuSync2ProtocolGuid                            = { 0x9db72e22, 0x9262, 0x4a18, { 0x8f, 0xe0, 0x85, 0xe0, 0x3d, 0xfa, 0x96, 0x73 } }
  gXmlCliProtocolGuid                                 = { 0xe3e49b8d, 0x1987, 0x48d0, { 0x9a, 0x01, 0xed, 0xa1, 0x79, 0xca, 0x0b, 0xd6 } }
  gEfiPlatformErrorHandlingProtocolGuid               = { 0x6820abd4, 0xa292, 0x4817, { 0x91, 0x47, 0xd9, 0x1d, 0xc8, 0xc5, 0x35, 0x42 } }
  gSmmBiosGuardProtocolGuid                           = { 0x17565311, 0x4b71, 0x4340, { 0x88, 0xaa, 0xdc, 0x9f, 0x44, 0x22, 0xe5, 0x3a } }
  gEfiLegacySredirProtocolGuid                        = { 0xA062CF1F, 0x8473, 0x4aa3, { 0x87, 0x93, 0x60, 0x0B, 0xC4, 0xFF, 0xA9, 0xA9 } }
  gEfiSvSmmProtocolGuid                               = { 0xf139bd77, 0x7ff7, 0x49d6, { 0x90, 0x86, 0xd5, 0x0a, 0xb2, 0x6f, 0x6d, 0xd7 } }
  gEfiVMDDriverProtocolGuid                           = { 0x5a676ae9, 0xdb23, 0x4a68, { 0xa2, 0x4d, 0xaa, 0x5f, 0xec, 0xd5, 0x74, 0x86 } }
  gEfiHfiPcieGen3ProtocolGuid                         = { 0x7b59316e, 0xe9df, 0x435f, { 0x98, 0xcd, 0x57, 0x26, 0x64, 0x5b, 0xe8, 0x63 } }
  gEfiUsbLegacyStack                                  = { 0x2ad81e19, 0x2e9b, 0x44aa, { 0xb4, 0xac, 0x9e, 0x21, 0x65, 0x32, 0x2e, 0x1c } }
  gTxtDxeProtocolGuid                                 = { 0xa25c2d8c, 0x2f92, 0x4626, { 0x8d, 0x63, 0x84, 0x3b, 0xa9, 0x43, 0x96, 0x30 } }
  gEfiBmcSmbiosProtocolGuid                           = { 0xe405fe96, 0x5a56, 0x40ba, { 0xbc, 0x24, 0x61, 0x9c, 0x89, 0xe2, 0xd2, 0xee } }
  gEfiRsaBmcCommandsProtocolGuid                      = { 0x0301be48, 0x7d25, 0x443c, { 0xaa, 0x77, 0xd5, 0xe7, 0x53, 0xdb, 0x41, 0x6a } }
  gEfiOEMBadgingProtocolGuid                          = { 0x170E13C0, 0xBF1B, 0x4218, { 0x87, 0x1D, 0x2A, 0xBD, 0xC6, 0xF8, 0x87, 0xBC } }
  gEfiLegacyBiosProtocolGuid                          = { 0xdb9a1e3d, 0x45cb, 0x4abb, { 0x85, 0x3b, 0xe5, 0x38, 0x7f, 0xdb, 0x2e, 0x2d } }
  gEfiVgaMiniPortProtocolGuid                         = { 0xc7735a2f, 0x88f5, 0x4882, { 0xae, 0x63, 0xfa, 0xac, 0x8c, 0x8b, 0x86, 0xb3 } }
  gEfiIioSystemProtocolGuid                           = { 0xddc3080a, 0x2740, 0x4ec2, { 0x9a, 0xa5, 0xa0, 0xad, 0xef, 0xd6, 0xff, 0x9c } }
  gEfiCpuIoProtocolGuid                               = { 0xB0732526, 0x38C8, 0x4b40, { 0x88, 0x77, 0x61, 0xc7, 0xb0, 0x6a, 0xac, 0x45 } }
  gPrintBootPromptProtocolGuid                        = { 0x2a10c977, 0x0ddc, 0x4751, { 0x8f, 0xdf, 0xc8, 0x72, 0xe5, 0x68, 0x75, 0x12 } }
  gEfiIpmiSolStatusProtocolGuid                       = { 0xe790848e, 0xb6ab, 0x44ab, { 0x84, 0x91, 0xdc, 0xa5, 0xc, 0x39, 0x7, 0xc6 } }
  gEfiIpmiTransportProtocolGuid                       = { 0x6bb945e8, 0x3743, 0x433e, { 0xb9, 0xe, 0x29, 0xb3, 0xd, 0x5d, 0xc6, 0x30 } }
  gSmmIpmiTransportProtocolGuid                       = { 0x8bb070f1, 0xa8f3, 0x471d, { 0x86, 0x16, 0x77, 0x4b, 0xa3, 0xf4, 0x30, 0xa0 } }
  gEfiFrbCodeProtocolGuid                             = { 0xbc5f861c, 0x86ed, 0x417e, { 0xbb, 0x7b, 0x6c, 0x2, 0x6b, 0xcd, 0x75, 0x5b } }
  gEfiSmBmcVariableGuid                               = { 0x5b525f29, 0x827d, 0x4ca3, { 0xbe, 0xb5, 0x89, 0x54, 0xb5, 0x6c, 0x5, 0x73 } }
  gEfiOsWdtPolicyProtocolGuid                         = { 0x0a77e089, 0x1590, 0x4442, { 0xbb, 0xea, 0x11, 0x5e, 0x19, 0xe6, 0x35, 0x8a } }

  gEfiBmcAcpiSwChildPolicyProtocolGuid                =  { 0x89843c0b, 0x5701, 0x4ff6, { 0xa4, 0x73, 0x65, 0x75, 0x99, 0x04, 0xf7, 0x35 } }
  gEfiGenericElogProtocolGuid                         = { 0x59d02fcd, 0x9233, 0x4d34, { 0xbc, 0xfe, 0x87, 0xca, 0x81, 0xd3, 0xdd, 0xa7 } }
  gEfiRedirElogProtocolGuid                           = { 0x16d11030, 0x71ba, 0x4e5e, { 0xa9, 0xf9, 0xb4, 0x75, 0xa5, 0x49, 0x4, 0x8a } }
  gSmmGenericElogProtocolGuid                         = { 0x664ef1f6, 0x19bf, 0x4498, { 0xab, 0x6a, 0xfc, 0x05, 0x72, 0xfb, 0x98, 0x51 } }
  gSmmRedirElogProtocolGuid                           = { 0x79ac2d9c, 0x9216, 0x43c5, { 0xa0, 0x74, 0x0b, 0x45, 0xc7, 0x64, 0x22, 0xc1 } }
  gEfiBmcLanProtocolGuid                              = { 0x989d5548, 0xac40, 0x45f3, { 0xad, 0xf5, 0xd0, 0x5f, 0x94, 0xa8, 0x91, 0xae } }
  gEfiRedirFruProtocolGuid                            = { 0x28638cfa, 0xea88, 0x456c, { 0x92, 0xa5, 0xf2, 0x49, 0xca, 0x48, 0x85, 0x35 } }
  gEfiGenericFruProtocolGuid                          = { 0xc8eebf0e, 0x0e10, 0x47f7, { 0x81, 0xbd, 0x39, 0xdb, 0x75, 0xca, 0x93, 0x9f } }
# APTIOV_SERVER_OVERRIDE_RC_START
# gFvbInitilizedGuid                                  = { 0xfa0f4b4f, 0xd6ef, 0x40e7, { 0xbc, 0x1b, 0x29, 0x24, 0x5c, 0xa0, 0x3b, 0xc2 } }
# APTIOV_SERVER_OVERRIDE_RC_END 

  gEfiIpmiBootGuid                                    = { 0x5c9b75ec, 0x8ec7, 0x45f2, { 0x8f, 0x8f, 0xc1, 0xd8, 0x8f, 0x3b, 0x93, 0x45 } }
  gSOLStatusPlatformProtocolGuid                      = { 0xc06eaaf6, 0x7f2e, 0x4004, { 0xa5, 0x6d, 0xcc, 0xb5, 0xf3, 0x28, 0x82, 0x9a } }
  gEfiGenericIpmiDriverInstalledGuid                  = { 0x7cdad61a, 0x3df8, 0x4425, { 0x96, 0x8c, 0x66, 0x28, 0xc8, 0x35, 0xff, 0xce } }

  gEfiSmmFirmwareVolumeBlockProtocolGuid              = { 0xd326d041, 0xbd31, 0x4c01, { 0xb5, 0xa8, 0x62, 0x8b, 0xe8, 0x7f, 0x6, 0x53 }}
  gUbaConfigDatabaseProtocolGuid                      = { 0xe03e0d46, 0x5263, 0x4845, { 0xb0, 0xa4, 0x58, 0xd5, 0x7b, 0x31, 0x77, 0xe2 } }

# APTIOV_SERVER_OVERRIDE_RC_START
#  gLegacyBridgeProtocolGuid                           = { 0x56546975, 0xc450, 0x44b2, { 0x9d, 0x25, 0xce, 0x83, 0xc5, 0x82, 0x1, 0x61 } }
#  gUefiBootMarkerProtocolGuid                         = { 0xbe6b4f66, 0x5b89, 0x4dc2, { 0x91, 0x2, 0xa1, 0x78, 0xc8, 0x62, 0x1c, 0xf2 } }
#  gUefiLegacyBootMarkerGuid                           = { 0xea50c2b,  0x4c0d, 0x4ca3, { 0x97, 0xc1, 0x0, 0x14, 0xdb, 0x75, 0x44, 0x73 } }
#  gUefiWindowsInt10Workaround                         = { 0x22951f5e, 0x4f7b, 0x405b, { 0x8a, 0xda, 0xec, 0xdc, 0x43, 0x1c, 0x61, 0x6f } }
# APTIOV_SERVER_OVERRIDE_RC_END 
  gHstiProtocolGuid                                   = { 0x1b05de41, 0xc93b, 0x4bb4, { 0xad, 0x47, 0x2a, 0x78, 0xac, 0x0f, 0xc9, 0xe4 } }
  gHstiPublishCompleteProtocolGuid                    = { 0x0f500be6, 0xece4, 0x4ed8, { 0x90, 0x81, 0x9a, 0xa9, 0xa5, 0x23, 0xfb, 0x7b } }
  gDxeSiPolicyProtocolGuid                            = { 0xeca27516, 0x306c, 0x4e28, { 0x8c, 0x94, 0x4e, 0x52, 0x10, 0x96, 0x69, 0x5e } }
  #
  # WHEA Support
  #
  gEfiWheaSupportProtocolGuid                         = { 0xeee07404, 0x26ee, 0x43c9, { 0x90, 0x71, 0x4e, 0x48, 0x00, 0x8c, 0x46, 0x91 }}
  gEfiWheaPlatformSupportProtocolGuid                 = { 0x6c09c5b9, 0xbf3f, 0x46d2, { 0x91, 0x98, 0x4a, 0x06, 0x48, 0x26, 0xf4, 0x14 }}
  gEfiIsPlatformSupportWheaProtocolGuid               = { 0x71c4c155, 0xd54b, 0x4d59, { 0xa2, 0xc1, 0xf9, 0xa5, 0x72, 0x3c, 0x65, 0xa8 }}
  gEfiWheaBootProtocolGuid                            = { 0x4a0266fe, 0xfe57, 0x4738, { 0x80, 0xab, 0x14, 0x6e, 0x46, 0xf0, 0x3a, 0x65 }}

  gEfiLpcPolicyProtocolGuid                           = { 0x64021DFE, 0xA62C, 0x42A7, { 0xBF, 0x46, 0x15, 0x07, 0x8C, 0xDF, 0x9F, 0x89 } }

  gEfiVideoPrintProtocolGuid                          = { 0x3dbf3e06, 0x9d0c, 0x40d3, { 0xb2, 0x17, 0x45, 0x5f, 0x33, 0x9e, 0x29, 0x9 } }

  gSmmSpiInitilizedGuid                               = { 0x35c33f32, 0x8c61, 0x452d, { 0x8d, 0x14, 0x9b, 0x5f, 0x53, 0xa2, 0xdf, 0xc0 } }
  gXmlCliCommonGuid                                   = { 0xbf030b10, 0x2d9b, 0x4e71, { 0xa0, 0xc4, 0xbc, 0x99, 0x10, 0x57, 0x9d, 0x40 } }
  gDxeCliApiGuid                                      = { 0xdec8004d, 0xf386, 0x4c40, { 0x81, 0xc,  0xb4, 0x62, 0xd2, 0x2,  0xbe, 0x51 } }
  gSmmCliApiGuid                                      = { 0x67f98821, 0xeb72, 0x4194, { 0x93, 0xeb, 0x47, 0xe3, 0xe2, 0xfb, 0xc1, 0x24 } }
  gXmlCliInterfaceReadyGuid                           = { 0x79b6c484, 0x4e88, 0x49e7, { 0xae, 0xd6, 0xbe, 0x1d, 0x75, 0x4e, 0x54, 0xe1 } }

  gPlatformIncompatiblePciDeviceProtocolGuid          = { 0x6c5e661b, 0x4f20, 0x43b3, { 0x8f, 0xd4, 0x65, 0x1d, 0x8c, 0x72, 0x2a, 0x50 } }
  gAmtWrapperProtocolGuid                             = { 0x919383de, 0xebac, 0x4924, { 0x01, 0x94, 0x52, 0x59, 0xe0, 0x0d, 0x65, 0x7a } }
[PcdsFixedAtBuild]
  gPlatformTokenSpaceGuid.PcdFruInventoryDeviceSmbusAddress|0xFF|UINT8|0x00000029

#
# Acpi Baseaddress
#
  gPlatformTokenSpaceGuid.PcdEfiAcpiPm1aEvtBlkAddress|0x00000500|UINT32|0x00000031

  #Set PCH LPC and eSPI CS0# IO enable decoding. Default value is enabling all the 10 used bits.
  #BIT13 - Microcontroller Enable #2, Enables decoding of I/O locations 4Eh and 4Fh to LPC
  #BIT12 - Super I/O Enable, Enables decoding of I/O locations 2Eh and 2Fh to LPC.
  #BIT11 - Microcontroller Enable #1, Enables decoding of I/O locations 62h and 66h to LPC.
  #BIT10 - Keyboard Enable, Enables decoding of the keyboard I/O locations 60h and 64h to LPC.
  #BIT9  - High Gameport Enable, Enables decoding of the I/O locations 208h to 20Fh to LPC.
  #BIT8  - Low Gameport Enable, Enables decoding of the I/O locations 200h to 207h to LPC.
  #BIT3  - Floppy Drive Enable, Enables decoding of the FDD range to LPC. Range is selected by LIOD.FDE
  #BIT2  - Parallel Port Enable, Enables decoding of the LPT range to LPC. Range is selected by LIOD.LPT.
  #BIT1  - Com Port B Enable, Enables decoding of the COMB range to LPC. Range is selected LIOD.CB.
  #BIT0  - Com Port A Enable, Enables decoding of the COMA range to LPC. Range is selected LIOD.CA.
  gPlatformTokenSpaceGuid.PcdLpcEnableDecodingSet|0x3F0F|UINT16|0x0000001F

  gTraceHubTokenSpaceGuid.PcdTraceHubStatusCodeMaster|0x20|UINT8|0x00000020
  gTraceHubTokenSpaceGuid.PcdTraceHubStatusCodeChannel|0xD|UINT8|0x00000021
  gTraceHubTokenSpaceGuid.PcdTraceHubDebugLibMaster|0x20|UINT8|0x00000022
  gTraceHubTokenSpaceGuid.PcdTraceHubDebugLibChannel|0xE|UINT8|0x00000023

#SKX_TODO: add a new GUID, and replace the 'gPlatformTokenSpaceGuid' used here to it, or move these values to the SocketPkg where the GUID is defined
#          Using a GUID defined in another .DEC file is a violation of the UEFI packaging standards.

  gPlatformTokenSpaceGuid.PcdBiosAcmBase|0xFF880000|UINT32|0x30000010
  gPlatformTokenSpaceGuid.PcdBiosAcmSize|0x00040000|UINT32|0x30000011
  gPlatformTokenSpaceGuid.PcdSinitAcmBase|0xFFCC0000|UINT32|0x30000012
  gPlatformTokenSpaceGuid.PcdSinitAcmSize|0x00040000|UINT32|0x30000013
  gPlatformTokenSpaceGuid.PcdBiosPolicyBase|0xFF87D000|UINT32|0x30000014
  gPlatformTokenSpaceGuid.PcdBiosPolicySize|0x00003000|UINT32|0x30000015

  gPlatformTokenSpaceGuid.PcdPostCompleteGpio|32|UINT64|0x60000000
  gCpPlatFlashTokenSpaceGuid.PcdFlashBase|0xFE000000 |UINT32|0x3000000E
  gCpPlatFlashTokenSpaceGuid.PcdFlashSize|0x02000000 |UINT32|0x3000000F
  gCpPlatFlashTokenSpaceGuid.PcdFlashFPKSize|0x00600000|UINT32|0x30000016
  gCpPlatFlashTokenSpaceGuid.PcdFlashFPKBase|0xFEA00000|UINT32|0x30000017
  gCpPlatFlashTokenSpaceGuid.PcdFlashLBGNSPcieGen3Size|0x00020000|UINT32|0x30000018
  gCpPlatFlashTokenSpaceGuid.PcdFlashLBGNSPcieGen3Base|0xFF8E0000|UINT32|0x30000019
  gCpPlatFlashTokenSpaceGuid.PcdFlashFdFpgaBase|0xFCA00000|UINT32|0x3000001A
  gCpPlatFlashTokenSpaceGuid.PcdFlashFdFpgaSize|0x02000000|UINT32|0x3000001B
  gCpPlatFlashTokenSpaceGuid.PcdFlashFvFpgaBbsSize|0x02000000|UINT32|0x3000001C
  gCpPlatFlashTokenSpaceGuid.PcdFlashFvFpgaBbsBase|0xFCA00000|UINT32|0x3000001D
  gCpPlatFlashTokenSpaceGuid.PcdFlashFvBinarySize|0x00400000|UINT32|0x3000001E
  gCpPlatFlashTokenSpaceGuid.PcdFlashFvBinaryBase|0xFF900000|UINT32|0x3000001F
  gCpPlatFlashTokenSpaceGuid.PcdFlashFvOpromSize|0x01000000|UINT32|0x30000020
  gCpPlatFlashTokenSpaceGuid.PcdFlashFvOpromBase|0xFF900000|UINT32|0x30000021
  gCpPlatFlashTokenSpaceGuid.PcdFlashFvOpromOffset|0x0000000|UINT32|0x30000027
  gCpPlatFlashTokenSpaceGuid.PcdFlashLBGNSPcieGen3Offset|0x00000000|UINT32|0x30000029

  gCpPlatFlashTokenSpaceGuid.PcdFlashFvReservedSize|0x000A0000|UINT32|0x30000022
  gCpPlatFlashTokenSpaceGuid.PcdFlashFvReservedBase|0x00000000|UINT32|0x30000023
  gCpPlatFlashTokenSpaceGuid.PcdFlashFvMrcCpxBaseIsUnified|FALSE|BOOLEAN|0x30000024

  gCpPlatFlashTokenSpaceGuid.PcdFlashCfrRegionSize|0x01000000|UINT32|0x30000025
  gCpPlatFlashTokenSpaceGuid.PcdFlashCfrRegionBase|0xFF900000|UINT32|0x30000026

  gCpPlatFlashTokenSpaceGuid.PcdFlashFirmwareBinariesFvBase|0x00000000|UINT32|0x20000010
  gCpPlatFlashTokenSpaceGuid.PcdFlashFirmwareBinariesFvSize|0x00000000|UINT32|0x20000011

# APTIOV_SERVER_OVERRIDE_RC_START
# gPlatformModuleTokenSpaceGuid.PcdMaxSOLChannels|0x3|UINT8|0x40000009
# APTIOV_SERVER_OVERRIDE_RC_END

  gPlatformTokenSpaceGuid.PcdShellDescription|L"UEFI Internal Shell"|VOID*|0x60000001

  gPlatformTokenSpaceGuid.PcdSupportLegacyStack|TRUE|BOOLEAN|0x30000030
  gPlatformTokenSpaceGuid.PcdMaxOptionRomNumber|0x4|UINT8|0x30000031

  gPlatformTokenSpaceGuid.PcdCmosDebugPrintLevelReg|0x4C|UINT8|0x30000032

  # Choose the default serial debug message level when CMOS is bad; in the later BIOS phase, the setup default is applied
  # 0 - Disable; 1 - Minimum; 2 - Normal; 3 - Max
  gPlatformTokenSpaceGuid.PcdSerialDbgLvlAtBadCmos|0x1|UINT8|0x30000033

  # PCD for failsafe variable ffs in other FV rather than bb1
  # by default, FCE will insert into SECPEI, and you don't need to set these two PCD if bb1(secpei)is used
  gPlatformTokenSpaceGuid.PcdFailSafeVarFfsSize|0|UINT32|0x30000034
  gPlatformTokenSpaceGuid.PcdFailSafeVarFvBase|0|UINT32|0x30000035

  gPlatformTokenSpaceGuid.PcdSetupVariableGuid|{ 0x43,0xd6,0x87,0xec,0xa4, 0xeb, 0xb5,0x4b, 0xa1, 0xe5, 0x3f, 0x3e, 0x36, 0xb2, 0xd, 0xa9}|VOID*|0x30000036

  gPlatformTokenSpaceGuid.PcdIsBootCategory|TRUE|BOOLEAN|0x30000037

  gPlatformTokenSpaceGuid.PcdBindSgxResetWithF9GlobalReset|FALSE|BOOLEAN|0x30000049

  #
  # Debug Mode indicator
  #
  gPlatformTokenSpaceGuid.PcdDebugModeEnable|0x01|UINT8|0xE0000040
  #
  #
  #
  gPlatformTokenSpaceGuid.PcdOnBoardSerialHsuart0Device|0x1A|UINT8|0x30000050
  gPlatformTokenSpaceGuid.PcdOnBoardSerialHsuart0Function|0x0|UINT8|0x30000051

  gPlatformTokenSpaceGuid.PcdXmlLZMACompression|FALSE|BOOLEAN|0xE0000041

  #When True, IIO config data for socket 3 will be used for sockets 4..7
  gPlatformTokenSpaceGuid.PcdSocketCopy|FALSE|BOOLEAN|0xE0000042

#
# The PCDs are used to control the Windows SMM Security Mitigations Table - Protection Flags
#
# BIT0: If set, expresses that for all synchronous SMM entries,SMM will validate that input and output buffers lie entirely within the expected fixed memory regions.
# BIT1: If set, expresses that for all synchronous SMM entries, SMM will validate that input and output pointers embedded within the fixed communication buffer only refer to address ranges \
#       that lie entirely within the expected fixed memory regions.
# BIT2: Firmware setting this bit is an indication that it will not allow reconfiguration of system resources via non-architectural mechanisms.
# BIT3-31: Reserved
#
gPlatformModuleTokenSpaceGuid.PcdWsmtProtectionFlags|0x07|UINT32|0x10001006

[PcdsFixedAtBuild, PcdsPatchableInModule]
  gPlatformModuleTokenSpaceGuid.PcdLogoFile|{ 0x99, 0x8b, 0xB2, 0x7B, 0xBB, 0x61, 0xD5, 0x11, 0x9A, 0x5D, 0x00, 0x90, 0x27, 0x3F, 0xC1, 0x4D }|VOID*|0x00010037
  #7C04A583-9E3E-4f1c-AD65-E05268D0B4D1
# APTIOV_SERVER_OVERRIDE_RC_START : To Resolve PiSmmCpuDxeSmm driver hang 
  gPlatformTokenSpaceGuid.PcdShellFile|{ 0xB7, 0xD6, 0x7A, 0xC5, 0x15, 0x05, 0xA8, 0x40, 0x9D, 0x21, 0x55, 0x16, 0x52, 0x85, 0x4E, 0x37 }|VOID*|0x40000004
# APTIOV_SERVER_OVERRIDE_RC_END : To Resolve PiSmmCpuDxeSmm driver hang 
  ## Specify memory size with page number for a pre-allocated reserved memory to be used
  #  by PEI in S3 phase. The default size 32K. When changing the value make sure the memory size
  #  is large enough to meet PEI requirement in the S3 phase.
  # @Prompt Reserved S3 Boot ACPI Memory Size
  gPlatformModuleTokenSpaceGuid.PcdS3AcpiReservedMemorySize|0x8000|UINT32|0x00010039
  # APTIOV_SERVER_OVERRIDE_RC_START
  ## Specifies RTC Index Register address in I/O space.
  # @Prompt RTC Index Register address
  gPcAtChipsetPkgTokenSpaceGuid.PcdRtcIndexRegister|0x70|UINT8|0x0000001E
  ## Specifies RTC Target Register address in I/O space.
  # @Prompt RTC Target Register address
  gPcAtChipsetPkgTokenSpaceGuid.PcdRtcTargetRegister|0x71|UINT8|0x0000001F
  # APTIOV_SERVER_OVERRIDE_RC_END

[PcdsDynamic, PcdsDynamicEx]
  gEfiMdeModulePkgTokenSpaceGuid.PcdHotkeyFlag|FALSE|BOOLEAN|0x10000005
  gPlatformTokenSpaceGuid.PcdWakeupType|0x0|UINT8|0x60000021
  gPlatformModuleTokenSpaceGuid.PcdEmmcManufacturerId|0|UINT8|0x00000028
  gPlatformModuleTokenSpaceGuid.PcdProductSerialNumber|0|UINT32|0x00000029
  gEfiSecurityPkgTokenSpaceGuid.PcdMePttSuppressCommandSend|FALSE|BOOLEAN|0x00000030

  # TPM PCD
  ## The PCD is used to specify send HierarchyControl command to enable or disable Platform Hierarchy.
  gPlatformModuleTokenSpaceGuid.PcdTpm2HierarchyChangeAuthPlatform|FALSE|BOOLEAN|0x00010020
  gPlatformModuleTokenSpaceGuid.PcdTpm2ChangeEps|FALSE|BOOLEAN|0x00010021
  gPlatformModuleTokenSpaceGuid.PcdTpm2ChangePps|FALSE|BOOLEAN|0x00010022
  gPlatformModuleTokenSpaceGuid.PcdTpm2Clear|FALSE|BOOLEAN|0x00010023
  gPlatformModuleTokenSpaceGuid.PcdTpm2HierarchyControlPlatform|FALSE|BOOLEAN|0x00010024
  gPlatformModuleTokenSpaceGuid.PcdTpm2HierarchyControlEndorsement|FALSE|BOOLEAN|0x00010025
  gPlatformModuleTokenSpaceGuid.PcdTpm2HierarchyControlOwner|FALSE|BOOLEAN|0x00010026
  gPlatformModuleTokenSpaceGuid.PcdTpm2TxtProvisionSupport|FALSE|BOOLEAN|0x00010027

#
# PAL
#
  gPlatformTokenSpaceGuid.PcdOemSkuPcieSlotOpromBitMap|0xFF|UINT32|0x00000008

#SKX_TODO: gPlatformTokenSpaceGuid are not correct GUIDs to use here, use local GUID...
  gPlatformTokenSpaceGuid.PcdBootDeviceScratchPad5Changed|FALSE|BOOLEAN|0x00000048

  gPlatformTokenSpaceGuid.PcdTempSkip|00|UINT8|0x6000001E
  gEfiMdeModulePkgTokenSpaceGuid.PcdSnpUndi32CallbackDelay|5000|UINT32|0x00000000
  ## This value is used to save memory address of MRC data structure.
  gPlatformTokenSpaceGuid.PcdBoardTypeBitmask|0x00000000|UINT32|0x30000041
  gPlatformTokenSpaceGuid.PcdHalfWidth|FALSE|BOOLEAN|0x30000042

#
# IMR0 programming values
#
  gPlatformTokenSpaceGuid.PcdImr0Enable|FALSE|BOOLEAN|0xA5000000
  gPlatformTokenSpaceGuid.PcdImr0Base|0x0|UINT64|0xA5000001
  gPlatformTokenSpaceGuid.PcdImr0Mask|0x0|UINT64|0xA5000002
  gPlatformTokenSpaceGuid.PcdImr0Rac|0xFFFFFFFFFFFFFFFF|UINT64|0xA5000003
  gPlatformTokenSpaceGuid.PcdImr0Wac|0xFFFFFFFFFFFFFFFF|UINT64|0xA5000004

#
# IMR3 programming values
#
  gPlatformTokenSpaceGuid.PcdImr3Enable|FALSE|BOOLEAN|0xA5000022

#
# The PCD which is defined to enable/disable the PCH thermal hot threshold function.
#
  gPlatformModuleTokenSpaceGuid.PcdPchThermalHotEnable|TRUE|BOOLEAN|0x00101021

#
# Server common Hot Key binding
#
  # EFI Scan codes
  # SCAN_F2         0x000C
  # SCAN_F6         0x0010
  # SCAN_F7         0x0011
  gPlatformTokenSpaceGuid.PcdSetupMenuScanCode|0x00|UINT16|0x00000009
  gPlatformTokenSpaceGuid.PcdBootDeviceListScanCode|0x00|UINT16|0x0000000A
  gPlatformTokenSpaceGuid.PcdBootMenuFile|{ 0xdc, 0x5b, 0xc2, 0xee, 0xf2, 0x67, 0x95, 0x4d, 0xb1, 0xd5, 0xf8, 0x1b, 0x20, 0x39, 0xd1, 0x1d }|VOID*|0x0000000B

  gPlatformTokenSpaceGuid.PcdOemDualVideo|FALSE|BOOLEAN|0x0000000C

#Indicate whether to perform LT Config lock
# The PCD can be set to false when there is the debug request
#    TRUE  - Force the LT config lock
#    FALSE - Allow the LT config unlock for debug
  gPlatformModuleTokenSpaceGuid.PcdLtConfigLockEnable|TRUE|BOOLEAN|0x3000000e

#Indicate whether LTSX enabled
#    TRUE  - Intel (R) TXT feature enabled on the platform
#    FALSE - Disable Intel(R) TXT feature on the platform
  gPlatformModuleTokenSpaceGuid.PcdProcessorLtsxEnable | TRUE|BOOLEAN|0x3000000f
#
#From Request Purley BMC KCS Policy Control Modes_v0.62.docx,
#Kcs Policy Control Mode 03h is Allow All.
#
  gPlatformTokenSpaceGuid.PcdKcsPolicyControlMode|0x03|UINT8|0x3000004B
  gPlatformTokenSpaceGuid.PcdUsbBootPriorityEnable|TRUE|BOOLEAN|0x3000004C

[PcdsFeatureFlag]
  ## This PCD specifies whether StatusCode is reported via USB Serial port.
#SKX_TODO: move to a platform GUID, gEfiSerialPortTokenSpaceGuid is not correct GUID to use here
  gEfiSerialPortTokenSpaceGuid.PcdStatusCodeUseUsbSerial|FALSE|BOOLEAN|0x00000020
#SKX_TODO: gPlatformTokenSpaceGuid are not correct GUIDs to use here, need to move to restricted GUID in ServerRestricted.dec, and move this there
  gPlatformTokenSpaceGuid.PcdSupportUnsignedCapsuleImage|TRUE|BOOLEAN|0x00000020

  ## This PCD specifies whether StatusCode is reported via Trace Hub.
  gTraceHubTokenSpaceGuid.PcdStatusCodeUseTraceHub|TRUE|BOOLEAN|0x00000000

  gPlatformTokenSpaceGuid.PcdUpdateSpsAcpiOemTableId|FALSE|BOOLEAN|0x40000010

  ## Platform Not support Acpi Table
  gPlatformTokenSpaceGuid.PcdPlatformNotSupportAcpiTable|FALSE|BOOLEAN|0x40000012
  gPlatformTokenSpaceGuid.PcdPlatformNotSupportAcpiBdatTable|FALSE|BOOLEAN|0x40000013

  gPlatformModuleTokenSpaceGuid.PcdCrystalRidgeEnable|TRUE|BOOLEAN|0x0000002B

  gPerfOptTokenSpaceGuid.PcdPreUefiLegacyEnable|TRUE|BOOLEAN|0x00000002
  gPerfOptTokenSpaceGuid.PcdLocalVideoEnable|TRUE|BOOLEAN|0x00000003

  ##
  ## High Speed UART
  ##
  gPlatformModuleTokenSpaceGuid.PcdEnableHighSpeedUart|FALSE|BOOLEAN|0x0000002C


  #
  # OBB Verification
  #
  gPlatformTokenSpaceGuid.PcdObbVerificationEnable|FALSE|BOOLEAN|0xE0000030
  # Forces OBB verification (if enabled) when the Verified boot (BTG capability) is not supported by the System HW
  gPlatformTokenSpaceGuid.PcdObbVerificationEnforcementEnable|FALSE|BOOLEAN|0xE0000031
  # Platform requieres PEI post memory Firmware Volume verification
  gPlatformTokenSpaceGuid.PcdObbVerificationPostMemEnable|FALSE|BOOLEAN|0xE0000034
  # Platform requieres FspS Firmware Volume verification
  gPlatformTokenSpaceGuid.PcdObbVerificationFspsFVEnable|FALSE|BOOLEAN|0xE0000035
  # Platform requieres OA_FV Firmware volume Verification
  gPlatformTokenSpaceGuid.PcdObbVerificationOaFVEnable|FALSE|BOOLEAN|0xE0000036

  ## This PCD specifies whether to shadow the FVMAIN_COMPACT into memory before reporting the FV.
  #  It is recommended to enable the 'FvUsedSizeEnable' information report for FVMAIN_COMPACT in
  #  platform FDF file to further speedup the shadow process.
  gPlatformTokenSpaceGuid.PcdShadowFvMainInMemory|FALSE|BOOLEAN|0xE0000032

[PcdsDynamicEx]
  ### Sample implementation...No real data. Use this PCD to override a platform with Interposer ###
  #APTIOV_SERVER_RC_OVERRIDE_START: Invalid Type INTERPOSER_MAP
  gPlatformTokenSpaceGuid.PcdMemInterposerMap|{0}|VOID*|0x80000015 
  #gPlatformTokenSpaceGuid.PcdMemInterposerMap|{0}|INTERPOSER_MAP|0x80000015 {
  #  <HeaderFiles>
  #    Guid/PlatformInfo.h
  #   <Packages>
  #    ServerPlatformPkg/PlatformPkg.dec
  #}
  # Interposer A MC 0 mapped to original MC1
  # Enum values for Interposer
  # Interposer A => 1
  # Interposer B => 2
  # Interposer Unknown => 0
  #gPlatformTokenSpaceGuid.PcdMemInterposerMap.Interposer[1].MappedMcId[0] |1
  #APTIOV_SERVER_RC_OVERRIDE_END: Invalid Type INTERPOSER_MAP

### Sample implementation...No real data. Use this PCD to override a platform with Interposer ###


[PcdsFixedAtBuild, PcdsPatchableInModule, PcdsDynamic, PcdsDynamicEx]
  gPlatformTokenSpaceGuid.PcdPilotIIIPossiblePorts|{ 0x2E, 0x00, 0x2E, 0x00, 0x2F, 0x00, 0x4E, 0x00, 0x4E, 0x00, 0x4F, 0x00, 0x00, 0x00 }|VOID*|0x50000000
  gPlatformTokenSpaceGuid.PcdAst2500PossiblePorts|{ 0x2E, 0x00, 0x2E, 0x00, 0x2F, 0x00, 0x00, 0x00 }|VOID*|0x61000000
  gPlatformTokenSpaceGuid.PcdSerialPort1BaseAddress|0x3F8|UINT16|0x50000002
  gPlatformTokenSpaceGuid.PcdSerialPort1Irq|4|UINT8|0x50000003
  gPlatformTokenSpaceGuid.PcdSerialPort2BaseAddress|0x2F8|UINT16|0x50000005
  gPlatformTokenSpaceGuid.PcdSerialPort2Irq|3|UINT8|0x50000006
  gPlatformTokenSpaceGuid.PcdOnBoardSerialHsuart0Enable|FALSE|BOOLEAN|0x50000007

  ## MemoryCheck value for checking memory before boot OS.
  #  To save the boot performance, the default MemoryCheck is set to 0.
  gPlatformTokenSpaceGuid.PcdPlatformMemoryCheck|0|UINT8|0x40000005

  ## Part of the change to allow boot order change with >10 hard drives
  #  See Grantley sighting 4167703 for more info
  gPlatformTokenSpaceGuid.PcdPlatformMemoryCheckDefault|0|UINT8|0x40000008

  ## Indicates if BiosVideo driver will switch to 80x25 Text VGA Mode when exiting boot service.<BR><BR>
  #   TRUE  - Switch to Text VGA Mode.<BR>
  #   FALSE - Does not switch to Text VGA Mode.<BR>
  # @Prompt Switch to Text VGA Mode on UEFI Boot
  gPlatformTokenSpaceGuid.PcdBiosVideoSetTextVgaModeEnable|FALSE|BOOLEAN|0x30000001

  ## Indicates if BiosVideo driver will check for VESA BIOS Extension service support.<BR><BR>
  #   TRUE  - Check for VESA BIOS Extension service.<BR>
  #   FALSE - Does not check for VESA BIOS Extension service.<BR>
  # @Prompt Enable Check for VESA BIOS Extension Service
  gPlatformTokenSpaceGuid.PcdBiosVideoCheckVbeEnable|TRUE|BOOLEAN|0x30000002

  ## Indicates if BiosVideo driver will check for VGA service support.
  #  NOTE: If both PcdBiosVideoCheckVbeEnable and PcdBiosVideoCheckVgaEnable are set to FALSE,
  #  that means Graphics Output protocol will not be installed, the VGA miniport protocol will be installed instead.<BR><BR>
  #   TRUE  - Check for VGA service.<BR>
  #   FALSE - Does not check for VGA service.<BR>
  # @Prompt Enable Check for VGA Service
  gPlatformTokenSpaceGuid.PcdBiosVideoCheckVgaEnable|TRUE|BOOLEAN|0x30000003
  gPlatformTokenSpaceGuid.PcdPatchHiiDatabase|TRUE|BOOLEAN|0x4000000A
  gPlatformTokenSpaceGuid.PcdUsbSerialEhciBus|0x00|UINT8|0x00000010
  gPlatformTokenSpaceGuid.PcdUsbSerialEhciDev|0x1D|UINT8|0x00000011
  gPlatformTokenSpaceGuid.PcdUsbSerialEhciFunc|0x00|UINT8|0x00000012

  ## following PCDs should remove if CORE accept the fix
  gPlatformTokenSpaceGuid.PcdPerfPkgPchPmBaseFunctionNumber|0x0|UINT32|4

  ## Vendor ID and Device ID of device producing onboard video
  gPlatformTokenSpaceGuid.PcdOnboardVideoPciVendorId|0|UINT16|0x00000013
  gPlatformTokenSpaceGuid.PcdOnboardVideoPciDeviceId|0|UINT16|0x00000014
  gPlatformTokenSpaceGuid.PcdWheaLogFvBase|0xFFEA0000|UINT32|0x40000007

# APTIOV_SERVER_OVERRIDE_RC_START 
  ## Indicates the presence or absence of the platform operator during firmware booting.
  #  If platform operator is not physical presence during boot. TPM will be locked and the TPM commands
  #  that required operator physical presence can not run.<BR><BR>
  #   TRUE  - The platform operator is physically present.<BR>
  #   FALSE - The platform operator is not physically present.<BR>
  # @Prompt Physical presence of the platform operator.
  gEfiSecurityPkgTokenSpaceGuid.PcdTpmPhysicalPresence|TRUE|BOOLEAN|0x00010001
  
  ## This PCD indicates if BIOS auto detect TPM1.2 or dTPM2.0.<BR><BR>
  #  FALSE - No auto detection.<BR>
  #  TRUE  - Auto detection.<BR>
  # @Prompt TPM type detection.
  gEfiSecurityPkgTokenSpaceGuid.PcdTpmAutoDetection|TRUE|BOOLEAN|0x00010011
  
  ## Indicate whether a physical presence user exist.
  # When it is configured to Dynamic or DynamicEx, it can be set through detection using
  # a platform-specific method (e.g. Button pressed) in a actual platform in early boot phase.<BR><BR>
  # @Prompt A physical presence user status
  gEfiSecurityPkgTokenSpaceGuid.PcdUserPhysicalPresence|FALSE|BOOLEAN|0x00010019
  ## Null-terminated string of the Version of Physical Presence interface supported by platform.<BR><BR>
  # To support configuring from setup page, this PCD can be DynamicHii type and map to a setup option.<BR>
  # For example, map to TCG2_VERSION.PpiVersion to be configured by Tcg2ConfigDxe driver.<BR>
  # gEfiSecurityPkgTokenSpaceGuid.PcdTcgPhysicalPresenceInterfaceVer|L"TCG2_VERSION"|gTcg2ConfigFormSetGuid|0x0|"1.3"|NV,BS<BR>
  # @Prompt Version of Physical Presence interface supported by platform.
  gEfiSecurityPkgTokenSpaceGuid.PcdTcgPhysicalPresenceInterfaceVer|"1.3"|VOID*|0x00000008
  
  ## Indicate the TPM2 ACPI table revision. Rev 4 has been defined since TCG ACPI Specification Rev 00.37.<BR><BR>
  # To support configuring from setup page, this PCD can be DynamicHii type and map to a setup option.<BR>
  # For example, map to TCG2_VERSION.Tpm2AcpiTableRev to be configured by Tcg2ConfigDxe driver.<BR>
  # gEfiSecurityPkgTokenSpaceGuid.PcdTpm2AcpiTableRev|L"TCG2_VERSION"|gTcg2ConfigFormSetGuid|0x8|3|NV,BS<BR>
  # @Prompt Revision of TPM2 ACPI table.
  gEfiSecurityPkgTokenSpaceGuid.PcdTpm2AcpiTableRev|3|UINT8|0x0001001A
  
# APTIOV_SERVER_OVERRIDE_RC_END

[PcdsDynamic, PcdsDynamicEx]
  ## Server platform console redirection pcd
  # 0 - Disable the console redirection
  # 1 - Enable the default console redirection
  # others - Enable specific console redirection
  gPlatformModuleTokenSpaceGuid.PcdPlatformConsoleRedirection|1|UINT8|0x4000000A

[PcdsFixedAtBuild, PcdsPatchableInModule]


#
# UBA_START
#
[PcdsDynamic, PcdsDynamicEx]

#
#Board Definitions
#
#Integer for BoardID, must match the SKU number and be unique.
  gOemSkuTokenSpaceGuid.PcdOemSkuBoardID|0x0|UINT16|0x00000000
#Integer for BoardFamily, must be unique
  gOemSkuTokenSpaceGuid.PcdOemSkuBoardFamily|0x0|UINT16|0x00000001
# Zero terminated unicode string to ID family
  gOemSkuTokenSpaceGuid.PcdOemSkuFamilyName|L"DEFAULT                            "|VOID*|0x0000002
# Zero terminated unicode string to Board Name
  gOemSkuTokenSpaceGuid.PcdOemSkuBoardName|L"DEFAULT                             "|VOID*|0x00000003
# Number of Sockets on Board.
  gOemSkuTokenSpaceGuid.PcdOemSkuBoardSocketCount|0x0|UINT32|0x00000004

# Number of DIMM slots per channel for each Socket
  gOemSkuTokenSpaceGuid.PcdOemSkuMaxChannel|0x0|UINT32|0x00000005
  gOemSkuTokenSpaceGuid.PcdOemSkuMaxDimmPerChannel|0x0|UINT32|0x00000006
  gOemSkuTokenSpaceGuid.PcdOemSkuDimmLayout|FALSE|BOOLEAN|0x00000007
  gOemSkuTokenSpaceGuid.PcdOemSkuSubBoardID|0x0|UINT16|0x00000008

  gOemSkuTokenSpaceGuid.PcdOemSkuMaxDimmSize|0x100|UINT32|0x00000009
# Form factor is MemoryFormFactorDimm by default
# MemoryFormFactorOther                    = 0x01
# MemoryFormFactorUnknown                  = 0x02
# MemoryFormFactorSimm                     = 0x03
# MemoryFormFactorSip                      = 0x04
# MemoryFormFactorChip                     = 0x05
# MemoryFormFactorDip                      = 0x06
# MemoryFormFactorZip                      = 0x07
# MemoryFormFactorProprietaryCard          = 0x08
# MemoryFormFactorDimm                     = 0x09
# MemoryFormFactorTsop                     = 0x0A
# MemoryFormFactorRowOfChips               = 0x0B
# MemoryFormFactorRimm                     = 0x0C
# MemoryFormFactorSodimm                   = 0x0D
# MemoryFormFactorSrimm                    = 0x0E
# MemoryFormFactorFbDimm                   = 0x0F
# MemoryFormFactorDie                      = 0x10
  gOemSkuTokenSpaceGuid.PcdOemSkuMemDevFormFactor|0x09|UINT8|0x10000010

#
# USB
#
gOemSkuTokenSpaceGuid.PcdOemSkuPchUsbOverCurrentPort00|0x0|UINT16|0x00000010
gOemSkuTokenSpaceGuid.PcdOemSkuPchUsbOverCurrentPort01|0x0|UINT16|0x00000011
gOemSkuTokenSpaceGuid.PcdOemSkuPchUsbOverCurrentPort02|0x0|UINT16|0x00000012
gOemSkuTokenSpaceGuid.PcdOemSkuPchUsbOverCurrentPort03|0x0|UINT16|0x00000013
gOemSkuTokenSpaceGuid.PcdOemSkuPchUsbOverCurrentPort04|0x0|UINT16|0x00000014
gOemSkuTokenSpaceGuid.PcdOemSkuPchUsbOverCurrentPort05|0x0|UINT16|0x00000015
gOemSkuTokenSpaceGuid.PcdOemSkuPchUsbOverCurrentPort06|0x0|UINT16|0x00000016
gOemSkuTokenSpaceGuid.PcdOemSkuPchUsbOverCurrentPort07|0x0|UINT16|0x00000017
gOemSkuTokenSpaceGuid.PcdOemSkuPchUsbOverCurrentPort08|0x0|UINT16|0x00000018
gOemSkuTokenSpaceGuid.PcdOemSkuPchUsbOverCurrentPort09|0x0|UINT16|0x00000019
gOemSkuTokenSpaceGuid.PcdOemSkuPchUsbOverCurrentPort10|0x0|UINT16|0x0000001A
gOemSkuTokenSpaceGuid.PcdOemSkuPchUsbOverCurrentPort11|0x0|UINT16|0x0000001B
gOemSkuTokenSpaceGuid.PcdOemSkuPchUsbOverCurrentPort12|0x0|UINT16|0x0000001C
gOemSkuTokenSpaceGuid.PcdOemSkuPchUsbOverCurrentPort13|0x0|UINT16|0x0000001D

gOemSkuTokenSpaceGuid.PcdOemSkuPchUsbPortLengthPort00|0x0|UINT16|0x00000020
gOemSkuTokenSpaceGuid.PcdOemSkuPchUsbPortLengthPort01|0x0|UINT16|0x00000021
gOemSkuTokenSpaceGuid.PcdOemSkuPchUsbPortLengthPort02|0x0|UINT16|0x00000022
gOemSkuTokenSpaceGuid.PcdOemSkuPchUsbPortLengthPort03|0x0|UINT16|0x00000023
gOemSkuTokenSpaceGuid.PcdOemSkuPchUsbPortLengthPort04|0x0|UINT16|0x00000024
gOemSkuTokenSpaceGuid.PcdOemSkuPchUsbPortLengthPort05|0x0|UINT16|0x00000025
gOemSkuTokenSpaceGuid.PcdOemSkuPchUsbPortLengthPort06|0x0|UINT16|0x00000026
gOemSkuTokenSpaceGuid.PcdOemSkuPchUsbPortLengthPort07|0x0|UINT16|0x00000027
gOemSkuTokenSpaceGuid.PcdOemSkuPchUsbPortLengthPort08|0x0|UINT16|0x00000028
gOemSkuTokenSpaceGuid.PcdOemSkuPchUsbPortLengthPort09|0x0|UINT16|0x00000029
gOemSkuTokenSpaceGuid.PcdOemSkuPchUsbPortLengthPort10|0x0|UINT16|0x0000002A
gOemSkuTokenSpaceGuid.PcdOemSkuPchUsbPortLengthPort11|0x0|UINT16|0x0000002B
gOemSkuTokenSpaceGuid.PcdOemSkuPchUsbPortLengthPort12|0x0|UINT16|0x0000002C
gOemSkuTokenSpaceGuid.PcdOemSkuPchUsbPortLengthPort13|0x0|UINT16|0x0000002D

gOemSkuTokenSpaceGuid.PcdOemSkuPchUsb3OverCurrentPort00|0x0|UINT16|0x00000100
gOemSkuTokenSpaceGuid.PcdOemSkuPchUsb3OverCurrentPort01|0x0|UINT16|0x00000101
gOemSkuTokenSpaceGuid.PcdOemSkuPchUsb3OverCurrentPort02|0x0|UINT16|0x00000102
gOemSkuTokenSpaceGuid.PcdOemSkuPchUsb3OverCurrentPort03|0x0|UINT16|0x00000103
gOemSkuTokenSpaceGuid.PcdOemSkuPchUsb3OverCurrentPort04|0x0|UINT16|0x00000104
gOemSkuTokenSpaceGuid.PcdOemSkuPchUsb3OverCurrentPort05|0x0|UINT16|0x00000105

#
# ACPI items
#
# Acpi Name, MUST be 8 chars long
  gOemSkuTokenSpaceGuid.PcdOemSkuAcpiName|"DEFAULT        "|VOID*|0x00000030
  gOemSkuTokenSpaceGuid.PcdOemTableIdXhci|"DEFAULT        "|VOID*|0x00000031
#
# Misc.
#

  gOemSkuTokenSpaceGuid.PcdOemSkuSdpActiveFlag|0x0|UINT8|0x00000039
  gOemSkuTokenSpaceGuid.PcdOemSkuMrlAttnLed|0x0|UINT16|0x00000040

#
# GPIO
#

  gOemSkuTokenSpaceGuid.PcdOemSku_GPIO_USE_SEL_VAL|0xFF3DB93D|UINT32|0x00000050
  gOemSkuTokenSpaceGuid.PcdOemSku_GPIO_USE_SEL2_VAL|0x0382F03F|UINT32|0x00000051
  gOemSkuTokenSpaceGuid.PcdOemSku_GPIO_USE_SEL3_VAL|0xFFFFF30F|UINT32|0x00000052
  gOemSkuTokenSpaceGuid.PcdOemSku_GPIO_IO_SEL_VAL|0x91E3EFFF|UINT32|0x00000053
  gOemSkuTokenSpaceGuid.PcdOemSku_GPIO_IO_SEL2_VAL|0xFFFD0FF3|UINT32|0x00000054
  gOemSkuTokenSpaceGuid.PcdOemSku_GPIO_IO_SEL3_VAL|0xFFFFFDF0|UINT32|0x00000055
  gOemSkuTokenSpaceGuid.PcdOemSku_GPIO_LVL_VAL|0x661C1000|UINT32|0x00000056
  gOemSkuTokenSpaceGuid.PcdOemSku_GPIO_LVL2_VAL|0x0002F004|UINT32|0x00000057
  gOemSkuTokenSpaceGuid.PcdOemSku_GPIO_LVL3_VAL|0x0000020D|UINT32|0x00000058
  gOemSkuTokenSpaceGuid.PcdOemSku_GPIO_INV_VAL|0x00000000|UINT32|0x00000059
  gOemSkuTokenSpaceGuid.PcdOemSku_GPIO_BLINK_VAL|0x00000000|UINT32|0x0000005a
  gOemSkuTokenSpaceGuid.PcdOemSku_GPIO_TABLE_SIZE|0x00000000|UINT32|0x0000005c

#
# Riser1 x16 Bifurcation
#
  gOemSkuTokenSpaceGuid.PcdOemSku_Riser1_x16|0x0|UINT8|0x0000005d
  gOemSkuTokenSpaceGuid.PcdOemSku_Riser2_x16|0x0|UINT8|0x0000005e
  gOemSkuTokenSpaceGuid.PcdOemSku_Riser3_x16|0x0|UINT8|0x0000005f
  gOemSkuTokenSpaceGuid.PcdOemSku_Riser4_x16|0x0|UINT8|0x0000006c

#
# SATA registers
#

  gOemSkuTokenSpaceGuid.PcdOemSku_Reg78Data32|0x99990000|UINT32|0x0000005b

#
# Clock generator settings
#

  gOemSkuTokenSpaceGuid.PcdOemSkuClockGenerator00|0xFF|UINT8|0x00000060
  gOemSkuTokenSpaceGuid.PcdOemSkuClockGenerator01|0x9E|UINT8|0x00000061
  gOemSkuTokenSpaceGuid.PcdOemSkuClockGenerator02|0x3F|UINT8|0x00000062
  gOemSkuTokenSpaceGuid.PcdOemSkuClockGenerator03|0x00|UINT8|0x00000063
  gOemSkuTokenSpaceGuid.PcdOemSkuClockGenerator04|0x00|UINT8|0x00000064
  gOemSkuTokenSpaceGuid.PcdOemSkuClockGenerator05|0x0F|UINT8|0x00000065
  gOemSkuTokenSpaceGuid.PcdOemSkuClockGenerator06|0x08|UINT8|0x00000066
  gOemSkuTokenSpaceGuid.PcdOemSkuClockGenerator07|0x11|UINT8|0x00000067
  gOemSkuTokenSpaceGuid.PcdOemSkuClockGenerator08|0x0A|UINT8|0x00000068
  gOemSkuTokenSpaceGuid.PcdOemSkuClockGenerator09|0x17|UINT8|0x00000069
  gOemSkuTokenSpaceGuid.PcdOemSkuClockGenerator10|0xFF|UINT8|0x0000006a
  gOemSkuTokenSpaceGuid.PcdOemSkuClockGenerator11|0xFE|UINT8|0x0000006b

  gOemSkuTokenSpaceGuid.PcdOemSkuClockGeneratorAddress|0xD2|UINT8|0x0000006d

  gOemSkuTokenSpaceGuid.PcdOemSkuSataPromptString|"DEFAULT                 "|VOID*|0x00000200
  gOemSkuTokenSpaceGuid.PcdOemSkuPlatformName|L"DEFAULT                             "|VOID*|0x00000201
  gOemSkuTokenSpaceGuid.PcdOemSkuPlatformNameSize|0x0|UINT32|0x00000202
  gOemSkuTokenSpaceGuid.PcdOemSkuPlatformFeatureFlag|0x0|UINT32|0x00000203

#
# If PcdOemSkuAssertPostGPIO value is 0xFFFFFFFF, current platform don't set related GPIO.
#
  gOemSkuTokenSpaceGuid.PcdOemSkuAssertPostGPIO|0x01010014|UINT32|0x00000204
  gOemSkuTokenSpaceGuid.PcdOemSkuAssertPostGPIOValue|0x0|UINT32|0x00000205

  gOemSkuTokenSpaceGuid.PcdOemSkuBmcPciePortNumber|0xFF|UINT8|0x00000206
  gOemSkuTokenSpaceGuid.PcdOemSkuUplinkPortIndex|0xFF|UINT8|0x00000207
  gOemSkuTokenSpaceGuid.PcdOemSkuPcieClkReqTableSize|0xFF|UINT8|0x00000227

  #
  # SMBIOS Type 0 - BIOS Information
  #
  gSmbiosTablesTokenSpaceGuid.PcdSmbiosTablesBiosVendor|"Intel Corporation"|VOID*|0x5B000000
  gSmbiosTablesTokenSpaceGuid.PcdSmbiosTablesBiosVersion|"PURLEY CV/CRB BIOS Internal"|VOID*|0x5B000001
  gSmbiosTablesTokenSpaceGuid.PcdSmbiosTablesBiosReleaseDate|"2008-12-23"|VOID*|0x5B000002

  #
  # SMBIOS Type 1 - System Information
  #
  gSmbiosTablesTokenSpaceGuid.PcdSmbiosTablesSystemManufacturer|"Intel Corporation"|VOID*|0x5B010000
  gSmbiosTablesTokenSpaceGuid.PcdSmbiosTablesSystemProductName|"PURLEY"|VOID*|0x5B010001
  gSmbiosTablesTokenSpaceGuid.PcdSmbiosTablesSystemVersion|"1.0"|VOID*|0x5B010002
  gSmbiosTablesTokenSpaceGuid.PcdSmbiosTablesSystemSerialNumber|"UNKNOWN"|VOID*|0x5B010003
  gSmbiosTablesTokenSpaceGuid.PcdSmbiosTablesSystemSkuNumber|"SKU Number"|VOID*|0x5B010004
  gSmbiosTablesTokenSpaceGuid.PcdSmbiosTablesSystemFamily|"Family"|VOID*|0x5B010005

  #
  # SMBIOS Type 2 - Base Board (or Module) Information
  #
  gSmbiosTablesTokenSpaceGuid.PcdSmbiosTablesBaseBoardManufacturer|"Intel Corporation"|VOID*|0x5B020000
  gSmbiosTablesTokenSpaceGuid.PcdSmbiosTablesBaseBoardProductName|"PURLEY"|VOID*|0x5B020001
  gSmbiosTablesTokenSpaceGuid.PcdSmbiosTablesBaseBoardVersion|"E63448-400"|VOID*|0x5B020002
  gSmbiosTablesTokenSpaceGuid.PcdSmbiosTablesBaseBoardSerialNumber|"SPRO03200016"|VOID*|0x5B020003
  gSmbiosTablesTokenSpaceGuid.PcdSmbiosTablesBaseBoardAssetTag|"Base Board Asset Tag"|VOID*|0x5B020004
  gSmbiosTablesTokenSpaceGuid.PcdSmbiosTablesBaseBoardLocationInChassis|"Part Component"|VOID*|0x5B020005

  #
  # SMBIOS Type 3 - System Enclosure or Chassis Information
  #
  gSmbiosTablesTokenSpaceGuid.PcdSmbiosTablesChassisManufacturer|"Intel Corporation"|VOID*|0x5B030000
  gSmbiosTablesTokenSpaceGuid.PcdSmbiosTablesChassisVersion|"0.1"|VOID*|0x5B030001
  gSmbiosTablesTokenSpaceGuid.PcdSmbiosTablesChassisSerialNumber|"UNKNOWN"|VOID*|0x5B030002
  gSmbiosTablesTokenSpaceGuid.PcdSmbiosTablesChassisAssetTag|"Chassis Asset Tag"|VOID*|0x5B030003
  gSmbiosTablesTokenSpaceGuid.PcdSmbiosTablesChassisSkuNumber|"SKU Number"|VOID*|0x5B030004

  #
  # SMBIOS Type 11 - OEM Strings
  #
  gSmbiosTablesTokenSpaceGuid.PcdSmbiosTablesOemString1|"To Be Filled By O.E.M."|VOID*|0x5B0B0001

  #
  # SMBIOS Type 12 - System Configuration Options
  #
  gSmbiosTablesTokenSpaceGuid.PcdSmbiosTablesSysConfigOption1|"To Be Filled By O.E.M."|VOID*|0x5B0C0001

  #
  # SMBIOS Type 14 - Group Associations
  #
  gSmbiosTablesTokenSpaceGuid.PcdSmbiosTableType|0xDD|UINT8|0x5B0D0001

  #
  # SMBIOS Type 27 - Cooling Device
  #
  gSmbiosTablesTokenSpaceGuid.PcdSmbiosTablesCoolingDeviceDescription|"UNKNOWN"|VOID*|0x5B1B0000

  #
  # SMBIOS Type 28 - Temperature Probe
  #
  gSmbiosTablesTokenSpaceGuid.PcdSmbiosTablesTemperatureProbeDescription|"LM78A"|VOID*|0x5B1C0000

  #
  # SMBIOS Type 34 - Management Device
  #
  gSmbiosTablesTokenSpaceGuid.PcdSmbiosTablesManagementDeviceDescription|"UNKNOWN"|VOID*|0x5B220000

  #
  # SMBIOS Type 35 - Management Device Component
  #
  gSmbiosTablesTokenSpaceGuid.PcdSmbiosTablesManagementDeviceComponentDescription|"To Be Filled By O.E.M."|VOID*|0x5B230000

  #
  # SMBIOS Type 39 - System Power Supply
  #
  gSmbiosTablesTokenSpaceGuid.PcdSmbiosTablesSystemPowerSupplyLocation|"To Be Filled By O.E.M."|VOID*|0x5B270000
  gSmbiosTablesTokenSpaceGuid.PcdSmbiosTablesSystemPowerSupplyDeviceName|"To Be Filled By O.E.M."|VOID*|0x5B270001
  gSmbiosTablesTokenSpaceGuid.PcdSmbiosTablesSystemPowerSupplyManufacturer|"To Be Filled By O.E.M."|VOID*|0x5B270002
  gSmbiosTablesTokenSpaceGuid.PcdSmbiosTablesSystemPowerSupplySerialNumber|"To Be Filled By O.E.M."|VOID*|0x5B270003
  gSmbiosTablesTokenSpaceGuid.PcdSmbiosTablesSystemPowerSupplyAssetTagNumber|"To Be Filled By O.E.M."|VOID*|0x5B270004
  gSmbiosTablesTokenSpaceGuid.PcdSmbiosTablesSystemPowerSupplyModelPartNumber|"To Be Filled By O.E.M."|VOID*|0x5B270005
  gSmbiosTablesTokenSpaceGuid.PcdSmbiosTablesSystemPowerSupplyRevisionLevel|"To Be Filled By O.E.M."|VOID*|0x5B270006

#
# UBA_END
#
# APTIOV_SERVER_OVERRIDE_RC_START
#  gPlatformTokenSpaceGuid.PcdSetupRefreshAllBootOption|TRUE|BOOLEAN|0x300000A9
# APTIOV_SERVER_OVERRIDE_RC_END
  gPlatformTokenSpaceGuid.PcdBdsBootAllOptions|FALSE|BOOLEAN|0x300000AA
  gPlatformTokenSpaceGuid.PcdBdsSetShellFirst|FALSE|BOOLEAN|0x300000AB
  gPlatformModuleTokenSpaceGuid.PcdBootState|TRUE|BOOLEAN|0x300000AC
# APTIOV_SERVER_OVERRIDE_RC_START: Fall Back to default Memory Map once Memory Limit is reached.
  gOemSkuTokenSpaceGuid.PcdAvailableMemoryBelow4G|0x80000000|UINT32|0x00000208
# APTIOV_SERVER_OVERRIDE_RC_END: Fall Back to default Memory Map once Memory Limit is reached.
  gPlatformModuleTokenSpaceGuid.PcdQuietBootFlag|TRUE|BOOLEAN|0x300000AD
# APTIOV_SERVER_OVERRIDE_RC_START
# gCpPlatIpmiTokenSpaceGuid.PcdIpmiIoBaseAddress|0xCA2|UINT16|0x10000022
# gCpPlatIpmiTokenSpaceGuid.PcdIpmiSmmIoBaseAddress|0xCA4|UINT16|0x10000023
# APTIOV_SERVER_OVERRIDE_RC_END
  gCpPlatIpmiTokenSpaceGuid.PcdSioMailboxBaseAddress|0x600|UINT32|0x10000021
# APTIOV_SERVER_OVERRIDE_RC_START
# gCpPlatIpmiTokenSpaceGuid.PcdFRB2EnabledFlag|TRUE|BOOLEAN|0x10000030
# APTIOV_SERVER_OVERRIDE_RC_END
  gPlatformModuleTokenSpaceGuid.PcdCustomerHotkeySupport|FALSE|BOOLEAN|0x300000AE
  gPlatformModuleTokenSpaceGuid.PcdTpmPendingPpiRequestFlag|FALSE|BOOLEAN|0x80000009
  gPlatformTokenSpaceGuid.PcdOobPasswordStatus|0x00|UINT8|0x80000029
  gCpPlatIpmiTokenSpaceGuid.PcdIpmiBmcReadyDelayTimer|0|UINT8|0x00000208
  gPlatformModuleTokenSpaceGuid.PcdRsaSystemModeCheck|FALSE|BOOLEAN|0x300000AF
  gPlatformTokenSpaceGuid.PcdAstMailBoxDevice|0|UINT16|0x300000B0
  gPlatformModuleTokenSpaceGuid.PcdCustomerMemoryTest|FALSE|BOOLEAN|0x300000B1

[PcdsFixedAtBuild, PcdsPatchableInModule, PcdsDynamic, PcdsDynamicEx]
  gCpPlatTokenSpaceGuid.PcdWheaLogFvBase|0xFFEA0000|UINT32|0x40000007

[PcdsDynamic, PcdsDynamicEx]
  gCpPlatTokenSpaceGuid.PcdUefiOptimizedBoot|FALSE|BOOLEAN|0x10000026
# APTIOV_SERVER_OVERRIDE_RC_START
# gCpPlatTokenSpaceGuid.PcdUefiOptimizedBootEx|FALSE|BOOLEAN|0x10000024
# APTIOV_SERVER_OVERRIDE_RC_END
  gCpPlatTokenSpaceGuid.PcdUefiWindowsInt10Workaround|FALSE|BOOLEAN|0x10000025
  # HDA Verb Table
  gPlatformModuleTokenSpaceGuid.PcdHdaVerbTable|0|UINT32|0x10000027
  gPlatformModuleTokenSpaceGuid.PcdHdaVerbTable2|0|UINT32|0x10000028
  gPlatformModuleTokenSpaceGuid.PcdCommonHdaVerbTable1|0|UINT32|0x10000029
  gPlatformModuleTokenSpaceGuid.PcdCommonHdaVerbTable2|0|UINT32|0x1000002A
  gPlatformModuleTokenSpaceGuid.PcdCommonHdaVerbTable3|0|UINT32|0x1000002B

[PcdsFixedAtBuild]
#
#                Flash map related PCD.
#
# Note: most values here are overridden in the .fdf file
#
#
# Note: FlashNv PCD naming conventions are as follows:
#
#       PcdFlash*Base is an address, usually in the range of 0xf* of FD's, note change in FDF spec
#       PcdFlash*Size is a hex count of the length of the FD or FV
#       All Fv will have the form 'PcdFlashFv', and all Fd will have the form 'PcdFlashFd'
#
#       Also all values will have a PCD assigned so that they can be used in the system, and
#       the FlashMap edit tool can be used to change the values here, without effecting the code.
#       This requires all code to only use the PCD tokens to recover the values.
#


# PCD's that are for the whole SPI part

# Size and Base of the SPI flash in memory,  Base = TOM - SPI Size
gCpPlatFlashTokenSpaceGuid.PcdSpiSize                            |0x00100000 |UINT32|0x50000100
gCpPlatFlashTokenSpaceGuid.PcdSpiBase                            |0xFF000000 |UINT32|0x50000101

#Block size of SPI
gCpPlatFlashTokenSpaceGuid.PcdFlashBlockSize                      |0x00010000 |UINT32|0x50000102


# Size and Base of BIOS in memory, Base is TOM - Bios size
gCpPlatFlashTokenSpaceGuid.PcdBiosSize                            |0x00800000 |UINT32|0x50000103
gCpPlatFlashTokenSpaceGuid.PcdBiosBase                            |0xFF800000 |UINT32|0x50000104

#AJW rename this to be more in keeping with the function
gCpPlatFlashTokenSpaceGuid.PcdFlashAreaBase                       |0xfff00000 |UINT32|0x50000105



# for PeiSec FD


gCpPlatFlashTokenSpaceGuid.PcdFlashFdSecPeiBase                   |0x00000000 |UINT32|0x50000211
gCpPlatFlashTokenSpaceGuid.PcdFlashFdSecPeiSize                   |0x00100000 |UINT32|0x50000212

gCpPlatFlashTokenSpaceGuid.PcdFlashFvIbb2Offset                   |0x00300000 |UINT32|0x5000022B
gCpPlatFlashTokenSpaceGuid.PcdFlashFvMrcNormalSize                |0x00100000 |UINT32|0x50000221
gCpPlatFlashTokenSpaceGuid.PcdFlashFvMrcNormalBase                |0x00000000 |UINT32|0x50000222
gCpPlatFlashTokenSpaceGuid.PcdFlashFvMrcCpxSize                   |0x00100000 |UINT32|0x50000223
gCpPlatFlashTokenSpaceGuid.PcdFlashFvMrcCpxBase                   |0x00000000 |UINT32|0x50000224
gCpPlatFlashTokenSpaceGuid.PcdFlashFvMrcSize                      |0x00100000 |UINT32|0x50000225
gCpPlatFlashTokenSpaceGuid.PcdFlashFvMrcBase                      |0x00000000 |UINT32|0x50000226
gCpPlatFlashTokenSpaceGuid.PcdFlashFvPreMemCpxSize                |0x00100000 |UINT32|0x50000227
gCpPlatFlashTokenSpaceGuid.PcdFlashFvPreMemCpxBase                |0x00000000 |UINT32|0x50000228
gCpPlatFlashTokenSpaceGuid.PcdFlashFvPreMemSize                   |0x00100000 |UINT32|0x50000229
gCpPlatFlashTokenSpaceGuid.PcdFlashFvPreMemBase                   |0x00000000 |UINT32|0x5000022A

#Microcode is in SocketPkg

gCpPlatFlashTokenSpaceGuid.PcdFlashFvAcmHeaderSize               |0x00100000 |UINT32|0x50000231
gCpPlatFlashTokenSpaceGuid.PcdFlashFvAcmHeaderBase               |0x00000000 |UINT32|0x50000232

gCpPlatFlashTokenSpaceGuid.PcdFlashFvAcmRegionSize               |0x00100000 |UINT32|0x50000233
gCpPlatFlashTokenSpaceGuid.PcdFlashFvAcmRegionBase               |0x00000000 |UINT32|0x50000234
gCpPlatFlashTokenSpaceGuid.PcdFlashFvAcmRegionOffset             |0x00000000 |UINT32|0x50000235

gCpPlatFlashTokenSpaceGuid.PcdFlashFvPeiPolicySize                |0x00100000 |UINT32|0x50000241
gCpPlatFlashTokenSpaceGuid.PcdFlashFvPeiPolicyBase                |0x00000000 |UINT32|0x50000242

gCpPlatFlashTokenSpaceGuid.PcdFlashFvAcmSize                      |0x00100000 |UINT32|0x50000251
gCpPlatFlashTokenSpaceGuid.PcdFlashFvAcmBase                      |0x00000000 |UINT32|0x50000252

gCpPlatFlashTokenSpaceGuid.PcdFlashFvS3mSize                      |0x00100000 |UINT32|0x50000253
gCpPlatFlashTokenSpaceGuid.PcdFlashFvS3mBase                      |0x00000000 |UINT32|0x50000254

gCpPlatFlashTokenSpaceGuid.PcdFlashFvS3mRegionSize                |0x00100000 |UINT32|0x50000255
gCpPlatFlashTokenSpaceGuid.PcdFlashFvS3mRegionBase                |0x00000000 |UINT32|0x50000256

gCpPlatFlashTokenSpaceGuid.PcdFlashFvSecPeiBase                   |0x00000000 |UINT32|0x50000260
gCpPlatFlashTokenSpaceGuid.PcdFlashFvSecPeiSize                   |0x00040000 |UINT32|0x50000261

gCpPlatFlashTokenSpaceGuid.PcdFlashFvPostMemoryBase               |0x00000000 |UINT32|0x50000262
gCpPlatFlashTokenSpaceGuid.PcdFlashFvPostMemorySize               |0x00040000 |UINT32|0x50000263

gCpPlatFlashTokenSpaceGuid.PcdFlashFvFspSBase                   |0x00000000 |UINT32|0x50000264
gCpPlatFlashTokenSpaceGuid.PcdFlashFvFspSSize                   |0x00040000 |UINT32|0x50000265

gCpPlatFlashTokenSpaceGuid.PcdFlashFvFspSCpxBase                   |0x00000000 |UINT32|0x50000266
gCpPlatFlashTokenSpaceGuid.PcdFlashFvFspSCpxSize                   |0x00040000 |UINT32|0x50000267

# for Main FD


gCpPlatFlashTokenSpaceGuid.PcdFlashFdMainBase                      |0xfff00000 |UINT32|0x50000300
gCpPlatFlashTokenSpaceGuid.PcdFlashFdMainSize                      |0x00400000 |UINT32|0x50000301

gCpPlatFlashTokenSpaceGuid.PcdFlashFvMainSize                      |0x00200000 |UINT32|0x50000311
gCpPlatFlashTokenSpaceGuid.PcdFlashFvMainBase                      |0xFF820000 |UINT32|0x50000312
gCpPlatFlashTokenSpaceGuid.PcdFlashFvMainOffset                    |0x00000000 |UINT32|0x50000315

gCpPlatFlashTokenSpaceGuid.PcdVpdBaseOffset                    |0x00000000 |UINT32|0x50000316
gCpPlatFlashTokenSpaceGuid.PcdVpdBaseSize                      |0x00000000 |UINT32|0x50000317

gCpPlatFlashTokenSpaceGuid.PcdFlashFvMainSizeCpx                   |0x00000000 |UINT32|0x50000313
gCpPlatFlashTokenSpaceGuid.PcdFlashFvMainBaseCpx                   |0x00000000 |UINT32|0x50000314

gCpPlatFlashTokenSpaceGuid.PcdFlashFvOemLogoSize                   |0x00200000 |UINT32|0x50000321
gCpPlatFlashTokenSpaceGuid.PcdFlashFvOemLogoBase                   |0xFF820000 |UINT32|0x50000322
gCpPlatFlashTokenSpaceGuid.PcdFlashFvOemLogoOffset                 |0x00000000 |UINT32|0x50000323

gCpPlatFlashTokenSpaceGuid.PcdFlashFvOaSize                        |0x00200000 |UINT32|0x50000331
gCpPlatFlashTokenSpaceGuid.PcdFlashFvOaBase                        |0xFF820000 |UINT32|0x50000332
gCpPlatFlashTokenSpaceGuid.PcdFlashFvOaOffset                      |0x00000000 |UINT32|0x50000333

gCpPlatFlashTokenSpaceGuid.PcdFlashFvWheaSize                      |0x00200000 |UINT32|0x50000341
gCpPlatFlashTokenSpaceGuid.PcdFlashFvWheaBase                      |0xFF820000 |UINT32|0x50000342
gCpPlatFlashTokenSpaceGuid.PcdFlashFvWheaOffset                    |0xFF820000 |UINT32|0x50000343

gCpPlatFlashTokenSpaceGuid.PcdFlashFvNvStorageEventLogSize         |0x00200000 |UINT32|0x50000351
gCpPlatFlashTokenSpaceGuid.PcdFlashFvNvStorageEventLogBase         |0xFF820000 |UINT32|0x50000352
gCpPlatFlashTokenSpaceGuid.PcdFlashFvNvStorageEventLogOffset       |0x00000000 |UINT32|0x50000353

gCpPlatFlashTokenSpaceGuid.PcdFlashFvSinitHeaderSize               |0x00200000 |UINT32|0x50000361
gCpPlatFlashTokenSpaceGuid.PcdFlashFvSinitHeaderBase               |0xFF820000 |UINT32|0x50000362

gCpPlatFlashTokenSpaceGuid.PcdFlashFvMainPolicySize                |0x00200000 |UINT32|0x50000371
gCpPlatFlashTokenSpaceGuid.PcdFlashFvMainPolicyBase                |0xFF820000 |UINT32|0x50000372

gCpPlatFlashTokenSpaceGuid.PcdFlashFvAcmSinitSize                  |0x00200000 |UINT32|0x50000381
gCpPlatFlashTokenSpaceGuid.PcdFlashFvAcmSinitBase                  |0xFF820000 |UINT32|0x50000382

#gCpPlatFlashTokenSpaceGuid.PcdPTUFlashAreaBaseAddress             |0x00000000 |UINT32|0x50000391
#gCpPlatFlashTokenSpaceGuid.PcdMEFlashAreaBaseAddress              |0x00000000 |UINT32|0x50000392

## This PCD specifies the size of the physical device containing the BIOS, SMBIOS will use it.

gCpPlatFlashTokenSpaceGuid.PcdFlashBackupRegionBase                |0xFF800000 |UINT32|0x50000001
gCpPlatFlashTokenSpaceGuid.PcdFlashBackupRegionSize                |0x00000000 |UINT32|0x50000002

gCpPlatFlashTokenSpaceGuid.PcdFlashFreeSpaceBase                  |0x00000000 |UINT32|0x50000383
gCpPlatFlashTokenSpaceGuid.PcdFlashFreeSpaceSize                  |0x00000000 |UINT32|0x50000384

