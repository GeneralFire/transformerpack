/** @file

  @copyright
  INTEL CONFIDENTIAL
  Copyright 1999 - 2020 Intel Corporation. <BR>

  The source code contained or described herein and all documents related to the
  source code ("Material") are owned by Intel Corporation or its suppliers or
  licensors. Title to the Material remains with Intel Corporation or its suppliers
  and licensors. The Material may contain trade secrets and proprietary    and
  confidential information of Intel Corporation and its suppliers and licensors,
  and is protected by worldwide copyright and trade secret laws and treaty
  provisions. No part of the Material may be used, copied, reproduced, modified,
  published, uploaded, posted, transmitted, distributed, or disclosed in any way
  without Intel's prior express written permission.

  No license under any patent, copyright, trade secret or other intellectual
  property right is granted to or conferred upon you by disclosure or delivery
  of the Materials, either expressly, by implication, inducement, estoppel or
  otherwise. Any license under such intellectual property rights must be
  express and approved by Intel in writing.

  Unless otherwise agreed by Intel in writing, you may not remove or alter
  this notice or any other notice embedded in Materials by Intel or
  Intel's suppliers or licensors in any way.
**/

#include <IioSetupDefinitions.h>
#include "IioHfrUtils.hfr"

#define VFR_FORMID_IIO_PERF_CONFIG 0x50

// APTIOV_SERVER_OVERRIDE_RC_START : Set default value based on AMI PCI 4G decode SDL options.
#include "Token.h"
// APTIOV_SERVER_OVERRIDE_RC_END : Set default value based on AMI PCI 4G decode SDL options.
form formid = VFR_FORMID_IIO,
      title   = STRING_TOKEN(STR_IIO_TITLE);

      subtitle text = STRING_TOKEN(STR_IIO_CONFIG_FORM_TITLE);
      subtitle text = STRING_TOKEN(STR_HORIZONTAL_LINE);
      subtitle text = STRING_TOKEN(STR_NULL_STRING);
      //
      // Jump to IIO Configuration Form
      //

      suppressif ideqval SOCKET_IIO_CONFIGURATION.IioPresent[0] == 0;
          goto VFR_FORMID_IIO0,
              prompt  = STRING_TOKEN(STR_IIO0_CONFIG_FORM_TITLE),
              help    = STRING_TOKEN(STR_NULL_STRING);
      endif;

#if MAX_SOCKET > 1

        suppressif ideqval SOCKET_IIO_CONFIGURATION.IioPresent[1] == 0;
            goto VFR_FORMID_IIO1,
                prompt  = STRING_TOKEN(STR_IIO1_CONFIG_FORM_TITLE),
                help    = STRING_TOKEN(STR_NULL_STRING);
        endif;
#endif


#if MAX_SOCKET > 2

        suppressif ideqval SOCKET_IIO_CONFIGURATION.IioPresent[2] == 0;
            goto VFR_FORMID_IIO2,
                prompt  = STRING_TOKEN(STR_IIO2_CONFIG_FORM_TITLE),
                help    = STRING_TOKEN(STR_NULL_STRING);
        endif;
#endif


#if MAX_SOCKET > 3

        suppressif ideqval SOCKET_IIO_CONFIGURATION.IioPresent[3] == 0;
            goto VFR_FORMID_IIO3,
                prompt  = STRING_TOKEN(STR_IIO3_CONFIG_FORM_TITLE),
                help    = STRING_TOKEN(STR_NULL_STRING);
        endif;
#endif

        //
        // Jump to IOAT Configuration Form
        goto VFR_FORMID_IOAT_CONFIG,
            prompt  = STRING_TOKEN(STR_IIO_IOAT_FORM),
            help    = STRING_TOKEN(STR_IIO_IOAT_FORM_HELP);

        suppressif NOT ideqvallist SOCKET_COMMONRC_CONFIGURATION.CpuType == CPU_SKX CPU_CLX CPU_CPX;
            //
            // Jump to IIO IOAPIC Configuration Form
            //
            goto VFR_FORMID_IIO_IOAPIC,
                prompt  = STRING_TOKEN(STR_IIO_IOAPIC_FORM_TITLE),
                help    = STRING_TOKEN(STR_IIO_IOAPIC_FORM_HELP);
        endif;

        //
        // Jump to each PCI-E slot oprom Form
        //
        goto VFR_FORMID_IIO_PCIE_SLOT,
            prompt  = STRING_TOKEN(STR_IIO_PCIE_SLOT_FORM_TITLE),
            help    = STRING_TOKEN(STR_IIO_PCIE_SLOT_FORM_HELP);

        //
        // Jump to VT-d Form
        //
        suppressif TRUE;
            checkbox varid    = SOCKET_IIO_CONFIGURATION.VtdAcsWa,
                prompt   = STRING_TOKEN(STR_NULL_STRING),
                help     = STRING_TOKEN(STR_NULL_STRING),
                // Flags behavior for checkbox is overloaded so that it equals
                // a DEFAULT value.  1 = ON, 0 = off
                flags    = CHECKBOX_DEFAULT | CHECKBOX_DEFAULT_MFG,
            endcheckbox;
        endif;

        suppressif ideqval SOCKET_IIO_CONFIGURATION.VtdAcsWa == 0x0;
            goto VFR_FORMID_VTD,
                prompt  = STRING_TOKEN(STR_IIO_VTD_CFG_FORM_TITLE),
                help    = STRING_TOKEN(STR_IIO_VTD_CFG_FORM_HELP);
        endif;

        goto VFR_FORMID_VMD,
            prompt  = STRING_TOKEN(STR_IIO_VMD_CFG_FORM_TITLE),
            help    = STRING_TOKEN(STR_IIO_VMD_CFG_FORM_HELP);

        goto VFR_FORMID_PCIEAIC,
            prompt  = STRING_TOKEN(STR_IIO_PCIEAIC_CFG_FORM_TITLE),
            help    = STRING_TOKEN(STR_IIO_PCIEAIC_CFG_FORM_HELP);

#if FixedPcdGetBool (PcdBiosDfxKnobEnabled)
        goto VFR_FORMID_IIO_DFX_CONFIG,
            prompt  = STRING_TOKEN(STR_IIO_DFX_CFG_FORM_TITLE),
            help    = STRING_TOKEN(STR_IIO_DFX_CFG_FORM_HELP);
#endif

        goto VFR_FORMID_IIO_PERF_CONFIG,
            prompt  = STRING_TOKEN(STR_IIO_GLOBAL_PERF_TUNING_FORM_TITLE),
            help    = STRING_TOKEN(STR_IIO_GLOBAL_PERF_TUNING_FORM_HELP);

        //
        // PCI Express Global Options start
        //
        subtitle text = STRING_TOKEN(STR_NULL_STRING);
        subtitle text = STRING_TOKEN(STR_PCIE_GLOBAL_OPTIONS);
        subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

        //
        // Add enabling option for retimer bug workaround
        //
        suppressif NOT ideqval SOCKET_COMMONRC_CONFIGURATION.CpuType == CPU_ICXSP;
            oneof varid     = SOCKET_IIO_CONFIGURATION.Xppdef,
                prompt      = STRING_TOKEN(STR_PCI_XPPDEF_PROMPT),
                help        = STRING_TOKEN(STR_PCI_XPPDEF_HELP),
                option text = STRING_TOKEN(STR_NO),   value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
                option text = STRING_TOKEN(STR_YES),  value = 1, flags = RESET_REQUIRED;
            endoneof;
        endif;

        //
        // PCI 64-Bit Resource Allocation Support
        //
      // APTIOV_SERVER_OVERRIDE_RC_START : Suppress control to use Above4GDecode from AMI PCI bus driver
      suppressif TRUE;
        oneof varid     = SOCKET_IIO_CONFIGURATION.Pci64BitResourceAllocation,
            prompt      = STRING_TOKEN(STR_PCI_64BIT_RESOURCE_ALLOCATION_PROMPT),
            help        = STRING_TOKEN(STR_PCI_64BIT_RESOURCE_ALLOCATION_HELP),
// APTIOV_SERVER_OVERRIDE_RC_START : Set default value based on AMI PCI 4G decode SDL options.
#if (ABOVE_4G_PCI_DECODE & ABOVE_4G_PCI_DECODE_DEFAULT_VALUE)
            option text = STRING_TOKEN(STR_NO),   value = 0, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_YES),  value = 1, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
#else
          option text = STRING_TOKEN(STR_NO),   value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
          option text = STRING_TOKEN(STR_YES),  value = 1, flags = RESET_REQUIRED ;
#endif
// APTIOV_SERVER_OVERRIDE_RC_END : Set default value based on AMI PCI 4G decode SDL options.
        endoneof;
      endif;
      // APTIOV_SERVER_OVERRIDE_RC_END : Suppress control to use Above4GDecode from AMI PCI bus driver

        oneof varid = SOCKET_IIO_CONFIGURATION.PcieBiosTrainEnable,
            prompt  = STRING_TOKEN(STR_PCIE_BIOS_TRAIN_PCIE),
            help    = STRING_TOKEN(STR_PCIE_BIOS_TRAIN_PCIE_HELP),
            option text = STRING_TOKEN(STR_NO),       value = 0, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_YES),      value = 1, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
        endoneof;

        oneof varid = SOCKET_IIO_CONFIGURATION.NtbLinkBiosTrainEn,
            prompt  = STRING_TOKEN(STR_PCIE_BIOS_TRAIN_NTB_LINK),
            help    = STRING_TOKEN(STR_PCIE_BIOS_TRAIN_NTB_LINK_HELP),
            option text = STRING_TOKEN(STR_NO),       value = IIO_OPTION_DISABLE, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_YES),      value = IIO_OPTION_ENABLE, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_AUTO),     value = IIO_OPTION_AUTO, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
        endoneof;

        oneof varid = SOCKET_IIO_CONFIGURATION.DelayBeforePCIeLinkTraining,
            prompt  = STRING_TOKEN(STR_DELAY_BEFORE_LINK_TRAINING),
            help    = STRING_TOKEN(STR_PCIE_BIOS_TRAIN_NTB_LINK_HELP),
            option text = STRING_TOKEN(STR_DELAY_BEFORE_LINK_TRAINING_DISABLED), value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
            option text = STRING_TOKEN(STR_DELAY_BEFORE_LINK_TRAINING_100MS), value = 100, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_DELAY_BEFORE_LINK_TRAINING_300MS), value = 300, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_DELAY_BEFORE_LINK_TRAINING_500MS), value = 500, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_DELAY_BEFORE_LINK_TRAINING_1S), value = 1000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_DELAY_BEFORE_LINK_TRAINING_2S), value = 2000, flags = RESET_REQUIRED;
        endoneof;

        oneof varid     = SOCKET_IIO_CONFIGURATION.PcieHotPlugEnable,
            prompt          = STRING_TOKEN(STR_PCIE_HOTPLUG_ENABLE_PROMPT),
            help            = STRING_TOKEN(STR_PCIE_HOTPLUG_ENABLE_HELP),
            option text     = STRING_TOKEN(STR_NO),  value = IIO_OPTION_DISABLE, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
            option text     = STRING_TOKEN(STR_YES), value = IIO_OPTION_ENABLE, flags = RESET_REQUIRED;
        endoneof;

        oneof varid = SOCKET_IIO_CONFIGURATION.PcieAcpiHotPlugEnable,
            prompt      = STRING_TOKEN(STR_PCIE_ACPI_HOTPLUG_ENABLE_PROMPT),
            help        = STRING_TOKEN(STR_PCIE_ACPI_HOTPLUG_ENABLE_HELP),
            option text = STRING_TOKEN(STR_NO),       value = PCIE_ACPI_HOTPLUG_DISABLE, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
            option text = STRING_TOKEN(STR_YES),      value = PCIE_ACPI_HOTPLUG_ENABLE, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_PER_PORT), value = PCIE_ACPI_HOTPLUG_PER_PORT, flags = RESET_REQUIRED;
        endoneof;
//
// 1404960405 Direct Memory Access Engine (CDMA) Multicast
//
        //
        // CbDma MultiCast Configuration
        //
        oneof varid = SOCKET_IIO_CONFIGURATION.CbDmaMultiCastEnable,
            prompt  = STRING_TOKEN(STR_CBDMA_MULTICAST_ENABLE_PROMPT),
            help    = STRING_TOKEN(STR_CBDMA_MULTICAST_ENABLE_HELP),
            option text = STRING_TOKEN(STR_NO),     value = 0, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_YES),    value = 1, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
        endoneof;

        //
        // MultiCast Configuration
        //
        oneof varid = SOCKET_IIO_CONFIGURATION.MultiCastEnable,
            prompt  = STRING_TOKEN(STR_MULTICAST_ENABLE_PROMPT),
            help    = STRING_TOKEN(STR_MULTICAST_ENABLE_HELP),
            option text = STRING_TOKEN(STR_NO),     value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
            option text = STRING_TOKEN(STR_YES),    value = 1, flags = RESET_REQUIRED;
        endoneof;

        //
        // MultiCast Base Address Selection
        //
        suppressif ideqval SOCKET_IIO_CONFIGURATION.MultiCastEnable == 0;
            //
            // MC_BASE_ADDRESS range selection choice: above 4G or below
            //
            oneof varid = SOCKET_IIO_CONFIGURATION.McastBaseAddrRegion,
                prompt  = STRING_TOKEN(STR_MCAST_BASEADDRESS_REGION),
                help    = STRING_TOKEN(STR_MCAST_BASEADDRESS_REGION_HELP),
                option text = STRING_TOKEN(STR_AUTO), value = 0,  flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
                option text = STRING_TOKEN(STR_LOW_4G),  value = 1,  flags = RESET_REQUIRED;
                //option text = STRING_TOKEN(STR_ABOVE_4G), value = 2,  flags = RESET_REQUIRED;
            endoneof;

            //
            // MC_INDEX_POSITION selection choice
            //
            oneof varid = SOCKET_IIO_CONFIGURATION.McastIndexPosition,
                prompt  = STRING_TOKEN(STR_MC_INDEX_POSITION),
                help    = STRING_TOKEN(STR_MC_INDEX_POSITION_HELP),
                option text = STRING_TOKEN(STR_MC_INDEX_POS_12), value = 0xC,  flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
                option text = STRING_TOKEN(STR_MC_INDEX_POS_20), value = 0x14,  flags = RESET_REQUIRED;
            endoneof;

            //
            // MC_NUM_GROUP selection. Actual programmed value in register is (Num_Group-1)
            //
            oneof varid = SOCKET_IIO_CONFIGURATION.McastNumGroup,
                prompt  = STRING_TOKEN(STR_MCAST_NUM_GROUP),
                help    = STRING_TOKEN(STR_MCAST_NUM_GROUP_HELP),
                option text = STRING_TOKEN(STR_MC_NUM_GROUP_1), value = 0x1,  flags = RESET_REQUIRED;
                option text = STRING_TOKEN(STR_MC_NUM_GROUP_8), value = 0x8,  flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
                option text = STRING_TOKEN(STR_MC_NUM_GROUP_32),value = 0x20, flags = RESET_REQUIRED;
                option text = STRING_TOKEN(STR_MC_NUM_GROUP_64),value = 0x40, flags = RESET_REQUIRED;
            endoneof;
        endif;

        //
        // 4927752: PERFCTRLSTS_0_IIO_PCIE_EG.nosnoopoprden=0.
        //
        oneof varid    = SOCKET_IIO_CONFIGURATION.NoSnoopRdCfg,
            prompt   = STRING_TOKEN(STR_NOSNOOP_RD_PROMPT),
            help     = STRING_TOKEN(STR_NOSNOOP_RD_HELP),
            option text = STRING_TOKEN(STR_DISABLE),      value = 0,  flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
            option text = STRING_TOKEN(STR_ENABLE),       value = 1,  flags = RESET_REQUIRED;
        endoneof;

        oneof varid    = SOCKET_IIO_CONFIGURATION.NoSnoopWrCfg,
            prompt   = STRING_TOKEN(STR_NOSNOOP_WR_PROMPT),
            help     = STRING_TOKEN(STR_NOSNOOP_WR_HELP),
            option text = STRING_TOKEN(STR_DISABLE),      value = 0,  flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_ENABLE),       value = 1,  flags = RESET_REQUIRED| MANUFACTURING | DEFAULT;
        endoneof;
        oneof varid    = SOCKET_IIO_CONFIGURATION.MaxReadCompCombSize,
            prompt   = STRING_TOKEN(STR_MAXREADCOMPCOMBSIZE_PROMPT),
            help     = STRING_TOKEN(STR_MAXREADCOMPCOMBSIZE_HELP),
            option text     = STRING_TOKEN(STR_MAXREADCOMPCOMBSIZE_MINIMUM),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
            option text     = STRING_TOKEN(STR_MAXREADCOMPCOMBSIZE_MAXIMUM),    value = 1, flags = RESET_REQUIRED;
        endoneof;

        oneof varid     = SOCKET_IIO_CONFIGURATION.ProblematicPort,
            prompt          = STRING_TOKEN(STR_PCIE_PROBLEMATIC_PORT_PROMPT),
            help            = STRING_TOKEN(STR_PCIE_PROBLEMATIC_PORT_HELP),
            option text     = STRING_TOKEN(STR_DISABLE),            value = 0x0000, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
            option text     = STRING_TOKEN(STR_NP_PROBLEMATIC),     value = 0x0001, flags = RESET_REQUIRED;
            option text     = STRING_TOKEN(STR_P_PROBLEMATIC),      value = 0x0002, flags = RESET_REQUIRED;
        endoneof;

        oneof varid     = SOCKET_IIO_CONFIGURATION.DmiAllocatingFlow,
            prompt          = STRING_TOKEN(STR_DMI_ALLOC_FLOW_PROMPT),
            help            = STRING_TOKEN(STR_DMI_ALLOC_FLOW_HELP),
            option text     = STRING_TOKEN(STR_NON_ALLOCATING_WRITES),      value = 0x0000, flags = RESET_REQUIRED;
            option text     = STRING_TOKEN(STR_ALLOCATING_WRITES),          value = 0x0001, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        endoneof;

        oneof varid     = SOCKET_IIO_CONFIGURATION.PcieAllocatingFlow,
            prompt          = STRING_TOKEN(STR_PCIE_ALLOC_FLOW_PROMPT),
            help            = STRING_TOKEN(STR_PCIE_ALLOC_FLOW_HELP),
            option text     = STRING_TOKEN(STR_NON_ALLOCATING_WRITES),      value = 0x0000, flags = RESET_REQUIRED;
            option text     = STRING_TOKEN(STR_ALLOCATING_WRITES),          value = 0x0001, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        endoneof;

        oneof varid    = SOCKET_IIO_CONFIGURATION.HaltOnDmiDegraded,
            prompt   = STRING_TOKEN(STR_HALT_ON_DMI),
            help     = STRING_TOKEN(STR_HALT_ON_DMI_HELP),
            option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING |RESET_REQUIRED;
            option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
        endoneof;

        oneof varid     = SOCKET_IIO_CONFIGURATION.RxClockWA,
            prompt          = STRING_TOKEN(STR_RXCLK_WA_EN),
            help            = STRING_TOKEN(STR_RXCLK_WA_EN_HELP),
            option text     = STRING_TOKEN(STR_DISABLE),    value = 0, flags = DEFAULT | MANUFACTURING |RESET_REQUIRED;
            option text     = STRING_TOKEN(STR_ENABLE),     value = 1, flags = RESET_REQUIRED;
        endoneof;


        oneof varid     = SOCKET_IIO_CONFIGURATION.GlobalPme2AckTOCtrl,
            prompt          = STRING_TOKEN(STR_IIO_PME2ACK_TIMEOUT_PROMPT),
            help            = STRING_TOKEN(STR_IIO_PME2ACK_TIMEOUT_PROMPT_HELP),
            option text = STRING_TOKEN(STR_IIO_1MS),        value = 0,  flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
            option text = STRING_TOKEN(STR_IIO_10MS),       value = 1,  flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_IIO_50MS),       value = 2,  flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_IIO_TEST_MODE),  value = 3,  flags = RESET_REQUIRED;
        endoneof;

        oneof varid     = SOCKET_IIO_CONFIGURATION.PCUF6Hide,
            prompt      = STRING_TOKEN(STR_PCUF6HIDE),
            help        = STRING_TOKEN(STR_PCUF6HIDE_HELP),
            option text = STRING_TOKEN(STR_DISABLE),  value = 0,  flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
            option text = STRING_TOKEN(STR_ENABLE),   value = 1,  flags = RESET_REQUIRED;
        endoneof;

        oneof varid     = SOCKET_IIO_CONFIGURATION.EN1K,
            prompt      = STRING_TOKEN(STR_EN1K),
            help        = STRING_TOKEN(STR_EN1K_HELP),
            option text = STRING_TOKEN(STR_NO),    value = 0,  flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
            option text = STRING_TOKEN(STR_YES),   value = 1,  flags = RESET_REQUIRED;
        endoneof;

        oneof varid     = SOCKET_IIO_CONFIGURATION.DualCvIoFlow,
            prompt      = STRING_TOKEN(STR_DUAL_CV_IO_FLOW),
            help        = STRING_TOKEN(STR_DUAL_CV_IO_FLOW_HELP),
            option text = STRING_TOKEN(STR_NO),    value = 0,  flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_YES),   value = 1,  flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        endoneof;

        oneof varid     = SOCKET_IIO_CONFIGURATION.CoherentReadPart,
            prompt      = STRING_TOKEN(STR_COHERENTRDPART),
            help        = STRING_TOKEN(STR_COHERENTRD_HELP),
            option text = STRING_TOKEN(STR_RDCURR),    value = 0,  flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
            option text = STRING_TOKEN(STR_PRD),       value = 1,  flags = RESET_REQUIRED;
        endoneof;

        oneof varid     = SOCKET_IIO_CONFIGURATION.CoherentReadFull,
            prompt      = STRING_TOKEN(STR_COHERENTRDFULL),
            help        = STRING_TOKEN(STR_COHERENTRD_HELP),
            option text = STRING_TOKEN(STR_RDCURR),    value = 0,  flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
            option text = STRING_TOKEN(STR_PRD),       value = 1,  flags = RESET_REQUIRED;
        endoneof;

        //
        // HSD 4165823: Completion Timeout Global
        //
        oneof varid = SOCKET_IIO_CONFIGURATION.CompletionTimeoutGlobal,
            prompt  = STRING_TOKEN(STR_IIO_COMPLETION_TIMEOUT_PROMPT_G),
            help    = STRING_TOKEN(STR_IIO_COMPLETION_TIMEOUT_HELP),
            option text = STRING_TOKEN(STR_NO),   value = 0, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_YES),  value = 1, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
        endoneof;

        //
        // Completion Timeout Value
        //
        suppressif ideqval SOCKET_IIO_CONFIGURATION.CompletionTimeoutGlobal == 0;
            oneof varid = SOCKET_IIO_CONFIGURATION.CompletionTimeoutGlobalValue,
                prompt  = STRING_TOKEN(STR_IIO_COMPLETION_TIMEOUT_VALUE_PROMPT_G),
                help    = STRING_TOKEN(STR_IIO_COMPLETION_TIMEOUT_VALUE_HELP),
                option text = STRING_TOKEN(STR_CTO_RANGE_DEF), value = 0,  flags = RESET_REQUIRED;
              suppressif ideqvallist SOCKET_COMMONRC_CONFIGURATION.CpuType == CPU_SKX CPU_CLX CPU_CPX CPU_SNR;
                option text = STRING_TOKEN(STR_CTO_RANGE_A0),  value = 1,  flags = RESET_REQUIRED;
                option text = STRING_TOKEN(STR_CTO_RANGE_A1),  value = 2,  flags = RESET_REQUIRED;
              endif;
                option text = STRING_TOKEN(STR_CTO_RANGE_B0),  value = 5,  flags = RESET_REQUIRED;
                option text = STRING_TOKEN(STR_CTO_RANGE_B1),  value = 6,  flags = RESET_REQUIRED;
                option text = STRING_TOKEN(STR_CTO_RANGE_C0),  value = 9,  flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
                option text = STRING_TOKEN(STR_CTO_RANGE_C1),  value = 10, flags = RESET_REQUIRED;
              suppressif NOT ideqvallist SOCKET_COMMONRC_CONFIGURATION.CpuType == CPU_SKX CPU_CLX CPU_CPX CPU_SNR;
                option text = STRING_TOKEN(STR_CTO_RANGE_D0),  value = 13, flags = RESET_REQUIRED;
                option text = STRING_TOKEN(STR_CTO_RANGE_D1),  value = 14, flags = RESET_REQUIRED;
              endif;
            endoneof;
        endif;

        oneof varid = SOCKET_IIO_CONFIGURATION.PcieGlobalAspm,
            prompt  = STRING_TOKEN(STR_PCIE_PORT_ASPM_PROMPT_G),
            help    = STRING_TOKEN(STR_PCIE_GLOBAL_ASPM_HELP),
//Transformers_JK014***>>
            option text = STRING_TOKEN(STR_NO),           value = PCIE_GLOBAL_ASPM_DISABLE, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
            option text = STRING_TOKEN(STR_PER_PORT),     value = PCIE_GLOBAL_ASPM_PER_PORT, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_L1_ONLY),      value = PCIE_GLOBAL_ASPM_L1_ONLY, flags = RESET_REQUIRED;
//Transformers_JK014***<<   
        endoneof;

        //
        // Only CPX/SKX support Stopand Scream now
        // HSD 5387040: Enabled stop and scream on ADV RAS SKU could cause some issues (links will be disabled)
        //
        suppressif NOT (ideqval SOCKET_COMMONRC_CONFIGURATION.CpuType == CPU_SKX OR
                        ideqval SOCKET_COMMONRC_CONFIGURATION.CpuType == CPU_CLX OR
                        ideqval SOCKET_COMMONRC_CONFIGURATION.CpuType == CPU_CPX) OR
                        ideqval SOCKET_COMMONRC_CONFIGURATION.SystemRasType == ADVANCED_RAS;
            oneof varid = SOCKET_IIO_CONFIGURATION.StopAndScream,
                prompt  = STRING_TOKEN(STR_PCIE_STOP_AND_SCREAM_PROMPT),
                help    = STRING_TOKEN(STR_PCIE_STOP_AND_SCREAM_HELP),
                option text = STRING_TOKEN(STR_NO),      value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
                option text = STRING_TOKEN(STR_YES),     value = 1, flags = RESET_REQUIRED;
            endoneof;
        endif;

        numeric varid = SOCKET_IIO_CONFIGURATION.SnoopResponseHoldOff,
            prompt       = STRING_TOKEN(STR_SNOOP_RESP_PROMT),
            help         = STRING_TOKEN(STR_SNOOP_RESP_HELP),
            flags        = RESET_REQUIRED | DISPLAY_UINT_HEX,
            minimum      = 0,
            maximum      = 0xF,
            step         = 0,
            default      = 0x9, defaultstore = MyStandardDefault,
            default      = 0x9, defaultstore = MyManufactureDefault,
        endnumeric;

        //
        // PCIe Latency Tolerance Reporting (LTR) - not supported in CPX.
        //
        suppressif ideqval SOCKET_COMMONRC_CONFIGURATION.CpuType == CPU_CPX;
          oneof varid     = SOCKET_IIO_CONFIGURATION.PCIe_LTR,
            prompt      = STRING_TOKEN(STR_PCI_LTR_PROMPT),
            help        = STRING_TOKEN(STR_PCI_LTR_HELP),
            option text = STRING_TOKEN(STR_NO),        value = PCIE_LTR_ENABLE_NO, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_YES),       value = PCIE_LTR_ENABLE_YES, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_AUTO),      value = PCIE_LTR_ENABLE_AUTO, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
          endoneof;
        endif;

        oneof varid   = SOCKET_IIO_CONFIGURATION.PcieExtendedTagField,
            prompt      = STRING_TOKEN(STR_PCIE_EXTENDED_TAG_PROMPT),
            help        = STRING_TOKEN(STR_EXTENDED_TAG_HELP),
            option text = STRING_TOKEN(STR_AUTO),      value = 2, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_NO),        value = 0, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_YES),       value = 1, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
        endoneof;

        oneof varid   = SOCKET_IIO_CONFIGURATION.Pcie10bitTag,
            prompt      = STRING_TOKEN(STR_PCIE_10BIT_TAG_PROMPT),
            help        = STRING_TOKEN(STR_10BIT_TAG_HELP),
            option text = STRING_TOKEN(STR_NO),        value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
            option text = STRING_TOKEN(STR_YES),       value = 1, flags = RESET_REQUIRED;
        endoneof;

        oneof varid   = SOCKET_IIO_CONFIGURATION.PCIe_AtomicOpReq,
            prompt        = STRING_TOKEN(STR_PCI_ATOMICOP_PROMPT),
            help          = STRING_TOKEN(STR_PCI_ATOMICOP_HELP),
            option text   = STRING_TOKEN(STR_NO),        value = 0, flags = RESET_REQUIRED;
            option text   = STRING_TOKEN(STR_YES),       value = 1, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
        endoneof;

        //
        // PCIe Max Read Request Size
        //
        oneof varid     = SOCKET_IIO_CONFIGURATION.PcieMaxReadRequestSize,
            prompt      = STRING_TOKEN(STR_PCIE_PORT_MAX_READ_REQUEST_SIZE_PROMPT),
            help        = STRING_TOKEN(STR_PCIE_PORT_MAX_READ_REQUEST_HELP),
            option text = STRING_TOKEN(STR_PCIE_MRRS_AUTO),    value = PCIE_LIB_MRRS_VALUE_AUTO, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
            option text = STRING_TOKEN(STR_PCIE_MRRS_128B),    value = PCIE_LIB_MRRS_128B, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_PCIE_MRRS_256B),    value = PCIE_LIB_MRRS_256B, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_PCIE_MRRS_512B),    value = PCIE_LIB_MRRS_512B, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_PCIE_MRRS_1024B),   value = PCIE_LIB_MRRS_1024B, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_PCIE_MRRS_2048B),   value = PCIE_LIB_MRRS_2048B, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_PCIE_MRRS_4096B),   value = PCIE_LIB_MRRS_4096B, flags = RESET_REQUIRED;
     endoneof;

        oneof varid   = SOCKET_IIO_CONFIGURATION.PciePtm,
            prompt      = STRING_TOKEN(STR_PCIE_PTM_PROMPT),
            help        = STRING_TOKEN(STR_PTM_HELP),
#ifdef ICX_HOST
              option text = STRING_TOKEN(STR_NO),        value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
              option text = STRING_TOKEN(STR_YES),       value = 1, flags = RESET_REQUIRED;
#else // ICX_HOST
              option text = STRING_TOKEN(STR_NO),        value = 0, flags = RESET_REQUIRED;
              option text = STRING_TOKEN(STR_YES),       value = 1, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
#endif // ICX_HOST
        endoneof;

        oneof varid     = SOCKET_IIO_CONFIGURATION.PcieRelaxedOrdering,
            prompt          = STRING_TOKEN(STR_PCIE_RELAXED_ORDERING_PROMPT),
            help            = STRING_TOKEN(STR_PCIE_RELAXED_ORDERING_HELP),
            option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
            option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        endoneof;

        oneof varid     = SOCKET_IIO_CONFIGURATION.PciePhyTestMode,
            prompt          = STRING_TOKEN(STR_PCIE_PHY_TEST_MODE_PROMPT),
            help            = STRING_TOKEN(STR_PCIE_PHY_TEST_MODE_HELP),
            option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
            option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
        endoneof;
    endform;

//
//---------- IIO 0 ------------
//
      form formid = VFR_FORMID_IIO0,
          title   = STRING_TOKEN(STR_IIO0_TITLE);

          suppressif  ideqval SOCKET_IIO_CONFIGURATION.PcieBiosTrainEnable == 0x00;
              oneof varid = SOCKET_IIO_CONFIGURATION.ConfigIOU0[0],
                  prompt  = STRING_TOKEN(STR_PCIE_IOU0_PROMPT),
                  help    = STRING_TOKEN(STR_PCIE_IOUX_HELP_PROMPT),
                  option text = STRING_TOKEN(STR_AUTO),     value = IIO_BIFURCATE_AUTO, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
                  option text = STRING_TOKEN(STR_X4X4X4X4), value = IIO_BIFURCATE_x4x4x4x4, flags = RESET_REQUIRED;
                  option text = STRING_TOKEN(STR_X4X4X8),   value = IIO_BIFURCATE_x4x4xxx8, flags = RESET_REQUIRED;
                  option text = STRING_TOKEN(STR_X8X4X4),   value = IIO_BIFURCATE_xxx8x4x4, flags = RESET_REQUIRED;
                  option text = STRING_TOKEN(STR_X8X8),     value = IIO_BIFURCATE_xxx8xxx8, flags = RESET_REQUIRED;
                  option text = STRING_TOKEN(STR_X16),      value = IIO_BIFURCATE_xxxxxx16, flags = RESET_REQUIRED;
#ifdef SPR_HOST
                    option text = STRING_TOKEN(STR_X2X2X4X8),         value = IIO_BIFURCATE_x2x2x4x8, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X4X2X2X8),         value = IIO_BIFURCATE_x4x2x2x8, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X8X2X2X4),         value = IIO_BIFURCATE_x8x2x2x4, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X8X4X2X2),         value = IIO_BIFURCATE_x8x4x2x2, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X2X2X4X4X4),       value = IIO_BIFURCATE_x2x2x4x4x4, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X4X2X2X4X4),       value = IIO_BIFURCATE_x4x2x2x4x4, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X4X4X2X2X4),       value = IIO_BIFURCATE_x4x4x2x2x4, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X4X4X4X2X2),       value = IIO_BIFURCATE_x4x4x4x2x2, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X2X2X2X2X8),       value = IIO_BIFURCATE_x2x2x2x2x8, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X8X2X2X2X2),       value = IIO_BIFURCATE_x8x2x2x2x2, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X2X2X2X2X4X4),     value = IIO_BIFURCATE_x2x2x2x2x4x4, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X2X2X4X2X2X4),     value = IIO_BIFURCATE_x2x2x4x2x2x4, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X2X2X4X4X2X2),     value = IIO_BIFURCATE_x2x2x4x4x2x2, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X4X2X2X2X2X4),     value = IIO_BIFURCATE_x4x2x2x2x2x4, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X4X2X2X4X2X2),     value = IIO_BIFURCATE_x4x2x2x4x2x2, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X4X4X2X2X2X2),     value = IIO_BIFURCATE_x4x4x2x2x2x2, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X2X2X2X2X2X2X4),   value = IIO_BIFURCATE_x2x2x2x2x2x2x4, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X2X2X2X2X4X2X2),   value = IIO_BIFURCATE_x2x2x2x2x4x2x2, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X2X2X4X2X2X2X2),   value = IIO_BIFURCATE_x2x2x4x2x2x2x2, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X4X2X2X2X2X2X2),   value = IIO_BIFURCATE_x4x2x2x2x2x2x2, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X2X2X2X2X2X2X2X2), value = IIO_BIFURCATE_x2x2x2x2x2x2x2x2, flags = RESET_REQUIRED;
#endif // SPR_HOST

              endoneof;

              suppressif ideqval SOCKET_COMMONRC_CONFIGURATION.CpuType == CPU_SNR OR
                          (ideqval SOCKET_COMMONRC_CONFIGURATION.CpuType == CPU_ICXD AND
                          ideqval SOCKET_COMMONRC_CONFIGURATION.CpuChop == CPU_CHOP_TYPE_LCC);
                  oneof varid = SOCKET_IIO_CONFIGURATION.ConfigIOU1[0],
                      prompt  = STRING_TOKEN(STR_PCIE_IOU1_PROMPT),
                      help    = STRING_TOKEN(STR_PCIE_IOUX_HELP_PROMPT),
                      option text = STRING_TOKEN(STR_AUTO),     value = IIO_BIFURCATE_AUTO, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
                      option text = STRING_TOKEN(STR_X4X4X4X4), value = IIO_BIFURCATE_x4x4x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X8),   value = IIO_BIFURCATE_x4x4xxx8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X4X4),   value = IIO_BIFURCATE_xxx8x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X8),     value = IIO_BIFURCATE_xxx8xxx8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X16),      value = IIO_BIFURCATE_xxxxxx16, flags = RESET_REQUIRED;
#ifdef SPR_HOST
                        option text = STRING_TOKEN(STR_X2X2X4X8),         value = IIO_BIFURCATE_x2x2x4x8, flags = RESET_REQUIRED;
                        option text = STRING_TOKEN(STR_X4X2X2X8),         value = IIO_BIFURCATE_x4x2x2x8, flags = RESET_REQUIRED;
                        option text = STRING_TOKEN(STR_X8X2X2X4),         value = IIO_BIFURCATE_x8x2x2x4, flags = RESET_REQUIRED;
                        option text = STRING_TOKEN(STR_X8X4X2X2),         value = IIO_BIFURCATE_x8x4x2x2, flags = RESET_REQUIRED;
                        option text = STRING_TOKEN(STR_X2X2X4X4X4),       value = IIO_BIFURCATE_x2x2x4x4x4, flags = RESET_REQUIRED;
                        option text = STRING_TOKEN(STR_X4X2X2X4X4),       value = IIO_BIFURCATE_x4x2x2x4x4, flags = RESET_REQUIRED;
                        option text = STRING_TOKEN(STR_X4X4X2X2X4),       value = IIO_BIFURCATE_x4x4x2x2x4, flags = RESET_REQUIRED;
                        option text = STRING_TOKEN(STR_X4X4X4X2X2),       value = IIO_BIFURCATE_x4x4x4x2x2, flags = RESET_REQUIRED;
                        option text = STRING_TOKEN(STR_X2X2X2X2X8),       value = IIO_BIFURCATE_x2x2x2x2x8, flags = RESET_REQUIRED;
                        option text = STRING_TOKEN(STR_X8X2X2X2X2),       value = IIO_BIFURCATE_x8x2x2x2x2, flags = RESET_REQUIRED;
                        option text = STRING_TOKEN(STR_X2X2X2X2X4X4),     value = IIO_BIFURCATE_x2x2x2x2x4x4, flags = RESET_REQUIRED;
                        option text = STRING_TOKEN(STR_X2X2X4X2X2X4),     value = IIO_BIFURCATE_x2x2x4x2x2x4, flags = RESET_REQUIRED;
                        option text = STRING_TOKEN(STR_X2X2X4X4X2X2),     value = IIO_BIFURCATE_x2x2x4x4x2x2, flags = RESET_REQUIRED;
                        option text = STRING_TOKEN(STR_X4X2X2X2X2X4),     value = IIO_BIFURCATE_x4x2x2x2x2x4, flags = RESET_REQUIRED;
                        option text = STRING_TOKEN(STR_X4X2X2X4X2X2),     value = IIO_BIFURCATE_x4x2x2x4x2x2, flags = RESET_REQUIRED;
                        option text = STRING_TOKEN(STR_X4X4X2X2X2X2),     value = IIO_BIFURCATE_x4x4x2x2x2x2, flags = RESET_REQUIRED;
                        option text = STRING_TOKEN(STR_X2X2X2X2X2X2X4),   value = IIO_BIFURCATE_x2x2x2x2x2x2x4, flags = RESET_REQUIRED;
                        option text = STRING_TOKEN(STR_X2X2X2X2X4X2X2),   value = IIO_BIFURCATE_x2x2x2x2x4x2x2, flags = RESET_REQUIRED;
                        option text = STRING_TOKEN(STR_X2X2X4X2X2X2X2),   value = IIO_BIFURCATE_x2x2x4x2x2x2x2, flags = RESET_REQUIRED;
                        option text = STRING_TOKEN(STR_X4X2X2X2X2X2X2),   value = IIO_BIFURCATE_x4x2x2x2x2x2x2, flags = RESET_REQUIRED;
                        option text = STRING_TOKEN(STR_X2X2X2X2X2X2X2X2), value = IIO_BIFURCATE_x2x2x2x2x2x2x2x2, flags = RESET_REQUIRED;
#endif // SPR_HOST

                  endoneof;

                  suppressif ideqval SOCKET_COMMONRC_CONFIGURATION.CpuType == CPU_ICXD;
                      oneof varid = SOCKET_IIO_CONFIGURATION.ConfigIOU2[0],
                          prompt  = STRING_TOKEN(STR_PCIE_IOU2_PROMPT),
                          help    = STRING_TOKEN(STR_PCIE_IOUX_HELP_PROMPT),
                          option text = STRING_TOKEN(STR_AUTO),     value = IIO_BIFURCATE_AUTO, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
                          option text = STRING_TOKEN(STR_X4X4X4X4), value = IIO_BIFURCATE_x4x4x4x4, flags = RESET_REQUIRED;
                          option text = STRING_TOKEN(STR_X4X4X8),   value = IIO_BIFURCATE_x4x4xxx8, flags = RESET_REQUIRED;
                          option text = STRING_TOKEN(STR_X8X4X4),   value = IIO_BIFURCATE_xxx8x4x4, flags = RESET_REQUIRED;
                          option text = STRING_TOKEN(STR_X8X8),     value = IIO_BIFURCATE_xxx8xxx8, flags = RESET_REQUIRED;
                          option text = STRING_TOKEN(STR_X16),      value = IIO_BIFURCATE_xxxxxx16, flags = RESET_REQUIRED;
#ifdef SPR_HOST
                            option text = STRING_TOKEN(STR_X2X2X4X8),         value = IIO_BIFURCATE_x2x2x4x8, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X4X2X2X8),         value = IIO_BIFURCATE_x4x2x2x8, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X8X2X2X4),         value = IIO_BIFURCATE_x8x2x2x4, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X8X4X2X2),         value = IIO_BIFURCATE_x8x4x2x2, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X2X2X4X4X4),       value = IIO_BIFURCATE_x2x2x4x4x4, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X4X2X2X4X4),       value = IIO_BIFURCATE_x4x2x2x4x4, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X4X4X2X2X4),       value = IIO_BIFURCATE_x4x4x2x2x4, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X4X4X4X2X2),       value = IIO_BIFURCATE_x4x4x4x2x2, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X2X2X2X2X8),       value = IIO_BIFURCATE_x2x2x2x2x8, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X8X2X2X2X2),       value = IIO_BIFURCATE_x8x2x2x2x2, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X2X2X2X2X4X4),     value = IIO_BIFURCATE_x2x2x2x2x4x4, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X2X2X4X2X2X4),     value = IIO_BIFURCATE_x2x2x4x2x2x4, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X2X2X4X4X2X2),     value = IIO_BIFURCATE_x2x2x4x4x2x2, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X4X2X2X2X2X4),     value = IIO_BIFURCATE_x4x2x2x2x2x4, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X4X2X2X4X2X2),     value = IIO_BIFURCATE_x4x2x2x4x2x2, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X4X4X2X2X2X2),     value = IIO_BIFURCATE_x4x4x2x2x2x2, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X2X2X2X2X2X2X4),   value = IIO_BIFURCATE_x2x2x2x2x2x2x4, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X2X2X2X2X4X2X2),   value = IIO_BIFURCATE_x2x2x2x2x4x2x2, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X2X2X4X2X2X2X2),   value = IIO_BIFURCATE_x2x2x4x2x2x2x2, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X4X2X2X2X2X2X2),   value = IIO_BIFURCATE_x4x2x2x2x2x2x2, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X2X2X2X2X2X2X2X2), value = IIO_BIFURCATE_x2x2x2x2x2x2x2x2, flags = RESET_REQUIRED;
#endif // SPR_HOST

                      endoneof;
                      oneof varid = SOCKET_IIO_CONFIGURATION.ConfigIOU3[0],
                          prompt  = STRING_TOKEN(STR_PCIE_IOU3_PROMPT),
                          help    = STRING_TOKEN(STR_PCIE_IOUX_HELP_PROMPT),
                          option text = STRING_TOKEN(STR_AUTO),     value = IIO_BIFURCATE_AUTO, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
#if defined(ICX_HOST) || defined(SPR_HOST) || defined(CPX_HOST)
                            option text = STRING_TOKEN(STR_X4X4X4X4), value = IIO_BIFURCATE_x4x4x4x4, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X4X4X8),   value = IIO_BIFURCATE_x4x4xxx8, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X8X4X4),   value = IIO_BIFURCATE_xxx8x4x4, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X8X8),     value = IIO_BIFURCATE_xxx8xxx8, flags = RESET_REQUIRED;
#endif // ICX_HOST || SPR_HOST || defined(CPX_HOST)
                          option text = STRING_TOKEN(STR_X16),      value = IIO_BIFURCATE_xxxxxx16, flags = RESET_REQUIRED;
#ifdef SPR_HOST
                            option text = STRING_TOKEN(STR_X2X2X4X8),         value = IIO_BIFURCATE_x2x2x4x8, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X4X2X2X8),         value = IIO_BIFURCATE_x4x2x2x8, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X8X2X2X4),         value = IIO_BIFURCATE_x8x2x2x4, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X8X4X2X2),         value = IIO_BIFURCATE_x8x4x2x2, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X2X2X4X4X4),       value = IIO_BIFURCATE_x2x2x4x4x4, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X4X2X2X4X4),       value = IIO_BIFURCATE_x4x2x2x4x4, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X4X4X2X2X4),       value = IIO_BIFURCATE_x4x4x2x2x4, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X4X4X4X2X2),       value = IIO_BIFURCATE_x4x4x4x2x2, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X2X2X2X2X8),       value = IIO_BIFURCATE_x2x2x2x2x8, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X8X2X2X2X2),       value = IIO_BIFURCATE_x8x2x2x2x2, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X2X2X2X2X4X4),     value = IIO_BIFURCATE_x2x2x2x2x4x4, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X2X2X4X2X2X4),     value = IIO_BIFURCATE_x2x2x4x2x2x4, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X2X2X4X4X2X2),     value = IIO_BIFURCATE_x2x2x4x4x2x2, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X4X2X2X2X2X4),     value = IIO_BIFURCATE_x4x2x2x2x2x4, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X4X2X2X4X2X2),     value = IIO_BIFURCATE_x4x2x2x4x2x2, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X4X4X2X2X2X2),     value = IIO_BIFURCATE_x4x4x2x2x2x2, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X2X2X2X2X2X2X4),   value = IIO_BIFURCATE_x2x2x2x2x2x2x4, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X2X2X2X2X4X2X2),   value = IIO_BIFURCATE_x2x2x2x2x4x2x2, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X2X2X4X2X2X2X2),   value = IIO_BIFURCATE_x2x2x4x2x2x2x2, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X4X2X2X2X2X2X2),   value = IIO_BIFURCATE_x4x2x2x2x2x2x2, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X2X2X2X2X2X2X2X2), value = IIO_BIFURCATE_x2x2x2x2x2x2x2x2, flags = RESET_REQUIRED;
#endif // SPR_HOST

                      endoneof;
                      oneof varid = SOCKET_IIO_CONFIGURATION.ConfigIOU4[0],
                          prompt  = STRING_TOKEN(STR_PCIE_IOU4_PROMPT),
                          help    = STRING_TOKEN(STR_PCIE_IOUX_HELP_PROMPT),
                          option text = STRING_TOKEN(STR_AUTO),     value = IIO_BIFURCATE_AUTO, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
#if defined(ICX_HOST) || defined(SPR_HOST) || defined(CPX_HOST)
                            option text = STRING_TOKEN(STR_X4X4X4X4), value = IIO_BIFURCATE_x4x4x4x4, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X4X4X8),   value = IIO_BIFURCATE_x4x4xxx8, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X8X4X4),   value = IIO_BIFURCATE_xxx8x4x4, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X8X8),     value = IIO_BIFURCATE_xxx8xxx8, flags = RESET_REQUIRED;
#endif // ICX_HOST || SPR_HOST || defined(CPX_HOST)
                          option text = STRING_TOKEN(STR_X16),      value = IIO_BIFURCATE_xxxxxx16, flags = RESET_REQUIRED;
#ifdef SPR_HOST
                            option text = STRING_TOKEN(STR_X2X2X4X8),         value = IIO_BIFURCATE_x2x2x4x8, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X4X2X2X8),         value = IIO_BIFURCATE_x4x2x2x8, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X8X2X2X4),         value = IIO_BIFURCATE_x8x2x2x4, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X8X4X2X2),         value = IIO_BIFURCATE_x8x4x2x2, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X2X2X4X4X4),       value = IIO_BIFURCATE_x2x2x4x4x4, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X4X2X2X4X4),       value = IIO_BIFURCATE_x4x2x2x4x4, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X4X4X2X2X4),       value = IIO_BIFURCATE_x4x4x2x2x4, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X4X4X4X2X2),       value = IIO_BIFURCATE_x4x4x4x2x2, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X2X2X2X2X8),       value = IIO_BIFURCATE_x2x2x2x2x8, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X8X2X2X2X2),       value = IIO_BIFURCATE_x8x2x2x2x2, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X2X2X2X2X4X4),     value = IIO_BIFURCATE_x2x2x2x2x4x4, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X2X2X4X2X2X4),     value = IIO_BIFURCATE_x2x2x4x2x2x4, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X2X2X4X4X2X2),     value = IIO_BIFURCATE_x2x2x4x4x2x2, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X4X2X2X2X2X4),     value = IIO_BIFURCATE_x4x2x2x2x2x4, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X4X2X2X4X2X2),     value = IIO_BIFURCATE_x4x2x2x4x2x2, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X4X4X2X2X2X2),     value = IIO_BIFURCATE_x4x4x2x2x2x2, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X2X2X2X2X2X2X4),   value = IIO_BIFURCATE_x2x2x2x2x2x2x4, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X2X2X2X2X4X2X2),   value = IIO_BIFURCATE_x2x2x2x2x4x2x2, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X2X2X4X2X2X2X2),   value = IIO_BIFURCATE_x2x2x4x2x2x2x2, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X4X2X2X2X2X2X2),   value = IIO_BIFURCATE_x4x2x2x2x2x2x2, flags = RESET_REQUIRED;
                            option text = STRING_TOKEN(STR_X2X2X2X2X2X2X2X2), value = IIO_BIFURCATE_x2x2x2x2x2x2x2x2, flags = RESET_REQUIRED;
#endif // SPR_HOST

                      endoneof;
                  endif;
              endif;
          endif;
          //
          // Completion Timeout
          //
          oneof varid = SOCKET_IIO_CONFIGURATION.CompletionTimeout[0],
              prompt  = STRING_TOKEN(STR_IIO_COMPLETION_TIMEOUT_PROMPT),
              help    = STRING_TOKEN(STR_IIO_COMPLETION_TIMEOUT_HELP),
              option text = STRING_TOKEN(STR_YES), value = 1, flags = RESET_REQUIRED;
              option text = STRING_TOKEN(STR_NO),  value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
          endoneof;
          //
          // Completion Timeout Value
          //
          suppressif ideqval SOCKET_IIO_CONFIGURATION.CompletionTimeout[0] == 0;
              oneof varid = SOCKET_IIO_CONFIGURATION.CompletionTimeoutValue[0],
                  prompt  = STRING_TOKEN(STR_IIO_COMPLETION_TIMEOUT_VALUE_PROMPT),
                  help    = STRING_TOKEN(STR_IIO_COMPLETION_TIMEOUT_VALUE_HELP),
                  option text = STRING_TOKEN(STR_CTO_RANGE_DEF), value = 0,  flags = RESET_REQUIRED;
                suppressif ideqvallist SOCKET_COMMONRC_CONFIGURATION.CpuType == CPU_SKX CPU_CLX CPU_CPX CPU_SNR;
                  option text = STRING_TOKEN(STR_CTO_RANGE_A0),  value = 1,  flags = RESET_REQUIRED;
                  option text = STRING_TOKEN(STR_CTO_RANGE_A1),  value = 2,  flags = RESET_REQUIRED;
                endif;
                  option text = STRING_TOKEN(STR_CTO_RANGE_B0),  value = 5,  flags = RESET_REQUIRED;
                  option text = STRING_TOKEN(STR_CTO_RANGE_B1),  value = 6,  flags = RESET_REQUIRED;
                  option text = STRING_TOKEN(STR_CTO_RANGE_C0),  value = 9,  flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
                  option text = STRING_TOKEN(STR_CTO_RANGE_C1),  value = 10, flags = RESET_REQUIRED;
                suppressif NOT ideqvallist SOCKET_COMMONRC_CONFIGURATION.CpuType == CPU_SKX CPU_CLX CPU_CPX CPU_SNR;
                  option text = STRING_TOKEN(STR_CTO_RANGE_D0),  value = 13, flags = RESET_REQUIRED;
                  option text = STRING_TOKEN(STR_CTO_RANGE_D1),  value = 14, flags = RESET_REQUIRED;
                endif;
              endoneof;
          endif;

          oneof varid     = SOCKET_IIO_CONFIGURATION.RpCorrectableErrorEsc[0],
              prompt          = STRING_TOKEN(STR_RP_CORRECTABLE_ERR),
              help            = STRING_TOKEN(STR_RP_CORRECTABLE_ERR_HELP),
              option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
              option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
          endoneof;

          oneof varid     = SOCKET_IIO_CONFIGURATION.RpUncorrectableNonFatalErrorEsc[0],
              prompt          = STRING_TOKEN(STR_RP_UNCORRECTABLE_ERR_NONFATAL),
              help            = STRING_TOKEN(STR_RP_UNCORRECTABLE_ERR_NONFATAL_HELP),
              option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
              option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
          endoneof;

          oneof varid     = SOCKET_IIO_CONFIGURATION.RpUncorrectableFatalErrorEsc[0],
              prompt          = STRING_TOKEN(STR_RP_UNCORRECTABLE_ERR_FATAL),
              help            = STRING_TOKEN(STR_RP_UNCORRECTABLE_ERR_FATAL_HELP),
              option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
              option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
          endoneof;
          goto VFR_FORMID_CPU_TRACE_HUB_IIO0,
              prompt          = STRING_TOKEN(STR_TRACE_HUB_CONFIG_TITLE),
              help            = STRING_TOKEN(STR_TRACE_HUB_FORM_HELP);

          //
          // Jump to PCI Express Port0 Configuration Form
          //
          suppressif TRUE;
              checkbox varid    = SOCKET_IIO_CONFIGURATION.HidePEXPMenu[0],
                  prompt   = STRING_TOKEN(STR_PCIE_PORT_0_NULL_PROMPT),
                  help     = STRING_TOKEN(STR_NULL_STRING),
                  // Flags behavior for checkbox is overloaded so that it equals
                  // a DEFAULT value.  1 = ON, 0 = off
                  flags    = 0,
              endcheckbox;
          endif;
          goto VFR_FORMID_PCIE_IIO0P0,
#if defined (SNR_HOST) || defined (ICXDE_HOST)
              prompt  = STRING_TOKEN(STR_PCIE_RLINK_PROMPT),
#else
              prompt  = STRING_TOKEN(STR_PCIE_PORT_0_PROMPT),
#endif
              help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);

          //
          // Jump to PCI Express Port1 Configuration Form
          //
          suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[1]==1;
              goto VFR_FORMID_PCIE_IIO0P1,
                  prompt  = STRING_TOKEN(STR_PCIE_PORT_1_PROMPT),
                  help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
          endif;

          //
          // Jump to PCI Express Port2 Configuration Form
          //
          suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[2]==1;
              goto VFR_FORMID_PCIE_IIO0P2,
                  prompt  = STRING_TOKEN(STR_PCIE_PORT_2_PROMPT),
                  help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
          endif;

          //
          // Jump to PCI Express Port3 Configuration Form
          //
          suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[3]==1;
              goto VFR_FORMID_PCIE_IIO0P3,
                  prompt  = STRING_TOKEN(STR_PCIE_PORT_3_PROMPT),
                  help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
          endif;

          //
          // Jump to PCI Express Port4 Configuration Form
          //
          suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[4]==1;
              goto VFR_FORMID_PCIE_IIO0P4,
                  prompt  = STRING_TOKEN(STR_PCIE_PORT_4_PROMPT),
                  help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
          endif;

          suppressif ideqval SOCKET_COMMONRC_CONFIGURATION.CpuType == CPU_SNR OR
                        (ideqval SOCKET_COMMONRC_CONFIGURATION.CpuType == CPU_ICXD AND
                        ideqval SOCKET_COMMONRC_CONFIGURATION.CpuChop == CPU_CHOP_TYPE_LCC);
              //
              // Jump to PCI Express Port5 Configuration Form
              //
              suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[5]==1;
                  goto VFR_FORMID_PCIE_IIO0P5,
                      prompt  = STRING_TOKEN(STR_PCIE_PORT_5_PROMPT),
                      help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
              endif;

              //
              // Jump to PCI Express Port6 Configuration Form
              //
              suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[6]==1;
                  goto VFR_FORMID_PCIE_IIO0P6,
                      prompt  = STRING_TOKEN(STR_PCIE_PORT_6_PROMPT),
                      help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
              endif;

              //
              // Jump to PCI Express Port7 Configuration Form
              //
              suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[7]==1;
                  goto VFR_FORMID_PCIE_IIO0P7,
                      prompt  = STRING_TOKEN(STR_PCIE_PORT_7_PROMPT),
                      help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
              endif;

              //
              // Jump to PCI Express Port8 Configuration Form
              //
              suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[8]==1;
                  goto VFR_FORMID_PCIE_IIO0P8,
                      prompt  = STRING_TOKEN(STR_PCIE_PORT_8_PROMPT),
                      help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
              endif;

              suppressif ideqval SOCKET_COMMONRC_CONFIGURATION.CpuType == CPU_ICXD;

                  //
                  // Jump to PCI Express Port9 Configuration Form
                  //
                  suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[9]==1;
                      goto VFR_FORMID_PCIE_IIO0P9,
                          prompt  = STRING_TOKEN(STR_PCIE_PORT_9_PROMPT),
                          help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
                  endif;

                  //
                  // Jump to PCI Express Port10 Configuration Form
                  //
                  suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[10]==1;
                      goto VFR_FORMID_PCIE_IIO0P10,
                          prompt  = STRING_TOKEN(STR_PCIE_PORT_10_PROMPT),
                          help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
                  endif;

                  //
                  // Jump to PCI Express Port11 Configuration Form
                  //
                  suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[11]==1;
                      goto VFR_FORMID_PCIE_IIO0P11,
                          prompt  = STRING_TOKEN(STR_PCIE_PORT_11_PROMPT),
                          help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
                  endif;

                  //
                  // Jump to PCI Express Port12 Configuration Form
                  //
                  suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[12]==1;
                      goto VFR_FORMID_PCIE_IIO0P12,
                          prompt  = STRING_TOKEN(STR_PCIE_PORT_12_PROMPT),
                          help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
                  endif;

                  //
                  // Jump to PCI Express Port13 Configuration Form
                  //
                  suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[13]==1;
                      goto VFR_FORMID_PCIE_IIO0P13,
                          prompt  = STRING_TOKEN(STR_PCIE_PORT_13_PROMPT),
                          help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
                  endif;

                  //
                  // Jump to PCI Express Port14 Configuration Form
                  //
                  suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[14]==1;
                      goto VFR_FORMID_PCIE_IIO0P14,
                          prompt  = STRING_TOKEN(STR_PCIE_PORT_14_PROMPT),
                          help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
                  endif;

                  //
                  // Jump to PCI Express Port15 Configuration Form
                  //
                  suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[15]==1;
                      goto VFR_FORMID_PCIE_IIO0P15,
                          prompt  = STRING_TOKEN(STR_PCIE_PORT_15_PROMPT),
                          help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
                  endif;

                  //
                  // Jump to PCI Express Port16 Configuration Form
                  //
                  suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[16]==1;
                      goto VFR_FORMID_PCIE_IIO0P16,
                          prompt  = STRING_TOKEN(STR_PCIE_PORT_16_PROMPT),
                          help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
                  endif;

                  //
                  // Jump to PCI Express Port17 Configuration Form
                  //
                  suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[17]==1;
                      goto VFR_FORMID_PCIE_IIO0P17,
                          prompt  = STRING_TOKEN(STR_PCIE_PORT_17_PROMPT),
                          help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
                  endif;

                  //
                  // Jump to PCI Express Port18 Configuration Form
                  //
                  suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[18]==1;
                      goto VFR_FORMID_PCIE_IIO0P18,
                          prompt  = STRING_TOKEN(STR_PCIE_PORT_18_PROMPT),
                          help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
                  endif;

                  //
                  // Jump to PCI Express Port19 Configuration Form
                  //
                  suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[19]==1;
                      goto VFR_FORMID_PCIE_IIO0P19,
                          prompt  = STRING_TOKEN(STR_PCIE_PORT_19_PROMPT),
                          help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
                  endif;

                  //
                  // Jump to PCI Express Port20 Configuration Form
                  //
                  suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[20]==1;
                      goto VFR_FORMID_PCIE_IIO0P20,
                          prompt  = STRING_TOKEN(STR_PCIE_PORT_20_PROMPT),
                          help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
                  endif;
              endif;
          endif;
      endform;

#if MAX_SOCKET > 1
//
//---------- IIO 1 ------------
//
        form formid = VFR_FORMID_IIO1,
            title   = STRING_TOKEN(STR_IIO1_TITLE);

            suppressif  ideqval SOCKET_IIO_CONFIGURATION.PcieBiosTrainEnable == 0x00;
                oneof varid = SOCKET_IIO_CONFIGURATION.ConfigIOU0[1],
                    prompt  = STRING_TOKEN(STR_PCIE_IOU0_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_IOUX_HELP_PROMPT),
                    option text = STRING_TOKEN(STR_AUTO),     value = IIO_BIFURCATE_AUTO, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
                    option text = STRING_TOKEN(STR_X4X4X4X4), value = IIO_BIFURCATE_x4x4x4x4, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X4X4X8),   value = IIO_BIFURCATE_x4x4xxx8, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X8X4X4),   value = IIO_BIFURCATE_xxx8x4x4, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X8X8),     value = IIO_BIFURCATE_xxx8xxx8, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X16),      value = IIO_BIFURCATE_xxxxxx16, flags = RESET_REQUIRED;
#ifdef SPR_HOST
                      option text = STRING_TOKEN(STR_X2X2X4X8),         value = IIO_BIFURCATE_x2x2x4x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X8),         value = IIO_BIFURCATE_x4x2x2x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X2X2X4),         value = IIO_BIFURCATE_x8x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X4X2X2),         value = IIO_BIFURCATE_x8x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X4X4),       value = IIO_BIFURCATE_x2x2x4x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X4X4),       value = IIO_BIFURCATE_x4x2x2x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X2X2X4),       value = IIO_BIFURCATE_x4x4x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X4X2X2),       value = IIO_BIFURCATE_x4x4x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X8),       value = IIO_BIFURCATE_x2x2x2x2x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X2X2X2X2),       value = IIO_BIFURCATE_x8x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X4X4),     value = IIO_BIFURCATE_x2x2x2x2x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X2X2X4),     value = IIO_BIFURCATE_x2x2x4x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X4X2X2),     value = IIO_BIFURCATE_x2x2x4x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X2X2X4),     value = IIO_BIFURCATE_x4x2x2x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X4X2X2),     value = IIO_BIFURCATE_x4x2x2x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X2X2X2X2),     value = IIO_BIFURCATE_x4x4x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X2X2X4),   value = IIO_BIFURCATE_x2x2x2x2x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X4X2X2),   value = IIO_BIFURCATE_x2x2x2x2x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X2X2X2X2),   value = IIO_BIFURCATE_x2x2x4x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X2X2X2X2),   value = IIO_BIFURCATE_x4x2x2x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X2X2X2X2), value = IIO_BIFURCATE_x2x2x2x2x2x2x2x2, flags = RESET_REQUIRED;
#endif // SPR_HOST

                endoneof;
                oneof varid = SOCKET_IIO_CONFIGURATION.ConfigIOU1[1],
                    prompt  = STRING_TOKEN(STR_PCIE_IOU1_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_IOUX_HELP_PROMPT),
                    option text = STRING_TOKEN(STR_AUTO),     value = IIO_BIFURCATE_AUTO, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
                    option text = STRING_TOKEN(STR_X4X4X4X4), value = IIO_BIFURCATE_x4x4x4x4, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X4X4X8),   value = IIO_BIFURCATE_x4x4xxx8, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X8X4X4),   value = IIO_BIFURCATE_xxx8x4x4, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X8X8),     value = IIO_BIFURCATE_xxx8xxx8, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X16),      value = IIO_BIFURCATE_xxxxxx16, flags = RESET_REQUIRED;
#ifdef SPR_HOST
                      option text = STRING_TOKEN(STR_X2X2X4X8),         value = IIO_BIFURCATE_x2x2x4x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X8),         value = IIO_BIFURCATE_x4x2x2x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X2X2X4),         value = IIO_BIFURCATE_x8x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X4X2X2),         value = IIO_BIFURCATE_x8x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X4X4),       value = IIO_BIFURCATE_x2x2x4x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X4X4),       value = IIO_BIFURCATE_x4x2x2x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X2X2X4),       value = IIO_BIFURCATE_x4x4x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X4X2X2),       value = IIO_BIFURCATE_x4x4x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X8),       value = IIO_BIFURCATE_x2x2x2x2x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X2X2X2X2),       value = IIO_BIFURCATE_x8x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X4X4),     value = IIO_BIFURCATE_x2x2x2x2x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X2X2X4),     value = IIO_BIFURCATE_x2x2x4x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X4X2X2),     value = IIO_BIFURCATE_x2x2x4x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X2X2X4),     value = IIO_BIFURCATE_x4x2x2x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X4X2X2),     value = IIO_BIFURCATE_x4x2x2x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X2X2X2X2),     value = IIO_BIFURCATE_x4x4x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X2X2X4),   value = IIO_BIFURCATE_x2x2x2x2x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X4X2X2),   value = IIO_BIFURCATE_x2x2x2x2x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X2X2X2X2),   value = IIO_BIFURCATE_x2x2x4x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X2X2X2X2),   value = IIO_BIFURCATE_x4x2x2x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X2X2X2X2), value = IIO_BIFURCATE_x2x2x2x2x2x2x2x2, flags = RESET_REQUIRED;
#endif // SPR_HOST

                endoneof;
                oneof varid = SOCKET_IIO_CONFIGURATION.ConfigIOU2[1],
                    prompt  = STRING_TOKEN(STR_PCIE_IOU2_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_IOUX_HELP_PROMPT),
                    option text = STRING_TOKEN(STR_AUTO),     value = IIO_BIFURCATE_AUTO, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
                    option text = STRING_TOKEN(STR_X4X4X4X4), value = IIO_BIFURCATE_x4x4x4x4, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X4X4X8),   value = IIO_BIFURCATE_x4x4xxx8, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X8X4X4),   value = IIO_BIFURCATE_xxx8x4x4, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X8X8),     value = IIO_BIFURCATE_xxx8xxx8, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X16),      value = IIO_BIFURCATE_xxxxxx16, flags = RESET_REQUIRED;
#ifdef SPR_HOST
                      option text = STRING_TOKEN(STR_X2X2X4X8),         value = IIO_BIFURCATE_x2x2x4x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X8),         value = IIO_BIFURCATE_x4x2x2x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X2X2X4),         value = IIO_BIFURCATE_x8x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X4X2X2),         value = IIO_BIFURCATE_x8x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X4X4),       value = IIO_BIFURCATE_x2x2x4x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X4X4),       value = IIO_BIFURCATE_x4x2x2x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X2X2X4),       value = IIO_BIFURCATE_x4x4x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X4X2X2),       value = IIO_BIFURCATE_x4x4x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X8),       value = IIO_BIFURCATE_x2x2x2x2x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X2X2X2X2),       value = IIO_BIFURCATE_x8x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X4X4),     value = IIO_BIFURCATE_x2x2x2x2x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X2X2X4),     value = IIO_BIFURCATE_x2x2x4x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X4X2X2),     value = IIO_BIFURCATE_x2x2x4x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X2X2X4),     value = IIO_BIFURCATE_x4x2x2x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X4X2X2),     value = IIO_BIFURCATE_x4x2x2x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X2X2X2X2),     value = IIO_BIFURCATE_x4x4x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X2X2X4),   value = IIO_BIFURCATE_x2x2x2x2x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X4X2X2),   value = IIO_BIFURCATE_x2x2x2x2x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X2X2X2X2),   value = IIO_BIFURCATE_x2x2x4x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X2X2X2X2),   value = IIO_BIFURCATE_x4x2x2x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X2X2X2X2), value = IIO_BIFURCATE_x2x2x2x2x2x2x2x2, flags = RESET_REQUIRED;
#endif // SPR_HOST

                endoneof;
                oneof varid = SOCKET_IIO_CONFIGURATION.ConfigIOU3[1],
                    prompt  = STRING_TOKEN(STR_PCIE_IOU3_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_IOUX_HELP_PROMPT),
                    option text = STRING_TOKEN(STR_AUTO),     value = IIO_BIFURCATE_AUTO, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
#if defined(ICX_HOST) || defined(SPR_HOST) || defined(CPX_HOST)
                      option text = STRING_TOKEN(STR_X4X4X4X4), value = IIO_BIFURCATE_x4x4x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X8),   value = IIO_BIFURCATE_x4x4xxx8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X4X4),   value = IIO_BIFURCATE_xxx8x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X8),     value = IIO_BIFURCATE_xxx8xxx8, flags = RESET_REQUIRED;
#endif // ICX_HOST || SPR_HOST || defined(CPX_HOST)
                    option text = STRING_TOKEN(STR_X16),      value = IIO_BIFURCATE_xxxxxx16, flags = RESET_REQUIRED;
#ifdef SPR_HOST
                      option text = STRING_TOKEN(STR_X2X2X4X8),         value = IIO_BIFURCATE_x2x2x4x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X8),         value = IIO_BIFURCATE_x4x2x2x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X2X2X4),         value = IIO_BIFURCATE_x8x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X4X2X2),         value = IIO_BIFURCATE_x8x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X4X4),       value = IIO_BIFURCATE_x2x2x4x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X4X4),       value = IIO_BIFURCATE_x4x2x2x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X2X2X4),       value = IIO_BIFURCATE_x4x4x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X4X2X2),       value = IIO_BIFURCATE_x4x4x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X8),       value = IIO_BIFURCATE_x2x2x2x2x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X2X2X2X2),       value = IIO_BIFURCATE_x8x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X4X4),     value = IIO_BIFURCATE_x2x2x2x2x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X2X2X4),     value = IIO_BIFURCATE_x2x2x4x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X4X2X2),     value = IIO_BIFURCATE_x2x2x4x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X2X2X4),     value = IIO_BIFURCATE_x4x2x2x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X4X2X2),     value = IIO_BIFURCATE_x4x2x2x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X2X2X2X2),     value = IIO_BIFURCATE_x4x4x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X2X2X4),   value = IIO_BIFURCATE_x2x2x2x2x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X4X2X2),   value = IIO_BIFURCATE_x2x2x2x2x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X2X2X2X2),   value = IIO_BIFURCATE_x2x2x4x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X2X2X2X2),   value = IIO_BIFURCATE_x4x2x2x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X2X2X2X2), value = IIO_BIFURCATE_x2x2x2x2x2x2x2x2, flags = RESET_REQUIRED;
#endif // SPR_HOST

                endoneof;
                oneof varid = SOCKET_IIO_CONFIGURATION.ConfigIOU4[1],
                    prompt  = STRING_TOKEN(STR_PCIE_IOU4_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_IOUX_HELP_PROMPT),
                    option text = STRING_TOKEN(STR_AUTO),     value = IIO_BIFURCATE_AUTO, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
#if defined(ICX_HOST) || defined(SPR_HOST) || defined(CPX_HOST)
                      option text = STRING_TOKEN(STR_X4X4X4X4), value = IIO_BIFURCATE_x4x4x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X8),   value = IIO_BIFURCATE_x4x4xxx8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X4X4),   value = IIO_BIFURCATE_xxx8x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X8),     value = IIO_BIFURCATE_xxx8xxx8, flags = RESET_REQUIRED;
#endif // ICX_HOST || SPR_HOST || defined(CPX_HOST)
                    option text = STRING_TOKEN(STR_X16),      value = IIO_BIFURCATE_xxxxxx16, flags = RESET_REQUIRED;
#ifdef SPR_HOST
                      option text = STRING_TOKEN(STR_X2X2X4X8),         value = IIO_BIFURCATE_x2x2x4x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X8),         value = IIO_BIFURCATE_x4x2x2x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X2X2X4),         value = IIO_BIFURCATE_x8x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X4X2X2),         value = IIO_BIFURCATE_x8x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X4X4),       value = IIO_BIFURCATE_x2x2x4x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X4X4),       value = IIO_BIFURCATE_x4x2x2x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X2X2X4),       value = IIO_BIFURCATE_x4x4x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X4X2X2),       value = IIO_BIFURCATE_x4x4x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X8),       value = IIO_BIFURCATE_x2x2x2x2x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X2X2X2X2),       value = IIO_BIFURCATE_x8x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X4X4),     value = IIO_BIFURCATE_x2x2x2x2x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X2X2X4),     value = IIO_BIFURCATE_x2x2x4x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X4X2X2),     value = IIO_BIFURCATE_x2x2x4x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X2X2X4),     value = IIO_BIFURCATE_x4x2x2x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X4X2X2),     value = IIO_BIFURCATE_x4x2x2x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X2X2X2X2),     value = IIO_BIFURCATE_x4x4x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X2X2X4),   value = IIO_BIFURCATE_x2x2x2x2x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X4X2X2),   value = IIO_BIFURCATE_x2x2x2x2x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X2X2X2X2),   value = IIO_BIFURCATE_x2x2x4x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X2X2X2X2),   value = IIO_BIFURCATE_x4x2x2x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X2X2X2X2), value = IIO_BIFURCATE_x2x2x2x2x2x2x2x2, flags = RESET_REQUIRED;
#endif // SPR_HOST

                endoneof;
            endif;
            //
            // Completion Timeout
            //
            oneof varid = SOCKET_IIO_CONFIGURATION.CompletionTimeout[1],
                prompt  = STRING_TOKEN(STR_IIO_COMPLETION_TIMEOUT_PROMPT),
                help    = STRING_TOKEN(STR_IIO_COMPLETION_TIMEOUT_HELP),
                option text = STRING_TOKEN(STR_YES), value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
                option text = STRING_TOKEN(STR_NO),  value = 1, flags = RESET_REQUIRED;
            endoneof;
            //
            // Completion Timeout Value
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.CompletionTimeout[1] == 1;
                oneof varid = SOCKET_IIO_CONFIGURATION.CompletionTimeoutValue[1],
                    prompt  = STRING_TOKEN(STR_IIO_COMPLETION_TIMEOUT_VALUE_PROMPT),
                    help    = STRING_TOKEN(STR_IIO_COMPLETION_TIMEOUT_VALUE_HELP),
                    option text = STRING_TOKEN(STR_CTO_RANGE_DEF), value = 0,  flags = RESET_REQUIRED;
                  suppressif ideqvallist SOCKET_COMMONRC_CONFIGURATION.CpuType == CPU_SKX CPU_CLX CPU_CPX CPU_SNR;
                    option text = STRING_TOKEN(STR_CTO_RANGE_A0),  value = 1,  flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_CTO_RANGE_A1),  value = 2,  flags = RESET_REQUIRED;
                  endif;
                    option text = STRING_TOKEN(STR_CTO_RANGE_B0),  value = 5,  flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_CTO_RANGE_B1),  value = 6,  flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_CTO_RANGE_C0),  value = 9,  flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
                    option text = STRING_TOKEN(STR_CTO_RANGE_C1),  value = 10, flags = RESET_REQUIRED;
                  suppressif NOT ideqvallist SOCKET_COMMONRC_CONFIGURATION.CpuType == CPU_SKX CPU_CLX CPU_CPX CPU_SNR;
                    option text = STRING_TOKEN(STR_CTO_RANGE_D0),  value = 13, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_CTO_RANGE_D1),  value = 14, flags = RESET_REQUIRED;
                  endif;
                endoneof;
            endif;

            oneof varid     = SOCKET_IIO_CONFIGURATION.RpCorrectableErrorEsc[1],
                prompt          = STRING_TOKEN(STR_RP_CORRECTABLE_ERR_1),
                help            = STRING_TOKEN(STR_RP_CORRECTABLE_ERR_HELP),
                option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
                option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
            endoneof;

            oneof varid     = SOCKET_IIO_CONFIGURATION.RpUncorrectableNonFatalErrorEsc[1],
                prompt          = STRING_TOKEN(STR_RP_UNCORRECTABLE_ERR_NONFATAL_1),
                help            = STRING_TOKEN(STR_RP_UNCORRECTABLE_ERR_NONFATAL_HELP),
                option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
                option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
            endoneof;

            oneof varid     = SOCKET_IIO_CONFIGURATION.RpUncorrectableFatalErrorEsc[1],
                prompt          = STRING_TOKEN(STR_RP_UNCORRECTABLE_ERR_FATAL_1),
                help            = STRING_TOKEN(STR_RP_UNCORRECTABLE_ERR_FATAL_HELP),
                option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
                option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
            endoneof;
            goto VFR_FORMID_CPU_TRACE_HUB_IIO1,
                prompt          = STRING_TOKEN(STR_TRACE_HUB_CONFIG_TITLE),
                help            = STRING_TOKEN(STR_TRACE_HUB_FORM_HELP);

            //
            // Jump to PCI Express Port0 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[21]==1;
                goto VFR_FORMID_PCIE_IIO1P0,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_0_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port1 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[22]==1;
                goto VFR_FORMID_PCIE_IIO1P1,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_1_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port2 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[23]==1;
                goto VFR_FORMID_PCIE_IIO1P2,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_2_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port3 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[24]==1;
                goto VFR_FORMID_PCIE_IIO1P3,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_3_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port4 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[25]==1;
                goto VFR_FORMID_PCIE_IIO1P4,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_4_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port5 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[26]==1;
                goto VFR_FORMID_PCIE_IIO1P5,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_5_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port6 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[27]==1;
                goto VFR_FORMID_PCIE_IIO1P6,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_6_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port7 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[28]==1;
                goto VFR_FORMID_PCIE_IIO1P7,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_7_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port8 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[29]==1;
                goto VFR_FORMID_PCIE_IIO1P8,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_8_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port9 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[30]==1;
                goto VFR_FORMID_PCIE_IIO1P9,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_9_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port10 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[31]==1;
                goto VFR_FORMID_PCIE_IIO1P10,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_10_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port11 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[32]==1;
                goto VFR_FORMID_PCIE_IIO1P11,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_11_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port12 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[33]==1;
                goto VFR_FORMID_PCIE_IIO1P12,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_12_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port13 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[34]==1;
                goto VFR_FORMID_PCIE_IIO1P13,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_13_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port14 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[35]==1;
                goto VFR_FORMID_PCIE_IIO1P14,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_14_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port15 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[36]==1;
                goto VFR_FORMID_PCIE_IIO1P15,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_15_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port16 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[37]==1;
                goto VFR_FORMID_PCIE_IIO1P16,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_16_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port17 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[38]==1;
                goto VFR_FORMID_PCIE_IIO1P17,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_17_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port18 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[39]==1;
                goto VFR_FORMID_PCIE_IIO1P18,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_18_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port19 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[40]==1;
                goto VFR_FORMID_PCIE_IIO1P19,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_19_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port20 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[41]==1;
                goto VFR_FORMID_PCIE_IIO1P20,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_20_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;
        endform;
#endif

#if MAX_SOCKET > 2
//
//---------- IIO 2 ------------
//
        form formid = VFR_FORMID_IIO2,
            title   = STRING_TOKEN(STR_IIO2_TITLE);

            suppressif  ideqval SOCKET_IIO_CONFIGURATION.PcieBiosTrainEnable == 0x00;
                oneof varid = SOCKET_IIO_CONFIGURATION.ConfigIOU0[2],
                    prompt  = STRING_TOKEN(STR_PCIE_IOU0_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_IOUX_HELP_PROMPT),
                    option text = STRING_TOKEN(STR_AUTO),     value = IIO_BIFURCATE_AUTO, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
                    option text = STRING_TOKEN(STR_X4X4X4X4), value = IIO_BIFURCATE_x4x4x4x4, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X4X4X8),   value = IIO_BIFURCATE_x4x4xxx8, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X8X4X4),   value = IIO_BIFURCATE_xxx8x4x4, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X8X8),     value = IIO_BIFURCATE_xxx8xxx8, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X16),      value = IIO_BIFURCATE_xxxxxx16, flags = RESET_REQUIRED;
#ifdef SPR_HOST
                      option text = STRING_TOKEN(STR_X2X2X4X8),         value = IIO_BIFURCATE_x2x2x4x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X8),         value = IIO_BIFURCATE_x4x2x2x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X2X2X4),         value = IIO_BIFURCATE_x8x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X4X2X2),         value = IIO_BIFURCATE_x8x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X4X4),       value = IIO_BIFURCATE_x2x2x4x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X4X4),       value = IIO_BIFURCATE_x4x2x2x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X2X2X4),       value = IIO_BIFURCATE_x4x4x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X4X2X2),       value = IIO_BIFURCATE_x4x4x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X8),       value = IIO_BIFURCATE_x2x2x2x2x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X2X2X2X2),       value = IIO_BIFURCATE_x8x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X4X4),     value = IIO_BIFURCATE_x2x2x2x2x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X2X2X4),     value = IIO_BIFURCATE_x2x2x4x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X4X2X2),     value = IIO_BIFURCATE_x2x2x4x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X2X2X4),     value = IIO_BIFURCATE_x4x2x2x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X4X2X2),     value = IIO_BIFURCATE_x4x2x2x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X2X2X2X2),     value = IIO_BIFURCATE_x4x4x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X2X2X4),   value = IIO_BIFURCATE_x2x2x2x2x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X4X2X2),   value = IIO_BIFURCATE_x2x2x2x2x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X2X2X2X2),   value = IIO_BIFURCATE_x2x2x4x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X2X2X2X2),   value = IIO_BIFURCATE_x4x2x2x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X2X2X2X2), value = IIO_BIFURCATE_x2x2x2x2x2x2x2x2, flags = RESET_REQUIRED;
#endif // SPR_HOST

                endoneof;
                oneof varid = SOCKET_IIO_CONFIGURATION.ConfigIOU1[2],
                    prompt  = STRING_TOKEN(STR_PCIE_IOU1_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_IOUX_HELP_PROMPT),
                    option text = STRING_TOKEN(STR_AUTO),     value = IIO_BIFURCATE_AUTO, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
                    option text = STRING_TOKEN(STR_X4X4X4X4), value = IIO_BIFURCATE_x4x4x4x4, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X4X4X8),   value = IIO_BIFURCATE_x4x4xxx8, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X8X4X4),   value = IIO_BIFURCATE_xxx8x4x4, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X8X8),     value = IIO_BIFURCATE_xxx8xxx8, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X16),      value = IIO_BIFURCATE_xxxxxx16, flags = RESET_REQUIRED;
#ifdef SPR_HOST
                      option text = STRING_TOKEN(STR_X2X2X4X8),         value = IIO_BIFURCATE_x2x2x4x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X8),         value = IIO_BIFURCATE_x4x2x2x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X2X2X4),         value = IIO_BIFURCATE_x8x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X4X2X2),         value = IIO_BIFURCATE_x8x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X4X4),       value = IIO_BIFURCATE_x2x2x4x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X4X4),       value = IIO_BIFURCATE_x4x2x2x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X2X2X4),       value = IIO_BIFURCATE_x4x4x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X4X2X2),       value = IIO_BIFURCATE_x4x4x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X8),       value = IIO_BIFURCATE_x2x2x2x2x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X2X2X2X2),       value = IIO_BIFURCATE_x8x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X4X4),     value = IIO_BIFURCATE_x2x2x2x2x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X2X2X4),     value = IIO_BIFURCATE_x2x2x4x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X4X2X2),     value = IIO_BIFURCATE_x2x2x4x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X2X2X4),     value = IIO_BIFURCATE_x4x2x2x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X4X2X2),     value = IIO_BIFURCATE_x4x2x2x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X2X2X2X2),     value = IIO_BIFURCATE_x4x4x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X2X2X4),   value = IIO_BIFURCATE_x2x2x2x2x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X4X2X2),   value = IIO_BIFURCATE_x2x2x2x2x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X2X2X2X2),   value = IIO_BIFURCATE_x2x2x4x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X2X2X2X2),   value = IIO_BIFURCATE_x4x2x2x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X2X2X2X2), value = IIO_BIFURCATE_x2x2x2x2x2x2x2x2, flags = RESET_REQUIRED;
#endif // SPR_HOST

                endoneof;
                oneof varid = SOCKET_IIO_CONFIGURATION.ConfigIOU2[2],
                    prompt  = STRING_TOKEN(STR_PCIE_IOU2_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_IOUX_HELP_PROMPT),
                    option text = STRING_TOKEN(STR_AUTO),     value = IIO_BIFURCATE_AUTO, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
                    option text = STRING_TOKEN(STR_X4X4X4X4), value = IIO_BIFURCATE_x4x4x4x4, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X4X4X8),   value = IIO_BIFURCATE_x4x4xxx8, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X8X4X4),   value = IIO_BIFURCATE_xxx8x4x4, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X8X8),     value = IIO_BIFURCATE_xxx8xxx8, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X16),      value = IIO_BIFURCATE_xxxxxx16, flags = RESET_REQUIRED;
#ifdef SPR_HOST
                      option text = STRING_TOKEN(STR_X2X2X4X8),         value = IIO_BIFURCATE_x2x2x4x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X8),         value = IIO_BIFURCATE_x4x2x2x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X2X2X4),         value = IIO_BIFURCATE_x8x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X4X2X2),         value = IIO_BIFURCATE_x8x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X4X4),       value = IIO_BIFURCATE_x2x2x4x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X4X4),       value = IIO_BIFURCATE_x4x2x2x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X2X2X4),       value = IIO_BIFURCATE_x4x4x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X4X2X2),       value = IIO_BIFURCATE_x4x4x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X8),       value = IIO_BIFURCATE_x2x2x2x2x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X2X2X2X2),       value = IIO_BIFURCATE_x8x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X4X4),     value = IIO_BIFURCATE_x2x2x2x2x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X2X2X4),     value = IIO_BIFURCATE_x2x2x4x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X4X2X2),     value = IIO_BIFURCATE_x2x2x4x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X2X2X4),     value = IIO_BIFURCATE_x4x2x2x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X4X2X2),     value = IIO_BIFURCATE_x4x2x2x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X2X2X2X2),     value = IIO_BIFURCATE_x4x4x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X2X2X4),   value = IIO_BIFURCATE_x2x2x2x2x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X4X2X2),   value = IIO_BIFURCATE_x2x2x2x2x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X2X2X2X2),   value = IIO_BIFURCATE_x2x2x4x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X2X2X2X2),   value = IIO_BIFURCATE_x4x2x2x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X2X2X2X2), value = IIO_BIFURCATE_x2x2x2x2x2x2x2x2, flags = RESET_REQUIRED;
#endif // SPR_HOST

                endoneof;
                oneof varid = SOCKET_IIO_CONFIGURATION.ConfigIOU3[2],
                    prompt  = STRING_TOKEN(STR_PCIE_IOU3_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_IOUX_HELP_PROMPT),
                    option text = STRING_TOKEN(STR_AUTO),     value = IIO_BIFURCATE_AUTO, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
#if defined(ICX_HOST) || defined(SPR_HOST) || defined(CPX_HOST)
                      option text = STRING_TOKEN(STR_X4X4X4X4), value = IIO_BIFURCATE_x4x4x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X8),   value = IIO_BIFURCATE_x4x4xxx8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X4X4),   value = IIO_BIFURCATE_xxx8x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X8),     value = IIO_BIFURCATE_xxx8xxx8, flags = RESET_REQUIRED;
#endif // ICX_HOST || SPR_HOST || defined(CPX_HOST)
                    option text = STRING_TOKEN(STR_X16),      value = IIO_BIFURCATE_xxxxxx16, flags = RESET_REQUIRED;
#ifdef SPR_HOST
                      option text = STRING_TOKEN(STR_X2X2X4X8),         value = IIO_BIFURCATE_x2x2x4x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X8),         value = IIO_BIFURCATE_x4x2x2x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X2X2X4),         value = IIO_BIFURCATE_x8x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X4X2X2),         value = IIO_BIFURCATE_x8x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X4X4),       value = IIO_BIFURCATE_x2x2x4x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X4X4),       value = IIO_BIFURCATE_x4x2x2x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X2X2X4),       value = IIO_BIFURCATE_x4x4x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X4X2X2),       value = IIO_BIFURCATE_x4x4x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X8),       value = IIO_BIFURCATE_x2x2x2x2x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X2X2X2X2),       value = IIO_BIFURCATE_x8x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X4X4),     value = IIO_BIFURCATE_x2x2x2x2x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X2X2X4),     value = IIO_BIFURCATE_x2x2x4x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X4X2X2),     value = IIO_BIFURCATE_x2x2x4x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X2X2X4),     value = IIO_BIFURCATE_x4x2x2x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X4X2X2),     value = IIO_BIFURCATE_x4x2x2x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X2X2X2X2),     value = IIO_BIFURCATE_x4x4x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X2X2X4),   value = IIO_BIFURCATE_x2x2x2x2x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X4X2X2),   value = IIO_BIFURCATE_x2x2x2x2x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X2X2X2X2),   value = IIO_BIFURCATE_x2x2x4x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X2X2X2X2),   value = IIO_BIFURCATE_x4x2x2x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X2X2X2X2), value = IIO_BIFURCATE_x2x2x2x2x2x2x2x2, flags = RESET_REQUIRED;
#endif // SPR_HOST

                endoneof;
                oneof varid = SOCKET_IIO_CONFIGURATION.ConfigIOU4[2],
                    prompt  = STRING_TOKEN(STR_PCIE_IOU4_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_IOUX_HELP_PROMPT),
                    option text = STRING_TOKEN(STR_AUTO),     value = IIO_BIFURCATE_AUTO, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
#if defined(ICX_HOST) || defined(SPR_HOST) || defined(CPX_HOST)
                      option text = STRING_TOKEN(STR_X4X4X4X4), value = IIO_BIFURCATE_x4x4x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X8),   value = IIO_BIFURCATE_x4x4xxx8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X4X4),   value = IIO_BIFURCATE_xxx8x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X8),     value = IIO_BIFURCATE_xxx8xxx8, flags = RESET_REQUIRED;
#endif // ICX_HOST || SPR_HOST || defined(CPX_HOST)
                    option text = STRING_TOKEN(STR_X16),      value = IIO_BIFURCATE_xxxxxx16, flags = RESET_REQUIRED;
#ifdef SPR_HOST
                      option text = STRING_TOKEN(STR_X2X2X4X8),         value = IIO_BIFURCATE_x2x2x4x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X8),         value = IIO_BIFURCATE_x4x2x2x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X2X2X4),         value = IIO_BIFURCATE_x8x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X4X2X2),         value = IIO_BIFURCATE_x8x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X4X4),       value = IIO_BIFURCATE_x2x2x4x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X4X4),       value = IIO_BIFURCATE_x4x2x2x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X2X2X4),       value = IIO_BIFURCATE_x4x4x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X4X2X2),       value = IIO_BIFURCATE_x4x4x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X8),       value = IIO_BIFURCATE_x2x2x2x2x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X2X2X2X2),       value = IIO_BIFURCATE_x8x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X4X4),     value = IIO_BIFURCATE_x2x2x2x2x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X2X2X4),     value = IIO_BIFURCATE_x2x2x4x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X4X2X2),     value = IIO_BIFURCATE_x2x2x4x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X2X2X4),     value = IIO_BIFURCATE_x4x2x2x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X4X2X2),     value = IIO_BIFURCATE_x4x2x2x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X2X2X2X2),     value = IIO_BIFURCATE_x4x4x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X2X2X4),   value = IIO_BIFURCATE_x2x2x2x2x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X4X2X2),   value = IIO_BIFURCATE_x2x2x2x2x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X2X2X2X2),   value = IIO_BIFURCATE_x2x2x4x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X2X2X2X2),   value = IIO_BIFURCATE_x4x2x2x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X2X2X2X2), value = IIO_BIFURCATE_x2x2x2x2x2x2x2x2, flags = RESET_REQUIRED;
#endif // SPR_HOST

                endoneof;
            endif;
            //
            // Completion Timeout
            //
            oneof varid = SOCKET_IIO_CONFIGURATION.CompletionTimeout[2],
                prompt  = STRING_TOKEN(STR_IIO_COMPLETION_TIMEOUT_PROMPT),
                help    = STRING_TOKEN(STR_IIO_COMPLETION_TIMEOUT_HELP),
                option text = STRING_TOKEN(STR_YES), value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
                option text = STRING_TOKEN(STR_NO),  value = 1, flags = RESET_REQUIRED;
            endoneof;
            //
            // Completion Timeout Value
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.CompletionTimeout[2] == 1;
                oneof varid = SOCKET_IIO_CONFIGURATION.CompletionTimeoutValue[2],
                    prompt  = STRING_TOKEN(STR_IIO_COMPLETION_TIMEOUT_VALUE_PROMPT),
                    help    = STRING_TOKEN(STR_IIO_COMPLETION_TIMEOUT_VALUE_HELP),
                    option text = STRING_TOKEN(STR_CTO_RANGE_DEF), value = 0,  flags = RESET_REQUIRED;
                  suppressif ideqvallist SOCKET_COMMONRC_CONFIGURATION.CpuType == CPU_SKX CPU_CLX CPU_CPX CPU_SNR;
                    option text = STRING_TOKEN(STR_CTO_RANGE_A0),  value = 1,  flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_CTO_RANGE_A1),  value = 2,  flags = RESET_REQUIRED;
                  endif;
                    option text = STRING_TOKEN(STR_CTO_RANGE_B0),  value = 5,  flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_CTO_RANGE_B1),  value = 6,  flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_CTO_RANGE_C0),  value = 9,  flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
                    option text = STRING_TOKEN(STR_CTO_RANGE_C1),  value = 10, flags = RESET_REQUIRED;
                  suppressif NOT ideqvallist SOCKET_COMMONRC_CONFIGURATION.CpuType == CPU_SKX CPU_CLX CPU_CPX CPU_SNR;
                    option text = STRING_TOKEN(STR_CTO_RANGE_D0),  value = 13, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_CTO_RANGE_D1),  value = 14, flags = RESET_REQUIRED;
                  endif;
                endoneof;
            endif;

            oneof varid     = SOCKET_IIO_CONFIGURATION.RpCorrectableErrorEsc[2],
                prompt          = STRING_TOKEN(STR_RP_CORRECTABLE_ERR_2),
                help            = STRING_TOKEN(STR_RP_CORRECTABLE_ERR_HELP),
                option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
                option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
            endoneof;

            oneof varid     = SOCKET_IIO_CONFIGURATION.RpUncorrectableNonFatalErrorEsc[2],
                prompt          = STRING_TOKEN(STR_RP_UNCORRECTABLE_ERR_NONFATAL_2),
                help            = STRING_TOKEN(STR_RP_UNCORRECTABLE_ERR_NONFATAL_HELP),
                option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
                option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
            endoneof;

            oneof varid     = SOCKET_IIO_CONFIGURATION.RpUncorrectableFatalErrorEsc[2],
                prompt          = STRING_TOKEN(STR_RP_UNCORRECTABLE_ERR_FATAL_2),
                help            = STRING_TOKEN(STR_RP_UNCORRECTABLE_ERR_FATAL_HELP),
                option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
                option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
            endoneof;
            goto VFR_FORMID_CPU_TRACE_HUB_IIO2,
                prompt          = STRING_TOKEN(STR_TRACE_HUB_CONFIG_TITLE),
                help            = STRING_TOKEN(STR_TRACE_HUB_FORM_HELP);

            //
            // Jump to PCI Express Port0 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[42]==1;
                goto VFR_FORMID_PCIE_IIO2P0,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_0_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port1 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[43]==1;
                goto VFR_FORMID_PCIE_IIO2P1,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_1_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port2 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[44]==1;
                goto VFR_FORMID_PCIE_IIO2P2,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_2_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port3 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[45]==1;
                goto VFR_FORMID_PCIE_IIO2P3,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_3_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port4 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[46]==1;
                goto VFR_FORMID_PCIE_IIO2P4,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_4_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port5 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[47]==1;
                goto VFR_FORMID_PCIE_IIO2P5,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_5_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port6 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[48]==1;
                goto VFR_FORMID_PCIE_IIO2P6,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_6_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port7 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[49]==1;
                goto VFR_FORMID_PCIE_IIO2P7,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_7_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port8 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[50]==1;
                goto VFR_FORMID_PCIE_IIO2P8,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_8_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port9 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[51]==1;
                goto VFR_FORMID_PCIE_IIO2P9,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_9_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port10 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[52]==1;
                goto VFR_FORMID_PCIE_IIO2P10,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_10_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port11 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[53]==1;
                goto VFR_FORMID_PCIE_IIO2P11,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_11_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port12 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[54]==1;
                goto VFR_FORMID_PCIE_IIO2P12,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_12_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port13 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[55]==1;
                goto VFR_FORMID_PCIE_IIO2P13,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_13_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port14 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[56]==1;
                goto VFR_FORMID_PCIE_IIO2P14,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_14_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port15 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[57]==1;
                goto VFR_FORMID_PCIE_IIO2P15,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_15_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port16 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[58]==1;
                goto VFR_FORMID_PCIE_IIO2P16,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_16_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port17 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[59]==1;
                goto VFR_FORMID_PCIE_IIO2P17,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_17_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port18 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[60]==1;
                goto VFR_FORMID_PCIE_IIO2P18,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_18_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port19 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[61]==1;
                goto VFR_FORMID_PCIE_IIO2P19,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_19_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port20 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[62]==1;
                goto VFR_FORMID_PCIE_IIO2P20,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_20_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;
        endform;
#endif

#if MAX_SOCKET > 3
//
//---------- IIO 3 ------------
//
        form formid = VFR_FORMID_IIO3,
            title   = STRING_TOKEN(STR_IIO3_TITLE);

            suppressif  ideqval SOCKET_IIO_CONFIGURATION.PcieBiosTrainEnable == 0x00;
                oneof varid = SOCKET_IIO_CONFIGURATION.ConfigIOU0[3],
                    prompt  = STRING_TOKEN(STR_PCIE_IOU0_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_IOUX_HELP_PROMPT),
                    option text = STRING_TOKEN(STR_AUTO),     value = IIO_BIFURCATE_AUTO, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
                    option text = STRING_TOKEN(STR_X4X4X4X4), value = IIO_BIFURCATE_x4x4x4x4, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X4X4X8),   value = IIO_BIFURCATE_x4x4xxx8, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X8X4X4),   value = IIO_BIFURCATE_xxx8x4x4, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X8X8),     value = IIO_BIFURCATE_xxx8xxx8, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X16),      value = IIO_BIFURCATE_xxxxxx16, flags = RESET_REQUIRED;
#ifdef SPR_HOST
                      option text = STRING_TOKEN(STR_X2X2X4X8),         value = IIO_BIFURCATE_x2x2x4x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X8),         value = IIO_BIFURCATE_x4x2x2x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X2X2X4),         value = IIO_BIFURCATE_x8x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X4X2X2),         value = IIO_BIFURCATE_x8x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X4X4),       value = IIO_BIFURCATE_x2x2x4x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X4X4),       value = IIO_BIFURCATE_x4x2x2x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X2X2X4),       value = IIO_BIFURCATE_x4x4x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X4X2X2),       value = IIO_BIFURCATE_x4x4x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X8),       value = IIO_BIFURCATE_x2x2x2x2x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X2X2X2X2),       value = IIO_BIFURCATE_x8x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X4X4),     value = IIO_BIFURCATE_x2x2x2x2x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X2X2X4),     value = IIO_BIFURCATE_x2x2x4x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X4X2X2),     value = IIO_BIFURCATE_x2x2x4x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X2X2X4),     value = IIO_BIFURCATE_x4x2x2x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X4X2X2),     value = IIO_BIFURCATE_x4x2x2x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X2X2X2X2),     value = IIO_BIFURCATE_x4x4x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X2X2X4),   value = IIO_BIFURCATE_x2x2x2x2x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X4X2X2),   value = IIO_BIFURCATE_x2x2x2x2x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X2X2X2X2),   value = IIO_BIFURCATE_x2x2x4x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X2X2X2X2),   value = IIO_BIFURCATE_x4x2x2x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X2X2X2X2), value = IIO_BIFURCATE_x2x2x2x2x2x2x2x2, flags = RESET_REQUIRED;
#endif // SPR_HOST

                endoneof;
                oneof varid = SOCKET_IIO_CONFIGURATION.ConfigIOU1[3],
                    prompt  = STRING_TOKEN(STR_PCIE_IOU1_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_IOUX_HELP_PROMPT),
                    option text = STRING_TOKEN(STR_AUTO),     value = IIO_BIFURCATE_AUTO, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
                    option text = STRING_TOKEN(STR_X4X4X4X4), value = IIO_BIFURCATE_x4x4x4x4, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X4X4X8),   value = IIO_BIFURCATE_x4x4xxx8, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X8X4X4),   value = IIO_BIFURCATE_xxx8x4x4, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X8X8),     value = IIO_BIFURCATE_xxx8xxx8, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X16),      value = IIO_BIFURCATE_xxxxxx16, flags = RESET_REQUIRED;
#ifdef SPR_HOST
                      option text = STRING_TOKEN(STR_X2X2X4X8),         value = IIO_BIFURCATE_x2x2x4x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X8),         value = IIO_BIFURCATE_x4x2x2x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X2X2X4),         value = IIO_BIFURCATE_x8x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X4X2X2),         value = IIO_BIFURCATE_x8x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X4X4),       value = IIO_BIFURCATE_x2x2x4x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X4X4),       value = IIO_BIFURCATE_x4x2x2x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X2X2X4),       value = IIO_BIFURCATE_x4x4x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X4X2X2),       value = IIO_BIFURCATE_x4x4x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X8),       value = IIO_BIFURCATE_x2x2x2x2x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X2X2X2X2),       value = IIO_BIFURCATE_x8x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X4X4),     value = IIO_BIFURCATE_x2x2x2x2x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X2X2X4),     value = IIO_BIFURCATE_x2x2x4x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X4X2X2),     value = IIO_BIFURCATE_x2x2x4x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X2X2X4),     value = IIO_BIFURCATE_x4x2x2x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X4X2X2),     value = IIO_BIFURCATE_x4x2x2x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X2X2X2X2),     value = IIO_BIFURCATE_x4x4x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X2X2X4),   value = IIO_BIFURCATE_x2x2x2x2x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X4X2X2),   value = IIO_BIFURCATE_x2x2x2x2x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X2X2X2X2),   value = IIO_BIFURCATE_x2x2x4x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X2X2X2X2),   value = IIO_BIFURCATE_x4x2x2x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X2X2X2X2), value = IIO_BIFURCATE_x2x2x2x2x2x2x2x2, flags = RESET_REQUIRED;
#endif // SPR_HOST

                endoneof;
                oneof varid = SOCKET_IIO_CONFIGURATION.ConfigIOU2[3],
                    prompt  = STRING_TOKEN(STR_PCIE_IOU2_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_IOUX_HELP_PROMPT),
                    option text = STRING_TOKEN(STR_AUTO),     value = IIO_BIFURCATE_AUTO, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
                    option text = STRING_TOKEN(STR_X4X4X4X4), value = IIO_BIFURCATE_x4x4x4x4, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X4X4X8),   value = IIO_BIFURCATE_x4x4xxx8, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X8X4X4),   value = IIO_BIFURCATE_xxx8x4x4, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X8X8),     value = IIO_BIFURCATE_xxx8xxx8, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_X16),      value = IIO_BIFURCATE_xxxxxx16, flags = RESET_REQUIRED;
#ifdef SPR_HOST
                      option text = STRING_TOKEN(STR_X2X2X4X8),         value = IIO_BIFURCATE_x2x2x4x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X8),         value = IIO_BIFURCATE_x4x2x2x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X2X2X4),         value = IIO_BIFURCATE_x8x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X4X2X2),         value = IIO_BIFURCATE_x8x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X4X4),       value = IIO_BIFURCATE_x2x2x4x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X4X4),       value = IIO_BIFURCATE_x4x2x2x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X2X2X4),       value = IIO_BIFURCATE_x4x4x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X4X2X2),       value = IIO_BIFURCATE_x4x4x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X8),       value = IIO_BIFURCATE_x2x2x2x2x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X2X2X2X2),       value = IIO_BIFURCATE_x8x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X4X4),     value = IIO_BIFURCATE_x2x2x2x2x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X2X2X4),     value = IIO_BIFURCATE_x2x2x4x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X4X2X2),     value = IIO_BIFURCATE_x2x2x4x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X2X2X4),     value = IIO_BIFURCATE_x4x2x2x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X4X2X2),     value = IIO_BIFURCATE_x4x2x2x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X2X2X2X2),     value = IIO_BIFURCATE_x4x4x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X2X2X4),   value = IIO_BIFURCATE_x2x2x2x2x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X4X2X2),   value = IIO_BIFURCATE_x2x2x2x2x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X2X2X2X2),   value = IIO_BIFURCATE_x2x2x4x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X2X2X2X2),   value = IIO_BIFURCATE_x4x2x2x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X2X2X2X2), value = IIO_BIFURCATE_x2x2x2x2x2x2x2x2, flags = RESET_REQUIRED;
#endif // SPR_HOST

                endoneof;
                oneof varid = SOCKET_IIO_CONFIGURATION.ConfigIOU3[3],
                    prompt  = STRING_TOKEN(STR_PCIE_IOU3_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_IOUX_HELP_PROMPT),
                    option text = STRING_TOKEN(STR_AUTO),     value = IIO_BIFURCATE_AUTO, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
#if defined(ICX_HOST) || defined(SPR_HOST) || defined(CPX_HOST)
                      option text = STRING_TOKEN(STR_X4X4X4X4), value = IIO_BIFURCATE_x4x4x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X8),   value = IIO_BIFURCATE_x4x4xxx8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X4X4),   value = IIO_BIFURCATE_xxx8x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X8),     value = IIO_BIFURCATE_xxx8xxx8, flags = RESET_REQUIRED;
#endif // ICX_HOST || SPR_HOST || defined(CPX_HOST)
                    option text = STRING_TOKEN(STR_X16),      value = IIO_BIFURCATE_xxxxxx16, flags = RESET_REQUIRED;
#ifdef SPR_HOST
                      option text = STRING_TOKEN(STR_X2X2X4X8),         value = IIO_BIFURCATE_x2x2x4x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X8),         value = IIO_BIFURCATE_x4x2x2x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X2X2X4),         value = IIO_BIFURCATE_x8x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X4X2X2),         value = IIO_BIFURCATE_x8x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X4X4),       value = IIO_BIFURCATE_x2x2x4x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X4X4),       value = IIO_BIFURCATE_x4x2x2x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X2X2X4),       value = IIO_BIFURCATE_x4x4x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X4X2X2),       value = IIO_BIFURCATE_x4x4x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X8),       value = IIO_BIFURCATE_x2x2x2x2x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X2X2X2X2),       value = IIO_BIFURCATE_x8x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X4X4),     value = IIO_BIFURCATE_x2x2x2x2x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X2X2X4),     value = IIO_BIFURCATE_x2x2x4x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X4X2X2),     value = IIO_BIFURCATE_x2x2x4x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X2X2X4),     value = IIO_BIFURCATE_x4x2x2x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X4X2X2),     value = IIO_BIFURCATE_x4x2x2x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X2X2X2X2),     value = IIO_BIFURCATE_x4x4x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X2X2X4),   value = IIO_BIFURCATE_x2x2x2x2x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X4X2X2),   value = IIO_BIFURCATE_x2x2x2x2x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X2X2X2X2),   value = IIO_BIFURCATE_x2x2x4x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X2X2X2X2),   value = IIO_BIFURCATE_x4x2x2x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X2X2X2X2), value = IIO_BIFURCATE_x2x2x2x2x2x2x2x2, flags = RESET_REQUIRED;
#endif // SPR_HOST

                endoneof;
                oneof varid = SOCKET_IIO_CONFIGURATION.ConfigIOU4[3],
                    prompt  = STRING_TOKEN(STR_PCIE_IOU4_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_IOUX_HELP_PROMPT),
                    option text = STRING_TOKEN(STR_AUTO),     value = IIO_BIFURCATE_AUTO, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
#if defined(ICX_HOST) || defined(SPR_HOST) || defined(CPX_HOST)
                      option text = STRING_TOKEN(STR_X4X4X4X4), value = IIO_BIFURCATE_x4x4x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X8),   value = IIO_BIFURCATE_x4x4xxx8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X4X4),   value = IIO_BIFURCATE_xxx8x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X8),     value = IIO_BIFURCATE_xxx8xxx8, flags = RESET_REQUIRED;
#endif // ICX_HOST || SPR_HOST || defined(CPX_HOST)
                    option text = STRING_TOKEN(STR_X16),      value = IIO_BIFURCATE_xxxxxx16, flags = RESET_REQUIRED;
#ifdef SPR_HOST
                      option text = STRING_TOKEN(STR_X2X2X4X8),         value = IIO_BIFURCATE_x2x2x4x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X8),         value = IIO_BIFURCATE_x4x2x2x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X2X2X4),         value = IIO_BIFURCATE_x8x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X4X2X2),         value = IIO_BIFURCATE_x8x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X4X4),       value = IIO_BIFURCATE_x2x2x4x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X4X4),       value = IIO_BIFURCATE_x4x2x2x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X2X2X4),       value = IIO_BIFURCATE_x4x4x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X4X2X2),       value = IIO_BIFURCATE_x4x4x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X8),       value = IIO_BIFURCATE_x2x2x2x2x8, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X8X2X2X2X2),       value = IIO_BIFURCATE_x8x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X4X4),     value = IIO_BIFURCATE_x2x2x2x2x4x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X2X2X4),     value = IIO_BIFURCATE_x2x2x4x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X4X2X2),     value = IIO_BIFURCATE_x2x2x4x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X2X2X4),     value = IIO_BIFURCATE_x4x2x2x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X4X2X2),     value = IIO_BIFURCATE_x4x2x2x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X4X2X2X2X2),     value = IIO_BIFURCATE_x4x4x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X2X2X4),   value = IIO_BIFURCATE_x2x2x2x2x2x2x4, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X4X2X2),   value = IIO_BIFURCATE_x2x2x2x2x4x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X4X2X2X2X2),   value = IIO_BIFURCATE_x2x2x4x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X4X2X2X2X2X2X2),   value = IIO_BIFURCATE_x4x2x2x2x2x2x2, flags = RESET_REQUIRED;
                      option text = STRING_TOKEN(STR_X2X2X2X2X2X2X2X2), value = IIO_BIFURCATE_x2x2x2x2x2x2x2x2, flags = RESET_REQUIRED;
#endif // SPR_HOST

                endoneof;
            endif;
            //
            // Completion Timeout
            //
            oneof varid = SOCKET_IIO_CONFIGURATION.CompletionTimeout[3],
                prompt  = STRING_TOKEN(STR_IIO_COMPLETION_TIMEOUT_PROMPT),
                help    = STRING_TOKEN(STR_IIO_COMPLETION_TIMEOUT_HELP),
                option text = STRING_TOKEN(STR_YES),  value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
                option text = STRING_TOKEN(STR_NO),   value = 1, flags = RESET_REQUIRED;
            endoneof;
            //
            // Completion Timeout Value
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.CompletionTimeout[3] == 1;
                oneof varid = SOCKET_IIO_CONFIGURATION.CompletionTimeoutValue[3],
                    prompt  = STRING_TOKEN(STR_IIO_COMPLETION_TIMEOUT_VALUE_PROMPT),
                    help    = STRING_TOKEN(STR_IIO_COMPLETION_TIMEOUT_VALUE_HELP),
                    option text = STRING_TOKEN(STR_CTO_RANGE_DEF), value = 0,  flags = RESET_REQUIRED;
                  suppressif ideqvallist SOCKET_COMMONRC_CONFIGURATION.CpuType == CPU_SKX CPU_CLX CPU_CPX CPU_SNR;
                    option text = STRING_TOKEN(STR_CTO_RANGE_A0),  value = 1,  flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_CTO_RANGE_A1),  value = 2,  flags = RESET_REQUIRED;
                  endif;
                    option text = STRING_TOKEN(STR_CTO_RANGE_B0),  value = 5,  flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_CTO_RANGE_B1),  value = 6,  flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_CTO_RANGE_C0),  value = 9,  flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
                    option text = STRING_TOKEN(STR_CTO_RANGE_C1),  value = 10, flags = RESET_REQUIRED;
                  suppressif NOT ideqvallist SOCKET_COMMONRC_CONFIGURATION.CpuType == CPU_SKX CPU_CLX CPU_CPX CPU_SNR;
                    option text = STRING_TOKEN(STR_CTO_RANGE_D0),  value = 13, flags = RESET_REQUIRED;
                    option text = STRING_TOKEN(STR_CTO_RANGE_D1),  value = 14, flags = RESET_REQUIRED;
                  endif;
                endoneof;
            endif;

            oneof varid     = SOCKET_IIO_CONFIGURATION.RpCorrectableErrorEsc[3],
                prompt          = STRING_TOKEN(STR_RP_CORRECTABLE_ERR_3),
                help            = STRING_TOKEN(STR_RP_CORRECTABLE_ERR_HELP),
                option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
                option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
            endoneof;

            oneof varid     = SOCKET_IIO_CONFIGURATION.RpUncorrectableNonFatalErrorEsc[3],
                prompt          = STRING_TOKEN(STR_RP_UNCORRECTABLE_ERR_NONFATAL_3),
                help            = STRING_TOKEN(STR_RP_UNCORRECTABLE_ERR_NONFATAL_HELP),
                option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
                option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
            endoneof;

            oneof varid     = SOCKET_IIO_CONFIGURATION.RpUncorrectableFatalErrorEsc[3],
                prompt          = STRING_TOKEN(STR_RP_UNCORRECTABLE_ERR_FATAL_3),
                help            = STRING_TOKEN(STR_RP_UNCORRECTABLE_ERR_FATAL_HELP),
                option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
                option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
            endoneof;
            goto VFR_FORMID_CPU_TRACE_HUB_IIO3,
                prompt          = STRING_TOKEN(STR_TRACE_HUB_CONFIG_TITLE),
                help            = STRING_TOKEN(STR_TRACE_HUB_FORM_HELP);

            //
            // Jump to PCI Express Port0 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[63]==1;
                goto VFR_FORMID_PCIE_IIO3P0,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_0_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port1 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[64]==1;
                goto VFR_FORMID_PCIE_IIO3P1,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_1_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port2 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[65]==1;
                goto VFR_FORMID_PCIE_IIO3P2,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_2_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port3 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[66]==1;
                goto VFR_FORMID_PCIE_IIO3P3,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_3_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port4 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[67]==1;
                goto VFR_FORMID_PCIE_IIO3P4,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_4_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port5 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[68]==1;
                goto VFR_FORMID_PCIE_IIO3P5,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_5_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port6 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[69]==1;
                goto VFR_FORMID_PCIE_IIO3P6,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_6_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port7 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[70]==1;
                goto VFR_FORMID_PCIE_IIO3P7,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_7_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port8 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[71]==1;
                goto VFR_FORMID_PCIE_IIO3P8,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_8_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port9 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[72]==1;
                goto VFR_FORMID_PCIE_IIO3P9,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_9_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port10 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[73]==1;
                goto VFR_FORMID_PCIE_IIO3P10,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_10_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port11 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[74]==1;
                goto VFR_FORMID_PCIE_IIO3P11,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_11_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port12 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[75]==1;
                goto VFR_FORMID_PCIE_IIO3P12,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_12_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port13 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[76]==1;
                goto VFR_FORMID_PCIE_IIO3P13,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_13_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port14 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[77]==1;
                goto VFR_FORMID_PCIE_IIO3P14,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_14_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port15 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[78]==1;
                goto VFR_FORMID_PCIE_IIO3P15,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_15_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port16 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[79]==1;
                goto VFR_FORMID_PCIE_IIO3P16,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_16_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port17 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[80]==1;
                goto VFR_FORMID_PCIE_IIO3P17,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_17_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port18 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[81]==1;
                goto VFR_FORMID_PCIE_IIO3P18,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_18_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port19 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[82]==1;
                goto VFR_FORMID_PCIE_IIO3P19,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_19_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;

            //
            // Jump to PCI Express Port20 Configuration Form
            //
            suppressif ideqval SOCKET_IIO_CONFIGURATION.HidePEXPMenu[83]==1;
                goto VFR_FORMID_PCIE_IIO3P20,
                    prompt  = STRING_TOKEN(STR_PCIE_PORT_20_PROMPT),
                    help    = STRING_TOKEN(STR_PCIE_PORT_PROMPT_HELP);
            endif;
        endform;
#endif
//--------------------------------------------------------------------------//
//
//  IIO IOAPIC Configuration
//
form formid = VFR_FORMID_IIO_IOAPIC,
    title  = STRING_TOKEN(STR_IIO_IOAPIC_FORM_TITLE);
    //
    // IIO0 IOAPIC Enable
    //
    suppressif ideqval SOCKET_IIO_CONFIGURATION.IioPresent[0] == 0;
        subtitle text = STRING_TOKEN(STR_HORIZONTAL_LINE);
        subtitle text = STRING_TOKEN(STR_IIO0_TITLE);
        subtitle text = STRING_TOKEN(STR_HORIZONTAL_LINE);

        #undef  INDEX
        #define INDEX   0
        #include "IioIoApicSetup.hfr"

        #undef  INDEX
        #define INDEX   1
        #include "IioIoApicSetup.hfr"

        #undef  INDEX
        #define INDEX   2
        #include "IioIoApicSetup.hfr"

        #undef  INDEX
        #define INDEX   3
        #include "IioIoApicSetup.hfr"

        #undef  INDEX
        #define INDEX   4
        #include "IioIoApicSetup.hfr"

        #undef  INDEX
        #define INDEX   5
        #include "IioIoApicSetup.hfr"
    endif;

#if MAX_SOCKET > 1
      //
      // IIO1 IOAPIC Enable
      //
      suppressif ideqval SOCKET_IIO_CONFIGURATION.IioPresent[1] == 0;
          subtitle text = STRING_TOKEN(STR_HORIZONTAL_LINE);
          subtitle text = STRING_TOKEN(STR_IIO1_TITLE);
          subtitle text = STRING_TOKEN(STR_HORIZONTAL_LINE);

          #undef  INDEX
          #define INDEX   6
          #include "IioIoApicSetup.hfr"

          #undef  INDEX
          #define INDEX   7
          #include "IioIoApicSetup.hfr"

          #undef  INDEX
          #define INDEX   8
          #include "IioIoApicSetup.hfr"

          #undef  INDEX
          #define INDEX   9
          #include "IioIoApicSetup.hfr"

          #undef  INDEX
          #define INDEX   10
          #include "IioIoApicSetup.hfr"

          #undef  INDEX
          #define INDEX   11
          #include "IioIoApicSetup.hfr"
      endif;
#endif

#if MAX_SOCKET > 2
      //
      // IIO2 IOAPIC Enable
      //
      suppressif ideqval SOCKET_IIO_CONFIGURATION.IioPresent[2] == 0;
          subtitle text = STRING_TOKEN(STR_HORIZONTAL_LINE);
          subtitle text = STRING_TOKEN(STR_IIO2_TITLE);
          subtitle text = STRING_TOKEN(STR_HORIZONTAL_LINE);

          #undef  INDEX
          #define INDEX   12
          #include "IioIoApicSetup.hfr"

          #undef  INDEX
          #define INDEX   13
          #include "IioIoApicSetup.hfr"

          #undef  INDEX
          #define INDEX   14
          #include "IioIoApicSetup.hfr"

          #undef  INDEX
          #define INDEX   15
          #include "IioIoApicSetup.hfr"

          #undef  INDEX
          #define INDEX   16
          #include "IioIoApicSetup.hfr"

          #undef  INDEX
          #define INDEX   17
          #include "IioIoApicSetup.hfr"
      endif;
#endif

#if MAX_SOCKET > 3
      //
      // IIO3 IOAPIC Enable
      //
      suppressif ideqval SOCKET_IIO_CONFIGURATION.IioPresent[3] == 0;
          subtitle text = STRING_TOKEN(STR_HORIZONTAL_LINE);
          subtitle text = STRING_TOKEN(STR_IIO3_TITLE);
          subtitle text = STRING_TOKEN(STR_HORIZONTAL_LINE);

          #undef  INDEX
          #define INDEX   18
          #include "IioIoApicSetup.hfr"

          #undef  INDEX
          #define INDEX   19
          #include "IioIoApicSetup.hfr"

          #undef  INDEX
          #define INDEX   20
          #include "IioIoApicSetup.hfr"

          #undef  INDEX
          #define INDEX   21
          #include "IioIoApicSetup.hfr"

          #undef  INDEX
          #define INDEX   22
          #include "IioIoApicSetup.hfr"

          #undef  INDEX
          #define INDEX   23
          #include "IioIoApicSetup.hfr"
      endif;
#endif
    subtitle text = STRING_TOKEN(STR_HORIZONTAL_LINE);
endform;
  //
  // Intel+ VT for Directed I/O (VT-d) Configuration
  //
  form formid = VFR_FORMID_VTD,

      title  = STRING_TOKEN(STR_IIO_VTD_CFG_FORM_TITLE);

      subtitle text = STRING_TOKEN(STR_IIO_VTD_CFG_FORM_TITLE);
      subtitle text = STRING_TOKEN(STR_HORIZONTAL_LINE);
      subtitle text = STRING_TOKEN(STR_NULL_STRING);

      oneof varid = SOCKET_IIO_CONFIGURATION.VTdSupport,
              prompt  = STRING_TOKEN(STR_IIO_VTD_SUPPORT_PROMPT),
              help    = STRING_TOKEN(STR_IIO_VTD_SUPPORT_HELP),
#ifdef ICX_HOST
              option text = STRING_TOKEN(STR_YES),  value = 1, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
              option text = STRING_TOKEN(STR_NO),   value = 0, flags = RESET_REQUIRED;
#else
              option text = STRING_TOKEN(STR_YES),  value = 1, flags = RESET_REQUIRED;
              option text = STRING_TOKEN(STR_NO),   value = 0, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
#endif
      endoneof;

      suppressif  ideqval SOCKET_IIO_CONFIGURATION.VTdSupport == 0x00;
          oneof varid = SOCKET_IIO_CONFIGURATION.InterruptRemap,
              prompt  = STRING_TOKEN(STR_IIO_VTD_INT_REMAP_PROMPT),
              help    = STRING_TOKEN(STR_IIO_VTD_INT_REMAP_HELP),
              option text = STRING_TOKEN(STR_AUTO), value = IIO_OPTION_AUTO,  flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
              option text = STRING_TOKEN(STR_YES),  value = IIO_OPTION_ENABLE, flags = RESET_REQUIRED;
              option text = STRING_TOKEN(STR_NO),   value = IIO_OPTION_DISABLE, flags = RESET_REQUIRED;
          endoneof;

          suppressif NOT ideqvallist SOCKET_COMMONRC_CONFIGURATION.CpuType == CPU_SKX CPU_CLX CPU_CPX;
            oneof varid = SOCKET_IIO_CONFIGURATION.PostedInterrupt,
                prompt  = STRING_TOKEN(STR_IIO_VTD_POSTEDINTERRUPT_PROMPT),
                help    = STRING_TOKEN(STR_IIO_VTD_POSTEDINTERRUPT_HELP),
                option text = STRING_TOKEN(STR_YES),  value = 1, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
                option text = STRING_TOKEN(STR_NO),   value = 0, flags = RESET_REQUIRED;
            endoneof;

            oneof varid = SOCKET_IIO_CONFIGURATION.ATS,
                prompt  = STRING_TOKEN(STR_IIO_VTD_ATS_PROMPT),
                help    = STRING_TOKEN(STR_IIO_VTD_ATS_HELP),
                option text = STRING_TOKEN(STR_YES),  value = 1, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
                option text = STRING_TOKEN(STR_NO),   value = 0, flags = RESET_REQUIRED ;
            endoneof;

            oneof varid = SOCKET_IIO_CONFIGURATION.CoherencySupport,
                prompt  = STRING_TOKEN(STR_IIO_VTD_COHERENCY_PROMPT),
                help    = STRING_TOKEN(STR_IIO_VTD_COHERENCY_HELP),
                option text = STRING_TOKEN(STR_YES),  value = 1, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
                option text = STRING_TOKEN(STR_NO),   value = 0, flags = RESET_REQUIRED;
            endoneof;
          endif;
      endif;
  endform;

//
// VMD Configuration form
//
form formid = VFR_FORMID_VMD,
  title  = STRING_TOKEN(STR_IIO_VMD_CFG_FORM_TITLE);
  subtitle text = STRING_TOKEN(STR_IIO_VMD_CFG_FORM_TITLE);
  subtitle text = STRING_TOKEN(STR_HORIZONTAL_LINE);
  subtitle text = STRING_TOKEN(STR_NULL_STRING);

  //
  // VMD menus for each present IioIndex (~socket)
  //
  #if MAX_SOCKET > 0
    suppressif ideqval SOCKET_IIO_CONFIGURATION.IioPresent[0] == 0;
        goto VFR_FORMID_VMD_IIO0,
            prompt  = STRING_TOKEN(STR_IIO_VMD_FORM_IIO_0),
            help    = STRING_TOKEN(STR_NULL_STRING);
    endif;
    #if MAX_SOCKET > 1
      suppressif ideqval SOCKET_IIO_CONFIGURATION.IioPresent[1] == 0;
          goto VFR_FORMID_VMD_IIO1,
              prompt  = STRING_TOKEN(STR_IIO_VMD_FORM_IIO_1),
              help    = STRING_TOKEN(STR_NULL_STRING);
      endif;
      #if MAX_SOCKET > 2
        suppressif ideqval SOCKET_IIO_CONFIGURATION.IioPresent[2] == 0;
            goto VFR_FORMID_VMD_IIO2,
                prompt  = STRING_TOKEN(STR_IIO_VMD_FORM_IIO_2),
                help    = STRING_TOKEN(STR_NULL_STRING);
        endif;
        #if MAX_SOCKET > 3
          suppressif ideqval SOCKET_IIO_CONFIGURATION.IioPresent[3] == 0;
              goto VFR_FORMID_VMD_IIO3,
                  prompt  = STRING_TOKEN(STR_IIO_VMD_FORM_IIO_3),
                  help    = STRING_TOKEN(STR_NULL_STRING);
          endif;
          #if MAX_SOCKET > 4
            suppressif ideqval SOCKET_IIO_CONFIGURATION.IioPresent[4] == 0;
                goto VFR_FORMID_VMD_IIO4,
                    prompt  = STRING_TOKEN(STR_IIO_VMD_FORM_IIO_4),
                    help    = STRING_TOKEN(STR_NULL_STRING);
            endif;
            #if MAX_SOCKET > 5
              suppressif ideqval SOCKET_IIO_CONFIGURATION.IioPresent[5] == 0;
                  goto VFR_FORMID_VMD_IIO5,
                      prompt  = STRING_TOKEN(STR_IIO_VMD_FORM_IIO_5),
                      help    = STRING_TOKEN(STR_NULL_STRING);
              endif;
              #if MAX_SOCKET > 6
                suppressif ideqval SOCKET_IIO_CONFIGURATION.IioPresent[6] == 0;
                    goto VFR_FORMID_VMD_IIO6,
                        prompt  = STRING_TOKEN(STR_IIO_VMD_FORM_IIO_6),
                        help    = STRING_TOKEN(STR_NULL_STRING);
                endif;
                #if MAX_SOCKET > 7
                  suppressif ideqval SOCKET_IIO_CONFIGURATION.IioPresent[7] == 0;
                      goto VFR_FORMID_VMD_IIO7,
                          prompt  = STRING_TOKEN(STR_IIO_VMD_FORM_IIO_7),
                          help    = STRING_TOKEN(STR_NULL_STRING);
                  endif;
                #endif // MAX_SOCKET > 7
              #endif // MAX_SOCKET > 6
            #endif // MAX_SOCKET > 5
          #endif // MAX_SOCKET > 4
        #endif // MAX_SOCKET > 3
      #endif // MAX_SOCKET > 2
    #endif // MAX_SOCKET > 1
  #endif // MAX_SOCKET > 0
endform; // VFR_FORMID_VMD

//
// PCIE SSD general Configuration
//
form formid = VFR_FORMID_PCIEAIC,
    title  = STRING_TOKEN(STR_IIO_PCIEAIC_CFG_FORM_TITLE);
    subtitle text = STRING_TOKEN(STR_IIO_PCIEAIC_CFG_FORM_TITLE);
    subtitle text = STRING_TOKEN(STR_HORIZONTAL_LINE);
    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    suppressif ideqval SOCKET_IIO_CONFIGURATION.IioPresent[0] == 0;
        goto VFR_FORMID_PCIEAIC_IIO0,
            prompt  = STRING_TOKEN(STR_IIO_PCIEAIC_IIO0_FORM_TITLE),
            help    = STRING_TOKEN(STR_NULL_STRING);
    endif;

#if MAX_SOCKET > 1
      suppressif ideqval SOCKET_IIO_CONFIGURATION.IioPresent[1] == 0;
          goto VFR_FORMID_PCIEAIC_IIO1,
              prompt  = STRING_TOKEN(STR_IIO_PCIEAIC_IIO1_FORM_TITLE),
              help    = STRING_TOKEN(STR_NULL_STRING);
      endif;
#endif

#if MAX_SOCKET > 2
      suppressif ideqval SOCKET_IIO_CONFIGURATION.IioPresent[2] == 0;
          goto VFR_FORMID_PCIEAIC_IIO2,
              prompt  = STRING_TOKEN(STR_IIO_PCIEAIC_IIO2_FORM_TITLE),
              help    = STRING_TOKEN(STR_NULL_STRING);
      endif;
#endif

#if MAX_SOCKET > 3
      suppressif ideqval SOCKET_IIO_CONFIGURATION.IioPresent[3] == 0;
          goto VFR_FORMID_PCIEAIC_IIO3,
              prompt  = STRING_TOKEN(STR_IIO_PCIEAIC_IIO3_FORM_TITLE),
              help    = STRING_TOKEN(STR_NULL_STRING);
      endif;
#endif
endform;
//
// PCIEAIC form menu on IIO0
//
form formid = VFR_FORMID_PCIEAIC_IIO0,
    title  = STRING_TOKEN(STR_IIO_PCIEAIC_IIO0_FORM_TITLE);
#ifdef ICX_HOST
      #undef  STACK
      #define STACK   0
      #include "IioPcieAICSetup10nm.hfr"
      #undef  STACK
      #define STACK   1
      #include "IioPcieAICSetup10nm.hfr"
      #undef  STACK
      #define STACK   2
      #include "IioPcieAICSetup10nm.hfr"
      #undef  STACK
      #define STACK   3
      #include "IioPcieAICSetup10nm.hfr"
      #undef  STACK
      #define STACK   4
      #include "IioPcieAICSetup10nm.hfr"
#else // #ifdef ICX_HOST
      #undef  STACK
      #define STACK   0
#if defined (SNR_HOST) || defined (ICXDE_HOST)
      #include "IioPcieAICSetup10nm.hfr"
#endif // #if defined (SNR_HOST) || defined (ICXDE_HOST)
#ifdef SKX_HOST
      #include "IioPcieAICSetup.hfr"
#endif // #ifdef SKX_HOST
      #undef  STACK
      #define STACK   1
#ifdef SKX_HOST
      #include "IioPcieAICSetup.hfr"
#endif // #ifdef SKX_HOST
      #undef  STACK
      #define STACK   2
#ifdef SKX_HOST
      #include "IioPcieAICSetup.hfr"
#endif // #ifdef SKX_HOST
#endif // #ifdef ICX_HOST
endform;    // End of PCIEAIC form menu on IIO0

#if MAX_SOCKET > 1
  //
  // PCIEAIC form menu on IIO1
  //
  form formid = VFR_FORMID_PCIEAIC_IIO1,
      title  = STRING_TOKEN(STR_IIO_PCIEAIC_IIO1_FORM_TITLE);
#ifdef ICX_HOST
        #undef  STACK
        #define STACK   5
        #include "IioPcieAICSetup10nm.hfr"
        #undef  STACK
        #define STACK   6
        #include "IioPcieAICSetup10nm.hfr"
        #undef  STACK
        #define STACK   7
        #include "IioPcieAICSetup10nm.hfr"
        #undef  STACK
        #define STACK   8
        #include "IioPcieAICSetup10nm.hfr"
        #undef  STACK
        #define STACK   9
        #include "IioPcieAICSetup10nm.hfr"
#else // #ifdef ICX_HOST
        #undef  STACK
        #define STACK   3
#ifdef SKX_HOST
        #include "IioPcieAICSetup.hfr"
#endif // #ifdef SKX_HOST
        #undef  STACK
        #define STACK   4
#ifdef SKX_HOST
        #include "IioPcieAICSetup.hfr"
#endif // #ifdef SKX_HOST
        #undef  STACK
        #define STACK   5
#ifdef SKX_HOST
        #include "IioPcieAICSetup.hfr"
#endif // #ifdef SKX_HOST
#endif // #ifdef ICX_HOST
  endform;    // End of PCIEAIC form menu on IIO1
#endif

#if MAX_SOCKET > 2
  //
  // PCIEAIC form menu on IIO2
  //
  form formid = VFR_FORMID_PCIEAIC_IIO2,
      title  = STRING_TOKEN(STR_IIO_PCIEAIC_IIO2_FORM_TITLE);
#ifdef ICX_HOST
        #undef  STACK
        #define STACK   10
        #include "IioPcieAICSetup10nm.hfr"
        #undef  STACK
        #define STACK   11
        #include "IioPcieAICSetup10nm.hfr"
        #undef  STACK
        #define STACK   12
        #include "IioPcieAICSetup10nm.hfr"
        #undef  STACK
        #define STACK   13
        #include "IioPcieAICSetup10nm.hfr"
        #undef  STACK
        #define STACK   14
        #include "IioPcieAICSetup10nm.hfr"
#else // #ifdef ICX_HOST
        #undef  STACK
        #define STACK   6
#ifdef SKX_HOST
        #include "IioPcieAICSetup.hfr"
#endif // #ifdef SKX_HOST
        #undef  STACK
        #define STACK   7
#ifdef SKX_HOST
        #include "IioPcieAICSetup.hfr"
#endif // #ifdef SKX_HOST
        #undef  STACK
        #define STACK   8
#ifdef SKX_HOST
        #include "IioPcieAICSetup.hfr"
#endif // #ifdef SKX_HOST
#endif // #ifdef ICX_HOST
  endform;    // End of PCIEAIC form menu on IIO2
#endif

#if MAX_SOCKET > 3
  //
  // PCIEAIC form menu on IIO3
  //
  form formid = VFR_FORMID_PCIEAIC_IIO3,
      title  = STRING_TOKEN(STR_IIO_PCIEAIC_IIO3_FORM_TITLE);
#ifdef ICX_HOST
        #undef  STACK
        #define STACK   15
        #include "IioPcieAICSetup10nm.hfr"
        #undef  STACK
        #define STACK   16
        #include "IioPcieAICSetup10nm.hfr"
        #undef  STACK
        #define STACK   17
        #include "IioPcieAICSetup10nm.hfr"
        #undef  STACK
        #define STACK   18
        #include "IioPcieAICSetup10nm.hfr"
        #undef  STACK
        #define STACK   19
        #include "IioPcieAICSetup10nm.hfr"
#else // #ifdef ICX_HOST
        #undef  STACK
        #define STACK   9
#ifdef SKX_HOST
        #include "IioPcieAICSetup.hfr"
#endif // #ifdef SKX_HOST
        #undef  STACK
        #define STACK   10
#ifdef SKX_HOST
        #include "IioPcieAICSetup.hfr"
#endif // #ifdef SKX_HOST
        #undef  STACK
        #define STACK   11
#ifdef SKX_HOST
        #include "IioPcieAICSetup.hfr"
#endif // #ifdef SKX_HOST
#endif // #ifdef ICX_HOST
  endform;    // End of PCIEAIC form menu on IIO3
#endif
//--------------------------------------------------------------------------//
//
// Option for each PCI-E slot Oprom
//
form formid = VFR_FORMID_IIO_PCIE_SLOT,
    title = STRING_TOKEN(STR_IIO_PCIE_SLOT_FORM_TITLE);
    //
    //  Explicit definition of PcieSlotItemCtrl configured by BIOS at runtime.
    //  If not explicitly declared, vfr compiler will set RESET_REQUIRED flag,
    //  potentially forcing reboot any time defaults are loaded.
    //
    suppressif TRUE;
        numeric varid = SOCKET_IIO_CONFIGURATION.PcieSlotItemCtrl,
        questionid = 0xDFF7,
        prompt  = STRING_TOKEN(STR_PCIE_SLOT_ITEM_CTRL_PROMPT),
        help    = STRING_TOKEN(STR_PCIE_SLOT_ITEM_CTRL_HELP),
        flags     = INTERACTIVE,
        minimum   = 0,
        maximum   = 255,
        step      = 1,
        default = 0, defaultstore = MyStandardDefault,
        default = 0, defaultstore = MyManufactureDefault,
        endnumeric;
    endif;

    oneof varid    = SOCKET_IIO_CONFIGURATION.PcieSlotOprom1,
    prompt   = STRING_TOKEN(STR_PCIE_SLOT1_OPROM_PROMPT),
    help     = STRING_TOKEN(STR_PCIE_SLOT1_OPROM_HELP),
    option text     = STRING_TOKEN(STR_DISABLE),    value = 0, flags = RESET_REQUIRED;
    option text     = STRING_TOKEN(STR_ENABLE),     value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    suppressif ideqval SOCKET_COMMONRC_CONFIGURATION.CpuType == CPU_SNR;

        oneof varid    = SOCKET_IIO_CONFIGURATION.PcieSlotOprom2,
        prompt   = STRING_TOKEN(STR_PCIE_SLOT2_OPROM_PROMPT),
        help     = STRING_TOKEN(STR_PCIE_SLOT2_OPROM_HELP),
        option text     = STRING_TOKEN(STR_DISABLE),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_ENABLE),     value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        endoneof;

        suppressif ideqval SOCKET_COMMONRC_CONFIGURATION.CpuType == CPU_ICXD;

            oneof varid    = SOCKET_IIO_CONFIGURATION.PcieSlotOprom3,
            prompt   = STRING_TOKEN(STR_PCIE_SLOT3_OPROM_PROMPT),
            help     = STRING_TOKEN(STR_PCIE_SLOT3_OPROM_HELP),
            option text     = STRING_TOKEN(STR_DISABLE),    value = 0, flags = RESET_REQUIRED;
            option text     = STRING_TOKEN(STR_ENABLE),     value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
            endoneof;

            oneof varid    = SOCKET_IIO_CONFIGURATION.PcieSlotOprom4,
            prompt   = STRING_TOKEN(STR_PCIE_SLOT4_OPROM_PROMPT),
            help     = STRING_TOKEN(STR_PCIE_SLOT4_OPROM_HELP),
            option text     = STRING_TOKEN(STR_DISABLE),    value = 0, flags = RESET_REQUIRED;
            option text     = STRING_TOKEN(STR_ENABLE),     value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
            endoneof;

            oneof varid    = SOCKET_IIO_CONFIGURATION.PcieSlotOprom5,
            prompt   = STRING_TOKEN(STR_PCIE_SLOT5_OPROM_PROMPT),
            help     = STRING_TOKEN(STR_PCIE_SLOT5_OPROM_HELP),
            option text     = STRING_TOKEN(STR_DISABLE),    value = 0, flags = RESET_REQUIRED;
            option text     = STRING_TOKEN(STR_ENABLE),     value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
            endoneof;

            oneof varid    = SOCKET_IIO_CONFIGURATION.PcieSlotOprom6,
            prompt   = STRING_TOKEN(STR_PCIE_SLOT6_OPROM_PROMPT),
            help     = STRING_TOKEN(STR_PCIE_SLOT6_OPROM_HELP),
            option text     = STRING_TOKEN(STR_DISABLE),    value = 0, flags = RESET_REQUIRED;
            option text     = STRING_TOKEN(STR_ENABLE),     value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
            endoneof;
             suppressif ideqval SOCKET_IIO_CONFIGURATION.PcieSlotItemCtrl < 1;

                oneof varid    = SOCKET_IIO_CONFIGURATION.PcieSlotOprom7,
                prompt   = STRING_TOKEN(STR_PCIE_SLOT7_OPROM_PROMPT),
                help     = STRING_TOKEN(STR_PCIE_SLOT7_OPROM_HELP),
                option text     = STRING_TOKEN(STR_DISABLE),    value = 0, flags = RESET_REQUIRED;
                option text     = STRING_TOKEN(STR_ENABLE),     value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
                endoneof;
            endif;
             suppressif ideqval SOCKET_IIO_CONFIGURATION.PcieSlotItemCtrl < 2;

                oneof varid    = SOCKET_IIO_CONFIGURATION.PcieSlotOprom8,
                prompt   = STRING_TOKEN(STR_PCIE_SLOT8_OPROM_PROMPT),
                help     = STRING_TOKEN(STR_PCIE_SLOT8_OPROM_HELP),
                option text     = STRING_TOKEN(STR_DISABLE),    value = 0, flags = RESET_REQUIRED;
                option text     = STRING_TOKEN(STR_ENABLE),     value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
                endoneof;
            endif;
        endif;
    endif;
endform;
//
// Intel IOAT Configuration
//
form formid = VFR_FORMID_IOAT_CONFIG,
    title = STRING_TOKEN(STR_IIO_IOAT_FORM);
    suppressif ideqval SOCKET_IIO_CONFIGURATION.IioPresent[0] == 0;
        goto VFR_FORMID_IIO0IOAT,
            prompt = STRING_TOKEN(STR_IIO_IOAT0_FORM),
            help = STRING_TOKEN(STR_NULL_STRING);
    endif;

#if MAX_SOCKET > 1
    suppressif ideqval SOCKET_IIO_CONFIGURATION.IioPresent[1] == 0;
        goto VFR_FORMID_IIO1IOAT,
            prompt = STRING_TOKEN(STR_IIO_IOAT1_FORM),
            help = STRING_TOKEN(STR_NULL_STRING);
    endif;
#endif

#if MAX_SOCKET > 2
    suppressif ideqval SOCKET_IIO_CONFIGURATION.IioPresent[2] == 0;
        goto VFR_FORMID_IIO2IOAT,
            prompt = STRING_TOKEN(STR_IIO_IOAT2_FORM),
            help = STRING_TOKEN(STR_NULL_STRING);
    endif;
#endif

#if MAX_SOCKET > 3
    suppressif ideqval SOCKET_IIO_CONFIGURATION.IioPresent[3] == 0;
        goto VFR_FORMID_IIO3IOAT,
            prompt = STRING_TOKEN(STR_IIO_IOAT3_FORM),
            help = STRING_TOKEN(STR_NULL_STRING);
    endif;
#endif

    oneof varid     = SOCKET_IIO_CONFIGURATION.DisableTPH,
        prompt          = STRING_TOKEN(STR_DISABLE_TPH_PROMPT),
        help            = STRING_TOKEN(STR_DISABLE_TPH_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;
    suppressif  ideqval SOCKET_IIO_CONFIGURATION.DisableTPH == 1;

        oneof varid     = SOCKET_IIO_CONFIGURATION.PrioritizeTPH,
            prompt          = STRING_TOKEN(STR_PRIORITIZE_TPH),
            help            = STRING_TOKEN(STR_PRIORITIZE_TPH),
            option text     = STRING_TOKEN(STR_ENABLE),    value = 1, flags = RESET_REQUIRED;
            option text     = STRING_TOKEN(STR_DISABLE),   value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        endoneof;
    endif;

    oneof varid     = SOCKET_IIO_CONFIGURATION.CbRelaxedOrdering,

        prompt          = STRING_TOKEN(STR_CB_RELAXED_ORDERING_PROMPT),
        help            = STRING_TOKEN(STR_CB_RELAXED_ORDERING_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),     value = 1, flags = RESET_REQUIRED;
    endoneof;
endform; // VFR_FORMID_IOAT_CONFIG

//IOAT0 configuration
form formid = VFR_FORMID_IIO0IOAT,
    title = STRING_TOKEN(STR_IIO_IOAT0_FORM);

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT0_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[0],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[0],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT1_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[1],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[1],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT2_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[2],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[2],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT3_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[3],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[3],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT4_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[4],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[4],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT5_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[5],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[5],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT6_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[6],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[6],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT7_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[7],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[7],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;
endform; // end FORMID_IIO0IOAT


#if MAX_SOCKET > 1
//IOAT1 configuration
form formid = VFR_FORMID_IIO1IOAT,
    title = STRING_TOKEN(STR_IIO_IOAT1_FORM);

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT0_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[8],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[8],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT1_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[9],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[9],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT2_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[10],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[10],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT3_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[11],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[11],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT4_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[12],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[12],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT5_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[13],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[13],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT6_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[14],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[14],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT7_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[15],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[15],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;
endform; // end FORMID_IIO1IOAT
#endif


#if MAX_SOCKET > 2
//IOAT2 configuration
form formid = VFR_FORMID_IIO2IOAT,
    title = STRING_TOKEN(STR_IIO_IOAT2_FORM);

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT0_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[16],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[16],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT1_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[17],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[17],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT2_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[18],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[18],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT3_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[19],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[19],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT4_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[20],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[20],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT5_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[21],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[21],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT6_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[22],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[22],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT7_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[23],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[23],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;
endform; // end FORMID_IIO2IOAT
#endif


#if MAX_SOCKET > 3
//IOAT3 configuration
form formid = VFR_FORMID_IIO3IOAT,
    title = STRING_TOKEN(STR_IIO_IOAT3_FORM);

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT0_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[24],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[24],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT1_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[25],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[25],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT2_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[26],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[26],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT3_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[27],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[27],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT4_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[28],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[28],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT5_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[29],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[29],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT6_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[30],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[30],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT7_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[31],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[31],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;
endform; // end FORMID_IIO3IOAT
#endif


#if MAX_SOCKET > 4
//IOAT4 configuration
form formid = VFR_FORMID_IIO4IOAT,
    title = STRING_TOKEN(STR_IIO_IOAT4_FORM);

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT0_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[32],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[32],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT1_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[33],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[33],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT2_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[34],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[34],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT3_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[35],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[35],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT4_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[36],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[36],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT5_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[37],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[37],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT6_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[38],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[38],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT7_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[39],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[39],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;
endform; // end FORMID_IIO4IOAT
#endif


#if MAX_SOCKET > 5
//IOAT5 configuration
form formid = VFR_FORMID_IIO5IOAT,
    title = STRING_TOKEN(STR_IIO_IOAT5_FORM);

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT0_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[40],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[40],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT1_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[41],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[41],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT2_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[42],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[42],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT3_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[43],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[43],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT4_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[44],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[44],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT5_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[45],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[45],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT6_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[46],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[46],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT7_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[47],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[47],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;
endform; // end FORMID_IIO5IOAT
#endif


#if MAX_SOCKET > 6
//IOAT6 configuration
form formid = VFR_FORMID_IIO6IOAT,
    title = STRING_TOKEN(STR_IIO_IOAT6_FORM);

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT0_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[48],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[48],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT1_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[49],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[49],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT2_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[50],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[50],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT3_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[51],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[51],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT4_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[52],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[52],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT5_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[53],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[53],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT6_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[54],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[54],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT7_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[55],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[55],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;
endform; // end FORMID_IIO6IOAT
#endif


#if MAX_SOCKET > 7
//IOAT7 configuration
form formid = VFR_FORMID_IIO7IOAT,
    title = STRING_TOKEN(STR_IIO_IOAT7_FORM);

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT0_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[56],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[56],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT1_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[57],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[57],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT2_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[58],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[58],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT3_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[59],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[59],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT4_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[60],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[60],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT5_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[61],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[61],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT6_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[62],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[62],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;

    subtitle text = STRING_TOKEN(STR_NULL_STRING);
    subtitle text = STRING_TOKEN(STR_IOAT7_OPTIONS);
    subtitle text = STRING_TOKEN(STR_DOUBLE_LINE);

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3DmaEn[63],
        prompt          = STRING_TOKEN(STR_CB3_DMA_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_DMA_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
    endoneof;

    oneof varid     = SOCKET_IIO_CONFIGURATION.Cb3NoSnoopEn[63],
        prompt          = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_PROMPT),
        help            = STRING_TOKEN(STR_CB3_NO_SNOOP_ENABLE_HELP),
        option text     = STRING_TOKEN(STR_NO),    value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
        option text     = STRING_TOKEN(STR_YES),   value = 1, flags = RESET_REQUIRED;
    endoneof;
endform; // end FORMID_IIO7IOAT
#endif


//
// IIO global Performance Tuning Configuration
//
form formid = VFR_FORMID_IIO_PERF_CONFIG,
    title  = STRING_TOKEN(STR_IIO_GLOBAL_PERF_TUNING_FORM_TITLE);
    subtitle text = STRING_TOKEN(STR_IIO_GLOBAL_PERF_TUNING_FORM_TITLE);
    subtitle text = STRING_TOKEN(STR_HORIZONTAL_LINE);
    subtitle text = STRING_TOKEN(STR_NULL_STRING);

    oneof varid = SOCKET_IIO_CONFIGURATION.PerformanceTuningMode,
        prompt  = STRING_TOKEN(STR_GLOBAL_PERF_TUNING_MODE_PROMPT),
        help    = STRING_TOKEN(STR_GLOBAL_PERF_TUNING_MODE_HELP),
        option text = STRING_TOKEN(STR_SAFE_MODE),                value = PERFORMANCE_SAFE_MODE, flags = RESET_REQUIRED;
        option text = STRING_TOKEN(STR_PERFORMANCE_ENABLE_MODE),  value = PERFORMANCE_ENABLE_MODE, flags = RESET_REQUIRED | MANUFACTURING | DEFAULT;
    endoneof;
endform;

//
// IIO CPU Socket0 Trace Hub Configuration
//
form formid = VFR_FORMID_CPU_TRACE_HUB_IIO0,
    title = STRING_TOKEN(STR_TRACE_HUB_CONFIG_TITLE);

    oneof varid   = SOCKET_IIO_CONFIGURATION.NorthTraceHubMode[0],
        prompt = STRING_TOKEN(STR_NORTH_TRACE_HUB_PROMPT),
        help   = STRING_TOKEN(STR_NORTH_TRACE_HUB_MODE_HELP),
        option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_NORTH_TRACE_HUB_TARGET_DEBUGGER), value = 1, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_NORTH_TRACE_HUB_HOST_DEBUGGER), value = 2, flags = RESET_REQUIRED ;
    endoneof;
    suppressif ideqval SOCKET_IIO_CONFIGURATION.NorthTraceHubMode[0] == 0;

        oneof varid  = SOCKET_IIO_CONFIGURATION.NorthTraceHubMemReg0Size[0],
            prompt   = STRING_TOKEN(STR_NORTH_TRACE_HUB_MEM_REGION_0_SIZE),
            help     = STRING_TOKEN(STR_TRACE_HUB_MEM_REGION_0_HELP),
            option text = STRING_TOKEN(STR_TRACE_HUB_NONE),  value = 0x00000000, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_1MB),   value = 0x00100000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_8MB),   value = 0x00800000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_64MB),  value = 0x04000000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_128MB), value = 0x08000000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_256MB), value = 0x10000000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_512MB), value = 0x20000000, flags = RESET_REQUIRED;
        endoneof;

        oneof varid  = SOCKET_IIO_CONFIGURATION.NorthTraceHubMemReg1Size[0],
            prompt   = STRING_TOKEN(STR_NORTH_TRACE_HUB_MEM_REGION_1_SIZE),
            help     = STRING_TOKEN(STR_TRACE_HUB_MEM_REGION_1_HELP),
            option text = STRING_TOKEN(STR_TRACE_HUB_NONE),  value = 0x00000000, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_1MB),   value = 0x00100000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_8MB),   value = 0x00800000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_64MB),  value = 0x04000000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_128MB), value = 0x08000000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_256MB), value = 0x10000000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_512MB), value = 0x20000000, flags = RESET_REQUIRED;
        endoneof;

        oneof varid  = SOCKET_IIO_CONFIGURATION.SierraPeakMemBufferSize[0],
            prompt   = STRING_TOKEN(STR_SPK_MEM_REGION_BUFFER_SIZE),
            help     = STRING_TOKEN(STR_SPK_MEM_REGION_BUFFER_SIZE_HELP),
            option text = STRING_TOKEN(STR_SPK_BUFFER_NONE),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
            option text = STRING_TOKEN(STR_SPK_BUFFER_1MB),   value = 1, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_SPK_BUFFER_8MB),   value = 2, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_SPK_BUFFER_64MB),  value = 3, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_SPK_BUFFER_128MB), value = 4, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_SPK_BUFFER_256MB), value = 5, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_SPK_BUFFER_512MB), value = 6, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_SPK_BUFFER_1GB),   value = 7, flags = RESET_REQUIRED;
        endoneof;
    endif;
endform;

//
// IIO CPU Socket1 Trace Hub Configuration
//
form formid = VFR_FORMID_CPU_TRACE_HUB_IIO1,
    title = STRING_TOKEN(STR_TRACE_HUB_CONFIG_TITLE);

#if MAX_SOCKET > 1
    oneof varid   = SOCKET_IIO_CONFIGURATION.NorthTraceHubMode[1],
        prompt = STRING_TOKEN(STR_NORTH_TRACE_HUB_PROMPT),
        help   = STRING_TOKEN(STR_NORTH_TRACE_HUB_MODE_HELP),
        option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_NORTH_TRACE_HUB_TARGET_DEBUGGER), value = 1, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_NORTH_TRACE_HUB_HOST_DEBUGGER), value = 2, flags = RESET_REQUIRED ;
    endoneof;
    suppressif ideqval SOCKET_IIO_CONFIGURATION.NorthTraceHubMode[1] == 0;

        oneof varid  = SOCKET_IIO_CONFIGURATION.NorthTraceHubMemReg0Size[1],
            prompt   = STRING_TOKEN(STR_NORTH_TRACE_HUB_MEM_REGION_0_SIZE),
            help     = STRING_TOKEN(STR_TRACE_HUB_MEM_REGION_0_HELP),
            option text = STRING_TOKEN(STR_TRACE_HUB_NONE),  value = 0x00000000, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_1MB),   value = 0x00100000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_8MB),   value = 0x00800000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_64MB),  value = 0x04000000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_128MB), value = 0x08000000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_256MB), value = 0x10000000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_512MB), value = 0x20000000, flags = RESET_REQUIRED;
        endoneof;

        oneof varid  = SOCKET_IIO_CONFIGURATION.NorthTraceHubMemReg1Size[1],
            prompt   = STRING_TOKEN(STR_NORTH_TRACE_HUB_MEM_REGION_1_SIZE),
            help     = STRING_TOKEN(STR_TRACE_HUB_MEM_REGION_1_HELP),
            option text = STRING_TOKEN(STR_TRACE_HUB_NONE),  value = 0x00000000, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_1MB),   value = 0x00100000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_8MB),   value = 0x00800000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_64MB),  value = 0x04000000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_128MB), value = 0x08000000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_256MB), value = 0x10000000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_512MB), value = 0x20000000, flags = RESET_REQUIRED;
        endoneof;

        oneof varid  = SOCKET_IIO_CONFIGURATION.SierraPeakMemBufferSize[1],
            prompt   = STRING_TOKEN(STR_SPK_MEM_REGION_BUFFER_SIZE),
            help     = STRING_TOKEN(STR_SPK_MEM_REGION_BUFFER_SIZE_HELP),
            option text = STRING_TOKEN(STR_SPK_BUFFER_NONE),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
            option text = STRING_TOKEN(STR_SPK_BUFFER_1MB),   value = 1, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_SPK_BUFFER_8MB),   value = 2, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_SPK_BUFFER_64MB),  value = 3, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_SPK_BUFFER_128MB), value = 4, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_SPK_BUFFER_256MB), value = 5, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_SPK_BUFFER_512MB), value = 6, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_SPK_BUFFER_1GB),   value = 7, flags = RESET_REQUIRED;
        endoneof;
    endif;
#endif // MAX_SOCKET > 1
endform;

//
// IIO CPU Socket2 Trace Hub Configuration
//
form formid = VFR_FORMID_CPU_TRACE_HUB_IIO2,
    title = STRING_TOKEN(STR_TRACE_HUB_CONFIG_TITLE);

#if MAX_SOCKET > 2
    oneof varid   = SOCKET_IIO_CONFIGURATION.NorthTraceHubMode[2],
        prompt = STRING_TOKEN(STR_NORTH_TRACE_HUB_PROMPT),
        help   = STRING_TOKEN(STR_NORTH_TRACE_HUB_MODE_HELP),
        option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_NORTH_TRACE_HUB_TARGET_DEBUGGER), value = 1, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_NORTH_TRACE_HUB_HOST_DEBUGGER), value = 2, flags = RESET_REQUIRED ;
    endoneof;
    suppressif ideqval SOCKET_IIO_CONFIGURATION.NorthTraceHubMode[2] == 0;

        oneof varid  = SOCKET_IIO_CONFIGURATION.NorthTraceHubMemReg0Size[2],
            prompt   = STRING_TOKEN(STR_NORTH_TRACE_HUB_MEM_REGION_0_SIZE),
            help     = STRING_TOKEN(STR_TRACE_HUB_MEM_REGION_0_HELP),
            option text = STRING_TOKEN(STR_TRACE_HUB_NONE),  value = 0x00000000, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_1MB),   value = 0x00100000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_8MB),   value = 0x00800000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_64MB),  value = 0x04000000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_128MB), value = 0x08000000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_256MB), value = 0x10000000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_512MB), value = 0x20000000, flags = RESET_REQUIRED;
        endoneof;

        oneof varid  = SOCKET_IIO_CONFIGURATION.NorthTraceHubMemReg1Size[2],
            prompt   = STRING_TOKEN(STR_NORTH_TRACE_HUB_MEM_REGION_1_SIZE),
            help     = STRING_TOKEN(STR_TRACE_HUB_MEM_REGION_1_HELP),
            option text = STRING_TOKEN(STR_TRACE_HUB_NONE),  value = 0x00000000, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_1MB),   value = 0x00100000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_8MB),   value = 0x00800000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_64MB),  value = 0x04000000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_128MB), value = 0x08000000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_256MB), value = 0x10000000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_512MB), value = 0x20000000, flags = RESET_REQUIRED;
        endoneof;

        oneof varid  = SOCKET_IIO_CONFIGURATION.SierraPeakMemBufferSize[2],
            prompt   = STRING_TOKEN(STR_SPK_MEM_REGION_BUFFER_SIZE),
            help     = STRING_TOKEN(STR_SPK_MEM_REGION_BUFFER_SIZE_HELP),
            option text = STRING_TOKEN(STR_SPK_BUFFER_NONE),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
            option text = STRING_TOKEN(STR_SPK_BUFFER_1MB),   value = 1, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_SPK_BUFFER_8MB),   value = 2, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_SPK_BUFFER_64MB),  value = 3, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_SPK_BUFFER_128MB), value = 4, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_SPK_BUFFER_256MB), value = 5, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_SPK_BUFFER_512MB), value = 6, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_SPK_BUFFER_1GB),   value = 7, flags = RESET_REQUIRED;
        endoneof;
    endif;
#endif // MAX_SOCKET > 2
endform;

//
// IIO CPU Socket3 Trace Hub Configuration
//
form formid = VFR_FORMID_CPU_TRACE_HUB_IIO3,
    title = STRING_TOKEN(STR_TRACE_HUB_CONFIG_TITLE);

#if MAX_SOCKET > 3
    oneof varid   = SOCKET_IIO_CONFIGURATION.NorthTraceHubMode[3],
        prompt = STRING_TOKEN(STR_NORTH_TRACE_HUB_PROMPT),
        help   = STRING_TOKEN(STR_NORTH_TRACE_HUB_MODE_HELP),
        option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_NORTH_TRACE_HUB_TARGET_DEBUGGER), value = 1, flags = RESET_REQUIRED ;
        option text = STRING_TOKEN(STR_NORTH_TRACE_HUB_HOST_DEBUGGER), value = 2, flags = RESET_REQUIRED ;
    endoneof;
    suppressif ideqval SOCKET_IIO_CONFIGURATION.NorthTraceHubMode[3] == 0;

        oneof varid  = SOCKET_IIO_CONFIGURATION.NorthTraceHubMemReg0Size[3],
            prompt   = STRING_TOKEN(STR_NORTH_TRACE_HUB_MEM_REGION_0_SIZE),
            help     = STRING_TOKEN(STR_TRACE_HUB_MEM_REGION_0_HELP),
            option text = STRING_TOKEN(STR_TRACE_HUB_NONE),  value = 0x00000000, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_1MB),   value = 0x00100000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_8MB),   value = 0x00800000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_64MB),  value = 0x04000000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_128MB), value = 0x08000000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_256MB), value = 0x10000000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_512MB), value = 0x20000000, flags = RESET_REQUIRED;
        endoneof;

        oneof varid  = SOCKET_IIO_CONFIGURATION.NorthTraceHubMemReg1Size[3],
            prompt   = STRING_TOKEN(STR_NORTH_TRACE_HUB_MEM_REGION_1_SIZE),
            help     = STRING_TOKEN(STR_TRACE_HUB_MEM_REGION_1_HELP),
            option text = STRING_TOKEN(STR_TRACE_HUB_NONE),  value = 0x00000000, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_1MB),   value = 0x00100000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_8MB),   value = 0x00800000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_64MB),  value = 0x04000000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_128MB), value = 0x08000000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_256MB), value = 0x10000000, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_TRACE_HUB_512MB), value = 0x20000000, flags = RESET_REQUIRED;
        endoneof;

        oneof varid  = SOCKET_IIO_CONFIGURATION.SierraPeakMemBufferSize[3],
            prompt   = STRING_TOKEN(STR_SPK_MEM_REGION_BUFFER_SIZE),
            help     = STRING_TOKEN(STR_SPK_MEM_REGION_BUFFER_SIZE_HELP),
            option text = STRING_TOKEN(STR_SPK_BUFFER_NONE),  value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
            option text = STRING_TOKEN(STR_SPK_BUFFER_1MB),   value = 1, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_SPK_BUFFER_8MB),   value = 2, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_SPK_BUFFER_64MB),  value = 3, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_SPK_BUFFER_128MB), value = 4, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_SPK_BUFFER_256MB), value = 5, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_SPK_BUFFER_512MB), value = 6, flags = RESET_REQUIRED;
            option text = STRING_TOKEN(STR_SPK_BUFFER_1GB),   value = 7, flags = RESET_REQUIRED;
        endoneof;
    endif;
#endif // MAX_SOCKET > 3
endform;

//
// Load forms templates creates as "for each IIO" (usually means for each socket)
//
#if MAX_SOCKET > 0
  #define IIO_INDEX 0
  #include "IioVmdIioFormTpl.hfr"
  #undef IIO_INDEX

  #if MAX_SOCKET > 1
    #define IIO_INDEX 1
    #include "IioVmdIioFormTpl.hfr"
    #undef IIO_INDEX

    #if MAX_SOCKET > 2
      #define IIO_INDEX 2
      #include "IioVmdIioFormTpl.hfr"
      #undef IIO_INDEX

      #if MAX_SOCKET > 3
        #define IIO_INDEX 3
        #include "IioVmdIioFormTpl.hfr"
        #undef IIO_INDEX

        #if MAX_SOCKET > 4
          #define IIO_INDEX 4
          #include "IioVmdIioFormTpl.hfr"
          #undef IIO_INDEX

          #if MAX_SOCKET > 5
            #define IIO_INDEX 5
            #include "IioVmdIioFormTpl.hfr"
            #undef IIO_INDEX

            #if MAX_SOCKET > 6
              #define IIO_INDEX 6
              #include "IioVmdIioFormTpl.hfr"
              #undef IIO_INDEX

              #if MAX_SOCKET > 7
                #define IIO_INDEX 7
                #include "IioVmdIioFormTpl.hfr"
                #undef IIO_INDEX
              #endif // MAX_SOCKET > 7
            #endif // MAX_SOCKET > 6
          #endif // MAX_SOCKET > 5
        #endif // MAX_SOCKET > 4
      #endif // MAX_SOCKET > 3
    #endif // MAX_SOCKET > 2
  #endif // MAX_SOCKET > 1
#endif // MAX_SOCKET > 0

#if FixedPcdGetBool (PcdBiosDfxKnobEnabled)
  #include "IioDfxSetup.hfr"
#endif

#include "IioPcieSetup.hfr"
