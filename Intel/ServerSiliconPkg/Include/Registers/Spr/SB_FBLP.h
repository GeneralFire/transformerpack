
/** @file
  SB_FBLP.h

  @copyright
  INTEL CONFIDENTIAL
  Copyright 2007 - 2020 Intel Corporation. <BR>
  
  The source code contained or described herein and all documents related to the
  source code ("Material") are owned by Intel Corporation or its suppliers or
  licensors. Title to the Material remains with Intel Corporation or its suppliers
  and licensors. The Material may contain trade secrets and proprietary    and
  confidential information of Intel Corporation and its suppliers and licensors,
  and is protected by worldwide copyright and trade secret laws and treaty
  provisions. No part of the Material may be used, copied, reproduced, modified,
  published, uploaded, posted, transmitted, distributed, or disclosed in any way
  without Intel's prior express written permission.
  
  No license under any patent, copyright, trade secret or other intellectual
  property right is granted to or conferred upon you by disclosure or delivery
  of the Materials, either expressly, by implication, inducement, estoppel or
  otherwise. Any license under such intellectual property rights must be
  express and approved by Intel in writing.
  
  Unless otherwise agreed by Intel in writing, you may not remove or alter
  this notice or any other notice embedded in Materials by Intel or
  Intel's suppliers or licensors in any way.
  
  This file contains Silicon register definitions.
  
  This is a generated file; please do not modify it directly.
  
**/

/* The following security policy groups are used by registers in this file:     */

/* SPRA0 Security Policy Groups:                                                */
/* BOOT_W                                                                       */
/*  Security_ReadAccess_Str:                                                    */
/*    HOSTIA_POSTBOOT_SAI | HOSTIA_UCODE_SAI | HOSTIA_SMM_SAI |                 */
/*    HOSTIA_SUNPASS_SAI | HOSTIA_BOOT_SAI | SAI_Reserved_5 | SAI_Reserved_6 |  */
/*    SAI_Reserved_7 | GT_SAI | PM_PCS_SAI | HW_CPU_SAI | MEM_CPL_SAI | VTD_SAI */
/*    | PM_DIE_TO_DIE_SAI | OOB_MSM_UNTRUSTED_SAI | HOSTCP_PMA_SAI |            */
/*    CSE_INTEL_SAI | CSE_OEM_SAI | FUSE_CTRL_SAI | FUSE_PULLER_SAI |           */
/*    PECI_MSM_SAI | PM_IOSS_SAI | CSE_DNX_SAI | FXR_INTERNAL_SAI |             */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_UNTRUSTED_SAI | SAI_Reserved_26 |       */
/*    IRC_SAI | NPK_SAI | DISPLAY2_SAI | DISPLAY3_SAI | HW_PCH_SAI |            */
/*    SAI_Reserved_32 | SAI_Reserved_33 | SAI_Reserved_34 | GT_PMA_SAI |        */
/*    HSP_SAI | SAI_Reserved_37 | SAI_Reserved_38 | SAI_Reserved_39 |           */
/*    UNCORE_PMA_SAI | RC_MORPHED_SAI | DFX_INTEL_PRODUCTION_SAI |              */
/*    DFX_THIRDPARTY_SAI | DISPLAY_SAI | SAI_Reserved_45 | SAI_Reserved_46 |    */
/*    DISPLAY_KVM_SAI | GT2_SAI | SAI_Reserved_49 | DEVICE_UNTRUSTED_IAL_SAI |  */
/*    SAI_Reserved_51 | CORE_EVENT_PROXY_SAI | DEVICE_ABORT_SAI |               */
/*    RCIOMMU_BYPASS_SAI | SAI_Reserved_55 | SAI_Reserved_56 | IE_CSE_SAI |     */
/*    SAI_Reserved_58 | SAI_Reserved_59 | CPM_SAI | OOB_MSM_SAI | XGBE_SAI |    */
/*    DEVICE_UNTRUSTED_SAI                                                      */
/*  Security_WriteAccess_Str:                                                   */
/*    HOSTIA_UCODE_SAI | HOSTIA_SUNPASS_SAI | PM_PCS_SAI |                      */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI | HOSTIA_BOOT_SAI  */
/*    | OOB_MSM_SAI                                                             */
/*  Security_Read_CP_Secured:                                                   */
/*    0                                                                         */
/* BTSMM_W                                                                      */
/*  Security_ReadAccess_Str:                                                    */
/*    HOSTIA_POSTBOOT_SAI | HOSTIA_UCODE_SAI | HOSTIA_SMM_SAI |                 */
/*    HOSTIA_SUNPASS_SAI | HOSTIA_BOOT_SAI | SAI_Reserved_5 | SAI_Reserved_6 |  */
/*    SAI_Reserved_7 | GT_SAI | PM_PCS_SAI | HW_CPU_SAI | MEM_CPL_SAI | VTD_SAI */
/*    | PM_DIE_TO_DIE_SAI | OOB_MSM_UNTRUSTED_SAI | HOSTCP_PMA_SAI |            */
/*    CSE_INTEL_SAI | CSE_OEM_SAI | FUSE_CTRL_SAI | FUSE_PULLER_SAI |           */
/*    PECI_MSM_SAI | PM_IOSS_SAI | CSE_DNX_SAI | FXR_INTERNAL_SAI |             */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_UNTRUSTED_SAI | SAI_Reserved_26 |       */
/*    IRC_SAI | NPK_SAI | DISPLAY2_SAI | DISPLAY3_SAI | HW_PCH_SAI |            */
/*    SAI_Reserved_32 | SAI_Reserved_33 | SAI_Reserved_34 | GT_PMA_SAI |        */
/*    HSP_SAI | SAI_Reserved_37 | SAI_Reserved_38 | SAI_Reserved_39 |           */
/*    UNCORE_PMA_SAI | RC_MORPHED_SAI | DFX_INTEL_PRODUCTION_SAI |              */
/*    DFX_THIRDPARTY_SAI | DISPLAY_SAI | SAI_Reserved_45 | SAI_Reserved_46 |    */
/*    DISPLAY_KVM_SAI | GT2_SAI | SAI_Reserved_49 | DEVICE_UNTRUSTED_IAL_SAI |  */
/*    SAI_Reserved_51 | CORE_EVENT_PROXY_SAI | DEVICE_ABORT_SAI |               */
/*    RCIOMMU_BYPASS_SAI | SAI_Reserved_55 | SAI_Reserved_56 | IE_CSE_SAI |     */
/*    SAI_Reserved_58 | SAI_Reserved_59 | CPM_SAI | OOB_MSM_SAI | XGBE_SAI |    */
/*    DEVICE_UNTRUSTED_SAI                                                      */
/*  Security_WriteAccess_Str:                                                   */
/*    HOSTIA_UCODE_SAI | HOSTIA_SUNPASS_SAI | PM_PCS_SAI |                      */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI | HOSTIA_BOOT_SAI  */
/*    | HOSTIA_SMM_SAI | OOB_MSM_SAI                                            */
/*  Security_Read_CP_Secured:                                                   */
/*    0                                                                         */
/* DFX1                                                                         */
/*  Security_ReadAccess_Str:                                                    */
/*    HOSTIA_UCODE_SAI | HOSTIA_SUNPASS_SAI | PM_PCS_SAI | UNCORE_PMA_SAI |     */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI | OOB_MSM_SAI      */
/*  Security_WriteAccess_Str:                                                   */
/*    HOSTIA_UCODE_SAI | HOSTIA_SUNPASS_SAI | PM_PCS_SAI |                      */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI | OOB_MSM_SAI      */
/*  Security_Read_CP_Secured:                                                   */
/*    0                                                                         */
/* DFX2                                                                         */
/*  Security_ReadAccess_Str:                                                    */
/*    HOSTIA_UCODE_SAI | HOSTIA_SUNPASS_SAI | PM_PCS_SAI |                      */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI | UNCORE_PMA_SAI | */
/*    OOB_MSM_SAI                                                               */
/*  Security_WriteAccess_Str:                                                   */
/*    HOSTIA_UCODE_SAI | HOSTIA_SUNPASS_SAI | PM_PCS_SAI |                      */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI                    */
/*  Security_Read_CP_Secured:                                                   */
/*    0                                                                         */
/* OS_W                                                                         */
/*  Security_ReadAccess_Str:                                                    */
/*    HOSTIA_POSTBOOT_SAI | HOSTIA_UCODE_SAI | HOSTIA_SMM_SAI |                 */
/*    HOSTIA_SUNPASS_SAI | HOSTIA_BOOT_SAI | SAI_Reserved_5 | SAI_Reserved_6 |  */
/*    SAI_Reserved_7 | GT_SAI | PM_PCS_SAI | HW_CPU_SAI | MEM_CPL_SAI | VTD_SAI */
/*    | PM_DIE_TO_DIE_SAI | OOB_MSM_UNTRUSTED_SAI | HOSTCP_PMA_SAI |            */
/*    CSE_INTEL_SAI | CSE_OEM_SAI | FUSE_CTRL_SAI | FUSE_PULLER_SAI |           */
/*    PECI_MSM_SAI | PM_IOSS_SAI | CSE_DNX_SAI | FXR_INTERNAL_SAI |             */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_UNTRUSTED_SAI | SAI_Reserved_26 |       */
/*    IRC_SAI | NPK_SAI | DISPLAY2_SAI | DISPLAY3_SAI | HW_PCH_SAI |            */
/*    SAI_Reserved_32 | SAI_Reserved_33 | SAI_Reserved_34 | GT_PMA_SAI |        */
/*    HSP_SAI | SAI_Reserved_37 | SAI_Reserved_38 | SAI_Reserved_39 |           */
/*    UNCORE_PMA_SAI | RC_MORPHED_SAI | DFX_INTEL_PRODUCTION_SAI |              */
/*    DFX_THIRDPARTY_SAI | DISPLAY_SAI | SAI_Reserved_45 | SAI_Reserved_46 |    */
/*    DISPLAY_KVM_SAI | GT2_SAI | SAI_Reserved_49 | DEVICE_UNTRUSTED_IAL_SAI |  */
/*    SAI_Reserved_51 | CORE_EVENT_PROXY_SAI | DEVICE_ABORT_SAI |               */
/*    RCIOMMU_BYPASS_SAI | SAI_Reserved_55 | SAI_Reserved_56 | IE_CSE_SAI |     */
/*    SAI_Reserved_58 | SAI_Reserved_59 | CPM_SAI | OOB_MSM_SAI | XGBE_SAI |    */
/*    DEVICE_UNTRUSTED_SAI                                                      */
/*  Security_WriteAccess_Str:                                                   */
/*    HOSTIA_POSTBOOT_SAI | HOSTIA_UCODE_SAI | HOSTIA_SMM_SAI |                 */
/*    HOSTIA_SUNPASS_SAI | HOSTIA_BOOT_SAI | PM_PCS_SAI |                       */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI |                  */
/*    DFX_UNTRUSTED_SAI | OOB_MSM_SAI | DFX_THIRDPARTY_SAI                      */
/*  Security_Read_CP_Secured:                                                   */
/*    0                                                                         */

/* SPRB0 Security Policy Groups:                                                */
/* BOOT_W                                                                       */
/*  Security_ReadAccess_Str:                                                    */
/*    HOSTIA_POSTBOOT_SAI | HOSTIA_UCODE_SAI | HOSTIA_SMM_SAI |                 */
/*    HOSTIA_SUNPASS_SAI | HOSTIA_BOOT_SAI | SAI_Reserved_5 | SAI_Reserved_6 |  */
/*    SAI_Reserved_7 | GT_SAI | PM_PCS_SAI | HW_CPU_SAI | MEM_CPL_SAI | VTD_SAI */
/*    | PM_DIE_TO_DIE_SAI | OOB_MSM_UNTRUSTED_SAI | HOSTCP_PMA_SAI |            */
/*    CSE_INTEL_SAI | CSE_OEM_SAI | FUSE_CTRL_SAI | FUSE_PULLER_SAI |           */
/*    PECI_MSM_SAI | PM_IOSS_SAI | CSE_DNX_SAI | FXR_INTERNAL_SAI |             */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_UNTRUSTED_SAI | SAI_Reserved_26 |       */
/*    IRC_SAI | NPK_SAI | DISPLAY2_SAI | DISPLAY3_SAI | HW_PCH_SAI |            */
/*    SAI_Reserved_32 | SAI_Reserved_33 | SAI_Reserved_34 | GT_PMA_SAI |        */
/*    HSP_SAI | SAI_Reserved_37 | SAI_Reserved_38 | SAI_Reserved_39 |           */
/*    UNCORE_PMA_SAI | RC_MORPHED_SAI | DFX_INTEL_PRODUCTION_SAI |              */
/*    DFX_THIRDPARTY_SAI | DISPLAY_SAI | SAI_Reserved_45 | SAI_Reserved_46 |    */
/*    DISPLAY_KVM_SAI | GT2_SAI | SAI_Reserved_49 | DEVICE_UNTRUSTED_IAL_SAI |  */
/*    SAI_Reserved_51 | CORE_EVENT_PROXY_SAI | DEVICE_ABORT_SAI |               */
/*    RCIOMMU_BYPASS_SAI | SAI_Reserved_55 | SAI_Reserved_56 | IE_CSE_SAI |     */
/*    SAI_Reserved_58 | SAI_Reserved_59 | CPM_SAI | OOB_MSM_SAI | XGBE_SAI |    */
/*    DEVICE_UNTRUSTED_SAI                                                      */
/*  Security_WriteAccess_Str:                                                   */
/*    HOSTIA_UCODE_SAI | HOSTIA_SUNPASS_SAI | PM_PCS_SAI |                      */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI | HOSTIA_BOOT_SAI  */
/*    | OOB_MSM_SAI                                                             */
/*  Security_Read_CP_Secured:                                                   */
/*    0                                                                         */
/* BTSMM_W                                                                      */
/*  Security_ReadAccess_Str:                                                    */
/*    HOSTIA_POSTBOOT_SAI | HOSTIA_UCODE_SAI | HOSTIA_SMM_SAI |                 */
/*    HOSTIA_SUNPASS_SAI | HOSTIA_BOOT_SAI | SAI_Reserved_5 | SAI_Reserved_6 |  */
/*    SAI_Reserved_7 | GT_SAI | PM_PCS_SAI | HW_CPU_SAI | MEM_CPL_SAI | VTD_SAI */
/*    | PM_DIE_TO_DIE_SAI | OOB_MSM_UNTRUSTED_SAI | HOSTCP_PMA_SAI |            */
/*    CSE_INTEL_SAI | CSE_OEM_SAI | FUSE_CTRL_SAI | FUSE_PULLER_SAI |           */
/*    PECI_MSM_SAI | PM_IOSS_SAI | CSE_DNX_SAI | FXR_INTERNAL_SAI |             */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_UNTRUSTED_SAI | SAI_Reserved_26 |       */
/*    IRC_SAI | NPK_SAI | DISPLAY2_SAI | DISPLAY3_SAI | HW_PCH_SAI |            */
/*    SAI_Reserved_32 | SAI_Reserved_33 | SAI_Reserved_34 | GT_PMA_SAI |        */
/*    HSP_SAI | SAI_Reserved_37 | SAI_Reserved_38 | SAI_Reserved_39 |           */
/*    UNCORE_PMA_SAI | RC_MORPHED_SAI | DFX_INTEL_PRODUCTION_SAI |              */
/*    DFX_THIRDPARTY_SAI | DISPLAY_SAI | SAI_Reserved_45 | SAI_Reserved_46 |    */
/*    DISPLAY_KVM_SAI | GT2_SAI | SAI_Reserved_49 | DEVICE_UNTRUSTED_IAL_SAI |  */
/*    SAI_Reserved_51 | CORE_EVENT_PROXY_SAI | DEVICE_ABORT_SAI |               */
/*    RCIOMMU_BYPASS_SAI | SAI_Reserved_55 | SAI_Reserved_56 | IE_CSE_SAI |     */
/*    SAI_Reserved_58 | SAI_Reserved_59 | CPM_SAI | OOB_MSM_SAI | XGBE_SAI |    */
/*    DEVICE_UNTRUSTED_SAI                                                      */
/*  Security_WriteAccess_Str:                                                   */
/*    HOSTIA_UCODE_SAI | HOSTIA_SUNPASS_SAI | PM_PCS_SAI |                      */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI | HOSTIA_BOOT_SAI  */
/*    | HOSTIA_SMM_SAI | OOB_MSM_SAI                                            */
/*  Security_Read_CP_Secured:                                                   */
/*    0                                                                         */
/* DFX1                                                                         */
/*  Security_ReadAccess_Str:                                                    */
/*    HOSTIA_UCODE_SAI | HOSTIA_SUNPASS_SAI | PM_PCS_SAI | UNCORE_PMA_SAI |     */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI | OOB_MSM_SAI      */
/*  Security_WriteAccess_Str:                                                   */
/*    HOSTIA_UCODE_SAI | HOSTIA_SUNPASS_SAI | PM_PCS_SAI |                      */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI | OOB_MSM_SAI      */
/*  Security_Read_CP_Secured:                                                   */
/*    0                                                                         */
/* DFX2                                                                         */
/*  Security_ReadAccess_Str:                                                    */
/*    HOSTIA_UCODE_SAI | HOSTIA_SUNPASS_SAI | PM_PCS_SAI |                      */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI | UNCORE_PMA_SAI | */
/*    OOB_MSM_SAI                                                               */
/*  Security_WriteAccess_Str:                                                   */
/*    HOSTIA_UCODE_SAI | HOSTIA_SUNPASS_SAI | PM_PCS_SAI |                      */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI                    */
/*  Security_Read_CP_Secured:                                                   */
/*    0                                                                         */
/* OS_W                                                                         */
/*  Security_ReadAccess_Str:                                                    */
/*    HOSTIA_POSTBOOT_SAI | HOSTIA_UCODE_SAI | HOSTIA_SMM_SAI |                 */
/*    HOSTIA_SUNPASS_SAI | HOSTIA_BOOT_SAI | SAI_Reserved_5 | SAI_Reserved_6 |  */
/*    SAI_Reserved_7 | GT_SAI | PM_PCS_SAI | HW_CPU_SAI | MEM_CPL_SAI | VTD_SAI */
/*    | PM_DIE_TO_DIE_SAI | OOB_MSM_UNTRUSTED_SAI | HOSTCP_PMA_SAI |            */
/*    CSE_INTEL_SAI | CSE_OEM_SAI | FUSE_CTRL_SAI | FUSE_PULLER_SAI |           */
/*    PECI_MSM_SAI | PM_IOSS_SAI | CSE_DNX_SAI | FXR_INTERNAL_SAI |             */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_UNTRUSTED_SAI | SAI_Reserved_26 |       */
/*    IRC_SAI | NPK_SAI | DISPLAY2_SAI | DISPLAY3_SAI | HW_PCH_SAI |            */
/*    SAI_Reserved_32 | SAI_Reserved_33 | SAI_Reserved_34 | GT_PMA_SAI |        */
/*    HSP_SAI | SAI_Reserved_37 | SAI_Reserved_38 | SAI_Reserved_39 |           */
/*    UNCORE_PMA_SAI | RC_MORPHED_SAI | DFX_INTEL_PRODUCTION_SAI |              */
/*    DFX_THIRDPARTY_SAI | DISPLAY_SAI | SAI_Reserved_45 | SAI_Reserved_46 |    */
/*    DISPLAY_KVM_SAI | GT2_SAI | SAI_Reserved_49 | DEVICE_UNTRUSTED_IAL_SAI |  */
/*    SAI_Reserved_51 | CORE_EVENT_PROXY_SAI | DEVICE_ABORT_SAI |               */
/*    RCIOMMU_BYPASS_SAI | SAI_Reserved_55 | SAI_Reserved_56 | IE_CSE_SAI |     */
/*    SAI_Reserved_58 | SAI_Reserved_59 | CPM_SAI | OOB_MSM_SAI | XGBE_SAI |    */
/*    DEVICE_UNTRUSTED_SAI                                                      */
/*  Security_WriteAccess_Str:                                                   */
/*    HOSTIA_POSTBOOT_SAI | HOSTIA_UCODE_SAI | HOSTIA_SMM_SAI |                 */
/*    HOSTIA_SUNPASS_SAI | HOSTIA_BOOT_SAI | PM_PCS_SAI |                       */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI |                  */
/*    DFX_UNTRUSTED_SAI | OOB_MSM_SAI | DFX_THIRDPARTY_SAI                      */
/*  Security_Read_CP_Secured:                                                   */
/*    0                                                                         */

/* SPRHBM Security Policy Groups:                                               */
/* BOOT_W                                                                       */
/*  Security_ReadAccess_Str:                                                    */
/*    HOSTIA_POSTBOOT_SAI | HOSTIA_UCODE_SAI | HOSTIA_SMM_SAI |                 */
/*    HOSTIA_SUNPASS_SAI | HOSTIA_BOOT_SAI | SAI_Reserved_5 | SAI_Reserved_6 |  */
/*    SAI_Reserved_7 | GT_SAI | PM_PCS_SAI | HW_CPU_SAI | MEM_CPL_SAI | VTD_SAI */
/*    | PM_DIE_TO_DIE_SAI | OOB_MSM_UNTRUSTED_SAI | HOSTCP_PMA_SAI |            */
/*    CSE_INTEL_SAI | CSE_OEM_SAI | FUSE_CTRL_SAI | FUSE_PULLER_SAI |           */
/*    PECI_MSM_SAI | PM_IOSS_SAI | CSE_DNX_SAI | FXR_INTERNAL_SAI |             */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_UNTRUSTED_SAI | SAI_Reserved_26 |       */
/*    IRC_SAI | NPK_SAI | DISPLAY2_SAI | DISPLAY3_SAI | HW_PCH_SAI |            */
/*    SAI_Reserved_32 | SAI_Reserved_33 | SAI_Reserved_34 | GT_PMA_SAI |        */
/*    HSP_SAI | SAI_Reserved_37 | SAI_Reserved_38 | SAI_Reserved_39 |           */
/*    UNCORE_PMA_SAI | RC_MORPHED_SAI | DFX_INTEL_PRODUCTION_SAI |              */
/*    DFX_THIRDPARTY_SAI | DISPLAY_SAI | SAI_Reserved_45 | SAI_Reserved_46 |    */
/*    DISPLAY_KVM_SAI | GT2_SAI | SAI_Reserved_49 | DEVICE_UNTRUSTED_IAL_SAI |  */
/*    SAI_Reserved_51 | CORE_EVENT_PROXY_SAI | DEVICE_ABORT_SAI |               */
/*    RCIOMMU_BYPASS_SAI | SAI_Reserved_55 | SAI_Reserved_56 | IE_CSE_SAI |     */
/*    SAI_Reserved_58 | SAI_Reserved_59 | CPM_SAI | OOB_MSM_SAI | XGBE_SAI |    */
/*    DEVICE_UNTRUSTED_SAI                                                      */
/*  Security_WriteAccess_Str:                                                   */
/*    HOSTIA_UCODE_SAI | HOSTIA_SUNPASS_SAI | PM_PCS_SAI |                      */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI | HOSTIA_BOOT_SAI  */
/*    | OOB_MSM_SAI                                                             */
/*  Security_Read_CP_Secured:                                                   */
/*    0                                                                         */
/* BTSMM_W                                                                      */
/*  Security_ReadAccess_Str:                                                    */
/*    HOSTIA_POSTBOOT_SAI | HOSTIA_UCODE_SAI | HOSTIA_SMM_SAI |                 */
/*    HOSTIA_SUNPASS_SAI | HOSTIA_BOOT_SAI | SAI_Reserved_5 | SAI_Reserved_6 |  */
/*    SAI_Reserved_7 | GT_SAI | PM_PCS_SAI | HW_CPU_SAI | MEM_CPL_SAI | VTD_SAI */
/*    | PM_DIE_TO_DIE_SAI | OOB_MSM_UNTRUSTED_SAI | HOSTCP_PMA_SAI |            */
/*    CSE_INTEL_SAI | CSE_OEM_SAI | FUSE_CTRL_SAI | FUSE_PULLER_SAI |           */
/*    PECI_MSM_SAI | PM_IOSS_SAI | CSE_DNX_SAI | FXR_INTERNAL_SAI |             */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_UNTRUSTED_SAI | SAI_Reserved_26 |       */
/*    IRC_SAI | NPK_SAI | DISPLAY2_SAI | DISPLAY3_SAI | HW_PCH_SAI |            */
/*    SAI_Reserved_32 | SAI_Reserved_33 | SAI_Reserved_34 | GT_PMA_SAI |        */
/*    HSP_SAI | SAI_Reserved_37 | SAI_Reserved_38 | SAI_Reserved_39 |           */
/*    UNCORE_PMA_SAI | RC_MORPHED_SAI | DFX_INTEL_PRODUCTION_SAI |              */
/*    DFX_THIRDPARTY_SAI | DISPLAY_SAI | SAI_Reserved_45 | SAI_Reserved_46 |    */
/*    DISPLAY_KVM_SAI | GT2_SAI | SAI_Reserved_49 | DEVICE_UNTRUSTED_IAL_SAI |  */
/*    SAI_Reserved_51 | CORE_EVENT_PROXY_SAI | DEVICE_ABORT_SAI |               */
/*    RCIOMMU_BYPASS_SAI | SAI_Reserved_55 | SAI_Reserved_56 | IE_CSE_SAI |     */
/*    SAI_Reserved_58 | SAI_Reserved_59 | CPM_SAI | OOB_MSM_SAI | XGBE_SAI |    */
/*    DEVICE_UNTRUSTED_SAI                                                      */
/*  Security_WriteAccess_Str:                                                   */
/*    HOSTIA_UCODE_SAI | HOSTIA_SUNPASS_SAI | PM_PCS_SAI |                      */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI | HOSTIA_BOOT_SAI  */
/*    | HOSTIA_SMM_SAI | OOB_MSM_SAI                                            */
/*  Security_Read_CP_Secured:                                                   */
/*    0                                                                         */
/* DFX1                                                                         */
/*  Security_ReadAccess_Str:                                                    */
/*    HOSTIA_UCODE_SAI | HOSTIA_SUNPASS_SAI | PM_PCS_SAI | UNCORE_PMA_SAI |     */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI | OOB_MSM_SAI      */
/*  Security_WriteAccess_Str:                                                   */
/*    HOSTIA_UCODE_SAI | HOSTIA_SUNPASS_SAI | PM_PCS_SAI |                      */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI | OOB_MSM_SAI      */
/*  Security_Read_CP_Secured:                                                   */
/*    0                                                                         */
/* DFX2                                                                         */
/*  Security_ReadAccess_Str:                                                    */
/*    HOSTIA_UCODE_SAI | HOSTIA_SUNPASS_SAI | PM_PCS_SAI |                      */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI | UNCORE_PMA_SAI | */
/*    OOB_MSM_SAI                                                               */
/*  Security_WriteAccess_Str:                                                   */
/*    HOSTIA_UCODE_SAI | HOSTIA_SUNPASS_SAI | PM_PCS_SAI |                      */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI                    */
/*  Security_Read_CP_Secured:                                                   */
/*    0                                                                         */
/* OS_W                                                                         */
/*  Security_ReadAccess_Str:                                                    */
/*    HOSTIA_POSTBOOT_SAI | HOSTIA_UCODE_SAI | HOSTIA_SMM_SAI |                 */
/*    HOSTIA_SUNPASS_SAI | HOSTIA_BOOT_SAI | SAI_Reserved_5 | SAI_Reserved_6 |  */
/*    SAI_Reserved_7 | GT_SAI | PM_PCS_SAI | HW_CPU_SAI | MEM_CPL_SAI | VTD_SAI */
/*    | PM_DIE_TO_DIE_SAI | OOB_MSM_UNTRUSTED_SAI | HOSTCP_PMA_SAI |            */
/*    CSE_INTEL_SAI | CSE_OEM_SAI | FUSE_CTRL_SAI | FUSE_PULLER_SAI |           */
/*    PECI_MSM_SAI | PM_IOSS_SAI | CSE_DNX_SAI | FXR_INTERNAL_SAI |             */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_UNTRUSTED_SAI | SAI_Reserved_26 |       */
/*    IRC_SAI | NPK_SAI | DISPLAY2_SAI | DISPLAY3_SAI | HW_PCH_SAI |            */
/*    SAI_Reserved_32 | SAI_Reserved_33 | SAI_Reserved_34 | GT_PMA_SAI |        */
/*    HSP_SAI | SAI_Reserved_37 | SAI_Reserved_38 | SAI_Reserved_39 |           */
/*    UNCORE_PMA_SAI | RC_MORPHED_SAI | DFX_INTEL_PRODUCTION_SAI |              */
/*    DFX_THIRDPARTY_SAI | DISPLAY_SAI | SAI_Reserved_45 | SAI_Reserved_46 |    */
/*    DISPLAY_KVM_SAI | GT2_SAI | SAI_Reserved_49 | DEVICE_UNTRUSTED_IAL_SAI |  */
/*    SAI_Reserved_51 | CORE_EVENT_PROXY_SAI | DEVICE_ABORT_SAI |               */
/*    RCIOMMU_BYPASS_SAI | SAI_Reserved_55 | SAI_Reserved_56 | IE_CSE_SAI |     */
/*    SAI_Reserved_58 | SAI_Reserved_59 | CPM_SAI | OOB_MSM_SAI | XGBE_SAI |    */
/*    DEVICE_UNTRUSTED_SAI                                                      */
/*  Security_WriteAccess_Str:                                                   */
/*    HOSTIA_POSTBOOT_SAI | HOSTIA_UCODE_SAI | HOSTIA_SMM_SAI |                 */
/*    HOSTIA_SUNPASS_SAI | HOSTIA_BOOT_SAI | PM_PCS_SAI |                       */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI |                  */
/*    DFX_UNTRUSTED_SAI | OOB_MSM_SAI | DFX_THIRDPARTY_SAI                      */
/*  Security_Read_CP_Secured:                                                   */
/*    0                                                                         */

/* SPRC0 Security Policy Groups:                                                */
/* BOOT_W                                                                       */
/*  Security_ReadAccess_Str:                                                    */
/*    HOSTIA_POSTBOOT_SAI | HOSTIA_UCODE_SAI | HOSTIA_SMM_SAI |                 */
/*    HOSTIA_SUNPASS_SAI | HOSTIA_BOOT_SAI | SAI_Reserved_5 | SAI_Reserved_6 |  */
/*    SAI_Reserved_7 | GT_SAI | PM_PCS_SAI | HW_CPU_SAI | MEM_CPL_SAI | VTD_SAI */
/*    | PM_DIE_TO_DIE_SAI | OOB_MSM_UNTRUSTED_SAI | HOSTCP_PMA_SAI |            */
/*    CSE_INTEL_SAI | CSE_OEM_SAI | FUSE_CTRL_SAI | FUSE_PULLER_SAI |           */
/*    PECI_MSM_SAI | PM_IOSS_SAI | CSE_DNX_SAI | FXR_INTERNAL_SAI |             */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_UNTRUSTED_SAI | SAI_Reserved_26 |       */
/*    IRC_SAI | NPK_SAI | DISPLAY2_SAI | DISPLAY3_SAI | HW_PCH_SAI |            */
/*    SAI_Reserved_32 | SAI_Reserved_33 | SAI_Reserved_34 | GT_PMA_SAI |        */
/*    HSP_SAI | SAI_Reserved_37 | SAI_Reserved_38 | SAI_Reserved_39 |           */
/*    UNCORE_PMA_SAI | RC_MORPHED_SAI | DFX_INTEL_PRODUCTION_SAI |              */
/*    DFX_THIRDPARTY_SAI | DISPLAY_SAI | SAI_Reserved_45 | SAI_Reserved_46 |    */
/*    DISPLAY_KVM_SAI | GT2_SAI | SAI_Reserved_49 | DEVICE_UNTRUSTED_IAL_SAI |  */
/*    SAI_Reserved_51 | CORE_EVENT_PROXY_SAI | DEVICE_ABORT_SAI |               */
/*    RCIOMMU_BYPASS_SAI | SAI_Reserved_55 | SAI_Reserved_56 | IE_CSE_SAI |     */
/*    SAI_Reserved_58 | SAI_Reserved_59 | CPM_SAI | OOB_MSM_SAI | XGBE_SAI |    */
/*    DEVICE_UNTRUSTED_SAI                                                      */
/*  Security_WriteAccess_Str:                                                   */
/*    HOSTIA_UCODE_SAI | HOSTIA_SUNPASS_SAI | PM_PCS_SAI |                      */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI | HOSTIA_BOOT_SAI  */
/*    | OOB_MSM_SAI                                                             */
/*  Security_Read_CP_Secured:                                                   */
/*    0                                                                         */
/* BTSMM_W                                                                      */
/*  Security_ReadAccess_Str:                                                    */
/*    HOSTIA_POSTBOOT_SAI | HOSTIA_UCODE_SAI | HOSTIA_SMM_SAI |                 */
/*    HOSTIA_SUNPASS_SAI | HOSTIA_BOOT_SAI | SAI_Reserved_5 | SAI_Reserved_6 |  */
/*    SAI_Reserved_7 | GT_SAI | PM_PCS_SAI | HW_CPU_SAI | MEM_CPL_SAI | VTD_SAI */
/*    | PM_DIE_TO_DIE_SAI | OOB_MSM_UNTRUSTED_SAI | HOSTCP_PMA_SAI |            */
/*    CSE_INTEL_SAI | CSE_OEM_SAI | FUSE_CTRL_SAI | FUSE_PULLER_SAI |           */
/*    PECI_MSM_SAI | PM_IOSS_SAI | CSE_DNX_SAI | FXR_INTERNAL_SAI |             */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_UNTRUSTED_SAI | SAI_Reserved_26 |       */
/*    IRC_SAI | NPK_SAI | DISPLAY2_SAI | DISPLAY3_SAI | HW_PCH_SAI |            */
/*    SAI_Reserved_32 | SAI_Reserved_33 | SAI_Reserved_34 | GT_PMA_SAI |        */
/*    HSP_SAI | SAI_Reserved_37 | SAI_Reserved_38 | SAI_Reserved_39 |           */
/*    UNCORE_PMA_SAI | RC_MORPHED_SAI | DFX_INTEL_PRODUCTION_SAI |              */
/*    DFX_THIRDPARTY_SAI | DISPLAY_SAI | SAI_Reserved_45 | SAI_Reserved_46 |    */
/*    DISPLAY_KVM_SAI | GT2_SAI | SAI_Reserved_49 | DEVICE_UNTRUSTED_IAL_SAI |  */
/*    SAI_Reserved_51 | CORE_EVENT_PROXY_SAI | DEVICE_ABORT_SAI |               */
/*    RCIOMMU_BYPASS_SAI | SAI_Reserved_55 | SAI_Reserved_56 | IE_CSE_SAI |     */
/*    SAI_Reserved_58 | SAI_Reserved_59 | CPM_SAI | OOB_MSM_SAI | XGBE_SAI |    */
/*    DEVICE_UNTRUSTED_SAI                                                      */
/*  Security_WriteAccess_Str:                                                   */
/*    HOSTIA_UCODE_SAI | HOSTIA_SUNPASS_SAI | PM_PCS_SAI |                      */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI | HOSTIA_BOOT_SAI  */
/*    | HOSTIA_SMM_SAI | OOB_MSM_SAI                                            */
/*  Security_Read_CP_Secured:                                                   */
/*    0                                                                         */
/* DFX1                                                                         */
/*  Security_ReadAccess_Str:                                                    */
/*    HOSTIA_UCODE_SAI | HOSTIA_SUNPASS_SAI | PM_PCS_SAI | UNCORE_PMA_SAI |     */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI | OOB_MSM_SAI      */
/*  Security_WriteAccess_Str:                                                   */
/*    HOSTIA_UCODE_SAI | HOSTIA_SUNPASS_SAI | PM_PCS_SAI |                      */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI | OOB_MSM_SAI      */
/*  Security_Read_CP_Secured:                                                   */
/*    0                                                                         */
/* DFX2                                                                         */
/*  Security_ReadAccess_Str:                                                    */
/*    HOSTIA_UCODE_SAI | HOSTIA_SUNPASS_SAI | PM_PCS_SAI |                      */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI | UNCORE_PMA_SAI | */
/*    OOB_MSM_SAI                                                               */
/*  Security_WriteAccess_Str:                                                   */
/*    HOSTIA_UCODE_SAI | HOSTIA_SUNPASS_SAI | PM_PCS_SAI |                      */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI                    */
/*  Security_Read_CP_Secured:                                                   */
/*    0                                                                         */
/* OS_W                                                                         */
/*  Security_ReadAccess_Str:                                                    */
/*    HOSTIA_POSTBOOT_SAI | HOSTIA_UCODE_SAI | HOSTIA_SMM_SAI |                 */
/*    HOSTIA_SUNPASS_SAI | HOSTIA_BOOT_SAI | SAI_Reserved_5 | SAI_Reserved_6 |  */
/*    SAI_Reserved_7 | GT_SAI | PM_PCS_SAI | HW_CPU_SAI | MEM_CPL_SAI | VTD_SAI */
/*    | PM_DIE_TO_DIE_SAI | OOB_MSM_UNTRUSTED_SAI | HOSTCP_PMA_SAI |            */
/*    CSE_INTEL_SAI | CSE_OEM_SAI | FUSE_CTRL_SAI | FUSE_PULLER_SAI |           */
/*    PECI_MSM_SAI | PM_IOSS_SAI | CSE_DNX_SAI | FXR_INTERNAL_SAI |             */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_UNTRUSTED_SAI | SAI_Reserved_26 |       */
/*    IRC_SAI | NPK_SAI | DISPLAY2_SAI | DISPLAY3_SAI | HW_PCH_SAI |            */
/*    SAI_Reserved_32 | SAI_Reserved_33 | SAI_Reserved_34 | GT_PMA_SAI |        */
/*    HSP_SAI | SAI_Reserved_37 | SAI_Reserved_38 | SAI_Reserved_39 |           */
/*    UNCORE_PMA_SAI | RC_MORPHED_SAI | DFX_INTEL_PRODUCTION_SAI |              */
/*    DFX_THIRDPARTY_SAI | DISPLAY_SAI | SAI_Reserved_45 | SAI_Reserved_46 |    */
/*    DISPLAY_KVM_SAI | GT2_SAI | SAI_Reserved_49 | DEVICE_UNTRUSTED_IAL_SAI |  */
/*    SAI_Reserved_51 | CORE_EVENT_PROXY_SAI | DEVICE_ABORT_SAI |               */
/*    RCIOMMU_BYPASS_SAI | SAI_Reserved_55 | SAI_Reserved_56 | IE_CSE_SAI |     */
/*    SAI_Reserved_58 | SAI_Reserved_59 | CPM_SAI | OOB_MSM_SAI | XGBE_SAI |    */
/*    DEVICE_UNTRUSTED_SAI                                                      */
/*  Security_WriteAccess_Str:                                                   */
/*    HOSTIA_POSTBOOT_SAI | HOSTIA_UCODE_SAI | HOSTIA_SMM_SAI |                 */
/*    HOSTIA_SUNPASS_SAI | HOSTIA_BOOT_SAI | PM_PCS_SAI |                       */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI |                  */
/*    DFX_UNTRUSTED_SAI | OOB_MSM_SAI | DFX_THIRDPARTY_SAI                      */
/*  Security_Read_CP_Secured:                                                   */
/*    0                                                                         */

/* SPRMCC Security Policy Groups:                                               */
/* BOOT_W                                                                       */
/*  Security_ReadAccess_Str:                                                    */
/*    HOSTIA_POSTBOOT_SAI | HOSTIA_UCODE_SAI | HOSTIA_SMM_SAI |                 */
/*    HOSTIA_SUNPASS_SAI | HOSTIA_BOOT_SAI | SAI_Reserved_5 | SAI_Reserved_6 |  */
/*    SAI_Reserved_7 | GT_SAI | PM_PCS_SAI | HW_CPU_SAI | MEM_CPL_SAI | VTD_SAI */
/*    | PM_DIE_TO_DIE_SAI | OOB_MSM_UNTRUSTED_SAI | HOSTCP_PMA_SAI |            */
/*    CSE_INTEL_SAI | CSE_OEM_SAI | FUSE_CTRL_SAI | FUSE_PULLER_SAI |           */
/*    PECI_MSM_SAI | PM_IOSS_SAI | CSE_DNX_SAI | FXR_INTERNAL_SAI |             */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_UNTRUSTED_SAI | SAI_Reserved_26 |       */
/*    IRC_SAI | NPK_SAI | DISPLAY2_SAI | DISPLAY3_SAI | HW_PCH_SAI |            */
/*    SAI_Reserved_32 | SAI_Reserved_33 | SAI_Reserved_34 | GT_PMA_SAI |        */
/*    HSP_SAI | SAI_Reserved_37 | SAI_Reserved_38 | SAI_Reserved_39 |           */
/*    UNCORE_PMA_SAI | RC_MORPHED_SAI | DFX_INTEL_PRODUCTION_SAI |              */
/*    DFX_THIRDPARTY_SAI | DISPLAY_SAI | SAI_Reserved_45 | SAI_Reserved_46 |    */
/*    DISPLAY_KVM_SAI | GT2_SAI | SAI_Reserved_49 | DEVICE_UNTRUSTED_IAL_SAI |  */
/*    SAI_Reserved_51 | CORE_EVENT_PROXY_SAI | DEVICE_ABORT_SAI |               */
/*    RCIOMMU_BYPASS_SAI | SAI_Reserved_55 | SAI_Reserved_56 | IE_CSE_SAI |     */
/*    SAI_Reserved_58 | SAI_Reserved_59 | CPM_SAI | OOB_MSM_SAI | XGBE_SAI |    */
/*    DEVICE_UNTRUSTED_SAI                                                      */
/*  Security_WriteAccess_Str:                                                   */
/*    HOSTIA_UCODE_SAI | HOSTIA_SUNPASS_SAI | PM_PCS_SAI |                      */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI | HOSTIA_BOOT_SAI  */
/*    | OOB_MSM_SAI                                                             */
/*  Security_Read_CP_Secured:                                                   */
/*    0                                                                         */
/* BTSMM_W                                                                      */
/*  Security_ReadAccess_Str:                                                    */
/*    HOSTIA_POSTBOOT_SAI | HOSTIA_UCODE_SAI | HOSTIA_SMM_SAI |                 */
/*    HOSTIA_SUNPASS_SAI | HOSTIA_BOOT_SAI | SAI_Reserved_5 | SAI_Reserved_6 |  */
/*    SAI_Reserved_7 | GT_SAI | PM_PCS_SAI | HW_CPU_SAI | MEM_CPL_SAI | VTD_SAI */
/*    | PM_DIE_TO_DIE_SAI | OOB_MSM_UNTRUSTED_SAI | HOSTCP_PMA_SAI |            */
/*    CSE_INTEL_SAI | CSE_OEM_SAI | FUSE_CTRL_SAI | FUSE_PULLER_SAI |           */
/*    PECI_MSM_SAI | PM_IOSS_SAI | CSE_DNX_SAI | FXR_INTERNAL_SAI |             */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_UNTRUSTED_SAI | SAI_Reserved_26 |       */
/*    IRC_SAI | NPK_SAI | DISPLAY2_SAI | DISPLAY3_SAI | HW_PCH_SAI |            */
/*    SAI_Reserved_32 | SAI_Reserved_33 | SAI_Reserved_34 | GT_PMA_SAI |        */
/*    HSP_SAI | SAI_Reserved_37 | SAI_Reserved_38 | SAI_Reserved_39 |           */
/*    UNCORE_PMA_SAI | RC_MORPHED_SAI | DFX_INTEL_PRODUCTION_SAI |              */
/*    DFX_THIRDPARTY_SAI | DISPLAY_SAI | SAI_Reserved_45 | SAI_Reserved_46 |    */
/*    DISPLAY_KVM_SAI | GT2_SAI | SAI_Reserved_49 | DEVICE_UNTRUSTED_IAL_SAI |  */
/*    SAI_Reserved_51 | CORE_EVENT_PROXY_SAI | DEVICE_ABORT_SAI |               */
/*    RCIOMMU_BYPASS_SAI | SAI_Reserved_55 | SAI_Reserved_56 | IE_CSE_SAI |     */
/*    SAI_Reserved_58 | SAI_Reserved_59 | CPM_SAI | OOB_MSM_SAI | XGBE_SAI |    */
/*    DEVICE_UNTRUSTED_SAI                                                      */
/*  Security_WriteAccess_Str:                                                   */
/*    HOSTIA_UCODE_SAI | HOSTIA_SUNPASS_SAI | PM_PCS_SAI |                      */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI | HOSTIA_BOOT_SAI  */
/*    | HOSTIA_SMM_SAI | OOB_MSM_SAI                                            */
/*  Security_Read_CP_Secured:                                                   */
/*    0                                                                         */
/* DFX1                                                                         */
/*  Security_ReadAccess_Str:                                                    */
/*    HOSTIA_UCODE_SAI | HOSTIA_SUNPASS_SAI | PM_PCS_SAI | UNCORE_PMA_SAI |     */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI | OOB_MSM_SAI      */
/*  Security_WriteAccess_Str:                                                   */
/*    HOSTIA_UCODE_SAI | HOSTIA_SUNPASS_SAI | PM_PCS_SAI |                      */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI | OOB_MSM_SAI      */
/*  Security_Read_CP_Secured:                                                   */
/*    0                                                                         */
/* DFX2                                                                         */
/*  Security_ReadAccess_Str:                                                    */
/*    HOSTIA_UCODE_SAI | HOSTIA_SUNPASS_SAI | PM_PCS_SAI |                      */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI | UNCORE_PMA_SAI | */
/*    OOB_MSM_SAI                                                               */
/*  Security_WriteAccess_Str:                                                   */
/*    HOSTIA_UCODE_SAI | HOSTIA_SUNPASS_SAI | PM_PCS_SAI |                      */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI                    */
/*  Security_Read_CP_Secured:                                                   */
/*    0                                                                         */
/* OS_W                                                                         */
/*  Security_ReadAccess_Str:                                                    */
/*    HOSTIA_POSTBOOT_SAI | HOSTIA_UCODE_SAI | HOSTIA_SMM_SAI |                 */
/*    HOSTIA_SUNPASS_SAI | HOSTIA_BOOT_SAI | SAI_Reserved_5 | SAI_Reserved_6 |  */
/*    SAI_Reserved_7 | GT_SAI | PM_PCS_SAI | HW_CPU_SAI | MEM_CPL_SAI | VTD_SAI */
/*    | PM_DIE_TO_DIE_SAI | OOB_MSM_UNTRUSTED_SAI | HOSTCP_PMA_SAI |            */
/*    CSE_INTEL_SAI | CSE_OEM_SAI | FUSE_CTRL_SAI | FUSE_PULLER_SAI |           */
/*    PECI_MSM_SAI | PM_IOSS_SAI | CSE_DNX_SAI | FXR_INTERNAL_SAI |             */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_UNTRUSTED_SAI | SAI_Reserved_26 |       */
/*    IRC_SAI | NPK_SAI | DISPLAY2_SAI | DISPLAY3_SAI | HW_PCH_SAI |            */
/*    SAI_Reserved_32 | SAI_Reserved_33 | SAI_Reserved_34 | GT_PMA_SAI |        */
/*    HSP_SAI | SAI_Reserved_37 | SAI_Reserved_38 | SAI_Reserved_39 |           */
/*    UNCORE_PMA_SAI | RC_MORPHED_SAI | DFX_INTEL_PRODUCTION_SAI |              */
/*    DFX_THIRDPARTY_SAI | DISPLAY_SAI | SAI_Reserved_45 | SAI_Reserved_46 |    */
/*    DISPLAY_KVM_SAI | GT2_SAI | SAI_Reserved_49 | DEVICE_UNTRUSTED_IAL_SAI |  */
/*    SAI_Reserved_51 | CORE_EVENT_PROXY_SAI | DEVICE_ABORT_SAI |               */
/*    RCIOMMU_BYPASS_SAI | SAI_Reserved_55 | SAI_Reserved_56 | IE_CSE_SAI |     */
/*    SAI_Reserved_58 | SAI_Reserved_59 | CPM_SAI | OOB_MSM_SAI | XGBE_SAI |    */
/*    DEVICE_UNTRUSTED_SAI                                                      */
/*  Security_WriteAccess_Str:                                                   */
/*    HOSTIA_POSTBOOT_SAI | HOSTIA_UCODE_SAI | HOSTIA_SMM_SAI |                 */
/*    HOSTIA_SUNPASS_SAI | HOSTIA_BOOT_SAI | PM_PCS_SAI |                       */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI |                  */
/*    DFX_UNTRUSTED_SAI | OOB_MSM_SAI | DFX_THIRDPARTY_SAI                      */
/*  Security_Read_CP_Secured:                                                   */
/*    0                                                                         */

/* SPRUCC Security Policy Groups:                                               */
/* BOOT_W                                                                       */
/*  Security_ReadAccess_Str:                                                    */
/*    HOSTIA_POSTBOOT_SAI | HOSTIA_UCODE_SAI | HOSTIA_SMM_SAI |                 */
/*    HOSTIA_SUNPASS_SAI | HOSTIA_BOOT_SAI | SAI_Reserved_5 | SAI_Reserved_6 |  */
/*    SAI_Reserved_7 | GT_SAI | PM_PCS_SAI | HW_CPU_SAI | MEM_CPL_SAI | VTD_SAI */
/*    | PM_DIE_TO_DIE_SAI | OOB_MSM_UNTRUSTED_SAI | HOSTCP_PMA_SAI |            */
/*    CSE_INTEL_SAI | CSE_OEM_SAI | FUSE_CTRL_SAI | FUSE_PULLER_SAI |           */
/*    PECI_MSM_SAI | PM_IOSS_SAI | CSE_DNX_SAI | FXR_INTERNAL_SAI |             */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_UNTRUSTED_SAI | SAI_Reserved_26 |       */
/*    IRC_SAI | NPK_SAI | DISPLAY2_SAI | DISPLAY3_SAI | HW_PCH_SAI |            */
/*    SAI_Reserved_32 | SAI_Reserved_33 | SAI_Reserved_34 | GT_PMA_SAI |        */
/*    HSP_SAI | SAI_Reserved_37 | SAI_Reserved_38 | SAI_Reserved_39 |           */
/*    UNCORE_PMA_SAI | RC_MORPHED_SAI | DFX_INTEL_PRODUCTION_SAI |              */
/*    DFX_THIRDPARTY_SAI | DISPLAY_SAI | SAI_Reserved_45 | SAI_Reserved_46 |    */
/*    DISPLAY_KVM_SAI | GT2_SAI | SAI_Reserved_49 | DEVICE_UNTRUSTED_IAL_SAI |  */
/*    SAI_Reserved_51 | CORE_EVENT_PROXY_SAI | DEVICE_ABORT_SAI |               */
/*    RCIOMMU_BYPASS_SAI | SAI_Reserved_55 | SAI_Reserved_56 | IE_CSE_SAI |     */
/*    SAI_Reserved_58 | SAI_Reserved_59 | CPM_SAI | OOB_MSM_SAI | XGBE_SAI |    */
/*    DEVICE_UNTRUSTED_SAI                                                      */
/*  Security_WriteAccess_Str:                                                   */
/*    HOSTIA_UCODE_SAI | HOSTIA_SUNPASS_SAI | PM_PCS_SAI |                      */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI | HOSTIA_BOOT_SAI  */
/*    | OOB_MSM_SAI                                                             */
/*  Security_Read_CP_Secured:                                                   */
/*    0                                                                         */
/* BTSMM_W                                                                      */
/*  Security_ReadAccess_Str:                                                    */
/*    HOSTIA_POSTBOOT_SAI | HOSTIA_UCODE_SAI | HOSTIA_SMM_SAI |                 */
/*    HOSTIA_SUNPASS_SAI | HOSTIA_BOOT_SAI | SAI_Reserved_5 | SAI_Reserved_6 |  */
/*    SAI_Reserved_7 | GT_SAI | PM_PCS_SAI | HW_CPU_SAI | MEM_CPL_SAI | VTD_SAI */
/*    | PM_DIE_TO_DIE_SAI | OOB_MSM_UNTRUSTED_SAI | HOSTCP_PMA_SAI |            */
/*    CSE_INTEL_SAI | CSE_OEM_SAI | FUSE_CTRL_SAI | FUSE_PULLER_SAI |           */
/*    PECI_MSM_SAI | PM_IOSS_SAI | CSE_DNX_SAI | FXR_INTERNAL_SAI |             */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_UNTRUSTED_SAI | SAI_Reserved_26 |       */
/*    IRC_SAI | NPK_SAI | DISPLAY2_SAI | DISPLAY3_SAI | HW_PCH_SAI |            */
/*    SAI_Reserved_32 | SAI_Reserved_33 | SAI_Reserved_34 | GT_PMA_SAI |        */
/*    HSP_SAI | SAI_Reserved_37 | SAI_Reserved_38 | SAI_Reserved_39 |           */
/*    UNCORE_PMA_SAI | RC_MORPHED_SAI | DFX_INTEL_PRODUCTION_SAI |              */
/*    DFX_THIRDPARTY_SAI | DISPLAY_SAI | SAI_Reserved_45 | SAI_Reserved_46 |    */
/*    DISPLAY_KVM_SAI | GT2_SAI | SAI_Reserved_49 | DEVICE_UNTRUSTED_IAL_SAI |  */
/*    SAI_Reserved_51 | CORE_EVENT_PROXY_SAI | DEVICE_ABORT_SAI |               */
/*    RCIOMMU_BYPASS_SAI | SAI_Reserved_55 | SAI_Reserved_56 | IE_CSE_SAI |     */
/*    SAI_Reserved_58 | SAI_Reserved_59 | CPM_SAI | OOB_MSM_SAI | XGBE_SAI |    */
/*    DEVICE_UNTRUSTED_SAI                                                      */
/*  Security_WriteAccess_Str:                                                   */
/*    HOSTIA_UCODE_SAI | HOSTIA_SUNPASS_SAI | PM_PCS_SAI |                      */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI | HOSTIA_BOOT_SAI  */
/*    | HOSTIA_SMM_SAI | OOB_MSM_SAI                                            */
/*  Security_Read_CP_Secured:                                                   */
/*    0                                                                         */
/* DFX1                                                                         */
/*  Security_ReadAccess_Str:                                                    */
/*    HOSTIA_UCODE_SAI | HOSTIA_SUNPASS_SAI | PM_PCS_SAI | UNCORE_PMA_SAI |     */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI | OOB_MSM_SAI      */
/*  Security_WriteAccess_Str:                                                   */
/*    HOSTIA_UCODE_SAI | HOSTIA_SUNPASS_SAI | PM_PCS_SAI |                      */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI | OOB_MSM_SAI      */
/*  Security_Read_CP_Secured:                                                   */
/*    0                                                                         */
/* DFX2                                                                         */
/*  Security_ReadAccess_Str:                                                    */
/*    HOSTIA_UCODE_SAI | HOSTIA_SUNPASS_SAI | PM_PCS_SAI |                      */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI | UNCORE_PMA_SAI | */
/*    OOB_MSM_SAI                                                               */
/*  Security_WriteAccess_Str:                                                   */
/*    HOSTIA_UCODE_SAI | HOSTIA_SUNPASS_SAI | PM_PCS_SAI |                      */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI                    */
/*  Security_Read_CP_Secured:                                                   */
/*    0                                                                         */
/* OS_W                                                                         */
/*  Security_ReadAccess_Str:                                                    */
/*    HOSTIA_POSTBOOT_SAI | HOSTIA_UCODE_SAI | HOSTIA_SMM_SAI |                 */
/*    HOSTIA_SUNPASS_SAI | HOSTIA_BOOT_SAI | SAI_Reserved_5 | SAI_Reserved_6 |  */
/*    SAI_Reserved_7 | GT_SAI | PM_PCS_SAI | HW_CPU_SAI | MEM_CPL_SAI | VTD_SAI */
/*    | PM_DIE_TO_DIE_SAI | OOB_MSM_UNTRUSTED_SAI | HOSTCP_PMA_SAI |            */
/*    CSE_INTEL_SAI | CSE_OEM_SAI | FUSE_CTRL_SAI | FUSE_PULLER_SAI |           */
/*    PECI_MSM_SAI | PM_IOSS_SAI | CSE_DNX_SAI | FXR_INTERNAL_SAI |             */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_UNTRUSTED_SAI | SAI_Reserved_26 |       */
/*    IRC_SAI | NPK_SAI | DISPLAY2_SAI | DISPLAY3_SAI | HW_PCH_SAI |            */
/*    SAI_Reserved_32 | SAI_Reserved_33 | SAI_Reserved_34 | GT_PMA_SAI |        */
/*    HSP_SAI | SAI_Reserved_37 | SAI_Reserved_38 | SAI_Reserved_39 |           */
/*    UNCORE_PMA_SAI | RC_MORPHED_SAI | DFX_INTEL_PRODUCTION_SAI |              */
/*    DFX_THIRDPARTY_SAI | DISPLAY_SAI | SAI_Reserved_45 | SAI_Reserved_46 |    */
/*    DISPLAY_KVM_SAI | GT2_SAI | SAI_Reserved_49 | DEVICE_UNTRUSTED_IAL_SAI |  */
/*    SAI_Reserved_51 | CORE_EVENT_PROXY_SAI | DEVICE_ABORT_SAI |               */
/*    RCIOMMU_BYPASS_SAI | SAI_Reserved_55 | SAI_Reserved_56 | IE_CSE_SAI |     */
/*    SAI_Reserved_58 | SAI_Reserved_59 | CPM_SAI | OOB_MSM_SAI | XGBE_SAI |    */
/*    DEVICE_UNTRUSTED_SAI                                                      */
/*  Security_WriteAccess_Str:                                                   */
/*    HOSTIA_POSTBOOT_SAI | HOSTIA_UCODE_SAI | HOSTIA_SMM_SAI |                 */
/*    HOSTIA_SUNPASS_SAI | HOSTIA_BOOT_SAI | PM_PCS_SAI |                       */
/*    DFX_INTEL_MANUFACTURING_SAI | DFX_INTEL_PRODUCTION_SAI |                  */
/*    DFX_UNTRUSTED_SAI | OOB_MSM_SAI | DFX_THIRDPARTY_SAI                      */
/*  Security_Read_CP_Secured:                                                   */
/*    0                                                                         */


#ifndef _SB_FBLP_h
#define _SB_FBLP_h
#include <Base.h>

/* BCTL_SB_FBLP_REG supported on:                                               */
/*      SPRA0 (0x1000003e)                                                      */
/*      SPRB0 (0x1000003e)                                                      */
/*      SPRHBM (0x1000003e)                                                     */
/*      SPRC0 (0x1000003e)                                                      */
/*      SPRMCC (0x1000003e)                                                     */
/*      SPRUCC (0x1000003e)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register provides extensions to the Command Register ('PCI Command Register (PCICMD)' on page 160) that are specific to a bridge. The Bridge Control Register provides many of the same controls for the secondary interface that are provided by the Command Register for the primary interface. Some bits affect operation of both interfaces of the bridge.
*/


#define BCTL_SB_FBLP_REG 0x2C01003E

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 rsvd : 6;

                            /* Bits[5:0], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 sbr : 1;

                            /* Bits[6:6], Access Type=RW, default=0x00000000*/

                            /*
                               Setting this bit triggers a hot reset on the
                               downstream link for the corresponding PCIe
                               Express port and the PCI Express hierarchy
                               domain subordinate to the port. Software must
                               ensure a minimum reset duration of 1us as
                               defined in the PCI Local Bus Specification,
                               Revision 3.0. Hardware will continue to maintain
                               the hot reset state as long as the SBR bit is
                               set. For Root Ports, it is recommended that
                               software assert this field for a minimum of 2 ms
                               to ensure that all downstream links enters hot
                               reset state. A secondary bus reset will not
                               reset any register of a Type 1 configuration
                               space header function.
                            */
    UINT16 rsvd_7 : 9;

                            /* Bits[15:7], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT16 Data;

} BCTL_SB_FBLP_STRUCT;

/* LINKCAP_SB_FBLP_REG supported on:                                            */
/*      SPRA0 (0x2000004c)                                                      */
/*      SPRB0 (0x2000004c)                                                      */
/*      SPRHBM (0x2000004c)                                                     */
/*      SPRC0 (0x2000004c)                                                      */
/*      SPRMCC (0x2000004c)                                                     */
/*      SPRUCC (0x2000004c)                                                     */
/* Register default value on SPRA0: 0x00000105                                  */
/* Register default value on SPRB0: 0x00000105                                  */
/* Register default value on SPRHBM: 0x00000105                                 */
/* Register default value on SPRC0: 0x00000105                                  */
/* Register default value on SPRMCC: 0x00000105                                 */
/* Register default value on SPRUCC: 0x00000105                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* Link Capabilities
*/


#define LINKCAP_SB_FBLP_REG 0x2C02004C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 mls : 4;

                            /* Bits[3:0], Access Type=RO/V, default=0x00000005*/

                            /*
                               This field indicates the supported link speed(s)
                               of the associated port. 0001b: 2.5 Gb/s link
                               speed is supported 0010b: 5.0 Gb/s and 2.5 Gb/s
                               link speed supported 0011b: 8.0 Gb/s and 5.0 and
                               2.5 Gb/s link speed supported 0100b: 16.0 Gb/s
                               and 8.0 Gb/s and 5.0 and 2.5 Gb/s link speed
                               supported Others: Reserved. The encoding is the
                               binary value of the bit location in the
                               Supported Link Speeds Vector (in the Link
                               Capabilities 2 register) that corresponds to the
                               maximum Link speed. Defined encodings are: 0001b
                               Supported Link Speeds Vector field bit 0 0010b
                               Supported Link Speeds Vector field bit 1 0011b
                               Supported Link Speeds Vector field bit 2 0100b
                               Supported Link Speeds Vector field bit 3 0101b
                               Supported Link Speeds Vector field bit 4 0110b
                               Supported Link Speeds Vector field bit 5 0111b
                               Supported Link Speeds Vector field bit 6 All
                               other encodings are reserved. Multi-Function
                               devices associated with an Upstream Port must
                               report the same value in this field for all
                               Functions.
                            */
    UINT32 mlw : 6;

                            /* Bits[9:4], Access Type=RO/V, default=0x00000010*/

                            /*
                               This field indicates the maximum link width
                               implemented by the given PCI Express Link. 00h:
                               Reserved 01h: x1 02h: x2 04h: x4 08h: x8 10h:
                               x16 20h: x32 (Unsupported) Others Reserved
                               Default value is determined by HW after port
                               training is initiated for ports that bifurcate.
                               Hence effective MLW can be smaller than
                               indicated by default
                            */
    UINT32 aspmsup : 2;

                            /* Bits[11:10], Access Type=RW/V/L, default=None*/

                            /*
                               This field indicates the level of ASPM supported
                               on the given PCI Express Link. 00b: No ASPM
                               Support 01b: L0s Supported 10b: L1 Supported
                               11b: L0s and L1 Supported Note: Lock Key bit is
                               located in the Personality Lock Key Control
                               Register . New PCIe Gen3 ECN provides additional
                               encoding of ASPMSUP field to provide optional
                               support of L0s and L1 Software must not enable
                               L0s in either direction on a given Link unless
                               components on both sides of the Link each
                               support L0s. L0s should not be advertised when
                               operating with SRIS.
                            */
    UINT32 l0sel : 3;

                            /* Bits[14:12], Access Type=RW/L, default=None*/

                            /*
                               This field indicates the L0s exit latency for
                               the given PCI-Express Link. It indicates the
                               length of time this port requires to complete
                               transition from L0s to L0. 000b: Less than 64ns
                               001b: 64ns to less than 128ns 010b: 128ns to
                               less than 256ns 011b: 256ns to less than 512ns
                               100b 512 ns to less than 1 us 101b: 1us to less
                               than 2us 110b: 2us to less than 4us 111b: More
                               than 4us Note: Lock Key bit is located in the
                               Personality Lock Key Control Register . If L0s
                               is not supported, the value is undefined.
                            */
    UINT32 l1el : 3;

                            /* Bits[17:15], Access Type=RW/L, default=None*/

                            /*
                               This field indicates the L1 exit latency for the
                               given PCI-Express Link. It indicates the length
                               of time this port requires to complete
                               transition from L1 to L0. 000: Less than 1us
                               001: 1us to less than 2us 010: 2us to less than
                               4us 011: 4us to less than 8us 100: 8us to less
                               than 16us 101: 16us to less than 32us 110: 32us
                               to less than 64us 111: More than 64us Note: Lock
                               Key bit is located in the Personality Lock Key
                               Control Register . If L1 is not supported, the
                               value is undefined.
                            */
    UINT32 cpmc : 1;

                            /* Bits[18:18], Access Type=RO, default=0x00000000*/

                            /*
                               For Upstream Ports, a value of 1b in this bit
                               indicates that the component tolerates the
                               removal of any reference clock(s) via the 'clock
                               request' (CLKREQ#) mechanism when the Link is in
                               the L1 and L2/L3 Ready Link states. A value of
                               0b indicates the component does not have this
                               capability and that reference clock(s) must not
                               be removed in these Link states. L1 PM Substates
                               defines other semantics for the CLKREQ# signal,
                               which are managed independently of Clock Power
                               Management. This Capability is applicable only
                               in form factors that support 'clock request'
                               (CLKREQ#) capability. For a multi-Function
                               device associated with an Upstream Port, each
                               Function indicates its capability independently.
                               Power Management configuration software must
                               only permit reference clock removal if all
                               Functions of the multi-Function device indicate
                               a 1b in this bit. For ARI Devices, all Functions
                               must indicate the same value in this bit. For
                               Downstream Ports, this bit must be hardwired to
                               0b.
                            */
    UINT32 rsvd : 13;

                            /* Bits[31:19], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} LINKCAP_SB_FBLP_STRUCT;

/* LINKCTL_SB_FBLP_REG supported on:                                            */
/*      SPRA0 (0x10000050)                                                      */
/*      SPRB0 (0x10000050)                                                      */
/*      SPRHBM (0x10000050)                                                     */
/*      SPRC0 (0x10000050)                                                      */
/*      SPRMCC (0x10000050)                                                     */
/*      SPRUCC (0x10000050)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Link Control
*/


#define LINKCTL_SB_FBLP_REG 0x2C010050

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 aspmctl : 2;

                            /* Bits[1:0], Access Type=RW, default=0x00000000*/

                            /*
                               This field controls the level of ASPM enabled on
                               a given PCI Express Link. 00b: Disabled 01b: L0s
                               Entry Enabled 10b: L1 Entry Enabled 11b: L0s and
                               L1 Entry Enabled ''L0s Entry Enabled' enables
                               the Transmitter to enter L0s. If L0s is
                               supported, the Receiver must be capable of
                               entering L0s even when the Transmitter is
                               disabled from entering L0s (00b or 10b).
                            */
    UINT16 rsvd : 1;

                            /* Bits[2:2], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 rcb : 1;

                            /* Bits[3:3], Access Type=RO, default=0x00000000*/

                            /*
                               This bit indicates the RCB value for Root Port,
                               Endpoints and Bridges. 0b: 64 byte 1b: 128 byte
                               Configuration software must only set this bit if
                               the Root Port Upstream from the Endpoint or
                               Bridge reports an RCB value of 128 bytes (Root
                               Port only)
                            */
    UINT16 ld : 1;

                            /* Bits[4:4], Access Type=RW, default=0x00000000*/

                            /*
                               This bit disables the Link by directing the
                               LTSSM to the Disabled state when Set, This is
                               used by the downstream ports, Root ports or DMI
                               EP in RC only. For the upstream port or virtual
                               switch port, it is Read-only.
                            */
    UINT16 rl : 1;

                            /* Bits[5:5], Access Type=RW/V, default=0x00000000*/

                            /*
                               When set, this bit initiates link retraining by
                               directing the physical layer LTSSM to recovery
                               state. If the LTSSM is already in REcovery or
                               configuration, re-entering Recovery is permitted
                               but not required. Reads of this bit always
                               return 0b. This is used by the downstream ports,
                               Root ports or DMI EP in RC only. For the
                               upstream port or virtual switch port, it is
                               Read-only.
                            */
    UINT16 cccfg : 1;

                            /* Bits[6:6], Access Type=RW, default=0x00000000*/

                            /*
                               When set, this bit indicates that this component
                               and the component at the opposite end of this
                               link are operating with distributed common
                               reference clocks. A value of 0b indicates that
                               this component and the component at the opposite
                               end of this link are operating with asynchronous
                               reference clock. After changing the value in
                               this bit in both components on a link, software
                               must trigger the link to retrain by writing a 1b
                               to the Retrain Link bit of the Downstream Port.
                            */
    UINT16 es : 1;

                            /* Bits[7:7], Access Type=RW, default=0x00000000*/

                            /*
                               When set, this bit forces extended transmission
                               of 4096 FTS ordered sets in FTS and an extra
                               1024 TS1 at exit from L1 prior to entering L0.
                               This mode provides external devices monitoring
                               the link time to achieve bit and symbol lock
                               before the link enters L0 state and resumes
                               communication. Default value for this bit is 0.
                            */
    UINT16 rsvd_8 : 1;

                            /* Bits[8:8], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 hawd : 1;

                            /* Bits[9:9], Access Type=RW, default=0x00000000*/

                            /*
                               Set, this bit disables hardware from changing
                               the Link width for reasons other than attempting
                               to correct unreliable Link operation by reducing
                               Link width. For a Multi-Function device
                               associated with an Upstream Port, the bit in
                               Function 0 is of type RW, and only Function 0
                               controls the components Link behavior. In all
                               other Functions of that device, this bit is of
                               type RsvdP. Components that do not implement the
                               ability autonomously to change Link width are
                               permitted to hardwire this bit to 0b. Default
                               value of this bit is 0b.
                            */
    UINT16 rsvd_10 : 4;

                            /* Bits[13:10], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 drs : 2;

                            /* Bits[15:14], Access Type=RO, default=0x00000000*/

                            /*
                               Indicates the mechanism used to report reception
                               of a DRS message. Must be implemented for
                               Downstream Ports with the DRS Supported bit Set
                               in the Link Capabilities 2 Register. Encodings
                               are: 00b DRS not Reported: If DRS Supported is
                               Set, receiving a DRS Message will set DRS
                               Message Received in the Link Status 2 Register
                               but will otherwise have no effect 01b DRS
                               Interrupt Enabled: If the DRS Message Received
                               bit in the Link Status 2 Register transitions
                               from 0 to 1, and either MSI or MSI-X is enabled,
                               an MSI or MSI-X interrupt is generated using the
                               vector in Interrupt Message Number 10b DRS to
                               FRS Signaling Enabled: If the DRS Message
                               Received bit in the Link Status 2 Register
                               transitions from 0 to 1, the Port must send an
                               FRS Message Upstream with the FRS Reason field
                               set to DRS Message Received Behavior is
                               undefined if this field is set to 10b and the
                               FRS Supported bit in the Device Capabilities 2
                               Register is Clear. Behavior is undefined if this
                               field is set to 11b. Downstream Ports with the
                               DRS Supported bit Clear in the Link Capabilities
                               2 register must hardwire this field to 00b. This
                               field is Reserved for Upstream Ports. Default
                               value of this field is 00b.
                            */

  } Bits;
  UINT16 Data;

} LINKCTL_SB_FBLP_STRUCT;

/* LINKSTS_SB_FBLP_REG supported on:                                            */
/*      SPRA0 (0x10000052)                                                      */
/*      SPRB0 (0x10000052)                                                      */
/*      SPRHBM (0x10000052)                                                     */
/*      SPRC0 (0x10000052)                                                      */
/*      SPRMCC (0x10000052)                                                     */
/*      SPRUCC (0x10000052)                                                     */
/* Register default value on SPRA0: 0x00000001                                  */
/* Register default value on SPRB0: 0x00000001                                  */
/* Register default value on SPRHBM: 0x00000001                                 */
/* Register default value on SPRC0: 0x00000001                                  */
/* Register default value on SPRMCC: 0x00000001                                 */
/* Register default value on SPRUCC: 0x00000001                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Link Status
*/


#define LINKSTS_SB_FBLP_REG 0x2C010052

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 cls : 4;

                            /* Bits[3:0], Access Type=RO/V, default=0x00000001*/

                            /*
                               This field indicates the negotiated link speed
                               of the given PCI Express link. 0001b: 2.5 Gb/s
                               PCI Express Link 0010b: 5.0 Gb/s PCI Express
                               Link 0011b: 8.0 Gb/s PCI Express Link Others:
                               Reserved The encoding is the binary value of the
                               bit location in the Supported Link Speeds Vector
                               (in the Link Capabilities 2 register) that
                               corresponds to the current Link speed. The value
                               in this field is undefined when the link is not
                               up.
                            */
    UINT16 nlw : 6;

                            /* Bits[9:4], Access Type=RO/V, default=0x00000000*/

                            /*
                               This field indicates the negotiated width of the
                               PCI Express link. 00 0001b: x1 00 0010b: X2 00
                               0100b: x4 00 1000b: X8 00 1100b: X12...not
                               supported 01 0000b: X16 10 0000b: X32...not
                               supported All other values are reserved. The
                               value in this field is undefined when the link
                               is not up.
                            */
    UINT16 undefined : 1;

                            /* Bits[10:10], Access Type=RO, default=0x00000000*/

                            /* Not applicable */
    UINT16 lt : 1;

                            /* Bits[11:11], Access Type=RO/V, default=0x00000000*/

                            /*
                               For PCIe device, this bit indicates that the
                               Physical Layer LTSSM is in the Configuration or
                               Recovery state, or a 1b was written to the
                               Retrain Link bit but the Link training has not
                               yet begun. Hardware clears this bit when the
                               LTSSM exits the Configuration/Recovery state.
                            */
    UINT16 rsvd : 1;

                            /* Bits[12:12], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 dllla : 1;

                            /* Bits[13:13], Access Type=RO/V, default=0x00000000*/

                            /*
                               This bit indicates the status of the Data Link
                               Control and Management Status Machine. It
                               returns a 1b to indicate the DL_Active state, 0b
                               otherwise.
                            */
    UINT16 lbms : 1;

                            /* Bits[14:14], Access Type=RW/1C/V, default=0x00000000*/

                            /*
                               This bit is set by hardware to indicate that
                               either of the following has occurred without the
                               port transitioning through DL_Down status: A
                               link retraining has completed following a write
                               of 1b to the Retrain link bit. Hardware has
                               changed link speed of width to attempt to
                               correct unreliable link operation, either
                               through an LTSSM timeout or a higher level
                               process. This bit must be set if the Physical
                               Layer reports a non-autonomous speed or width
                               change initiated by the Upstream Port.
                            */
    UINT16 labs : 1;

                            /* Bits[15:15], Access Type=RW/1C/V, default=0x00000000*/

                            /*
                               This bit is set by hardware to indicate that the
                               PCIe cluster has autonomously changed link or
                               width, without the port transitioning through
                               DL_Down status, for reason other than to attempt
                               to correct unreliable link operation. This bit
                               must be set if the Physical Layer reports an
                               autonomous speed or width change initiated by
                               the Upstream Port.
                            */

  } Bits;
  UINT16 Data;

} LINKSTS_SB_FBLP_STRUCT;

/* LINKCAP2_SB_FBLP_REG supported on:                                           */
/*      SPRA0 (0x2000006c)                                                      */
/*      SPRB0 (0x2000006c)                                                      */
/*      SPRHBM (0x2000006c)                                                     */
/*      SPRC0 (0x2000006c)                                                      */
/*      SPRMCC (0x2000006c)                                                     */
/*      SPRUCC (0x2000006c)                                                     */
/* Register default value on SPRA0: 0x0000003E                                  */
/* Register default value on SPRB0: 0x0000003E                                  */
/* Register default value on SPRHBM: 0x0000003E                                 */
/* Register default value on SPRC0: 0x0000003E                                  */
/* Register default value on SPRMCC: 0x0000003E                                 */
/* Register default value on SPRUCC: 0x0000003E                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* Link Capabilities 2
*/


#define LINKCAP2_SB_FBLP_REG 0x2C02006C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 rsvd : 1;

                            /* Bits[0:0], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 slnkspv : 7;

                            /* Bits[7:1], Access Type=RO/V, default=0x0000001F*/

                            /*
                               This field indicates the supported Link speed(s)
                               of the associated Port. For each bit, a value of
                               1b indicates that the corresponding Link speed
                               is supported, otherwise, the Link speed is not
                               supported. Bit definitions within this field
                               are: bit 0 2.5 GT/s bit 1 5.0 GT/s bit 2 8.0
                               GT/s bit 3 16.0 GT/s bit 6:4 Reserved Multi-
                               Function devices associated with an Upstream
                               Port must report the same value in this field
                               for all Functions.
                            */
    UINT32 cls : 1;

                            /* Bits[8:8], Access Type=RW/L, default=None*/

                            /*
                               When set to 1b, this bit indicates that the
                               associated Port supports crosslinks When set to
                               0b on a Port that supports Link speeds of 8.0
                               GT/s or higher, this bit indicates that the
                               associated Port does not support crosslinks.
                               When set to 0b on a Port that only supports Link
                               speeds of 2.5 GT/s or 5.0 GT/s, this bit
                               provides no information regarding the Port's
                               level of crosslink support. It is recommended
                               that this bit be Set in any Port that supports
                               crosslinks even though doing so is only required
                               for Ports that also support operating at 8.0
                               GT/s or higher Link speeds. Note: Software
                               should use this bit when referencing fields
                               whose definition depends on whether or not the
                               Port supports crosslinks. Note: Lock Key bit is
                               located in the Personality Lock Key Control
                               Register .
                            */
    UINT32 lskposgssv : 7;

                            /* Bits[15:9], Access Type=RW/L, default=None*/

                            /*
                               If this field is non-zero, it indicates that the
                               Port, when operating at the indicated speed(s)
                               supports SRIS and also supports software control
                               of the SKP Ordered Set transmission scheduling
                               rate. Bit definitions within this field are: Bit
                               0 2.5 GT/s Bit 1 5.0 GT/s Bit 2 8.0 GT/s Bit 3
                               16.0 GT/s Bits 6:4 RsvdP Multi-Function devices
                               associated with an Upstream Port must report the
                               same value in this field for all Functions.
                               Behavior is undefined if a bit is Set in this
                               field and the corresponding bit is not Set in
                               the Supported Link Speeds Vector. Note: Lock Key
                               bit is located in the Personality Lock Key
                               Control Register .
                            */
    UINT32 lskposrssv : 7;

                            /* Bits[22:16], Access Type=RW/L, default=None*/

                            /*
                               If this field is non-zero, it indicates that the
                               Port, when operating at the indicated speed(s)
                               supports SRIS and also supports receiving SKP OS
                               at the rate defined for SRNS while running in
                               SRIS. Bit definitions within this field are: Bit
                               0 2.5 GT/s Bit 1 5.0 GT/s Bit 2 8.0 GT/s Bit 3
                               16.0 GT/s Bits 6:4 RsvdP Multi-Function devices
                               associated with an Upstream Port must report the
                               same value in this field for all Functions.
                               Behavior is undefined if a bit is Set in this
                               field and the corresponding bit is not Set in
                               the Supported Link Speeds Vector. Note: Lock Key
                               bit is located in the Personality Lock Key
                               Control Register . Currently, design does not
                               support reception of low frequency SOS in L0.
                            */
    UINT32 rpds : 1;

                            /* Bits[23:23], Access Type=RW/L, default=None*/

                            /*
                               When set to 1b, this bit indicates that the
                               associated Port supports detection and reporting
                               of Retimer presence. This bit must be set to 1b
                               in a Port when the Supported Link Speeds Vector
                               of the Link Capabilities 2 register indicates
                               support for a Link speed of 16.0 GT/s or higher.
                               It is permitted to be set to 1b regardless of
                               the supported Link speeds. Note: Lock Key bit is
                               located in the Personality Lock Key Control
                               Register .
                            */
    UINT32 rpds2 : 1;

                            /* Bits[24:24], Access Type=RW/L, default=None*/

                            /*
                               When set to 1b, this bit indicates that the
                               associated Port supports detection and reporting
                               of two Retimers presence. This bit must be set
                               to 1b in a Port when the Supported Link Speeds
                               Vector of the Link Capabilities 2 register
                               indicates support for a Link speed of 16.0 GT/s
                               or higher. It is permitted to be set to 1b
                               regardless of the supported Link speeds if the
                               Retimer Presence Detect Supported bit is also
                               set to 1b. Note: Lock Key bit is located in the
                               Personality Lock Key Control Register .
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} LINKCAP2_SB_FBLP_STRUCT;

/* LINKCTL2_SB_FBLP_REG supported on:                                           */
/*      SPRA0 (0x10000070)                                                      */
/*      SPRB0 (0x10000070)                                                      */
/*      SPRHBM (0x10000070)                                                     */
/*      SPRC0 (0x10000070)                                                      */
/*      SPRMCC (0x10000070)                                                     */
/*      SPRUCC (0x10000070)                                                     */
/* Register default value on SPRA0: 0x00000005                                  */
/* Register default value on SPRB0: 0x00000005                                  */
/* Register default value on SPRHBM: 0x00000005                                 */
/* Register default value on SPRC0: 0x00000005                                  */
/* Register default value on SPRMCC: 0x00000005                                 */
/* Register default value on SPRUCC: 0x00000005                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Link Control 2
*/


#define LINKCTL2_SB_FBLP_REG 0x2C010070

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 tls : 4;

                            /* Bits[3:0], Access Type=RW/V/P, default=0x00000005*/

                            /*
                               For Downstream Ports, this field sets an upper
                               limit on Link operational speed by restricting
                               the values advertised by the Upstream component
                               in its training sequences. The encoded value
                               specifies a bit location in the Supported Link
                               Speeds Vector (in the Link Capabilities 2
                               register) that corresponds to the desired target
                               Link speed. Defined encodings are: 0001b
                               Supported Link Speeds Vector field bit 0 0010b
                               Supported Link Speeds Vector field bit 1 0011b
                               Supported Link Speeds Vector field bit 2 0100b
                               Supported Link Speeds Vector field bit 3 0101b
                               Supported Link Speeds Vector field bit 4 0110b
                               Supported Link Speeds Vector field bit 5 0111b
                               Supported Link Speeds Vector field bit 6 All
                               other encodings are Reserved. If a value is
                               written to this field that does not correspond
                               to a supported speed (as indicated by the
                               Supported Link Speeds Vector), the result is
                               undefined. If either of the Enter Compliance or
                               Enter Modified Compliance bits are implemented,
                               then this field must also be implemented. The
                               default value of this field is the highest Link
                               speed supported by the component (as reported in
                               the Max Link Speed field of the Link
                               Capabilities register) unless the corresponding
                               platform/form factor requires a different
                               default value. For both Upstream and Downstream
                               Ports, this field is used to set the target
                               compliance mode speed when software is using the
                               Enter Compliance bit to force a Link into
                               compliance mode. For Upstream Ports, if the
                               Enter Compliance bit is clear, this field is
                               permitted to have no effect. For a Multi-
                               Function device associated with an Upstream
                               Port, the field in Function 0 is of type RWS,
                               and only Function 0 controls the component's
                               Link behavior. In all other Functions of that
                               device, this field is of type RsvdP. Components
                               that support only the 2.5 GT/s speed are
                               permitted to hardwire this field to 0000b. The
                               encoding is the binary value of the bit in the
                               Supported Link Speeds Vector (in the Link
                               Capabilities 2 register) that corresponds to the
                               desired target Link speed. All other encodings
                               are reserved If a value is written to this field
                               that does not correspond to a speed included in
                               the Supported Link Speeds field, the result is
                               undefined. The default value of this field is
                               the highest Link speed supported by the
                               component (as reported in the Max Link Speed
                               field of the Link Capabilities register) unless
                               the corresponding platform/form factor requires
                               a different default value. For both Upstream and
                               Downstream Ports, this field is used to set the
                               target compliance mode speed when software is
                               using the Enter Compliance bit to force a Link
                               into compliance mode.
                            */
    UINT16 ec : 1;

                            /* Bits[4:4], Access Type=RW/V/P, default=0x00000000*/

                            /*
                               Software is permitted to force a link to enter
                               compliance mode at the speed indicated in the
                               Target Link Speed field by setting this bit to
                               1b in both components on a link and then
                               initiating a hot reset on the link.
                            */
    UINT16 hasd : 1;

                            /* Bits[5:5], Access Type=RW/P, default=0x00000000*/

                            /*
                               When set, this bit disables hardware from
                               changing the link speed for device specific
                               reasons other than attempting to correct
                               unreliable link operation by reducing link speed
                               for device-specific reasons other than
                               attempting to correct unreliable link operations
                               by reducing link speed. Initial transition to
                               the highest supported common link speed is not
                               blocked by this bit.
                            */
    UINT16 sd : 1;

                            /* Bits[6:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Applicable to RootPorts and downstream ports of
                               PCI Express to PCIe bridges. When the link is
                               operating at 5 Gb/s speed, this bit selects the
                               level of de-emphasis for an Downstream Port.
                               Encodings: 1b -3.5 dB 0b -6 dB When the Link is
                               operating at 2.5 GT/s speed, the setting of this
                               bit has no effect. Note: Lock Key bit is located
                               in the Personality Lock Key Control Register .
                            */
    UINT16 tm : 3;

                            /* Bits[9:7], Access Type=RW/V/P, default=0x00000000*/

                            /*
                               This field controls the value of the non-de-
                               emphasized voltage level at the transmitter
                               pins. This field is reset to 000b on entry to
                               the LTSSM Polling.Configuration substate. 000b:
                               Normal operating range 001b: 800-1200mV for full
                               swing and 400-700mV for half-swing 010b-110b:
                               reserved Others: Reserved This register is
                               intended for debug, compliance testing purposes
                               only. System firmware and software is allowed to
                               modify this register only during debug or
                               compliance testing. In all other cases, the
                               system must ensure that this register is set to
                               the default value.
                            */
    UINT16 emc : 1;

                            /* Bits[10:10], Access Type=RW/P, default=0x00000000*/

                            /*
                               When set to 1b, the device transmits Modified
                               Compliance Pattern if the LTSSM enters
                               Polling.Compliance substate. This register is
                               intended for debug, compliance testing purposes
                               only. System firmware and software is allowed to
                               modify this register only during debug or
                               compliance testing. In all other cases, the
                               system must ensure that this register is set to
                               the default value.
                            */
    UINT16 csos : 1;

                            /* Bits[11:11], Access Type=RW/P, default=0x00000000*/

                            /*
                               When set to 1b, the LTSSM is required to send
                               Skip Ordered Sets periodically in between the
                               (modified) compliance patterns.
                            */
    UINT16 cd : 4;

                            /* Bits[15:12], Access Type=RW/P, default=0x00000000*/

                            /*
                               For 8.0 GT/s and higher Data Rate: This field
                               sets the Transmitter Preset in
                               Polling.Compliance state if the entry occurred
                               due to the Enter Compliance bit being 1b. The
                               encodings are defined in Section 4.2.3.2.
                               Results are undefined if a reserved preset
                               encoding is used when entering
                               Polling.Compliance in this way. For 5.0 GT/s
                               Data Rate: This field sets the de-emphasis level
                               in Polling.Compliance state if the entry
                               occurred due to the Enter Compliance bit being
                               1b. Defined Encodings are: 0001b -3.5 dB 0000b
                               -6 dB When the Link is operating at 2.5 GT/s,
                               the setting of this field has no effect.
                               Components that support only 2.5 GT/s speed are
                               permitted to hardwire this field to 0000b. For a
                               Multi-Function device associated with an
                               Upstream Port, the field in Function 0 is of
                               type RWS, and only Function 0 controls the
                               component's Link behavior. In all other
                               Functions of that device, this field is of type
                               RsvdP. The default value of this field is 0000b.
                               This field is intended for debug and compliance
                               testing purposes. System firmware and software
                               is allowed to modify this field only during
                               debug or compliance testing. In all other cases,
                               the system must ensure that this field is set to
                               the default value. With the M-PCIe PHY, this
                               feature is unused and this field is hardwired to
                               0000b.
                            */

  } Bits;
  UINT16 Data;

} LINKCTL2_SB_FBLP_STRUCT;

/* LINKSTS2_SB_FBLP_REG supported on:                                           */
/*      SPRA0 (0x10000072)                                                      */
/*      SPRB0 (0x10000072)                                                      */
/*      SPRHBM (0x10000072)                                                     */
/*      SPRC0 (0x10000072)                                                      */
/*      SPRMCC (0x10000072)                                                     */
/*      SPRUCC (0x10000072)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Link Status 2
*/


#define LINKSTS2_SB_FBLP_REG 0x2C010072

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 cdl : 1;

                            /* Bits[0:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               When the link is operating at 5 Gb/s speed, this
                               bit reflects the level of de-emphasis. 1b: -3.5
                               dB 0b: -6dB The value in this bit is undefined
                               when the Link is not operating at 5.0 GT/s
                               speed. Components that support only the 2.5 GT/s
                               speed are permitted to hardwire this bit to 0b.
                            */
    UINT16 eqcmplt : 1;

                            /* Bits[1:1], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               When set to 1b, this bit indicates that the
                               Transmitter Equalization procedure at the 8.0
                               GT/s data rate has completed. Details of the
                               Transmitter Equalization process and when this
                               bit needs to be set to 1b is provided in PCIe
                               Spec. Section 4.2.6.4.2. The default value of
                               this bit is 0b. For Multi-Function Upstream
                               Port, this bit must be implemented in Function 0
                               and RsvdZ in other Functions. Components that
                               only support speeds below 8.0 GT/s are permitted
                               to hardwire this bit to 0b. With the M-PCIe PHY,
                               this feature is unused and this bit is hardwired
                               to 0b.
                            */
    UINT16 eqph1succ : 1;

                            /* Bits[2:2], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               When set to 1b, this bit indicates that Phase 1
                               of the 8.0 GT/s Transmitter Equalization
                               procedure has successfully completed. Details of
                               the Transmitter Equalization process and when
                               this bit needs to be set to 1b is provided in
                               PCie Spec. Section 4.2.6.4.2. The default value
                               of this bit is 0b. For Multi-Function Upstream
                               Port, this bit must be implemented in Function 0
                               and RsvdZ in other Functions. Components that
                               only support speeds below 8.0 GT/s are permitted
                               to hardwire this bit to 0b. With the M-PCIe PHY,
                               this feature is unused and this bit is hardwired
                               to 0b.
                            */
    UINT16 eqph2succ : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               When set to 1b, this bit indicates that Phase 2
                               of the 8.0 GT/s Transmitter Equalization
                               procedure has successfully completed. Details of
                               the Transmitter Equalization process and when
                               this bit needs to be set to 1b is provided in
                               PCie Spec. Section 4.2.6.4.2. The default value
                               of this bit is 0b. For Multi-Function Upstream
                               Port, this bit must be implemented in Function 0
                               and RsvdZ in other Functions. Components that
                               only support speeds below 8.0 GT/s are permitted
                               to hardwire this bit to 0b. With the M-PCIe PHY,
                               this feature is unused and this bit is hardwired
                               to 0b.
                            */
    UINT16 eqph3succ : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               When set to 1b, this bit indicates that Phase 3
                               of the 8.0 GT/s Transmitter Equalization
                               procedure has successfully completed. Details of
                               the Transmitter Equalization process and when
                               this bit needs to be set to 1b is provided in
                               PCie Spec. Section 4.2.6.4.2. The default value
                               of this bit is 0b. For Multi-Function Upstream
                               Port, this bit must be implemented in Function 0
                               and RsvdZ in other Functions. Components that
                               only support speeds below 8.0 GT/s are permitted
                               to hardwire this bit to 0b. With the M-PCIe PHY,
                               this feature is unused and this bit is hardwired
                               to 0b.
                            */
    UINT16 lnkeqreq : 1;

                            /* Bits[5:5], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               This bit is Set by hardware to request the 8.0
                               GT/s Link equalization process to be performed
                               on the Link. Refer to PCIe Spec. Sections 4.2.3
                               and 4.2.6.4.2 for details. The default value of
                               this bit is 0b. For Multi-Function Upstream
                               Port, this bit must be implemented in Function 0
                               and RsvdZ in other Functions. Components that
                               only support speeds below 8.0 GT/s are permitted
                               to hardwire this bit to 0b. With the M-PCIe PHY,
                               this feature is unused and this bit is hardwired
                               to 0b.
                            */
    UINT16 rpd : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               When set to 1b, this bit indicates that a
                               Retimer was present during the most recent Link
                               negotiation. The default value of this bit is
                               0b. This bit is required for Ports that have the
                               Retimer Presence Detect Supported bit of the
                               Link Capabilities 2 register set to 1b. Ports
                               that have the Retimer Presence Detect Supported
                               bit set to 0b are permitted to hardwire this bit
                               to 0b.
                            */
    UINT16 rpd2 : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               When set to 1b, this bit indicates that two
                               Retimers were present during the most recent
                               Link negotiation. The default value of this bit
                               is 0b. This bit is required for Ports that have
                               the Two Retimers Presence Detect Supported bit
                               of the Link Capabilities 2 register set to 1b.
                               Ports that have the Two Retimers Presence Detect
                               Supported bit set to 0b are permitted to
                               hardwire this bit to 0b.
                            */
    UINT16 clres : 2;

                            /* Bits[9:8], Access Type=RO, default=0x00000000*/

                            /*
                               This field indicates the state of the Crosslink
                               negotiation. It must be implemented if Crosslink
                               Supported is Set and the Port supports 16.0 GT/s
                               or higher data rate. It is permitted to be
                               implemented in all other Ports. If Crosslink
                               Supported is Clear, this field may be hardwired
                               to 01b or 10b. Encoding is: 00b Crosslink
                               Resolution is not supported. No information is
                               provided regarding the status of the Crosslink
                               negotiation. 01b Crosslink negotiation resolved
                               as an Upstream Port. 10b Crosslink negotiation
                               resolved as a Downstream Port. 11b Crosslink
                               negotiation is not completed. Once a value of
                               01b or 10b is returned in this field, that value
                               must continue to be returned while the Link is
                               Up.
                            */
    UINT16 rsvd : 2;

                            /* Bits[11:10], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 dcp : 3;

                            /* Bits[14:12], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               This field indicates the presence and DRS status
                               for the Downstream Component, if any, connected
                               to the Link, defined values are: 000b Link Down
                               ... Presence Not Determined 001b Link Down ...
                               Component Not Present indicates the Downstream
                               Port (DP) has determined that a Downstream
                               Component is not present 010b Link Down ...
                               Component Present indicates the DP has
                               determined that a Downstream Component is
                               present, but the Data Link Layer is not active
                               011b Reserved 100b Link Up ... Component Present
                               indicates the DP has determined that a
                               Downstream Component is present, but no DRS
                               Message has been received since the Data Link
                               Layer became active 101b Link Up ... Component
                               Present and DRS Received indicates the DP has
                               received a DRS Message since the Data Link Layer
                               became active 110b Reserved 111b Reserved
                               Component Presence state must be determined by
                               the logical 'OR' of the Physical Layer in-band
                               presence detect mechanism and, if present, any
                               out-of-band presence detect mechanism
                               implemented for the Link. If no out-of-band
                               presence detect mechanism is implemented, then
                               Component Presence state must be determined
                               solely by the Physical Layer in-band presence
                               detect mechanism. This field must be implemented
                               in any Downstream Port where the DRS Supported
                               bit is Set in the Link Capabilities 2 register.
                               This field is RsvdZ for all other Functions.
                               Default value of this field is 000b
                            */
    UINT16 drsmr : 1;

                            /* Bits[15:15], Access Type=RW/1C/V, default=0x00000000*/

                            /*
                               This bit must be Set whenever the Port receives
                               a DRS Message. This bit must be Cleared in
                               DL_Down. This bit must be implemented in any
                               Downstream Port where the DRS Supported bit is
                               Set in the Link Capabilities 2 register. This
                               bit is RsvdZ for all other Functions. Default
                               value of this bit is 0b.
                            */

  } Bits;
  UINT16 Data;

} LINKSTS2_SB_FBLP_STRUCT;





/* IBSTERRCRCSTS_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x200004e0)                                                      */
/*      SPRB0 (0x200004e0)                                                      */
/*      SPRHBM (0x200004e0)                                                     */
/*      SPRC0 (0x200004e0)                                                      */
/*      SPRMCC (0x200004e0)                                                     */
/*      SPRUCC (0x200004e0)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* IBIST Error CRC Detection Status
*/


#define IBSTERRCRCSTS_SB_FBLP_REG 0x2C0204E0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 crcecc2errcnt : 15;

                            /* Bits[14:0], Access Type=RW/1C/V/P, default=0x00000000*/

                            /* CRC Error Counter */
    UINT32 crcecc2ovrflow : 1;

                            /* Bits[15:15], Access Type=RW/1C/V/P, default=0x00000000*/

                            /* CRC Error Overflow */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} IBSTERRCRCSTS_SB_FBLP_STRUCT;

/* IBSTERRRCRVSTS_SB_FBLP_REG supported on:                                     */
/*      SPRA0 (0x200004e4)                                                      */
/*      SPRB0 (0x200004e4)                                                      */
/*      SPRHBM (0x200004e4)                                                     */
/*      SPRC0 (0x200004e4)                                                      */
/*      SPRMCC (0x200004e4)                                                     */
/*      SPRUCC (0x200004e4)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* IBIST Error Recovery and Receive Detection Status
*/


#define IBSTERRRCRVSTS_SB_FBLP_REG 0x2C0204E4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 rxerrcnt : 15;

                            /* Bits[14:0], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               This field indicates the number of times the
                               link(s) has detected an 8b/10b receiver error.
                            */
    UINT32 rxerrcntovrflow : 1;

                            /* Bits[15:15], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               This bit when 1b, indicates the receive error
                               counter has overflowed.
                            */
    UINT32 recovcnt : 15;

                            /* Bits[30:16], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               This field indicates the number of times the
                               link(s) LTSSM state machine has entered the
                               recovery state.
                            */
    UINT32 linkrecovoverflow : 1;

                            /* Bits[31:31], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               This bit when 1b, indicates the recovery counter
                               has overflowed.
                            */

  } Bits;
  UINT32 Data;

} IBSTERRRCRVSTS_SB_FBLP_STRUCT;










/* G5LDPMSTS_SB_FBLP_REG supported on:                                          */
/*      SPRA0 (0x2000050c)                                                      */
/*      SPRB0 (0x2000050c)                                                      */
/*      SPRHBM (0x2000050c)                                                     */
/*      SPRC0 (0x2000050c)                                                      */
/*      SPRMCC (0x2000050c)                                                     */
/*      SPRUCC (0x2000050c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* 16.0 GT/s Local Data Parity Mismatch Status
*/


#define G5LDPMSTS_SB_FBLP_REG 0x2C02050C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 l0ldpms : 1;

                            /* Bits[0:0], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. For Ports that are narrower than
                               32 Lanes, the unused upper bits [31: Maximum
                               Link Width] are RsvdZ.
                            */
    UINT32 l1ldpms : 1;

                            /* Bits[1:1], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. For Ports that are narrower than
                               32 Lanes, the unused upper bits [31: Maximum
                               Link Width] are RsvdZ.
                            */
    UINT32 l2ldpms : 1;

                            /* Bits[2:2], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. For Ports that are narrower than
                               32 Lanes, the unused upper bits [31: Maximum
                               Link Width] are RsvdZ.
                            */
    UINT32 l3ldpms : 1;

                            /* Bits[3:3], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. For Ports that are narrower than
                               32 Lanes, the unused upper bits [31: Maximum
                               Link Width] are RsvdZ.
                            */
    UINT32 l4ldpms : 1;

                            /* Bits[4:4], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. For Ports that are narrower than
                               32 Lanes, the unused upper bits [31: Maximum
                               Link Width] are RsvdZ.
                            */
    UINT32 l5ldpms : 1;

                            /* Bits[5:5], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. For Ports that are narrower than
                               32 Lanes, the unused upper bits [31: Maximum
                               Link Width] are RsvdZ.
                            */
    UINT32 l6ldpms : 1;

                            /* Bits[6:6], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. For Ports that are narrower than
                               32 Lanes, the unused upper bits [31: Maximum
                               Link Width] are RsvdZ.
                            */
    UINT32 l7ldpms : 1;

                            /* Bits[7:7], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. For Ports that are narrower than
                               32 Lanes, the unused upper bits [31: Maximum
                               Link Width] are RsvdZ.
                            */
    UINT32 l8ldpms : 1;

                            /* Bits[8:8], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. For Ports that are narrower than
                               32 Lanes, the unused upper bits [31: Maximum
                               Link Width] are RsvdZ.
                            */
    UINT32 l9ldpms : 1;

                            /* Bits[9:9], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. For Ports that are narrower than
                               32 Lanes, the unused upper bits [31: Maximum
                               Link Width] are RsvdZ.
                            */
    UINT32 l10ldpms : 1;

                            /* Bits[10:10], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. For Ports that are narrower than
                               32 Lanes, the unused upper bits [31: Maximum
                               Link Width] are RsvdZ.
                            */
    UINT32 l11ldpms : 1;

                            /* Bits[11:11], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. For Ports that are narrower than
                               32 Lanes, the unused upper bits [31: Maximum
                               Link Width] are RsvdZ.
                            */
    UINT32 l12ldpms : 1;

                            /* Bits[12:12], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. For Ports that are narrower than
                               32 Lanes, the unused upper bits [31: Maximum
                               Link Width] are RsvdZ.
                            */
    UINT32 l13ldpms : 1;

                            /* Bits[13:13], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. For Ports that are narrower than
                               32 Lanes, the unused upper bits [31: Maximum
                               Link Width] are RsvdZ.
                            */
    UINT32 l14ldpms : 1;

                            /* Bits[14:14], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. For Ports that are narrower than
                               32 Lanes, the unused upper bits [31: Maximum
                               Link Width] are RsvdZ.
                            */
    UINT32 l15ldpms : 1;

                            /* Bits[15:15], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. For Ports that are narrower than
                               32 Lanes, the unused upper bits [31: Maximum
                               Link Width] are RsvdZ.
                            */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G5LDPMSTS_SB_FBLP_STRUCT;

/* G5FRDPMSTS_SB_FBLP_REG supported on:                                         */
/*      SPRA0 (0x20000510)                                                      */
/*      SPRB0 (0x20000510)                                                      */
/*      SPRHBM (0x20000510)                                                     */
/*      SPRC0 (0x20000510)                                                      */
/*      SPRMCC (0x20000510)                                                     */
/*      SPRUCC (0x20000510)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* 16.0 GT/s First Retimer Data Parity Mismatch Status
*/


#define G5FRDPMSTS_SB_FBLP_REG 0x2C020510

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 l0frdpms : 1;

                            /* Bits[0:0], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present. For
                               Ports that are narrower than 32 Lanes, the
                               unused upper bits [31: Maximum Link Width] are
                               RsvdZ.
                            */
    UINT32 l1frdpms : 1;

                            /* Bits[1:1], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present. For
                               Ports that are narrower than 32 Lanes, the
                               unused upper bits [31: Maximum Link Width] are
                               RsvdZ.
                            */
    UINT32 l2frdpms : 1;

                            /* Bits[2:2], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present. For
                               Ports that are narrower than 32 Lanes, the
                               unused upper bits [31: Maximum Link Width] are
                               RsvdZ.
                            */
    UINT32 l3frdpms : 1;

                            /* Bits[3:3], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present. For
                               Ports that are narrower than 32 Lanes, the
                               unused upper bits [31: Maximum Link Width] are
                               RsvdZ.
                            */
    UINT32 l4frdpms : 1;

                            /* Bits[4:4], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present. For
                               Ports that are narrower than 32 Lanes, the
                               unused upper bits [31: Maximum Link Width] are
                               RsvdZ.
                            */
    UINT32 l5frdpms : 1;

                            /* Bits[5:5], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present. For
                               Ports that are narrower than 32 Lanes, the
                               unused upper bits [31: Maximum Link Width] are
                               RsvdZ.
                            */
    UINT32 l6frdpms : 1;

                            /* Bits[6:6], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present. For
                               Ports that are narrower than 32 Lanes, the
                               unused upper bits [31: Maximum Link Width] are
                               RsvdZ.
                            */
    UINT32 l7frdpms : 1;

                            /* Bits[7:7], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present. For
                               Ports that are narrower than 32 Lanes, the
                               unused upper bits [31: Maximum Link Width] are
                               RsvdZ.
                            */
    UINT32 l8frdpms : 1;

                            /* Bits[8:8], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present. For
                               Ports that are narrower than 32 Lanes, the
                               unused upper bits [31: Maximum Link Width] are
                               RsvdZ.
                            */
    UINT32 l9frdpms : 1;

                            /* Bits[9:9], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present. For
                               Ports that are narrower than 32 Lanes, the
                               unused upper bits [31: Maximum Link Width] are
                               RsvdZ.
                            */
    UINT32 l10frdpms : 1;

                            /* Bits[10:10], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present. For
                               Ports that are narrower than 32 Lanes, the
                               unused upper bits [31: Maximum Link Width] are
                               RsvdZ.
                            */
    UINT32 l11frdpms : 1;

                            /* Bits[11:11], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present. For
                               Ports that are narrower than 32 Lanes, the
                               unused upper bits [31: Maximum Link Width] are
                               RsvdZ.
                            */
    UINT32 l12frdpms : 1;

                            /* Bits[12:12], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present. For
                               Ports that are narrower than 32 Lanes, the
                               unused upper bits [31: Maximum Link Width] are
                               RsvdZ.
                            */
    UINT32 l13frdpms : 1;

                            /* Bits[13:13], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present. For
                               Ports that are narrower than 32 Lanes, the
                               unused upper bits [31: Maximum Link Width] are
                               RsvdZ.
                            */
    UINT32 l14frdpms : 1;

                            /* Bits[14:14], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present. For
                               Ports that are narrower than 32 Lanes, the
                               unused upper bits [31: Maximum Link Width] are
                               RsvdZ.
                            */
    UINT32 l15frdpms : 1;

                            /* Bits[15:15], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present. For
                               Ports that are narrower than 32 Lanes, the
                               unused upper bits [31: Maximum Link Width] are
                               RsvdZ.
                            */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G5FRDPMSTS_SB_FBLP_STRUCT;

/* G5SRDPMSTS_SB_FBLP_REG supported on:                                         */
/*      SPRA0 (0x20000514)                                                      */
/*      SPRB0 (0x20000514)                                                      */
/*      SPRHBM (0x20000514)                                                     */
/*      SPRC0 (0x20000514)                                                      */
/*      SPRMCC (0x20000514)                                                     */
/*      SPRUCC (0x20000514)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* 16.0 GT/s Second Retimer Data Parity Mismatch Status
*/


#define G5SRDPMSTS_SB_FBLP_REG 0x2C020514

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 l0srdpms : 1;

                            /* Bits[0:0], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present or only
                               one Retimer is present. For Ports that are
                               narrower than 32 Lanes, the unused upper bits
                               [31: Maximum Link Width] are RsvdZ.
                            */
    UINT32 l1srdpms : 1;

                            /* Bits[1:1], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present or only
                               one Retimer is present. For Ports that are
                               narrower than 32 Lanes, the unused upper bits
                               [31: Maximum Link Width] are RsvdZ.
                            */
    UINT32 l2srdpms : 1;

                            /* Bits[2:2], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present or only
                               one Retimer is present. For Ports that are
                               narrower than 32 Lanes, the unused upper bits
                               [31: Maximum Link Width] are RsvdZ.
                            */
    UINT32 l3srdpms : 1;

                            /* Bits[3:3], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present or only
                               one Retimer is present. For Ports that are
                               narrower than 32 Lanes, the unused upper bits
                               [31: Maximum Link Width] are RsvdZ.
                            */
    UINT32 l4srdpms : 1;

                            /* Bits[4:4], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present or only
                               one Retimer is present. For Ports that are
                               narrower than 32 Lanes, the unused upper bits
                               [31: Maximum Link Width] are RsvdZ.
                            */
    UINT32 l5srdpms : 1;

                            /* Bits[5:5], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present or only
                               one Retimer is present. For Ports that are
                               narrower than 32 Lanes, the unused upper bits
                               [31: Maximum Link Width] are RsvdZ.
                            */
    UINT32 l6srdpms : 1;

                            /* Bits[6:6], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present or only
                               one Retimer is present. For Ports that are
                               narrower than 32 Lanes, the unused upper bits
                               [31: Maximum Link Width] are RsvdZ.
                            */
    UINT32 l7srdpms : 1;

                            /* Bits[7:7], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present or only
                               one Retimer is present. For Ports that are
                               narrower than 32 Lanes, the unused upper bits
                               [31: Maximum Link Width] are RsvdZ.
                            */
    UINT32 l8srdpms : 1;

                            /* Bits[8:8], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present or only
                               one Retimer is present. For Ports that are
                               narrower than 32 Lanes, the unused upper bits
                               [31: Maximum Link Width] are RsvdZ.
                            */
    UINT32 l9srdpms : 1;

                            /* Bits[9:9], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present or only
                               one Retimer is present. For Ports that are
                               narrower than 32 Lanes, the unused upper bits
                               [31: Maximum Link Width] are RsvdZ.
                            */
    UINT32 l10srdpms : 1;

                            /* Bits[10:10], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present or only
                               one Retimer is present. For Ports that are
                               narrower than 32 Lanes, the unused upper bits
                               [31: Maximum Link Width] are RsvdZ.
                            */
    UINT32 l11srdpms : 1;

                            /* Bits[11:11], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present or only
                               one Retimer is present. For Ports that are
                               narrower than 32 Lanes, the unused upper bits
                               [31: Maximum Link Width] are RsvdZ.
                            */
    UINT32 l12srdpms : 1;

                            /* Bits[12:12], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present or only
                               one Retimer is present. For Ports that are
                               narrower than 32 Lanes, the unused upper bits
                               [31: Maximum Link Width] are RsvdZ.
                            */
    UINT32 l13srdpms : 1;

                            /* Bits[13:13], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present or only
                               one Retimer is present. For Ports that are
                               narrower than 32 Lanes, the unused upper bits
                               [31: Maximum Link Width] are RsvdZ.
                            */
    UINT32 l14srdpms : 1;

                            /* Bits[14:14], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present or only
                               one Retimer is present. For Ports that are
                               narrower than 32 Lanes, the unused upper bits
                               [31: Maximum Link Width] are RsvdZ.
                            */
    UINT32 l15srdpms : 1;

                            /* Bits[15:15], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present or only
                               one Retimer is present. For Ports that are
                               narrower than 32 Lanes, the unused upper bits
                               [31: Maximum Link Width] are RsvdZ.
                            */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G5SRDPMSTS_SB_FBLP_STRUCT;

/* LTSSMSMSTS_SB_FBLP_REG supported on:                                         */
/*      SPRA0 (0x20000520)                                                      */
/*      SPRB0 (0x20000520)                                                      */
/*      SPRHBM (0x20000520)                                                     */
/*      SPRC0 (0x20000520)                                                      */
/*      SPRMCC (0x20000520)                                                     */
/*      SPRUCC (0x20000520)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* LTSSM SM
*/


#define LTSSMSMSTS_SB_FBLP_REG 0x2C020520

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 ltssmlnkup : 1;

                            /* Bits[0:0], Access Type=RO/V, default=0x00000000*/

                            /* LTSSM Link UP. */
    UINT32 dlactive : 1;

                            /* Bits[1:1], Access Type=RO/V, default=0x00000000*/

                            /* DL_Active */
    UINT32 lnkreversed : 1;

                            /* Bits[2:2], Access Type=RO/V, default=0x00000000*/

                            /* Link Reversed */
    UINT32 rcvratesup : 5;

                            /* Bits[7:3], Access Type=RO/V, default=0x00000000*/

                            /*
                               Rate support received from link partner. Bit 0 =
                               5GT/s, Bit 1 = 8GT/s, Bit 2 = 16GT/s, Bit 3 =
                               32GT/s, Bit 4 is reserved
                            */
    UINT32 lnknum : 8;

                            /* Bits[15:8], Access Type=RO/V, default=0x00000000*/

                            /* Link Number. */
    UINT32 apnsts : 2;

                            /* Bits[17:16], Access Type=RO/V, default=0x00000000*/

                            /*
                               00 - APN not enabled 01 - APN enabled, but no
                               link partner support (no modified TS exchange)
                               10 - APN resulted in failed negotiation or no
                               agreement 11 - APN was successful
                            */
    UINT32 rsvd : 2;

                            /* Bits[19:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ltssmrxl0ssm : 3;

                            /* Bits[22:20], Access Type=RO/V, default=0x00000000*/

                            /* LTSSM RxL0s SM */
    UINT32 rsvd_23 : 1;

                            /* Bits[23:23], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ltssmstatesub : 4;

                            /* Bits[27:24], Access Type=RO/V, default=0x00000000*/

                            /* LTSSM State Sub State. */
    UINT32 ltssmstatemain : 4;

                            /* Bits[31:28], Access Type=RO/V, default=0x00000000*/

                            /* LTSSM State Main. */

  } Bits;
  UINT32 Data;

} LTSSMSMSTS_SB_FBLP_STRUCT;

/* LTSSMSTATELOG0_SB_FBLP_REG supported on:                                     */
/*      SPRA0 (0x20000524)                                                      */
/*      SPRB0 (0x20000524)                                                      */
/*      SPRHBM (0x20000524)                                                     */
/*      SPRC0 (0x20000524)                                                      */
/*      SPRMCC (0x20000524)                                                     */
/*      SPRUCC (0x20000524)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM STATE LOG0
*/


#define LTSSMSTATELOG0_SB_FBLP_REG 0x2C020524

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 last8main : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               [3:0] present ltssm (or last if stopped) (newest
                               state) [7:4] prior state [11:8] [15:12] [19:16]
                               [23:20] [27:24] [31:28] oldest state logged
                            */

  } Bits;
  UINT32 Data;

} LTSSMSTATELOG0_SB_FBLP_STRUCT;

/* LTSSMSTATELOG1_SB_FBLP_REG supported on:                                     */
/*      SPRA0 (0x20000528)                                                      */
/*      SPRB0 (0x20000528)                                                      */
/*      SPRHBM (0x20000528)                                                     */
/*      SPRC0 (0x20000528)                                                      */
/*      SPRMCC (0x20000528)                                                     */
/*      SPRUCC (0x20000528)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM STATE LOG1
*/


#define LTSSMSTATELOG1_SB_FBLP_REG 0x2C020528

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 last8sub : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               [3:0] present ltssm (or last if stopped) (newest
                               state) [7:4] prior state [11:8] [15:12] [19:16]
                               [23:20] [27:24] [31:28] oldest state logged
                            */

  } Bits;
  UINT32 Data;

} LTSSMSTATELOG1_SB_FBLP_STRUCT;

/* LTSSMSTATELOG2_SB_FBLP_REG supported on:                                     */
/*      SPRA0 (0x2000052c)                                                      */
/*      SPRB0 (0x2000052c)                                                      */
/*      SPRHBM (0x2000052c)                                                     */
/*      SPRC0 (0x2000052c)                                                      */
/*      SPRMCC (0x2000052c)                                                     */
/*      SPRUCC (0x2000052c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM STATE LOG2
*/


#define LTSSMSTATELOG2_SB_FBLP_REG 0x2C02052C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 last8rxl0s : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               [3:0] present ltssm (or last if stopped) (newest
                               state) [7:4] prior state [11:8] [15:12] [19:16]
                               [23:20] [27:24] [31:28] oldest state logged
                            */

  } Bits;
  UINT32 Data;

} LTSSMSTATELOG2_SB_FBLP_STRUCT;

/* LTSSMSTATELOGCTL_SB_FBLP_REG supported on:                                   */
/*      SPRA0 (0x20000530)                                                      */
/*      SPRB0 (0x20000530)                                                      */
/*      SPRHBM (0x20000530)                                                     */
/*      SPRC0 (0x20000530)                                                      */
/*      SPRMCC (0x20000530)                                                     */
/*      SPRUCC (0x20000530)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM STATE LOG Control
*/


#define LTSSMSTATELOGCTL_SB_FBLP_REG 0x2C020530

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 start : 1;

                            /* Bits[0:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               0-->1 transition clears log registers and
                               restarts logging
                            */
    UINT32 stop : 8;

                            /* Bits[8:1], Access Type=RW/P, default=0x00000000*/

                            /*
                               Match register to freeze logging [7:4] LTSSM sub
                               state to match [3:0] LTSSM main state to match
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} LTSSMSTATELOGCTL_SB_FBLP_STRUCT;



/* PT0PHYCLKGCTL_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x10000544)                                                      */
/*      SPRB0 (0x10000544)                                                      */
/*      SPRHBM (0x10000544)                                                     */
/*      SPRC0 (0x10000544)                                                      */
/*      SPRMCC (0x10000544)                                                     */
/*      SPRUCC (0x10000544)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Port 0 Physical Clock Gate Control
*/


#define PT0PHYCLKGCTL_SB_FBLP_REG 0x2C010544

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 ict : 8;

                            /* Bits[7:0], Access Type=RW, default=None*/

                            /*
                               This field indicates the number of clocks that
                               the IP block must be idle before the clock
                               disable process begins. 16 (default value) is
                               the minimum number of clocks recommended.
                            */
    UINT16 rsvd : 7;

                            /* Bits[14:8], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 icge : 1;

                            /* Bits[15:15], Access Type=RW, default=None*/

                            /*
                               This bit when set enables clock gating to occur
                               when the IP block is idle longer then the Idle
                               Clock Timer.
                            */

  } Bits;
  UINT16 Data;

} PT0PHYCLKGCTL_SB_FBLP_STRUCT;

/* PT1PHYCLKGCTL_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x10000546)                                                      */
/*      SPRB0 (0x10000546)                                                      */
/*      SPRHBM (0x10000546)                                                     */
/*      SPRC0 (0x10000546)                                                      */
/*      SPRMCC (0x10000546)                                                     */
/*      SPRUCC (0x10000546)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* This register is valid only for multi-port configuration.
*/


#define PT1PHYCLKGCTL_SB_FBLP_REG 0x2C010546

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 ict : 8;

                            /* Bits[7:0], Access Type=RW, default=None*/

                            /*
                               This field indicates the number of clocks that
                               the IP block must be idle before the clock
                               disable process begins. 16 (default value) is
                               the minimum number of clocks recommended.
                            */
    UINT16 rsvd : 7;

                            /* Bits[14:8], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 icge : 1;

                            /* Bits[15:15], Access Type=RW, default=None*/

                            /*
                               This bit when set enables clock gating to occur
                               when the IP block is idle longer then the Idle
                               Clock Timer.
                            */

  } Bits;
  UINT16 Data;

} PT1PHYCLKGCTL_SB_FBLP_STRUCT;

/* PT2PHYCLKGCTL_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x10000548)                                                      */
/*      SPRB0 (0x10000548)                                                      */
/*      SPRHBM (0x10000548)                                                     */
/*      SPRC0 (0x10000548)                                                      */
/*      SPRMCC (0x10000548)                                                     */
/*      SPRUCC (0x10000548)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* This register is valid only for multi-port configuration.
*/


#define PT2PHYCLKGCTL_SB_FBLP_REG 0x2C010548

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 ict : 8;

                            /* Bits[7:0], Access Type=RW, default=None*/

                            /*
                               This field indicates the number of clocks that
                               the IP block must be idle before the clock
                               disable process begins. 16 (default value) is
                               the minimum number of clocks recommended.
                            */
    UINT16 rsvd : 7;

                            /* Bits[14:8], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 icge : 1;

                            /* Bits[15:15], Access Type=RW, default=None*/

                            /*
                               This bit when set enables clock gating to occur
                               when the IP block is idle longer then the Idle
                               Clock Timer.
                            */

  } Bits;
  UINT16 Data;

} PT2PHYCLKGCTL_SB_FBLP_STRUCT;

/* PT3PHYCLKGCTL_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x1000054a)                                                      */
/*      SPRB0 (0x1000054a)                                                      */
/*      SPRHBM (0x1000054a)                                                     */
/*      SPRC0 (0x1000054a)                                                      */
/*      SPRMCC (0x1000054a)                                                     */
/*      SPRUCC (0x1000054a)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* This register is valid only for multi-port configuration.
*/


#define PT3PHYCLKGCTL_SB_FBLP_REG 0x2C01054A

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 ict : 8;

                            /* Bits[7:0], Access Type=RW, default=None*/

                            /*
                               This field indicates the number of clocks that
                               the IP block must be idle before the clock
                               disable process begins. 16 (default value) is
                               the minimum number of clocks recommended.
                            */
    UINT16 rsvd : 7;

                            /* Bits[14:8], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 icge : 1;

                            /* Bits[15:15], Access Type=RW, default=None*/

                            /*
                               This bit when set enables clock gating to occur
                               when the IP block is idle longer then the Idle
                               Clock Timer.
                            */

  } Bits;
  UINT16 Data;

} PT3PHYCLKGCTL_SB_FBLP_STRUCT;

/* PLLSTBYCTL_SB_FBLP_REG supported on:                                         */
/*      SPRA0 (0x2000054c)                                                      */
/*      SPRB0 (0x2000054c)                                                      */
/*      SPRHBM (0x2000054c)                                                     */
/*      SPRC0 (0x2000054c)                                                      */
/*      SPRMCC (0x2000054c)                                                     */
/*      SPRUCC (0x2000054c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* PLL Standby Control
*/


#define PLLSTBYCTL_SB_FBLP_REG 0x2C02054C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 rsvd : 4;

                            /* Bits[3:0], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 pclk_trunk_cge : 1;

                            /* Bits[4:4], Access Type=RW/P, default=0x00000000*/

                            /*
                               0: disable pclk_req de-assertion 1: allow
                               pclk_req to de-assert on idle
                            */
    UINT32 rsvd_5 : 3;

                            /* Bits[7:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 p2vsp1 : 1;

                            /* Bits[8:8], Access Type=RW, default=None*/

                            /*
                               0 = lane in P1 equal to idle for PLL standby
                               (see PIPECTL for P2 disable) 1 = lane in P2
                               equal to idle for PLL standby
                            */
    UINT32 rsvd_9 : 3;

                            /* Bits[11:9], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 pclk_ack1toreq0 : 4;

                            /* Bits[15:12], Access Type=RW/P, default=0x00000000*/

                            /*
                               Min time to assert pclk_req after pclk_ack
                               asserts 0: 3 AUXCLK periods (i.e. auxclk=25Mhz,
                               120ns) 1-15: (val+1)*64ns
                            */
    UINT32 pclk_idletoreq0 : 4;

                            /* Bits[19:16], Access Type=RW/P, default=0x00000000*/

                            /*
                               Time to wait after reaching idle state before
                               de-asserting pclk_req 0: 3 AUXCLK periods (i.e.
                               auxclk=25Mhz, 120ns) 1-15: (val+1)*64ns
                            */
    UINT32 rsvd_20 : 12;

                            /* Bits[31:20], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} PLLSTBYCTL_SB_FBLP_STRUCT;


/* FBLP_CFGPCIECLKGCTL_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x10000554)                                                      */
/*      SPRB0 (0x10000554)                                                      */
/*      SPRHBM (0x10000554)                                                     */
/*      SPRC0 (0x10000554)                                                      */
/*      SPRMCC (0x10000554)                                                     */
/*      SPRUCC (0x10000554)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Configuration PCIe Clock Gate Control
*/


#define FBLP_CFGPCIECLKGCTL_SB_FBLP_REG 0x2C010554

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 ict : 8;

                            /* Bits[7:0], Access Type=RW, default=None*/

                            /*
                               This field indicates the number of clocks that
                               the IP block must be idle before the clock
                               disable process begins. 16 (default value) is
                               the minimum number of clocks recommended.
                            */
    UINT16 rsvd : 7;

                            /* Bits[14:8], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 icge : 1;

                            /* Bits[15:15], Access Type=RW, default=None*/

                            /*
                               This bit when set enables clock gating to occur
                               when the IP block is idle longer then the Idle
                               Clock Timer.
                            */

  } Bits;
  UINT16 Data;

} FBLP_CFGPCIECLKGCTL_SB_FBLP_STRUCT;


/* CAPSR_SB_FBLP_REG supported on:                                              */
/*      SPRA0 (0x20000748)                                                      */
/*      SPRB0 (0x20000748)                                                      */
/*      SPRHBM (0x20000748)                                                     */
/*      SPRC0 (0x20000748)                                                      */
/*      SPRMCC (0x20000748)                                                     */
/*      SPRUCC (0x20000748)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* Capability Shadowed
*/


#define CAPSR_SB_FBLP_REG 0x2C020748

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 rsvd : 17;

                            /* Bits[16:0], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 linkctl2_sd : 1;

                            /* Bits[17:17], Access Type=RW/P, default=0x00000000*/

                            /*
                               This field is utilized for Platform aware
                               Software to program the value based on
                               platform/device specific. Hardware will reflect
                               the value to the corresponding LINKCTL2.SD once
                               this field was written. This field should be
                               treated as reserved if not supported by
                               project/device specific.
                            */
    UINT32 rsvd_18 : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 g5sts_txprecreq : 1;

                            /* Bits[19:19], Access Type=RW/P, default=0x00000000*/

                            /*
                               This field is utilized for Platform aware
                               Software to program the value based on
                               platform/device specific. Hardware will reflect
                               the value to the corresponding G5STS.TXPREREQ
                               once this field was written. This field should
                               be treated as reserved if not supported by
                               project/device specific.
                            */
    UINT32 rsvd_20 : 12;

                            /* Bits[31:20], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} CAPSR_SB_FBLP_STRUCT;

/* LINKCTL3_SB_FBLP_REG supported on:                                           */
/*      SPRA0 (0x20000a34)                                                      */
/*      SPRB0 (0x20000a34)                                                      */
/*      SPRHBM (0x20000a34)                                                     */
/*      SPRC0 (0x20000a34)                                                      */
/*      SPRMCC (0x20000a34)                                                     */
/*      SPRUCC (0x20000a34)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Link Control 3
*/


#define LINKCTL3_SB_FBLP_REG 0x2C020A34

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 pe : 1;

                            /* Bits[0:0], Access Type=RW/V, default=0x00000000*/

                            /*
                               When this register is 1b and a 1b is written to
                               the 'Link Retrain' register with 'Target Link
                               Speed' set to 8 GT/s or higher, the Downstream
                               Port must perform Transmitter Equalization.
                               Software must guarantee that no transactions are
                               pending in the link while the link is in
                               Recovery when this bit is set to 1b. This bit is
                               not applicable and is reserved for Endpoints,
                               PCI Express to PCI/PCIX bridges, and Upstream
                               Ports of Switches.
                            */
    UINT32 rsvd : 8;

                            /* Bits[8:1], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 elskposgv : 5;

                            /* Bits[13:9], Access Type=RW, default=0x00000000*/

                            /*
                               When the Link is in L0 and the bit in this field
                               corresponding to the current Link speed is Set,
                               SKP Ordered Sets are scheduled at the rate
                               defined for SRNS, overriding the rate required
                               based on the clock tolerance architecture. See
                               section 4.2.7 for additional requirements. Bit
                               definitions within this field are: Bit 0 2.5
                               GT/s Bit 1 5.0 GT/s Bit 2 8.0 GT/s Bit 3 16.0
                               GT/s Bits 6:4 RsvdP Bits in this field are RW if
                               the corresponding bit in the Lower SKP OS
                               Generation Supported Speeds Vector is Set,
                               otherwise they are permitted to be hardwired to
                               0. Behavior is undefined if a bit is Set in this
                               field and the corresponding bit in the Lower SKP
                               OS Generation Supported Speeds Vector is not
                               Set. The default value of this field is 000
                               0000b.
                            */
    UINT32 rsvd_14 : 18;

                            /* Bits[31:14], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} LINKCTL3_SB_FBLP_STRUCT;

/* LANEERRSTS_SB_FBLP_REG supported on:                                         */
/*      SPRA0 (0x20000a38)                                                      */
/*      SPRB0 (0x20000a38)                                                      */
/*      SPRHBM (0x20000a38)                                                     */
/*      SPRC0 (0x20000a38)                                                      */
/*      SPRMCC (0x20000a38)                                                     */
/*      SPRUCC (0x20000a38)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* The Equalization Control Register consist of control fields required for per lane equalization and the number of entries in this register are sized by Max Link Width
*/


#define LANEERRSTS_SB_FBLP_REG 0x2C020A38

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 l0err : 1;

                            /* Bits[0:0], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               A value of 1b indicates that a lane based error
                               was detected on the corresponding PCI Express
                               Lane Number.
                            */
    UINT32 l1err : 1;

                            /* Bits[1:1], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               A value of 1b indicates that a lane based error
                               was detected on the corresponding PCI Express
                               Lane Number.
                            */
    UINT32 l2err : 1;

                            /* Bits[2:2], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               A value of 1b indicates that a lane based error
                               was detected on the corresponding PCI Express
                               Lane Number.
                            */
    UINT32 l3err : 1;

                            /* Bits[3:3], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               A value of 1b indicates that a lane based error
                               was detected on the corresponding PCI Express
                               Lane Number.
                            */
    UINT32 l4err : 1;

                            /* Bits[4:4], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               A value of 1b indicates that a lane based error
                               was detected on the corresponding PCI Express
                               Lane Number.
                            */
    UINT32 l5err : 1;

                            /* Bits[5:5], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               A value of 1b indicates that a lane based error
                               was detected on the corresponding PCI Express
                               Lane Number.
                            */
    UINT32 l6err : 1;

                            /* Bits[6:6], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               A value of 1b indicates that a lane based error
                               was detected on the corresponding PCI Express
                               Lane Number.
                            */
    UINT32 l7err : 1;

                            /* Bits[7:7], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               A value of 1b indicates that a lane based error
                               was detected on the corresponding PCI Express
                               Lane Number.
                            */
    UINT32 l8err : 1;

                            /* Bits[8:8], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               A value of 1b indicates that a lane based error
                               was detected on the corresponding PCI Express
                               Lane Number.
                            */
    UINT32 l9err : 1;

                            /* Bits[9:9], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               A value of 1b indicates that a lane based error
                               was detected on the corresponding PCI Express
                               Lane Number.
                            */
    UINT32 l10err : 1;

                            /* Bits[10:10], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               A value of 1b indicates that a lane based error
                               was detected on the corresponding PCI Express
                               Lane Number.
                            */
    UINT32 l11err : 1;

                            /* Bits[11:11], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               A value of 1b indicates that a lane based error
                               was detected on the corresponding PCI Express
                               Lane Number.
                            */
    UINT32 l12err : 1;

                            /* Bits[12:12], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               A value of 1b indicates that a lane based error
                               was detected on the corresponding PCI Express
                               Lane Number.
                            */
    UINT32 l13err : 1;

                            /* Bits[13:13], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               A value of 1b indicates that a lane based error
                               was detected on the corresponding PCI Express
                               Lane Number.
                            */
    UINT32 l14err : 1;

                            /* Bits[14:14], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               A value of 1b indicates that a lane based error
                               was detected on the corresponding PCI Express
                               Lane Number.
                            */
    UINT32 l15err : 1;

                            /* Bits[15:15], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               A value of 1b indicates that a lane based error
                               was detected on the corresponding PCI Express
                               Lane Number.
                            */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} LANEERRSTS_SB_FBLP_STRUCT;

/* LANEEQCTL_0_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x10000a3c)                                                      */
/*      SPRB0 (0x10000a3c)                                                      */
/*      SPRHBM (0x10000a3c)                                                     */
/*      SPRC0 (0x10000a3c)                                                      */
/*      SPRMCC (0x10000a3c)                                                     */
/*      SPRUCC (0x10000a3c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* Lane Equalization Control
*/


#define LANEEQCTL_0_SB_FBLP_REG 0x2C010A3C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 dptp : 4;

                            /* Bits[3:0], Access Type=RW/L, default=None*/

                            /*
                               Transmitter Preset used for 8.0 GT/s
                               equalization by this Port when the Port is
                               operating as a Downstream Port. This field is
                               ignored when the Port is operating as an
                               Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in Section 4.2.3.2.
                               For an Upstream Port if Crosslink Supported is
                               0b, this field is RsvdP. Otherwise, this field
                               is HwInit. See Section 7.10.18. The default
                               value is 1111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT16 dprph : 3;

                            /* Bits[6:4], Access Type=RW/L, default=None*/

                            /*
                               Receiver Preset Hint may be used as a hint for
                               8.0 GT/s receiver equalization by this Port when
                               the Port is operating as a Downstream Port. This
                               field is ignored when the Port is operating as
                               an Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in Section 4.2.3.2.
                               For an Upstream Port if Crosslink Supported is
                               0b, this field is RsvdP. Otherwise, this field
                               is HwInit. See Section 7.10.18. The default
                               value is 111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 uptp : 4;

                            /* Bits[11:8], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Transmit Preset value sent or
                               received during 8.0 GT/s Link Equalization.
                               Field usage varies, see PCIe Spec. for details.
                               See PCIe Spec. Sections 4.2.3 and Chapter 9 for
                               details. The field encodings are defined in PCIe
                               Spec. Section 4.2.3.2. Note: Lock Key bit is
                               located in the Personality Lock Key Control
                               Register .
                            */
    UINT16 uprph : 3;

                            /* Bits[14:12], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Receiver Preset Hint value
                               sent or received during 8.0 GT/s Link
                               Equalization. Field usage varies, see PCIe Spec.
                               for details. See PCIe Spec. Sections 4.2.3 and
                               Chapter 9 for details. The field encodings are
                               defined in PCIe Spec. Section 4.2.3.2. Note:
                               Lock Key bit is located in the Personality Lock
                               Key Control Register .
                            */
    UINT16 rsvd_15 : 1;

                            /* Bits[15:15], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT16 Data;

} LANEEQCTL_0_SB_FBLP_STRUCT;

/* LANEEQCTL_1_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x10000a3e)                                                      */
/*      SPRB0 (0x10000a3e)                                                      */
/*      SPRHBM (0x10000a3e)                                                     */
/*      SPRC0 (0x10000a3e)                                                      */
/*      SPRMCC (0x10000a3e)                                                     */
/*      SPRUCC (0x10000a3e)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* Lane Equalization Control
*/


#define LANEEQCTL_1_SB_FBLP_REG 0x2C010A3E

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 dptp : 4;

                            /* Bits[3:0], Access Type=RW/L, default=None*/

                            /*
                               Transmitter Preset used for 8.0 GT/s
                               equalization by this Port when the Port is
                               operating as a Downstream Port. This field is
                               ignored when the Port is operating as an
                               Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in Section 4.2.3.2.
                               For an Upstream Port if Crosslink Supported is
                               0b, this field is RsvdP. Otherwise, this field
                               is HwInit. See Section 7.10.18. The default
                               value is 1111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT16 dprph : 3;

                            /* Bits[6:4], Access Type=RW/L, default=None*/

                            /*
                               Receiver Preset Hint may be used as a hint for
                               8.0 GT/s receiver equalization by this Port when
                               the Port is operating as a Downstream Port. This
                               field is ignored when the Port is operating as
                               an Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in Section 4.2.3.2.
                               For an Upstream Port if Crosslink Supported is
                               0b, this field is RsvdP. Otherwise, this field
                               is HwInit. See Section 7.10.18. The default
                               value is 111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 uptp : 4;

                            /* Bits[11:8], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Transmit Preset value sent or
                               received during 8.0 GT/s Link Equalization.
                               Field usage varies, see PCIe Spec. for details.
                               See PCIe Spec. Sections 4.2.3 and Chapter 9 for
                               details. The field encodings are defined in PCIe
                               Spec. Section 4.2.3.2. Note: Lock Key bit is
                               located in the Personality Lock Key Control
                               Register .
                            */
    UINT16 uprph : 3;

                            /* Bits[14:12], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Receiver Preset Hint value
                               sent or received during 8.0 GT/s Link
                               Equalization. Field usage varies, see PCIe Spec.
                               for details. See PCIe Spec. Sections 4.2.3 and
                               Chapter 9 for details. The field encodings are
                               defined in PCIe Spec. Section 4.2.3.2. Note:
                               Lock Key bit is located in the Personality Lock
                               Key Control Register .
                            */
    UINT16 rsvd_15 : 1;

                            /* Bits[15:15], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT16 Data;

} LANEEQCTL_1_SB_FBLP_STRUCT;

/* LANEEQCTL_2_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x10000a40)                                                      */
/*      SPRB0 (0x10000a40)                                                      */
/*      SPRHBM (0x10000a40)                                                     */
/*      SPRC0 (0x10000a40)                                                      */
/*      SPRMCC (0x10000a40)                                                     */
/*      SPRUCC (0x10000a40)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* Lane Equalization Control
*/


#define LANEEQCTL_2_SB_FBLP_REG 0x2C010A40

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 dptp : 4;

                            /* Bits[3:0], Access Type=RW/L, default=None*/

                            /*
                               Transmitter Preset used for 8.0 GT/s
                               equalization by this Port when the Port is
                               operating as a Downstream Port. This field is
                               ignored when the Port is operating as an
                               Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in Section 4.2.3.2.
                               For an Upstream Port if Crosslink Supported is
                               0b, this field is RsvdP. Otherwise, this field
                               is HwInit. See Section 7.10.18. The default
                               value is 1111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT16 dprph : 3;

                            /* Bits[6:4], Access Type=RW/L, default=None*/

                            /*
                               Receiver Preset Hint may be used as a hint for
                               8.0 GT/s receiver equalization by this Port when
                               the Port is operating as a Downstream Port. This
                               field is ignored when the Port is operating as
                               an Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in Section 4.2.3.2.
                               For an Upstream Port if Crosslink Supported is
                               0b, this field is RsvdP. Otherwise, this field
                               is HwInit. See Section 7.10.18. The default
                               value is 111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 uptp : 4;

                            /* Bits[11:8], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Transmit Preset value sent or
                               received during 8.0 GT/s Link Equalization.
                               Field usage varies, see PCIe Spec. for details.
                               See PCIe Spec. Sections 4.2.3 and Chapter 9 for
                               details. The field encodings are defined in PCIe
                               Spec. Section 4.2.3.2. Note: Lock Key bit is
                               located in the Personality Lock Key Control
                               Register .
                            */
    UINT16 uprph : 3;

                            /* Bits[14:12], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Receiver Preset Hint value
                               sent or received during 8.0 GT/s Link
                               Equalization. Field usage varies, see PCIe Spec.
                               for details. See PCIe Spec. Sections 4.2.3 and
                               Chapter 9 for details. The field encodings are
                               defined in PCIe Spec. Section 4.2.3.2. Note:
                               Lock Key bit is located in the Personality Lock
                               Key Control Register .
                            */
    UINT16 rsvd_15 : 1;

                            /* Bits[15:15], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT16 Data;

} LANEEQCTL_2_SB_FBLP_STRUCT;

/* LANEEQCTL_3_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x10000a42)                                                      */
/*      SPRB0 (0x10000a42)                                                      */
/*      SPRHBM (0x10000a42)                                                     */
/*      SPRC0 (0x10000a42)                                                      */
/*      SPRMCC (0x10000a42)                                                     */
/*      SPRUCC (0x10000a42)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* Lane Equalization Control
*/


#define LANEEQCTL_3_SB_FBLP_REG 0x2C010A42

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 dptp : 4;

                            /* Bits[3:0], Access Type=RW/L, default=None*/

                            /*
                               Transmitter Preset used for 8.0 GT/s
                               equalization by this Port when the Port is
                               operating as a Downstream Port. This field is
                               ignored when the Port is operating as an
                               Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in Section 4.2.3.2.
                               For an Upstream Port if Crosslink Supported is
                               0b, this field is RsvdP. Otherwise, this field
                               is HwInit. See Section 7.10.18. The default
                               value is 1111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT16 dprph : 3;

                            /* Bits[6:4], Access Type=RW/L, default=None*/

                            /*
                               Receiver Preset Hint may be used as a hint for
                               8.0 GT/s receiver equalization by this Port when
                               the Port is operating as a Downstream Port. This
                               field is ignored when the Port is operating as
                               an Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in Section 4.2.3.2.
                               For an Upstream Port if Crosslink Supported is
                               0b, this field is RsvdP. Otherwise, this field
                               is HwInit. See Section 7.10.18. The default
                               value is 111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 uptp : 4;

                            /* Bits[11:8], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Transmit Preset value sent or
                               received during 8.0 GT/s Link Equalization.
                               Field usage varies, see PCIe Spec. for details.
                               See PCIe Spec. Sections 4.2.3 and Chapter 9 for
                               details. The field encodings are defined in PCIe
                               Spec. Section 4.2.3.2. Note: Lock Key bit is
                               located in the Personality Lock Key Control
                               Register .
                            */
    UINT16 uprph : 3;

                            /* Bits[14:12], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Receiver Preset Hint value
                               sent or received during 8.0 GT/s Link
                               Equalization. Field usage varies, see PCIe Spec.
                               for details. See PCIe Spec. Sections 4.2.3 and
                               Chapter 9 for details. The field encodings are
                               defined in PCIe Spec. Section 4.2.3.2. Note:
                               Lock Key bit is located in the Personality Lock
                               Key Control Register .
                            */
    UINT16 rsvd_15 : 1;

                            /* Bits[15:15], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT16 Data;

} LANEEQCTL_3_SB_FBLP_STRUCT;

/* LANEEQCTL_4_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x10000a44)                                                      */
/*      SPRB0 (0x10000a44)                                                      */
/*      SPRHBM (0x10000a44)                                                     */
/*      SPRC0 (0x10000a44)                                                      */
/*      SPRMCC (0x10000a44)                                                     */
/*      SPRUCC (0x10000a44)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* Lane Equalization Control
*/


#define LANEEQCTL_4_SB_FBLP_REG 0x2C010A44

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 dptp : 4;

                            /* Bits[3:0], Access Type=RW/L, default=None*/

                            /*
                               Transmitter Preset used for 8.0 GT/s
                               equalization by this Port when the Port is
                               operating as a Downstream Port. This field is
                               ignored when the Port is operating as an
                               Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in Section 4.2.3.2.
                               For an Upstream Port if Crosslink Supported is
                               0b, this field is RsvdP. Otherwise, this field
                               is HwInit. See Section 7.10.18. The default
                               value is 1111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT16 dprph : 3;

                            /* Bits[6:4], Access Type=RW/L, default=None*/

                            /*
                               Receiver Preset Hint may be used as a hint for
                               8.0 GT/s receiver equalization by this Port when
                               the Port is operating as a Downstream Port. This
                               field is ignored when the Port is operating as
                               an Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in Section 4.2.3.2.
                               For an Upstream Port if Crosslink Supported is
                               0b, this field is RsvdP. Otherwise, this field
                               is HwInit. See Section 7.10.18. The default
                               value is 111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 uptp : 4;

                            /* Bits[11:8], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Transmit Preset value sent or
                               received during 8.0 GT/s Link Equalization.
                               Field usage varies, see PCIe Spec. for details.
                               See PCIe Spec. Sections 4.2.3 and Chapter 9 for
                               details. The field encodings are defined in PCIe
                               Spec. Section 4.2.3.2. Note: Lock Key bit is
                               located in the Personality Lock Key Control
                               Register .
                            */
    UINT16 uprph : 3;

                            /* Bits[14:12], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Receiver Preset Hint value
                               sent or received during 8.0 GT/s Link
                               Equalization. Field usage varies, see PCIe Spec.
                               for details. See PCIe Spec. Sections 4.2.3 and
                               Chapter 9 for details. The field encodings are
                               defined in PCIe Spec. Section 4.2.3.2. Note:
                               Lock Key bit is located in the Personality Lock
                               Key Control Register .
                            */
    UINT16 rsvd_15 : 1;

                            /* Bits[15:15], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT16 Data;

} LANEEQCTL_4_SB_FBLP_STRUCT;

/* LANEEQCTL_5_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x10000a46)                                                      */
/*      SPRB0 (0x10000a46)                                                      */
/*      SPRHBM (0x10000a46)                                                     */
/*      SPRC0 (0x10000a46)                                                      */
/*      SPRMCC (0x10000a46)                                                     */
/*      SPRUCC (0x10000a46)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* Lane Equalization Control
*/


#define LANEEQCTL_5_SB_FBLP_REG 0x2C010A46

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 dptp : 4;

                            /* Bits[3:0], Access Type=RW/L, default=None*/

                            /*
                               Transmitter Preset used for 8.0 GT/s
                               equalization by this Port when the Port is
                               operating as a Downstream Port. This field is
                               ignored when the Port is operating as an
                               Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in Section 4.2.3.2.
                               For an Upstream Port if Crosslink Supported is
                               0b, this field is RsvdP. Otherwise, this field
                               is HwInit. See Section 7.10.18. The default
                               value is 1111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT16 dprph : 3;

                            /* Bits[6:4], Access Type=RW/L, default=None*/

                            /*
                               Receiver Preset Hint may be used as a hint for
                               8.0 GT/s receiver equalization by this Port when
                               the Port is operating as a Downstream Port. This
                               field is ignored when the Port is operating as
                               an Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in Section 4.2.3.2.
                               For an Upstream Port if Crosslink Supported is
                               0b, this field is RsvdP. Otherwise, this field
                               is HwInit. See Section 7.10.18. The default
                               value is 111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 uptp : 4;

                            /* Bits[11:8], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Transmit Preset value sent or
                               received during 8.0 GT/s Link Equalization.
                               Field usage varies, see PCIe Spec. for details.
                               See PCIe Spec. Sections 4.2.3 and Chapter 9 for
                               details. The field encodings are defined in PCIe
                               Spec. Section 4.2.3.2. Note: Lock Key bit is
                               located in the Personality Lock Key Control
                               Register .
                            */
    UINT16 uprph : 3;

                            /* Bits[14:12], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Receiver Preset Hint value
                               sent or received during 8.0 GT/s Link
                               Equalization. Field usage varies, see PCIe Spec.
                               for details. See PCIe Spec. Sections 4.2.3 and
                               Chapter 9 for details. The field encodings are
                               defined in PCIe Spec. Section 4.2.3.2. Note:
                               Lock Key bit is located in the Personality Lock
                               Key Control Register .
                            */
    UINT16 rsvd_15 : 1;

                            /* Bits[15:15], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT16 Data;

} LANEEQCTL_5_SB_FBLP_STRUCT;

/* LANEEQCTL_6_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x10000a48)                                                      */
/*      SPRB0 (0x10000a48)                                                      */
/*      SPRHBM (0x10000a48)                                                     */
/*      SPRC0 (0x10000a48)                                                      */
/*      SPRMCC (0x10000a48)                                                     */
/*      SPRUCC (0x10000a48)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* Lane Equalization Control
*/


#define LANEEQCTL_6_SB_FBLP_REG 0x2C010A48

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 dptp : 4;

                            /* Bits[3:0], Access Type=RW/L, default=None*/

                            /*
                               Transmitter Preset used for 8.0 GT/s
                               equalization by this Port when the Port is
                               operating as a Downstream Port. This field is
                               ignored when the Port is operating as an
                               Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in Section 4.2.3.2.
                               For an Upstream Port if Crosslink Supported is
                               0b, this field is RsvdP. Otherwise, this field
                               is HwInit. See Section 7.10.18. The default
                               value is 1111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT16 dprph : 3;

                            /* Bits[6:4], Access Type=RW/L, default=None*/

                            /*
                               Receiver Preset Hint may be used as a hint for
                               8.0 GT/s receiver equalization by this Port when
                               the Port is operating as a Downstream Port. This
                               field is ignored when the Port is operating as
                               an Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in Section 4.2.3.2.
                               For an Upstream Port if Crosslink Supported is
                               0b, this field is RsvdP. Otherwise, this field
                               is HwInit. See Section 7.10.18. The default
                               value is 111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 uptp : 4;

                            /* Bits[11:8], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Transmit Preset value sent or
                               received during 8.0 GT/s Link Equalization.
                               Field usage varies, see PCIe Spec. for details.
                               See PCIe Spec. Sections 4.2.3 and Chapter 9 for
                               details. The field encodings are defined in PCIe
                               Spec. Section 4.2.3.2. Note: Lock Key bit is
                               located in the Personality Lock Key Control
                               Register .
                            */
    UINT16 uprph : 3;

                            /* Bits[14:12], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Receiver Preset Hint value
                               sent or received during 8.0 GT/s Link
                               Equalization. Field usage varies, see PCIe Spec.
                               for details. See PCIe Spec. Sections 4.2.3 and
                               Chapter 9 for details. The field encodings are
                               defined in PCIe Spec. Section 4.2.3.2. Note:
                               Lock Key bit is located in the Personality Lock
                               Key Control Register .
                            */
    UINT16 rsvd_15 : 1;

                            /* Bits[15:15], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT16 Data;

} LANEEQCTL_6_SB_FBLP_STRUCT;

/* LANEEQCTL_7_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x10000a4a)                                                      */
/*      SPRB0 (0x10000a4a)                                                      */
/*      SPRHBM (0x10000a4a)                                                     */
/*      SPRC0 (0x10000a4a)                                                      */
/*      SPRMCC (0x10000a4a)                                                     */
/*      SPRUCC (0x10000a4a)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* Lane Equalization Control
*/


#define LANEEQCTL_7_SB_FBLP_REG 0x2C010A4A

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 dptp : 4;

                            /* Bits[3:0], Access Type=RW/L, default=None*/

                            /*
                               Transmitter Preset used for 8.0 GT/s
                               equalization by this Port when the Port is
                               operating as a Downstream Port. This field is
                               ignored when the Port is operating as an
                               Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in Section 4.2.3.2.
                               For an Upstream Port if Crosslink Supported is
                               0b, this field is RsvdP. Otherwise, this field
                               is HwInit. See Section 7.10.18. The default
                               value is 1111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT16 dprph : 3;

                            /* Bits[6:4], Access Type=RW/L, default=None*/

                            /*
                               Receiver Preset Hint may be used as a hint for
                               8.0 GT/s receiver equalization by this Port when
                               the Port is operating as a Downstream Port. This
                               field is ignored when the Port is operating as
                               an Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in Section 4.2.3.2.
                               For an Upstream Port if Crosslink Supported is
                               0b, this field is RsvdP. Otherwise, this field
                               is HwInit. See Section 7.10.18. The default
                               value is 111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 uptp : 4;

                            /* Bits[11:8], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Transmit Preset value sent or
                               received during 8.0 GT/s Link Equalization.
                               Field usage varies, see PCIe Spec. for details.
                               See PCIe Spec. Sections 4.2.3 and Chapter 9 for
                               details. The field encodings are defined in PCIe
                               Spec. Section 4.2.3.2. Note: Lock Key bit is
                               located in the Personality Lock Key Control
                               Register .
                            */
    UINT16 uprph : 3;

                            /* Bits[14:12], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Receiver Preset Hint value
                               sent or received during 8.0 GT/s Link
                               Equalization. Field usage varies, see PCIe Spec.
                               for details. See PCIe Spec. Sections 4.2.3 and
                               Chapter 9 for details. The field encodings are
                               defined in PCIe Spec. Section 4.2.3.2. Note:
                               Lock Key bit is located in the Personality Lock
                               Key Control Register .
                            */
    UINT16 rsvd_15 : 1;

                            /* Bits[15:15], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT16 Data;

} LANEEQCTL_7_SB_FBLP_STRUCT;

/* LANEEQCTL_8_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x10000a4c)                                                      */
/*      SPRB0 (0x10000a4c)                                                      */
/*      SPRHBM (0x10000a4c)                                                     */
/*      SPRC0 (0x10000a4c)                                                      */
/*      SPRMCC (0x10000a4c)                                                     */
/*      SPRUCC (0x10000a4c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* Lane Equalization Control
*/


#define LANEEQCTL_8_SB_FBLP_REG 0x2C010A4C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 dptp : 4;

                            /* Bits[3:0], Access Type=RW/L, default=None*/

                            /*
                               Transmitter Preset used for 8.0 GT/s
                               equalization by this Port when the Port is
                               operating as a Downstream Port. This field is
                               ignored when the Port is operating as an
                               Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in Section 4.2.3.2.
                               For an Upstream Port if Crosslink Supported is
                               0b, this field is RsvdP. Otherwise, this field
                               is HwInit. See Section 7.10.18. The default
                               value is 1111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT16 dprph : 3;

                            /* Bits[6:4], Access Type=RW/L, default=None*/

                            /*
                               Receiver Preset Hint may be used as a hint for
                               8.0 GT/s receiver equalization by this Port when
                               the Port is operating as a Downstream Port. This
                               field is ignored when the Port is operating as
                               an Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in Section 4.2.3.2.
                               For an Upstream Port if Crosslink Supported is
                               0b, this field is RsvdP. Otherwise, this field
                               is HwInit. See Section 7.10.18. The default
                               value is 111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 uptp : 4;

                            /* Bits[11:8], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Transmit Preset value sent or
                               received during 8.0 GT/s Link Equalization.
                               Field usage varies, see PCIe Spec. for details.
                               See PCIe Spec. Sections 4.2.3 and Chapter 9 for
                               details. The field encodings are defined in PCIe
                               Spec. Section 4.2.3.2. Note: Lock Key bit is
                               located in the Personality Lock Key Control
                               Register .
                            */
    UINT16 uprph : 3;

                            /* Bits[14:12], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Receiver Preset Hint value
                               sent or received during 8.0 GT/s Link
                               Equalization. Field usage varies, see PCIe Spec.
                               for details. See PCIe Spec. Sections 4.2.3 and
                               Chapter 9 for details. The field encodings are
                               defined in PCIe Spec. Section 4.2.3.2. Note:
                               Lock Key bit is located in the Personality Lock
                               Key Control Register .
                            */
    UINT16 rsvd_15 : 1;

                            /* Bits[15:15], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT16 Data;

} LANEEQCTL_8_SB_FBLP_STRUCT;

/* LANEEQCTL_9_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x10000a4e)                                                      */
/*      SPRB0 (0x10000a4e)                                                      */
/*      SPRHBM (0x10000a4e)                                                     */
/*      SPRC0 (0x10000a4e)                                                      */
/*      SPRMCC (0x10000a4e)                                                     */
/*      SPRUCC (0x10000a4e)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* Lane Equalization Control
*/


#define LANEEQCTL_9_SB_FBLP_REG 0x2C010A4E

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 dptp : 4;

                            /* Bits[3:0], Access Type=RW/L, default=None*/

                            /*
                               Transmitter Preset used for 8.0 GT/s
                               equalization by this Port when the Port is
                               operating as a Downstream Port. This field is
                               ignored when the Port is operating as an
                               Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in Section 4.2.3.2.
                               For an Upstream Port if Crosslink Supported is
                               0b, this field is RsvdP. Otherwise, this field
                               is HwInit. See Section 7.10.18. The default
                               value is 1111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT16 dprph : 3;

                            /* Bits[6:4], Access Type=RW/L, default=None*/

                            /*
                               Receiver Preset Hint may be used as a hint for
                               8.0 GT/s receiver equalization by this Port when
                               the Port is operating as a Downstream Port. This
                               field is ignored when the Port is operating as
                               an Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in Section 4.2.3.2.
                               For an Upstream Port if Crosslink Supported is
                               0b, this field is RsvdP. Otherwise, this field
                               is HwInit. See Section 7.10.18. The default
                               value is 111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 uptp : 4;

                            /* Bits[11:8], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Transmit Preset value sent or
                               received during 8.0 GT/s Link Equalization.
                               Field usage varies, see PCIe Spec. for details.
                               See PCIe Spec. Sections 4.2.3 and Chapter 9 for
                               details. The field encodings are defined in PCIe
                               Spec. Section 4.2.3.2. Note: Lock Key bit is
                               located in the Personality Lock Key Control
                               Register .
                            */
    UINT16 uprph : 3;

                            /* Bits[14:12], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Receiver Preset Hint value
                               sent or received during 8.0 GT/s Link
                               Equalization. Field usage varies, see PCIe Spec.
                               for details. See PCIe Spec. Sections 4.2.3 and
                               Chapter 9 for details. The field encodings are
                               defined in PCIe Spec. Section 4.2.3.2. Note:
                               Lock Key bit is located in the Personality Lock
                               Key Control Register .
                            */
    UINT16 rsvd_15 : 1;

                            /* Bits[15:15], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT16 Data;

} LANEEQCTL_9_SB_FBLP_STRUCT;

/* LANEEQCTL_10_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x10000a50)                                                      */
/*      SPRB0 (0x10000a50)                                                      */
/*      SPRHBM (0x10000a50)                                                     */
/*      SPRC0 (0x10000a50)                                                      */
/*      SPRMCC (0x10000a50)                                                     */
/*      SPRUCC (0x10000a50)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* Lane Equalization Control
*/


#define LANEEQCTL_10_SB_FBLP_REG 0x2C010A50

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 dptp : 4;

                            /* Bits[3:0], Access Type=RW/L, default=None*/

                            /*
                               Transmitter Preset used for 8.0 GT/s
                               equalization by this Port when the Port is
                               operating as a Downstream Port. This field is
                               ignored when the Port is operating as an
                               Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in Section 4.2.3.2.
                               For an Upstream Port if Crosslink Supported is
                               0b, this field is RsvdP. Otherwise, this field
                               is HwInit. See Section 7.10.18. The default
                               value is 1111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT16 dprph : 3;

                            /* Bits[6:4], Access Type=RW/L, default=None*/

                            /*
                               Receiver Preset Hint may be used as a hint for
                               8.0 GT/s receiver equalization by this Port when
                               the Port is operating as a Downstream Port. This
                               field is ignored when the Port is operating as
                               an Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in Section 4.2.3.2.
                               For an Upstream Port if Crosslink Supported is
                               0b, this field is RsvdP. Otherwise, this field
                               is HwInit. See Section 7.10.18. The default
                               value is 111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 uptp : 4;

                            /* Bits[11:8], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Transmit Preset value sent or
                               received during 8.0 GT/s Link Equalization.
                               Field usage varies, see PCIe Spec. for details.
                               See PCIe Spec. Sections 4.2.3 and Chapter 9 for
                               details. The field encodings are defined in PCIe
                               Spec. Section 4.2.3.2. Note: Lock Key bit is
                               located in the Personality Lock Key Control
                               Register .
                            */
    UINT16 uprph : 3;

                            /* Bits[14:12], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Receiver Preset Hint value
                               sent or received during 8.0 GT/s Link
                               Equalization. Field usage varies, see PCIe Spec.
                               for details. See PCIe Spec. Sections 4.2.3 and
                               Chapter 9 for details. The field encodings are
                               defined in PCIe Spec. Section 4.2.3.2. Note:
                               Lock Key bit is located in the Personality Lock
                               Key Control Register .
                            */
    UINT16 rsvd_15 : 1;

                            /* Bits[15:15], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT16 Data;

} LANEEQCTL_10_SB_FBLP_STRUCT;

/* LANEEQCTL_11_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x10000a52)                                                      */
/*      SPRB0 (0x10000a52)                                                      */
/*      SPRHBM (0x10000a52)                                                     */
/*      SPRC0 (0x10000a52)                                                      */
/*      SPRMCC (0x10000a52)                                                     */
/*      SPRUCC (0x10000a52)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* Lane Equalization Control
*/


#define LANEEQCTL_11_SB_FBLP_REG 0x2C010A52

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 dptp : 4;

                            /* Bits[3:0], Access Type=RW/L, default=None*/

                            /*
                               Transmitter Preset used for 8.0 GT/s
                               equalization by this Port when the Port is
                               operating as a Downstream Port. This field is
                               ignored when the Port is operating as an
                               Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in Section 4.2.3.2.
                               For an Upstream Port if Crosslink Supported is
                               0b, this field is RsvdP. Otherwise, this field
                               is HwInit. See Section 7.10.18. The default
                               value is 1111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT16 dprph : 3;

                            /* Bits[6:4], Access Type=RW/L, default=None*/

                            /*
                               Receiver Preset Hint may be used as a hint for
                               8.0 GT/s receiver equalization by this Port when
                               the Port is operating as a Downstream Port. This
                               field is ignored when the Port is operating as
                               an Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in Section 4.2.3.2.
                               For an Upstream Port if Crosslink Supported is
                               0b, this field is RsvdP. Otherwise, this field
                               is HwInit. See Section 7.10.18. The default
                               value is 111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 uptp : 4;

                            /* Bits[11:8], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Transmit Preset value sent or
                               received during 8.0 GT/s Link Equalization.
                               Field usage varies, see PCIe Spec. for details.
                               See PCIe Spec. Sections 4.2.3 and Chapter 9 for
                               details. The field encodings are defined in PCIe
                               Spec. Section 4.2.3.2. Note: Lock Key bit is
                               located in the Personality Lock Key Control
                               Register .
                            */
    UINT16 uprph : 3;

                            /* Bits[14:12], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Receiver Preset Hint value
                               sent or received during 8.0 GT/s Link
                               Equalization. Field usage varies, see PCIe Spec.
                               for details. See PCIe Spec. Sections 4.2.3 and
                               Chapter 9 for details. The field encodings are
                               defined in PCIe Spec. Section 4.2.3.2. Note:
                               Lock Key bit is located in the Personality Lock
                               Key Control Register .
                            */
    UINT16 rsvd_15 : 1;

                            /* Bits[15:15], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT16 Data;

} LANEEQCTL_11_SB_FBLP_STRUCT;

/* LANEEQCTL_12_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x10000a54)                                                      */
/*      SPRB0 (0x10000a54)                                                      */
/*      SPRHBM (0x10000a54)                                                     */
/*      SPRC0 (0x10000a54)                                                      */
/*      SPRMCC (0x10000a54)                                                     */
/*      SPRUCC (0x10000a54)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* Lane Equalization Control
*/


#define LANEEQCTL_12_SB_FBLP_REG 0x2C010A54

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 dptp : 4;

                            /* Bits[3:0], Access Type=RW/L, default=None*/

                            /*
                               Transmitter Preset used for 8.0 GT/s
                               equalization by this Port when the Port is
                               operating as a Downstream Port. This field is
                               ignored when the Port is operating as an
                               Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in Section 4.2.3.2.
                               For an Upstream Port if Crosslink Supported is
                               0b, this field is RsvdP. Otherwise, this field
                               is HwInit. See Section 7.10.18. The default
                               value is 1111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT16 dprph : 3;

                            /* Bits[6:4], Access Type=RW/L, default=None*/

                            /*
                               Receiver Preset Hint may be used as a hint for
                               8.0 GT/s receiver equalization by this Port when
                               the Port is operating as a Downstream Port. This
                               field is ignored when the Port is operating as
                               an Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in Section 4.2.3.2.
                               For an Upstream Port if Crosslink Supported is
                               0b, this field is RsvdP. Otherwise, this field
                               is HwInit. See Section 7.10.18. The default
                               value is 111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 uptp : 4;

                            /* Bits[11:8], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Transmit Preset value sent or
                               received during 8.0 GT/s Link Equalization.
                               Field usage varies, see PCIe Spec. for details.
                               See PCIe Spec. Sections 4.2.3 and Chapter 9 for
                               details. The field encodings are defined in PCIe
                               Spec. Section 4.2.3.2. Note: Lock Key bit is
                               located in the Personality Lock Key Control
                               Register .
                            */
    UINT16 uprph : 3;

                            /* Bits[14:12], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Receiver Preset Hint value
                               sent or received during 8.0 GT/s Link
                               Equalization. Field usage varies, see PCIe Spec.
                               for details. See PCIe Spec. Sections 4.2.3 and
                               Chapter 9 for details. The field encodings are
                               defined in PCIe Spec. Section 4.2.3.2. Note:
                               Lock Key bit is located in the Personality Lock
                               Key Control Register .
                            */
    UINT16 rsvd_15 : 1;

                            /* Bits[15:15], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT16 Data;

} LANEEQCTL_12_SB_FBLP_STRUCT;

/* LANEEQCTL_13_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x10000a56)                                                      */
/*      SPRB0 (0x10000a56)                                                      */
/*      SPRHBM (0x10000a56)                                                     */
/*      SPRC0 (0x10000a56)                                                      */
/*      SPRMCC (0x10000a56)                                                     */
/*      SPRUCC (0x10000a56)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* Lane Equalization Control
*/


#define LANEEQCTL_13_SB_FBLP_REG 0x2C010A56

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 dptp : 4;

                            /* Bits[3:0], Access Type=RW/L, default=None*/

                            /*
                               Transmitter Preset used for 8.0 GT/s
                               equalization by this Port when the Port is
                               operating as a Downstream Port. This field is
                               ignored when the Port is operating as an
                               Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in Section 4.2.3.2.
                               For an Upstream Port if Crosslink Supported is
                               0b, this field is RsvdP. Otherwise, this field
                               is HwInit. See Section 7.10.18. The default
                               value is 1111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT16 dprph : 3;

                            /* Bits[6:4], Access Type=RW/L, default=None*/

                            /*
                               Receiver Preset Hint may be used as a hint for
                               8.0 GT/s receiver equalization by this Port when
                               the Port is operating as a Downstream Port. This
                               field is ignored when the Port is operating as
                               an Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in Section 4.2.3.2.
                               For an Upstream Port if Crosslink Supported is
                               0b, this field is RsvdP. Otherwise, this field
                               is HwInit. See Section 7.10.18. The default
                               value is 111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 uptp : 4;

                            /* Bits[11:8], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Transmit Preset value sent or
                               received during 8.0 GT/s Link Equalization.
                               Field usage varies, see PCIe Spec. for details.
                               See PCIe Spec. Sections 4.2.3 and Chapter 9 for
                               details. The field encodings are defined in PCIe
                               Spec. Section 4.2.3.2. Note: Lock Key bit is
                               located in the Personality Lock Key Control
                               Register .
                            */
    UINT16 uprph : 3;

                            /* Bits[14:12], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Receiver Preset Hint value
                               sent or received during 8.0 GT/s Link
                               Equalization. Field usage varies, see PCIe Spec.
                               for details. See PCIe Spec. Sections 4.2.3 and
                               Chapter 9 for details. The field encodings are
                               defined in PCIe Spec. Section 4.2.3.2. Note:
                               Lock Key bit is located in the Personality Lock
                               Key Control Register .
                            */
    UINT16 rsvd_15 : 1;

                            /* Bits[15:15], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT16 Data;

} LANEEQCTL_13_SB_FBLP_STRUCT;

/* LANEEQCTL_14_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x10000a58)                                                      */
/*      SPRB0 (0x10000a58)                                                      */
/*      SPRHBM (0x10000a58)                                                     */
/*      SPRC0 (0x10000a58)                                                      */
/*      SPRMCC (0x10000a58)                                                     */
/*      SPRUCC (0x10000a58)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* Lane Equalization Control
*/


#define LANEEQCTL_14_SB_FBLP_REG 0x2C010A58

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 dptp : 4;

                            /* Bits[3:0], Access Type=RW/L, default=None*/

                            /*
                               Transmitter Preset used for 8.0 GT/s
                               equalization by this Port when the Port is
                               operating as a Downstream Port. This field is
                               ignored when the Port is operating as an
                               Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in Section 4.2.3.2.
                               For an Upstream Port if Crosslink Supported is
                               0b, this field is RsvdP. Otherwise, this field
                               is HwInit. See Section 7.10.18. The default
                               value is 1111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT16 dprph : 3;

                            /* Bits[6:4], Access Type=RW/L, default=None*/

                            /*
                               Receiver Preset Hint may be used as a hint for
                               8.0 GT/s receiver equalization by this Port when
                               the Port is operating as a Downstream Port. This
                               field is ignored when the Port is operating as
                               an Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in Section 4.2.3.2.
                               For an Upstream Port if Crosslink Supported is
                               0b, this field is RsvdP. Otherwise, this field
                               is HwInit. See Section 7.10.18. The default
                               value is 111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 uptp : 4;

                            /* Bits[11:8], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Transmit Preset value sent or
                               received during 8.0 GT/s Link Equalization.
                               Field usage varies, see PCIe Spec. for details.
                               See PCIe Spec. Sections 4.2.3 and Chapter 9 for
                               details. The field encodings are defined in PCIe
                               Spec. Section 4.2.3.2. Note: Lock Key bit is
                               located in the Personality Lock Key Control
                               Register .
                            */
    UINT16 uprph : 3;

                            /* Bits[14:12], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Receiver Preset Hint value
                               sent or received during 8.0 GT/s Link
                               Equalization. Field usage varies, see PCIe Spec.
                               for details. See PCIe Spec. Sections 4.2.3 and
                               Chapter 9 for details. The field encodings are
                               defined in PCIe Spec. Section 4.2.3.2. Note:
                               Lock Key bit is located in the Personality Lock
                               Key Control Register .
                            */
    UINT16 rsvd_15 : 1;

                            /* Bits[15:15], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT16 Data;

} LANEEQCTL_14_SB_FBLP_STRUCT;

/* LANEEQCTL_15_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x10000a5a)                                                      */
/*      SPRB0 (0x10000a5a)                                                      */
/*      SPRHBM (0x10000a5a)                                                     */
/*      SPRC0 (0x10000a5a)                                                      */
/*      SPRMCC (0x10000a5a)                                                     */
/*      SPRUCC (0x10000a5a)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* Lane Equalization Control
*/


#define LANEEQCTL_15_SB_FBLP_REG 0x2C010A5A

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 dptp : 4;

                            /* Bits[3:0], Access Type=RW/L, default=None*/

                            /*
                               Transmitter Preset used for 8.0 GT/s
                               equalization by this Port when the Port is
                               operating as a Downstream Port. This field is
                               ignored when the Port is operating as an
                               Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in Section 4.2.3.2.
                               For an Upstream Port if Crosslink Supported is
                               0b, this field is RsvdP. Otherwise, this field
                               is HwInit. See Section 7.10.18. The default
                               value is 1111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT16 dprph : 3;

                            /* Bits[6:4], Access Type=RW/L, default=None*/

                            /*
                               Receiver Preset Hint may be used as a hint for
                               8.0 GT/s receiver equalization by this Port when
                               the Port is operating as a Downstream Port. This
                               field is ignored when the Port is operating as
                               an Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in Section 4.2.3.2.
                               For an Upstream Port if Crosslink Supported is
                               0b, this field is RsvdP. Otherwise, this field
                               is HwInit. See Section 7.10.18. The default
                               value is 111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 uptp : 4;

                            /* Bits[11:8], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Transmit Preset value sent or
                               received during 8.0 GT/s Link Equalization.
                               Field usage varies, see PCIe Spec. for details.
                               See PCIe Spec. Sections 4.2.3 and Chapter 9 for
                               details. The field encodings are defined in PCIe
                               Spec. Section 4.2.3.2. Note: Lock Key bit is
                               located in the Personality Lock Key Control
                               Register .
                            */
    UINT16 uprph : 3;

                            /* Bits[14:12], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Receiver Preset Hint value
                               sent or received during 8.0 GT/s Link
                               Equalization. Field usage varies, see PCIe Spec.
                               for details. See PCIe Spec. Sections 4.2.3 and
                               Chapter 9 for details. The field encodings are
                               defined in PCIe Spec. Section 4.2.3.2. Note:
                               Lock Key bit is located in the Personality Lock
                               Key Control Register .
                            */
    UINT16 rsvd_15 : 1;

                            /* Bits[15:15], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT16 Data;

} LANEEQCTL_15_SB_FBLP_STRUCT;

/* G4CAP_SB_FBLP_REG supported on:                                              */
/*      SPRA0 (0x20000aa0)                                                      */
/*      SPRB0 (0x20000aa0)                                                      */
/*      SPRHBM (0x20000aa0)                                                     */
/*      SPRC0 (0x20000aa0)                                                      */
/*      SPRMCC (0x20000aa0)                                                     */
/*      SPRUCC (0x20000aa0)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* 16.0 GT/s Capabilities
*/


#define G4CAP_SB_FBLP_REG 0x2C020AA0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 rsvdp : 32;

                            /* Bits[31:0], Access Type=RO, default=0x00000000*/

                            /* RsvdP */

  } Bits;
  UINT32 Data;

} G4CAP_SB_FBLP_STRUCT;

/* G4CTL_SB_FBLP_REG supported on:                                              */
/*      SPRA0 (0x20000aa4)                                                      */
/*      SPRB0 (0x20000aa4)                                                      */
/*      SPRHBM (0x20000aa4)                                                     */
/*      SPRC0 (0x20000aa4)                                                      */
/*      SPRMCC (0x20000aa4)                                                     */
/*      SPRUCC (0x20000aa4)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* 16.0 GT/s Control
*/


#define G4CTL_SB_FBLP_REG 0x2C020AA4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 rsvdp : 32;

                            /* Bits[31:0], Access Type=RO, default=0x00000000*/

                            /* RsvdP */

  } Bits;
  UINT32 Data;

} G4CTL_SB_FBLP_STRUCT;

/* G4STS_SB_FBLP_REG supported on:                                              */
/*      SPRA0 (0x20000aa8)                                                      */
/*      SPRB0 (0x20000aa8)                                                      */
/*      SPRHBM (0x20000aa8)                                                     */
/*      SPRC0 (0x20000aa8)                                                      */
/*      SPRMCC (0x20000aa8)                                                     */
/*      SPRUCC (0x20000aa8)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* 16.0 GT/s Status
*/


#define G4STS_SB_FBLP_REG 0x2C020AA8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 eq16cmplt : 1;

                            /* Bits[0:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               When Set, this bit indicates that the 16.0 GT/s
                               Transmitter Equalization procedure has
                               completed. Details of the Transmitter
                               Equalization process and when this bit needs to
                               be set to 1b is provided in PCIe Spec. Section
                               4.2.6.4.2. The default value of this bit is 0b.
                               For a Multi-Function Upstream Port, this bit
                               must be implemented in Function 0 and RsvdZ in
                               other Functions.
                            */
    UINT32 eq16ph1succ : 1;

                            /* Bits[1:1], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               When set to 1b, this bit indicates that Phase 1
                               of the 16.0 GT/s Transmitter Equalization
                               procedure has successfully completed. Details of
                               the Transmitter Equalization process and when
                               this bit needs to be set to 1b is provided in
                               PCIe Spec. Section 4.2.6.4.2. The default value
                               of this bit is 0b. For a Multi-Function Upstream
                               Port, this bit must be implemented in Function 0
                               and RsvdZ in other Functions.
                            */
    UINT32 eq16ph2succ : 1;

                            /* Bits[2:2], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               When set to 1b, this bit indicates that Phase 2
                               of the 16.0 GT/s Transmitter Equalization
                               procedure has successfully completed. Details of
                               the Transmitter Equalization process and when
                               this bit needs to be set to 1b is provided in
                               PCIe Spec. Section 4.2.6.4.2. The default value
                               of this bit is 0b. For a Multi-Function Upstream
                               Port, this bit must be implemented in Function 0
                               and RsvdZ in other Functions.
                            */
    UINT32 eq16ph3succ : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               When set to 1b, this bit indicates that Phase 3
                               of the 16.0 GT/s Transmitter Equalization
                               procedure has successfully completed. Details of
                               the Transmitter Equalization process and when
                               this bit needs to be set to 1b is provided in
                               PCIe Spec. Section 4.2.6.4.2. The default value
                               of this bit is 0b. For a Multi-Function Upstream
                               Port, this bit must be implemented in Function 0
                               and RsvdZ in other Functions.
                            */
    UINT32 linkeqreq16 : 1;

                            /* Bits[4:4], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               This bit is Set by hardware to request the 16.0
                               GT/s Link equalization process to be performed
                               on the Link. Refer to PCIe Spec. Sections 4.2.3
                               and 4.2.6.4.2 for details. The default value of
                               this bit is 0b. For a Multi-Function Upstream
                               Port, this bit must be implemented in Function 0
                               and RsvdZ in other Functions.
                            */
    UINT32 rsvd : 27;

                            /* Bits[31:5], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G4STS_SB_FBLP_STRUCT;

/* G4LDPMSTS_SB_FBLP_REG supported on:                                          */
/*      SPRA0 (0x20000aac)                                                      */
/*      SPRB0 (0x20000aac)                                                      */
/*      SPRHBM (0x20000aac)                                                     */
/*      SPRC0 (0x20000aac)                                                      */
/*      SPRMCC (0x20000aac)                                                     */
/*      SPRUCC (0x20000aac)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* 16.0 GT/s Local Data Parity Mismatch Status
*/


#define G4LDPMSTS_SB_FBLP_REG 0x2C020AAC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 l0ldpms : 1;

                            /* Bits[0:0], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. For Ports that are narrower than
                               32 Lanes, the unused upper bits [31: Maximum
                               Link Width] are RsvdZ.
                            */
    UINT32 l1ldpms : 1;

                            /* Bits[1:1], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. For Ports that are narrower than
                               32 Lanes, the unused upper bits [31: Maximum
                               Link Width] are RsvdZ.
                            */
    UINT32 l2ldpms : 1;

                            /* Bits[2:2], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. For Ports that are narrower than
                               32 Lanes, the unused upper bits [31: Maximum
                               Link Width] are RsvdZ.
                            */
    UINT32 l3ldpms : 1;

                            /* Bits[3:3], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. For Ports that are narrower than
                               32 Lanes, the unused upper bits [31: Maximum
                               Link Width] are RsvdZ.
                            */
    UINT32 l4ldpms : 1;

                            /* Bits[4:4], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. For Ports that are narrower than
                               32 Lanes, the unused upper bits [31: Maximum
                               Link Width] are RsvdZ.
                            */
    UINT32 l5ldpms : 1;

                            /* Bits[5:5], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. For Ports that are narrower than
                               32 Lanes, the unused upper bits [31: Maximum
                               Link Width] are RsvdZ.
                            */
    UINT32 l6ldpms : 1;

                            /* Bits[6:6], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. For Ports that are narrower than
                               32 Lanes, the unused upper bits [31: Maximum
                               Link Width] are RsvdZ.
                            */
    UINT32 l7ldpms : 1;

                            /* Bits[7:7], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. For Ports that are narrower than
                               32 Lanes, the unused upper bits [31: Maximum
                               Link Width] are RsvdZ.
                            */
    UINT32 l8ldpms : 1;

                            /* Bits[8:8], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. For Ports that are narrower than
                               32 Lanes, the unused upper bits [31: Maximum
                               Link Width] are RsvdZ.
                            */
    UINT32 l9ldpms : 1;

                            /* Bits[9:9], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. For Ports that are narrower than
                               32 Lanes, the unused upper bits [31: Maximum
                               Link Width] are RsvdZ.
                            */
    UINT32 l10ldpms : 1;

                            /* Bits[10:10], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. For Ports that are narrower than
                               32 Lanes, the unused upper bits [31: Maximum
                               Link Width] are RsvdZ.
                            */
    UINT32 l11ldpms : 1;

                            /* Bits[11:11], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. For Ports that are narrower than
                               32 Lanes, the unused upper bits [31: Maximum
                               Link Width] are RsvdZ.
                            */
    UINT32 l12ldpms : 1;

                            /* Bits[12:12], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. For Ports that are narrower than
                               32 Lanes, the unused upper bits [31: Maximum
                               Link Width] are RsvdZ.
                            */
    UINT32 l13ldpms : 1;

                            /* Bits[13:13], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. For Ports that are narrower than
                               32 Lanes, the unused upper bits [31: Maximum
                               Link Width] are RsvdZ.
                            */
    UINT32 l14ldpms : 1;

                            /* Bits[14:14], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. For Ports that are narrower than
                               32 Lanes, the unused upper bits [31: Maximum
                               Link Width] are RsvdZ.
                            */
    UINT32 l15ldpms : 1;

                            /* Bits[15:15], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. For Ports that are narrower than
                               32 Lanes, the unused upper bits [31: Maximum
                               Link Width] are RsvdZ.
                            */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G4LDPMSTS_SB_FBLP_STRUCT;

/* G4FRDPMSTS_SB_FBLP_REG supported on:                                         */
/*      SPRA0 (0x20000ab0)                                                      */
/*      SPRB0 (0x20000ab0)                                                      */
/*      SPRHBM (0x20000ab0)                                                     */
/*      SPRC0 (0x20000ab0)                                                      */
/*      SPRMCC (0x20000ab0)                                                     */
/*      SPRUCC (0x20000ab0)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* 16.0 GT/s First Retimer Data Parity Mismatch Status
*/


#define G4FRDPMSTS_SB_FBLP_REG 0x2C020AB0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 l0frdpms : 1;

                            /* Bits[0:0], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present. For
                               Ports that are narrower than 32 Lanes, the
                               unused upper bits [31: Maximum Link Width] are
                               RsvdZ.
                            */
    UINT32 l1frdpms : 1;

                            /* Bits[1:1], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present. For
                               Ports that are narrower than 32 Lanes, the
                               unused upper bits [31: Maximum Link Width] are
                               RsvdZ.
                            */
    UINT32 l2frdpms : 1;

                            /* Bits[2:2], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present. For
                               Ports that are narrower than 32 Lanes, the
                               unused upper bits [31: Maximum Link Width] are
                               RsvdZ.
                            */
    UINT32 l3frdpms : 1;

                            /* Bits[3:3], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present. For
                               Ports that are narrower than 32 Lanes, the
                               unused upper bits [31: Maximum Link Width] are
                               RsvdZ.
                            */
    UINT32 l4frdpms : 1;

                            /* Bits[4:4], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present. For
                               Ports that are narrower than 32 Lanes, the
                               unused upper bits [31: Maximum Link Width] are
                               RsvdZ.
                            */
    UINT32 l5frdpms : 1;

                            /* Bits[5:5], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present. For
                               Ports that are narrower than 32 Lanes, the
                               unused upper bits [31: Maximum Link Width] are
                               RsvdZ.
                            */
    UINT32 l6frdpms : 1;

                            /* Bits[6:6], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present. For
                               Ports that are narrower than 32 Lanes, the
                               unused upper bits [31: Maximum Link Width] are
                               RsvdZ.
                            */
    UINT32 l7frdpms : 1;

                            /* Bits[7:7], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present. For
                               Ports that are narrower than 32 Lanes, the
                               unused upper bits [31: Maximum Link Width] are
                               RsvdZ.
                            */
    UINT32 l8frdpms : 1;

                            /* Bits[8:8], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present. For
                               Ports that are narrower than 32 Lanes, the
                               unused upper bits [31: Maximum Link Width] are
                               RsvdZ.
                            */
    UINT32 l9frdpms : 1;

                            /* Bits[9:9], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present. For
                               Ports that are narrower than 32 Lanes, the
                               unused upper bits [31: Maximum Link Width] are
                               RsvdZ.
                            */
    UINT32 l10frdpms : 1;

                            /* Bits[10:10], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present. For
                               Ports that are narrower than 32 Lanes, the
                               unused upper bits [31: Maximum Link Width] are
                               RsvdZ.
                            */
    UINT32 l11frdpms : 1;

                            /* Bits[11:11], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present. For
                               Ports that are narrower than 32 Lanes, the
                               unused upper bits [31: Maximum Link Width] are
                               RsvdZ.
                            */
    UINT32 l12frdpms : 1;

                            /* Bits[12:12], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present. For
                               Ports that are narrower than 32 Lanes, the
                               unused upper bits [31: Maximum Link Width] are
                               RsvdZ.
                            */
    UINT32 l13frdpms : 1;

                            /* Bits[13:13], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present. For
                               Ports that are narrower than 32 Lanes, the
                               unused upper bits [31: Maximum Link Width] are
                               RsvdZ.
                            */
    UINT32 l14frdpms : 1;

                            /* Bits[14:14], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present. For
                               Ports that are narrower than 32 Lanes, the
                               unused upper bits [31: Maximum Link Width] are
                               RsvdZ.
                            */
    UINT32 l15frdpms : 1;

                            /* Bits[15:15], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present. For
                               Ports that are narrower than 32 Lanes, the
                               unused upper bits [31: Maximum Link Width] are
                               RsvdZ.
                            */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G4FRDPMSTS_SB_FBLP_STRUCT;

/* G4SRDPMSTS_SB_FBLP_REG supported on:                                         */
/*      SPRA0 (0x20000ab4)                                                      */
/*      SPRB0 (0x20000ab4)                                                      */
/*      SPRHBM (0x20000ab4)                                                     */
/*      SPRC0 (0x20000ab4)                                                      */
/*      SPRMCC (0x20000ab4)                                                     */
/*      SPRUCC (0x20000ab4)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* 16.0 GT/s Second Retimer Data Parity Mismatch Status
*/


#define G4SRDPMSTS_SB_FBLP_REG 0x2C020AB4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 l0srdpms : 1;

                            /* Bits[0:0], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present or only
                               one Retimer is present. For Ports that are
                               narrower than 32 Lanes, the unused upper bits
                               [31: Maximum Link Width] are RsvdZ.
                            */
    UINT32 l1srdpms : 1;

                            /* Bits[1:1], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present or only
                               one Retimer is present. For Ports that are
                               narrower than 32 Lanes, the unused upper bits
                               [31: Maximum Link Width] are RsvdZ.
                            */
    UINT32 l2srdpms : 1;

                            /* Bits[2:2], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present or only
                               one Retimer is present. For Ports that are
                               narrower than 32 Lanes, the unused upper bits
                               [31: Maximum Link Width] are RsvdZ.
                            */
    UINT32 l3srdpms : 1;

                            /* Bits[3:3], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present or only
                               one Retimer is present. For Ports that are
                               narrower than 32 Lanes, the unused upper bits
                               [31: Maximum Link Width] are RsvdZ.
                            */
    UINT32 l4srdpms : 1;

                            /* Bits[4:4], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present or only
                               one Retimer is present. For Ports that are
                               narrower than 32 Lanes, the unused upper bits
                               [31: Maximum Link Width] are RsvdZ.
                            */
    UINT32 l5srdpms : 1;

                            /* Bits[5:5], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present or only
                               one Retimer is present. For Ports that are
                               narrower than 32 Lanes, the unused upper bits
                               [31: Maximum Link Width] are RsvdZ.
                            */
    UINT32 l6srdpms : 1;

                            /* Bits[6:6], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present or only
                               one Retimer is present. For Ports that are
                               narrower than 32 Lanes, the unused upper bits
                               [31: Maximum Link Width] are RsvdZ.
                            */
    UINT32 l7srdpms : 1;

                            /* Bits[7:7], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present or only
                               one Retimer is present. For Ports that are
                               narrower than 32 Lanes, the unused upper bits
                               [31: Maximum Link Width] are RsvdZ.
                            */
    UINT32 l8srdpms : 1;

                            /* Bits[8:8], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present or only
                               one Retimer is present. For Ports that are
                               narrower than 32 Lanes, the unused upper bits
                               [31: Maximum Link Width] are RsvdZ.
                            */
    UINT32 l9srdpms : 1;

                            /* Bits[9:9], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present or only
                               one Retimer is present. For Ports that are
                               narrower than 32 Lanes, the unused upper bits
                               [31: Maximum Link Width] are RsvdZ.
                            */
    UINT32 l10srdpms : 1;

                            /* Bits[10:10], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present or only
                               one Retimer is present. For Ports that are
                               narrower than 32 Lanes, the unused upper bits
                               [31: Maximum Link Width] are RsvdZ.
                            */
    UINT32 l11srdpms : 1;

                            /* Bits[11:11], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present or only
                               one Retimer is present. For Ports that are
                               narrower than 32 Lanes, the unused upper bits
                               [31: Maximum Link Width] are RsvdZ.
                            */
    UINT32 l12srdpms : 1;

                            /* Bits[12:12], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present or only
                               one Retimer is present. For Ports that are
                               narrower than 32 Lanes, the unused upper bits
                               [31: Maximum Link Width] are RsvdZ.
                            */
    UINT32 l13srdpms : 1;

                            /* Bits[13:13], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present or only
                               one Retimer is present. For Ports that are
                               narrower than 32 Lanes, the unused upper bits
                               [31: Maximum Link Width] are RsvdZ.
                            */
    UINT32 l14srdpms : 1;

                            /* Bits[14:14], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present or only
                               one Retimer is present. For Ports that are
                               narrower than 32 Lanes, the unused upper bits
                               [31: Maximum Link Width] are RsvdZ.
                            */
    UINT32 l15srdpms : 1;

                            /* Bits[15:15], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Each bit indicates if the corresponding Lane
                               detected a Data Parity mismatch. A value of 1b
                               indicates that a mismatch was detected on the
                               corresponding Lane Number. The default value of
                               each bit is 0b. The value of this field is
                               undefined when no Retimers are present or only
                               one Retimer is present. For Ports that are
                               narrower than 32 Lanes, the unused upper bits
                               [31: Maximum Link Width] are RsvdZ.
                            */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G4SRDPMSTS_SB_FBLP_STRUCT;

/* G4LANEEQCTL_0_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0xabc)                                                           */
/*      SPRB0 (0xabc)                                                           */
/*      SPRHBM (0xabc)                                                          */
/*      SPRC0 (0xabc)                                                           */
/*      SPRMCC (0xabc)                                                          */
/*      SPRUCC (0xabc)                                                          */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* 16.0 GT/s Lane Equalization Control Register
*/


#define G4LANEEQCTL_0_SB_FBLP_REG 0x2C000ABC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT8 dptp : 4;

                            /* Bits[3:0], Access Type=RW/L, default=None*/

                            /*
                               Transmitter Preset used for 16.0 GT/s
                               equalization by this Port when the Port is
                               operating as a Downstream Port. This field is
                               ignored when the Port is operating as an
                               Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in PCIe Spec.
                               Section 4.2.3.2. For an Upstream Port if
                               Crosslink Supported is 0b, this field is RsvdP.
                               Otherwise, this field is HwInit. The default
                               value is 1111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT8 uptp : 4;

                            /* Bits[7:4], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Transmit Preset value sent or
                               received during Link Equalization. Field usage
                               varies, see PCIe Spec. for details. See PCIe
                               Spec. Sections 4.2.3 and Chapter 9 for details.
                               The field encodings are defined in PCIe Spec.
                               Section 4.2.3.2 as well. The default value is
                               1111b. Note: Lock Key bit is located in the
                               Personality Lock Key Control Register .
                            */

  } Bits;
  UINT8 Data;

} G4LANEEQCTL_0_SB_FBLP_STRUCT;

/* G4LANEEQCTL_1_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0xabd)                                                           */
/*      SPRB0 (0xabd)                                                           */
/*      SPRHBM (0xabd)                                                          */
/*      SPRC0 (0xabd)                                                           */
/*      SPRMCC (0xabd)                                                          */
/*      SPRUCC (0xabd)                                                          */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* 16.0 GT/s Lane Equalization Control Register
*/


#define G4LANEEQCTL_1_SB_FBLP_REG 0x2C000ABD

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT8 dptp : 4;

                            /* Bits[3:0], Access Type=RW/L, default=None*/

                            /*
                               Transmitter Preset used for 16.0 GT/s
                               equalization by this Port when the Port is
                               operating as a Downstream Port. This field is
                               ignored when the Port is operating as an
                               Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in PCIe Spec.
                               Section 4.2.3.2. For an Upstream Port if
                               Crosslink Supported is 0b, this field is RsvdP.
                               Otherwise, this field is HwInit. The default
                               value is 1111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT8 uptp : 4;

                            /* Bits[7:4], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Transmit Preset value sent or
                               received during Link Equalization. Field usage
                               varies, see PCIe Spec. for details. See PCIe
                               Spec. Sections 4.2.3 and Chapter 9 for details.
                               The field encodings are defined in PCIe Spec.
                               Section 4.2.3.2 as well. The default value is
                               1111b. Note: Lock Key bit is located in the
                               Personality Lock Key Control Register .
                            */

  } Bits;
  UINT8 Data;

} G4LANEEQCTL_1_SB_FBLP_STRUCT;

/* G4LANEEQCTL_2_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0xabe)                                                           */
/*      SPRB0 (0xabe)                                                           */
/*      SPRHBM (0xabe)                                                          */
/*      SPRC0 (0xabe)                                                           */
/*      SPRMCC (0xabe)                                                          */
/*      SPRUCC (0xabe)                                                          */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* 16.0 GT/s Lane Equalization Control Register
*/


#define G4LANEEQCTL_2_SB_FBLP_REG 0x2C000ABE

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT8 dptp : 4;

                            /* Bits[3:0], Access Type=RW/L, default=None*/

                            /*
                               Transmitter Preset used for 16.0 GT/s
                               equalization by this Port when the Port is
                               operating as a Downstream Port. This field is
                               ignored when the Port is operating as an
                               Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in PCIe Spec.
                               Section 4.2.3.2. For an Upstream Port if
                               Crosslink Supported is 0b, this field is RsvdP.
                               Otherwise, this field is HwInit. The default
                               value is 1111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT8 uptp : 4;

                            /* Bits[7:4], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Transmit Preset value sent or
                               received during Link Equalization. Field usage
                               varies, see PCIe Spec. for details. See PCIe
                               Spec. Sections 4.2.3 and Chapter 9 for details.
                               The field encodings are defined in PCIe Spec.
                               Section 4.2.3.2 as well. The default value is
                               1111b. Note: Lock Key bit is located in the
                               Personality Lock Key Control Register .
                            */

  } Bits;
  UINT8 Data;

} G4LANEEQCTL_2_SB_FBLP_STRUCT;

/* G4LANEEQCTL_3_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0xabf)                                                           */
/*      SPRB0 (0xabf)                                                           */
/*      SPRHBM (0xabf)                                                          */
/*      SPRC0 (0xabf)                                                           */
/*      SPRMCC (0xabf)                                                          */
/*      SPRUCC (0xabf)                                                          */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* 16.0 GT/s Lane Equalization Control Register
*/


#define G4LANEEQCTL_3_SB_FBLP_REG 0x2C000ABF

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT8 dptp : 4;

                            /* Bits[3:0], Access Type=RW/L, default=None*/

                            /*
                               Transmitter Preset used for 16.0 GT/s
                               equalization by this Port when the Port is
                               operating as a Downstream Port. This field is
                               ignored when the Port is operating as an
                               Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in PCIe Spec.
                               Section 4.2.3.2. For an Upstream Port if
                               Crosslink Supported is 0b, this field is RsvdP.
                               Otherwise, this field is HwInit. The default
                               value is 1111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT8 uptp : 4;

                            /* Bits[7:4], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Transmit Preset value sent or
                               received during Link Equalization. Field usage
                               varies, see PCIe Spec. for details. See PCIe
                               Spec. Sections 4.2.3 and Chapter 9 for details.
                               The field encodings are defined in PCIe Spec.
                               Section 4.2.3.2 as well. The default value is
                               1111b. Note: Lock Key bit is located in the
                               Personality Lock Key Control Register .
                            */

  } Bits;
  UINT8 Data;

} G4LANEEQCTL_3_SB_FBLP_STRUCT;

/* G4LANEEQCTL_4_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0xac0)                                                           */
/*      SPRB0 (0xac0)                                                           */
/*      SPRHBM (0xac0)                                                          */
/*      SPRC0 (0xac0)                                                           */
/*      SPRMCC (0xac0)                                                          */
/*      SPRUCC (0xac0)                                                          */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* 16.0 GT/s Lane Equalization Control Register
*/


#define G4LANEEQCTL_4_SB_FBLP_REG 0x2C000AC0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT8 dptp : 4;

                            /* Bits[3:0], Access Type=RW/L, default=None*/

                            /*
                               Transmitter Preset used for 16.0 GT/s
                               equalization by this Port when the Port is
                               operating as a Downstream Port. This field is
                               ignored when the Port is operating as an
                               Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in PCIe Spec.
                               Section 4.2.3.2. For an Upstream Port if
                               Crosslink Supported is 0b, this field is RsvdP.
                               Otherwise, this field is HwInit. The default
                               value is 1111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT8 uptp : 4;

                            /* Bits[7:4], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Transmit Preset value sent or
                               received during Link Equalization. Field usage
                               varies, see PCIe Spec. for details. See PCIe
                               Spec. Sections 4.2.3 and Chapter 9 for details.
                               The field encodings are defined in PCIe Spec.
                               Section 4.2.3.2 as well. The default value is
                               1111b. Note: Lock Key bit is located in the
                               Personality Lock Key Control Register .
                            */

  } Bits;
  UINT8 Data;

} G4LANEEQCTL_4_SB_FBLP_STRUCT;

/* G4LANEEQCTL_5_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0xac1)                                                           */
/*      SPRB0 (0xac1)                                                           */
/*      SPRHBM (0xac1)                                                          */
/*      SPRC0 (0xac1)                                                           */
/*      SPRMCC (0xac1)                                                          */
/*      SPRUCC (0xac1)                                                          */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* 16.0 GT/s Lane Equalization Control Register
*/


#define G4LANEEQCTL_5_SB_FBLP_REG 0x2C000AC1

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT8 dptp : 4;

                            /* Bits[3:0], Access Type=RW/L, default=None*/

                            /*
                               Transmitter Preset used for 16.0 GT/s
                               equalization by this Port when the Port is
                               operating as a Downstream Port. This field is
                               ignored when the Port is operating as an
                               Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in PCIe Spec.
                               Section 4.2.3.2. For an Upstream Port if
                               Crosslink Supported is 0b, this field is RsvdP.
                               Otherwise, this field is HwInit. The default
                               value is 1111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT8 uptp : 4;

                            /* Bits[7:4], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Transmit Preset value sent or
                               received during Link Equalization. Field usage
                               varies, see PCIe Spec. for details. See PCIe
                               Spec. Sections 4.2.3 and Chapter 9 for details.
                               The field encodings are defined in PCIe Spec.
                               Section 4.2.3.2 as well. The default value is
                               1111b. Note: Lock Key bit is located in the
                               Personality Lock Key Control Register .
                            */

  } Bits;
  UINT8 Data;

} G4LANEEQCTL_5_SB_FBLP_STRUCT;

/* G4LANEEQCTL_6_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0xac2)                                                           */
/*      SPRB0 (0xac2)                                                           */
/*      SPRHBM (0xac2)                                                          */
/*      SPRC0 (0xac2)                                                           */
/*      SPRMCC (0xac2)                                                          */
/*      SPRUCC (0xac2)                                                          */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* 16.0 GT/s Lane Equalization Control Register
*/


#define G4LANEEQCTL_6_SB_FBLP_REG 0x2C000AC2

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT8 dptp : 4;

                            /* Bits[3:0], Access Type=RW/L, default=None*/

                            /*
                               Transmitter Preset used for 16.0 GT/s
                               equalization by this Port when the Port is
                               operating as a Downstream Port. This field is
                               ignored when the Port is operating as an
                               Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in PCIe Spec.
                               Section 4.2.3.2. For an Upstream Port if
                               Crosslink Supported is 0b, this field is RsvdP.
                               Otherwise, this field is HwInit. The default
                               value is 1111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT8 uptp : 4;

                            /* Bits[7:4], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Transmit Preset value sent or
                               received during Link Equalization. Field usage
                               varies, see PCIe Spec. for details. See PCIe
                               Spec. Sections 4.2.3 and Chapter 9 for details.
                               The field encodings are defined in PCIe Spec.
                               Section 4.2.3.2 as well. The default value is
                               1111b. Note: Lock Key bit is located in the
                               Personality Lock Key Control Register .
                            */

  } Bits;
  UINT8 Data;

} G4LANEEQCTL_6_SB_FBLP_STRUCT;

/* G4LANEEQCTL_7_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0xac3)                                                           */
/*      SPRB0 (0xac3)                                                           */
/*      SPRHBM (0xac3)                                                          */
/*      SPRC0 (0xac3)                                                           */
/*      SPRMCC (0xac3)                                                          */
/*      SPRUCC (0xac3)                                                          */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* 16.0 GT/s Lane Equalization Control Register
*/


#define G4LANEEQCTL_7_SB_FBLP_REG 0x2C000AC3

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT8 dptp : 4;

                            /* Bits[3:0], Access Type=RW/L, default=None*/

                            /*
                               Transmitter Preset used for 16.0 GT/s
                               equalization by this Port when the Port is
                               operating as a Downstream Port. This field is
                               ignored when the Port is operating as an
                               Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in PCIe Spec.
                               Section 4.2.3.2. For an Upstream Port if
                               Crosslink Supported is 0b, this field is RsvdP.
                               Otherwise, this field is HwInit. The default
                               value is 1111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT8 uptp : 4;

                            /* Bits[7:4], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Transmit Preset value sent or
                               received during Link Equalization. Field usage
                               varies, see PCIe Spec. for details. See PCIe
                               Spec. Sections 4.2.3 and Chapter 9 for details.
                               The field encodings are defined in PCIe Spec.
                               Section 4.2.3.2 as well. The default value is
                               1111b. Note: Lock Key bit is located in the
                               Personality Lock Key Control Register .
                            */

  } Bits;
  UINT8 Data;

} G4LANEEQCTL_7_SB_FBLP_STRUCT;

/* G4LANEEQCTL_8_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0xac4)                                                           */
/*      SPRB0 (0xac4)                                                           */
/*      SPRHBM (0xac4)                                                          */
/*      SPRC0 (0xac4)                                                           */
/*      SPRMCC (0xac4)                                                          */
/*      SPRUCC (0xac4)                                                          */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* 16.0 GT/s Lane Equalization Control Register
*/


#define G4LANEEQCTL_8_SB_FBLP_REG 0x2C000AC4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT8 dptp : 4;

                            /* Bits[3:0], Access Type=RW/L, default=None*/

                            /*
                               Transmitter Preset used for 16.0 GT/s
                               equalization by this Port when the Port is
                               operating as a Downstream Port. This field is
                               ignored when the Port is operating as an
                               Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in PCIe Spec.
                               Section 4.2.3.2. For an Upstream Port if
                               Crosslink Supported is 0b, this field is RsvdP.
                               Otherwise, this field is HwInit. The default
                               value is 1111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT8 uptp : 4;

                            /* Bits[7:4], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Transmit Preset value sent or
                               received during Link Equalization. Field usage
                               varies, see PCIe Spec. for details. See PCIe
                               Spec. Sections 4.2.3 and Chapter 9 for details.
                               The field encodings are defined in PCIe Spec.
                               Section 4.2.3.2 as well. The default value is
                               1111b. Note: Lock Key bit is located in the
                               Personality Lock Key Control Register .
                            */

  } Bits;
  UINT8 Data;

} G4LANEEQCTL_8_SB_FBLP_STRUCT;

/* G4LANEEQCTL_9_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0xac5)                                                           */
/*      SPRB0 (0xac5)                                                           */
/*      SPRHBM (0xac5)                                                          */
/*      SPRC0 (0xac5)                                                           */
/*      SPRMCC (0xac5)                                                          */
/*      SPRUCC (0xac5)                                                          */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* 16.0 GT/s Lane Equalization Control Register
*/


#define G4LANEEQCTL_9_SB_FBLP_REG 0x2C000AC5

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT8 dptp : 4;

                            /* Bits[3:0], Access Type=RW/L, default=None*/

                            /*
                               Transmitter Preset used for 16.0 GT/s
                               equalization by this Port when the Port is
                               operating as a Downstream Port. This field is
                               ignored when the Port is operating as an
                               Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in PCIe Spec.
                               Section 4.2.3.2. For an Upstream Port if
                               Crosslink Supported is 0b, this field is RsvdP.
                               Otherwise, this field is HwInit. The default
                               value is 1111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT8 uptp : 4;

                            /* Bits[7:4], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Transmit Preset value sent or
                               received during Link Equalization. Field usage
                               varies, see PCIe Spec. for details. See PCIe
                               Spec. Sections 4.2.3 and Chapter 9 for details.
                               The field encodings are defined in PCIe Spec.
                               Section 4.2.3.2 as well. The default value is
                               1111b. Note: Lock Key bit is located in the
                               Personality Lock Key Control Register .
                            */

  } Bits;
  UINT8 Data;

} G4LANEEQCTL_9_SB_FBLP_STRUCT;

/* G4LANEEQCTL_10_SB_FBLP_REG supported on:                                     */
/*      SPRA0 (0xac6)                                                           */
/*      SPRB0 (0xac6)                                                           */
/*      SPRHBM (0xac6)                                                          */
/*      SPRC0 (0xac6)                                                           */
/*      SPRMCC (0xac6)                                                          */
/*      SPRUCC (0xac6)                                                          */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* 16.0 GT/s Lane Equalization Control Register
*/


#define G4LANEEQCTL_10_SB_FBLP_REG 0x2C000AC6

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT8 dptp : 4;

                            /* Bits[3:0], Access Type=RW/L, default=None*/

                            /*
                               Transmitter Preset used for 16.0 GT/s
                               equalization by this Port when the Port is
                               operating as a Downstream Port. This field is
                               ignored when the Port is operating as an
                               Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in PCIe Spec.
                               Section 4.2.3.2. For an Upstream Port if
                               Crosslink Supported is 0b, this field is RsvdP.
                               Otherwise, this field is HwInit. The default
                               value is 1111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT8 uptp : 4;

                            /* Bits[7:4], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Transmit Preset value sent or
                               received during Link Equalization. Field usage
                               varies, see PCIe Spec. for details. See PCIe
                               Spec. Sections 4.2.3 and Chapter 9 for details.
                               The field encodings are defined in PCIe Spec.
                               Section 4.2.3.2 as well. The default value is
                               1111b. Note: Lock Key bit is located in the
                               Personality Lock Key Control Register .
                            */

  } Bits;
  UINT8 Data;

} G4LANEEQCTL_10_SB_FBLP_STRUCT;

/* G4LANEEQCTL_11_SB_FBLP_REG supported on:                                     */
/*      SPRA0 (0xac7)                                                           */
/*      SPRB0 (0xac7)                                                           */
/*      SPRHBM (0xac7)                                                          */
/*      SPRC0 (0xac7)                                                           */
/*      SPRMCC (0xac7)                                                          */
/*      SPRUCC (0xac7)                                                          */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* 16.0 GT/s Lane Equalization Control Register
*/


#define G4LANEEQCTL_11_SB_FBLP_REG 0x2C000AC7

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT8 dptp : 4;

                            /* Bits[3:0], Access Type=RW/L, default=None*/

                            /*
                               Transmitter Preset used for 16.0 GT/s
                               equalization by this Port when the Port is
                               operating as a Downstream Port. This field is
                               ignored when the Port is operating as an
                               Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in PCIe Spec.
                               Section 4.2.3.2. For an Upstream Port if
                               Crosslink Supported is 0b, this field is RsvdP.
                               Otherwise, this field is HwInit. The default
                               value is 1111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT8 uptp : 4;

                            /* Bits[7:4], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Transmit Preset value sent or
                               received during Link Equalization. Field usage
                               varies, see PCIe Spec. for details. See PCIe
                               Spec. Sections 4.2.3 and Chapter 9 for details.
                               The field encodings are defined in PCIe Spec.
                               Section 4.2.3.2 as well. The default value is
                               1111b. Note: Lock Key bit is located in the
                               Personality Lock Key Control Register .
                            */

  } Bits;
  UINT8 Data;

} G4LANEEQCTL_11_SB_FBLP_STRUCT;

/* G4LANEEQCTL_12_SB_FBLP_REG supported on:                                     */
/*      SPRA0 (0xac8)                                                           */
/*      SPRB0 (0xac8)                                                           */
/*      SPRHBM (0xac8)                                                          */
/*      SPRC0 (0xac8)                                                           */
/*      SPRMCC (0xac8)                                                          */
/*      SPRUCC (0xac8)                                                          */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* 16.0 GT/s Lane Equalization Control Register
*/


#define G4LANEEQCTL_12_SB_FBLP_REG 0x2C000AC8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT8 dptp : 4;

                            /* Bits[3:0], Access Type=RW/L, default=None*/

                            /*
                               Transmitter Preset used for 16.0 GT/s
                               equalization by this Port when the Port is
                               operating as a Downstream Port. This field is
                               ignored when the Port is operating as an
                               Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in PCIe Spec.
                               Section 4.2.3.2. For an Upstream Port if
                               Crosslink Supported is 0b, this field is RsvdP.
                               Otherwise, this field is HwInit. The default
                               value is 1111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT8 uptp : 4;

                            /* Bits[7:4], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Transmit Preset value sent or
                               received during Link Equalization. Field usage
                               varies, see PCIe Spec. for details. See PCIe
                               Spec. Sections 4.2.3 and Chapter 9 for details.
                               The field encodings are defined in PCIe Spec.
                               Section 4.2.3.2 as well. The default value is
                               1111b. Note: Lock Key bit is located in the
                               Personality Lock Key Control Register .
                            */

  } Bits;
  UINT8 Data;

} G4LANEEQCTL_12_SB_FBLP_STRUCT;

/* G4LANEEQCTL_13_SB_FBLP_REG supported on:                                     */
/*      SPRA0 (0xac9)                                                           */
/*      SPRB0 (0xac9)                                                           */
/*      SPRHBM (0xac9)                                                          */
/*      SPRC0 (0xac9)                                                           */
/*      SPRMCC (0xac9)                                                          */
/*      SPRUCC (0xac9)                                                          */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* 16.0 GT/s Lane Equalization Control Register
*/


#define G4LANEEQCTL_13_SB_FBLP_REG 0x2C000AC9

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT8 dptp : 4;

                            /* Bits[3:0], Access Type=RW/L, default=None*/

                            /*
                               Transmitter Preset used for 16.0 GT/s
                               equalization by this Port when the Port is
                               operating as a Downstream Port. This field is
                               ignored when the Port is operating as an
                               Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in PCIe Spec.
                               Section 4.2.3.2. For an Upstream Port if
                               Crosslink Supported is 0b, this field is RsvdP.
                               Otherwise, this field is HwInit. The default
                               value is 1111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT8 uptp : 4;

                            /* Bits[7:4], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Transmit Preset value sent or
                               received during Link Equalization. Field usage
                               varies, see PCIe Spec. for details. See PCIe
                               Spec. Sections 4.2.3 and Chapter 9 for details.
                               The field encodings are defined in PCIe Spec.
                               Section 4.2.3.2 as well. The default value is
                               1111b. Note: Lock Key bit is located in the
                               Personality Lock Key Control Register .
                            */

  } Bits;
  UINT8 Data;

} G4LANEEQCTL_13_SB_FBLP_STRUCT;

/* G4LANEEQCTL_14_SB_FBLP_REG supported on:                                     */
/*      SPRA0 (0xaca)                                                           */
/*      SPRB0 (0xaca)                                                           */
/*      SPRHBM (0xaca)                                                          */
/*      SPRC0 (0xaca)                                                           */
/*      SPRMCC (0xaca)                                                          */
/*      SPRUCC (0xaca)                                                          */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* 16.0 GT/s Lane Equalization Control Register
*/


#define G4LANEEQCTL_14_SB_FBLP_REG 0x2C000ACA

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT8 dptp : 4;

                            /* Bits[3:0], Access Type=RW/L, default=None*/

                            /*
                               Transmitter Preset used for 16.0 GT/s
                               equalization by this Port when the Port is
                               operating as a Downstream Port. This field is
                               ignored when the Port is operating as an
                               Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in PCIe Spec.
                               Section 4.2.3.2. For an Upstream Port if
                               Crosslink Supported is 0b, this field is RsvdP.
                               Otherwise, this field is HwInit. The default
                               value is 1111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT8 uptp : 4;

                            /* Bits[7:4], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Transmit Preset value sent or
                               received during Link Equalization. Field usage
                               varies, see PCIe Spec. for details. See PCIe
                               Spec. Sections 4.2.3 and Chapter 9 for details.
                               The field encodings are defined in PCIe Spec.
                               Section 4.2.3.2 as well. The default value is
                               1111b. Note: Lock Key bit is located in the
                               Personality Lock Key Control Register .
                            */

  } Bits;
  UINT8 Data;

} G4LANEEQCTL_14_SB_FBLP_STRUCT;

/* G4LANEEQCTL_15_SB_FBLP_REG supported on:                                     */
/*      SPRA0 (0xacb)                                                           */
/*      SPRB0 (0xacb)                                                           */
/*      SPRHBM (0xacb)                                                          */
/*      SPRC0 (0xacb)                                                           */
/*      SPRMCC (0xacb)                                                          */
/*      SPRUCC (0xacb)                                                          */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* 16.0 GT/s Lane Equalization Control Register
*/


#define G4LANEEQCTL_15_SB_FBLP_REG 0x2C000ACB

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT8 dptp : 4;

                            /* Bits[3:0], Access Type=RW/L, default=None*/

                            /*
                               Transmitter Preset used for 16.0 GT/s
                               equalization by this Port when the Port is
                               operating as a Downstream Port. This field is
                               ignored when the Port is operating as an
                               Upstream Port. See Chapter 9 for details. The
                               field encodings are defined in PCIe Spec.
                               Section 4.2.3.2. For an Upstream Port if
                               Crosslink Supported is 0b, this field is RsvdP.
                               Otherwise, this field is HwInit. The default
                               value is 1111b. Note: Lock Key bit is located in
                               the Personality Lock Key Control Register .
                            */
    UINT8 uptp : 4;

                            /* Bits[7:4], Access Type=RW/L, default=None*/

                            /*
                               Field contains the Transmit Preset value sent or
                               received during Link Equalization. Field usage
                               varies, see PCIe Spec. for details. See PCIe
                               Spec. Sections 4.2.3 and Chapter 9 for details.
                               The field encodings are defined in PCIe Spec.
                               Section 4.2.3.2 as well. The default value is
                               1111b. Note: Lock Key bit is located in the
                               Personality Lock Key Control Register .
                            */

  } Bits;
  UINT8 Data;

} G4LANEEQCTL_15_SB_FBLP_STRUCT;

/* G5CAP_SB_FBLP_REG supported on:                                              */
/*      SPRA0 (0x20000ae4)                                                      */
/*      SPRB0 (0x20000ae4)                                                      */
/*      SPRHBM (0x20000ae4)                                                     */
/*      SPRC0 (0x20000ae4)                                                      */
/*      SPRMCC (0x20000ae4)                                                     */
/*      SPRUCC (0x20000ae4)                                                     */
/* Register default value on SPRA0: 0x00000101                                  */
/* Register default value on SPRB0: 0x00000101                                  */
/* Register default value on SPRHBM: 0x00000101                                 */
/* Register default value on SPRC0: 0x00000101                                  */
/* Register default value on SPRMCC: 0x00000101                                 */
/* Register default value on SPRUCC: 0x00000101                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* 16.0 GT/s Capabilities
*/


#define G5CAP_SB_FBLP_REG 0x2C020AE4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 eqbypsup : 1;

                            /* Bits[0:0], Access Type=RW/L, default=0x00000001*/

                            /*
                               When Set, this Port supports controlling whether
                               the Port negotiates to skip equalization for
                               speeds other than the highest common supported
                               speed. See Section Section 4.2.3 Link
                               Equalization Procedure for 8.0 GT/s and Higher
                               Data Rates for details. Must be 1b for Ports
                               that support 32.0 GT/s or higher data rates.
                            */
    UINT32 noeqsup : 1;

                            /* Bits[1:1], Access Type=RW/L, default=0x00000000*/

                            /*
                               When Set, this Port supports controlling whether
                               or not Equalization is needed.
                            */
    UINT32 rsvd : 6;

                            /* Bits[7:2], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 modtsusgmd0sup : 1;

                            /* Bits[8:8], Access Type=RO, default=0x00000001*/

                            /*
                               This bit indicates that this Port supports PCI
                               Express ( Modified TS Usage 000b). This bit must
                               be 1b.
                            */
    UINT32 modtsusgmd1sup : 1;

                            /* Bits[9:9], Access Type=RW/L, default=0x00000000*/

                            /*
                               This bit indicates that this Port supports
                               sending and recieving vendor specific Training
                               Set Messages ( Modified TS Usage 001b). See
                               Section 4.2.4.2 Alternate Protocol Negotiation
                               for details.
                            */
    UINT32 modtsusgmd2sup : 1;

                            /* Bits[10:10], Access Type=RW/L, default=0x00000000*/

                            /*
                               This bit indicates that this Port supports
                               negotiating to use alternate protocols (
                               Modified TS Usage 010b). See Section 4.2.4.2
                               Alternate Protocol Negotiation for details.
                            */
    UINT32 modtsusgmdrsvrvd : 5;

                            /* Bits[15:11], Access Type=RO, default=0x00000000*/

                            /*
                               Reserved bits for future Usage Modes defined by
                               the PCISIG. Must be 0 0000b.
                            */
    UINT32 rsvd_16 : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G5CAP_SB_FBLP_STRUCT;

/* G5CTL_SB_FBLP_REG supported on:                                              */
/*      SPRA0 (0x20000ae8)                                                      */
/*      SPRB0 (0x20000ae8)                                                      */
/*      SPRHBM (0x20000ae8)                                                     */
/*      SPRC0 (0x20000ae8)                                                      */
/*      SPRMCC (0x20000ae8)                                                     */
/*      SPRUCC (0x20000ae8)                                                     */
/* Register default value on SPRA0: 0x00000001                                  */
/* Register default value on SPRB0: 0x00000001                                  */
/* Register default value on SPRHBM: 0x00000001                                 */
/* Register default value on SPRC0: 0x00000001                                  */
/* Register default value on SPRMCC: 0x00000001                                 */
/* Register default value on SPRUCC: 0x00000001                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* 16.0 GT/s Control
*/


#define G5CTL_SB_FBLP_REG 0x2C020AE8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 eqbypdis : 1;

                            /* Bits[0:0], Access Type=RW/V/P, default=0x00000001*/

                            /* inserted reg from XML modification tool */
    UINT32 noeqdis : 1;

                            /* Bits[1:1], Access Type=RW/V/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 rsvd : 6;

                            /* Bits[7:2], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 modtsusgsel : 3;

                            /* Bits[10:8], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 rsvd_11 : 21;

                            /* Bits[31:11], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G5CTL_SB_FBLP_STRUCT;

/* G5STS_SB_FBLP_REG supported on:                                              */
/*      SPRA0 (0x20000aec)                                                      */
/*      SPRB0 (0x20000aec)                                                      */
/*      SPRHBM (0x20000aec)                                                     */
/*      SPRC0 (0x20000aec)                                                      */
/*      SPRMCC (0x20000aec)                                                     */
/*      SPRUCC (0x20000aec)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* 16.0 GT/s Status
*/


#define G5STS_SB_FBLP_REG 0x2C020AEC

#if defined(SPRA0_HOST)
typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 eq32cmplt : 1;

                            /* Bits[0:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               When Set, this bit indicates that the 16.0 GT/s
                               Transmitter Equalization procedure has
                               completed. Details of the Transmitter
                               Equalization process and when this bit needs to
                               be set to 1b is provided in PCIe Spec. Section
                               4.2.6.4.2. The default value of this bit is 0b.
                               For a Multi-Function Upstream Port, this bit
                               must be implemented in Function 0 and RsvdZ in
                               other Functions.
                            */
    UINT32 eq32ph1succ : 1;

                            /* Bits[1:1], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               When set to 1b, this bit indicates that Phase 1
                               of the 16.0 GT/s Transmitter Equalization
                               procedure has successfully completed. Details of
                               the Transmitter Equalization process and when
                               this bit needs to be set to 1b is provided in
                               PCIe Spec. Section 4.2.6.4.2. The default value
                               of this bit is 0b. For a Multi-Function Upstream
                               Port, this bit must be implemented in Function 0
                               and RsvdZ in other Functions.
                            */
    UINT32 eq32ph2succ : 1;

                            /* Bits[2:2], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               When set to 1b, this bit indicates that Phase 2
                               of the 16.0 GT/s Transmitter Equalization
                               procedure has successfully completed. Details of
                               the Transmitter Equalization process and when
                               this bit needs to be set to 1b is provided in
                               PCIe Spec. Section 4.2.6.4.2. The default value
                               of this bit is 0b. For a Multi-Function Upstream
                               Port, this bit must be implemented in Function 0
                               and RsvdZ in other Functions.
                            */
    UINT32 eq32ph3succ : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               When set to 1b, this bit indicates that Phase 3
                               of the 16.0 GT/s Transmitter Equalization
                               procedure has successfully completed. Details of
                               the Transmitter Equalization process and when
                               this bit needs to be set to 1b is provided in
                               PCIe Spec. Section 4.2.6.4.2. The default value
                               of this bit is 0b. For a Multi-Function Upstream
                               Port, this bit must be implemented in Function 0
                               and RsvdZ in other Functions.
                            */
    UINT32 linkeqreq32 : 1;

                            /* Bits[4:4], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               This bit is Set by hardware to request the 16.0
                               GT/s Link equalization process to be performed
                               on the Link. Refer to PCIe Spec. Sections 4.2.3
                               and 4.2.6.4.2 for details. The default value of
                               this bit is 0b. For a Multi-Function Upstream
                               Port, this bit must be implemented in Function 0
                               and RsvdZ in other Functions.
                            */
    UINT32 modtsrcvd : 1;

                            /* Bits[5:5], Access Type=RO/V, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 rcvdelbctl : 2;

                            /* Bits[7:6], Access Type=RO/V, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 txprecon : 1;

                            /* Bits[8:8], Access Type=RO/V, default=0x00000000*/

                            /*
                               This field indicates whether the Receiver asked
                               this transmitter to enable Precoding. See
                               Section 4.2.2.5 Precoding . This bit is cleared
                               on DL_Down. Default is 0b.
                            */
    UINT32 txprecreq : 1;

                            /* Bits[9:9], Access Type=RO/V, default=0x00000000*/

                            /*
                               When Set, this Port will request the transmitter
                               to use Precoding by setting the Precoding
                               Request bit in the TS1s/TS2s it transmits prior
                               to entry to Recovery.Speed (see Section 4.2.2.5
                               Precoding). Default is Implementation Specific.
                            */
    UINT32 rsvd : 22;

                            /* Bits[31:10], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G5STS_SB_FBLP_SPRA0_STRUCT;
#endif /* (SPRA0_HOST) */

#if defined(SPRB0_HOST) || defined(SPRHBM_HOST) || defined(SPRC0_HOST) || defined(SPRMCC_HOST) || defined(SPRUCC_HOST)
typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 eq32cmplt : 1;

                            /* Bits[0:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               When Set, this bit indicates that the 16.0 GT/s
                               Transmitter Equalization procedure has
                               completed. Details of the Transmitter
                               Equalization process and when this bit needs to
                               be set to 1b is provided in PCIe Spec. Section
                               4.2.6.4.2. The default value of this bit is 0b.
                               For a Multi-Function Upstream Port, this bit
                               must be implemented in Function 0 and RsvdZ in
                               other Functions.
                            */
    UINT32 eq32ph1succ : 1;

                            /* Bits[1:1], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               When set to 1b, this bit indicates that Phase 1
                               of the 16.0 GT/s Transmitter Equalization
                               procedure has successfully completed. Details of
                               the Transmitter Equalization process and when
                               this bit needs to be set to 1b is provided in
                               PCIe Spec. Section 4.2.6.4.2. The default value
                               of this bit is 0b. For a Multi-Function Upstream
                               Port, this bit must be implemented in Function 0
                               and RsvdZ in other Functions.
                            */
    UINT32 eq32ph2succ : 1;

                            /* Bits[2:2], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               When set to 1b, this bit indicates that Phase 2
                               of the 16.0 GT/s Transmitter Equalization
                               procedure has successfully completed. Details of
                               the Transmitter Equalization process and when
                               this bit needs to be set to 1b is provided in
                               PCIe Spec. Section 4.2.6.4.2. The default value
                               of this bit is 0b. For a Multi-Function Upstream
                               Port, this bit must be implemented in Function 0
                               and RsvdZ in other Functions.
                            */
    UINT32 eq32ph3succ : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               When set to 1b, this bit indicates that Phase 3
                               of the 16.0 GT/s Transmitter Equalization
                               procedure has successfully completed. Details of
                               the Transmitter Equalization process and when
                               this bit needs to be set to 1b is provided in
                               PCIe Spec. Section 4.2.6.4.2. The default value
                               of this bit is 0b. For a Multi-Function Upstream
                               Port, this bit must be implemented in Function 0
                               and RsvdZ in other Functions.
                            */
    UINT32 linkeqreq32 : 1;

                            /* Bits[4:4], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               This bit is Set by hardware to request the 16.0
                               GT/s Link equalization process to be performed
                               on the Link. Refer to PCIe Spec. Sections 4.2.3
                               and 4.2.6.4.2 for details. The default value of
                               this bit is 0b. For a Multi-Function Upstream
                               Port, this bit must be implemented in Function 0
                               and RsvdZ in other Functions.
                            */
    UINT32 modtsrcvd : 1;

                            /* Bits[5:5], Access Type=RO/V, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 rcvdelbctl : 2;

                            /* Bits[7:6], Access Type=RO/V, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 txprecon : 1;

                            /* Bits[8:8], Access Type=RO/V, default=0x00000000*/

                            /*
                               This field indicates whether the Receiver asked
                               this transmitter to enable Precoding. See
                               Section 4.2.2.5 Precoding . This bit is cleared
                               on DL_Down. Default is 0b.
                            */
    UINT32 txprecreq : 1;

                            /* Bits[9:9], Access Type=RO/V, default=0x00000000*/

                            /*
                               When Set, this Port will request the transmitter
                               to use Precoding by setting the Precoding
                               Request bit in the TS1s/TS2s it transmits prior
                               to entry to Recovery.Speed (see Section 4.2.2.5
                               Precoding). Default is Implementation Specific.
                            */
    UINT32 neqnr : 1;

                            /* Bits[10:10], Access Type=RO/V, default=0x00000000*/

                            /*
                               When Set, this Port either received a Modified
                               TS1/TS2 with the No Equalization Needed bit Set
                               or received a non-modified TS1/TS2 was received
                               with the No Equalization Needed encoding (also
                               reported in the Received Enhanced Link Behavior
                               Control field).
                            */
    UINT32 rsvd : 21;

                            /* Bits[31:11], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G5STS_SB_FBLP_SPRB0_SPRHBM_SPRC0_SPRMCC_SPRUCC_STRUCT;
#endif /* (SPRB0_HOST) || defined(SPRHBM_HOST) || defined(SPRC0_HOST) || defined(SPRMCC_HOST) || defined(SPRUCC_HOST) */

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 eq32cmplt : 1;

                            /* Bits[0:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               When Set, this bit indicates that the 16.0 GT/s
                               Transmitter Equalization procedure has
                               completed. Details of the Transmitter
                               Equalization process and when this bit needs to
                               be set to 1b is provided in PCIe Spec. Section
                               4.2.6.4.2. The default value of this bit is 0b.
                               For a Multi-Function Upstream Port, this bit
                               must be implemented in Function 0 and RsvdZ in
                               other Functions.
                            */
    UINT32 eq32ph1succ : 1;

                            /* Bits[1:1], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               When set to 1b, this bit indicates that Phase 1
                               of the 16.0 GT/s Transmitter Equalization
                               procedure has successfully completed. Details of
                               the Transmitter Equalization process and when
                               this bit needs to be set to 1b is provided in
                               PCIe Spec. Section 4.2.6.4.2. The default value
                               of this bit is 0b. For a Multi-Function Upstream
                               Port, this bit must be implemented in Function 0
                               and RsvdZ in other Functions.
                            */
    UINT32 eq32ph2succ : 1;

                            /* Bits[2:2], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               When set to 1b, this bit indicates that Phase 2
                               of the 16.0 GT/s Transmitter Equalization
                               procedure has successfully completed. Details of
                               the Transmitter Equalization process and when
                               this bit needs to be set to 1b is provided in
                               PCIe Spec. Section 4.2.6.4.2. The default value
                               of this bit is 0b. For a Multi-Function Upstream
                               Port, this bit must be implemented in Function 0
                               and RsvdZ in other Functions.
                            */
    UINT32 eq32ph3succ : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               When set to 1b, this bit indicates that Phase 3
                               of the 16.0 GT/s Transmitter Equalization
                               procedure has successfully completed. Details of
                               the Transmitter Equalization process and when
                               this bit needs to be set to 1b is provided in
                               PCIe Spec. Section 4.2.6.4.2. The default value
                               of this bit is 0b. For a Multi-Function Upstream
                               Port, this bit must be implemented in Function 0
                               and RsvdZ in other Functions.
                            */
    UINT32 linkeqreq32 : 1;

                            /* Bits[4:4], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               This bit is Set by hardware to request the 16.0
                               GT/s Link equalization process to be performed
                               on the Link. Refer to PCIe Spec. Sections 4.2.3
                               and 4.2.6.4.2 for details. The default value of
                               this bit is 0b. For a Multi-Function Upstream
                               Port, this bit must be implemented in Function 0
                               and RsvdZ in other Functions.
                            */
    UINT32 modtsrcvd : 1;

                            /* Bits[5:5], Access Type=RO/V, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 rcvdelbctl : 2;

                            /* Bits[7:6], Access Type=RO/V, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 txprecon : 1;

                            /* Bits[8:8], Access Type=RO/V, default=0x00000000*/

                            /*
                               This field indicates whether the Receiver asked
                               this transmitter to enable Precoding. See
                               Section 4.2.2.5 Precoding . This bit is cleared
                               on DL_Down. Default is 0b.
                            */
    UINT32 txprecreq : 1;

                            /* Bits[9:9], Access Type=RO/V, default=0x00000000*/

                            /*
                               When Set, this Port will request the transmitter
                               to use Precoding by setting the Precoding
                               Request bit in the TS1s/TS2s it transmits prior
                               to entry to Recovery.Speed (see Section 4.2.2.5
                               Precoding). Default is Implementation Specific.
                            */
    UINT32 rsvd : 22;

                            /* Bits[31:10], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G5STS_SB_FBLP_STRUCT;

/* RCVDMODTSDATA1_SB_FBLP_REG supported on:                                     */
/*      SPRA0 (0x20000af0)                                                      */
/*      SPRB0 (0x20000af0)                                                      */
/*      SPRHBM (0x20000af0)                                                     */
/*      SPRC0 (0x20000af0)                                                      */
/*      SPRMCC (0x20000af0)                                                     */
/*      SPRUCC (0x20000af0)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* RCVDMODTSDATA1
*/


#define RCVDMODTSDATA1_SB_FBLP_REG 0x2C020AF0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 rcvdmtsusagemd : 3;

                            /* Bits[2:0], Access Type=RO/V, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 rcvdmtsinfo1 : 13;

                            /* Bits[15:3], Access Type=RO/V, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 rcvdmtsvid : 16;

                            /* Bits[31:16], Access Type=RO/V, default=0x00000000*/

                            /* inserted reg from XML modification tool */

  } Bits;
  UINT32 Data;

} RCVDMODTSDATA1_SB_FBLP_STRUCT;

/* RCVDMODTSDATA2_SB_FBLP_REG supported on:                                     */
/*      SPRA0 (0x20000af4)                                                      */
/*      SPRB0 (0x20000af4)                                                      */
/*      SPRHBM (0x20000af4)                                                     */
/*      SPRC0 (0x20000af4)                                                      */
/*      SPRMCC (0x20000af4)                                                     */
/*      SPRUCC (0x20000af4)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* RCVDMODTSDATA2
*/


#define RCVDMODTSDATA2_SB_FBLP_REG 0x2C020AF4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 rcvdmtsinfo2 : 24;

                            /* Bits[23:0], Access Type=RO/V, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 altprotnegsts : 2;

                            /* Bits[25:24], Access Type=RO/V, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 rsvd : 6;

                            /* Bits[31:26], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} RCVDMODTSDATA2_SB_FBLP_STRUCT;

/* TRNSMODTSDATA1_SB_FBLP_REG supported on:                                     */
/*      SPRA0 (0x20000af8)                                                      */
/*      SPRB0 (0x20000af8)                                                      */
/*      SPRHBM (0x20000af8)                                                     */
/*      SPRC0 (0x20000af8)                                                      */
/*      SPRMCC (0x20000af8)                                                     */
/*      SPRUCC (0x20000af8)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* TRNSMODTSDATA1
*/


#define TRNSMODTSDATA1_SB_FBLP_REG 0x2C020AF8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 trnsmtsusagemd : 3;

                            /* Bits[2:0], Access Type=RO/V, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 trnsmtsinfo1 : 13;

                            /* Bits[15:3], Access Type=RO/V, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 trnsmtsvid : 16;

                            /* Bits[31:16], Access Type=RO/V, default=0x00000000*/

                            /* inserted reg from XML modification tool */

  } Bits;
  UINT32 Data;

} TRNSMODTSDATA1_SB_FBLP_STRUCT;

/* TRNSMODTSDATA2_SB_FBLP_REG supported on:                                     */
/*      SPRA0 (0x20000afc)                                                      */
/*      SPRB0 (0x20000afc)                                                      */
/*      SPRHBM (0x20000afc)                                                     */
/*      SPRC0 (0x20000afc)                                                      */
/*      SPRMCC (0x20000afc)                                                     */
/*      SPRUCC (0x20000afc)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* TRNSMODTSDATA2
*/


#define TRNSMODTSDATA2_SB_FBLP_REG 0x2C020AFC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 trnsmtsinfo2 : 24;

                            /* Bits[23:0], Access Type=RO/V, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 altprotnegsts : 2;

                            /* Bits[25:24], Access Type=RO/V, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 rsvd : 6;

                            /* Bits[31:26], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} TRNSMODTSDATA2_SB_FBLP_STRUCT;

/* G5LANEEQCTL_0_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0xb00)                                                           */
/*      SPRB0 (0xb00)                                                           */
/*      SPRHBM (0xb00)                                                          */
/*      SPRC0 (0xb00)                                                           */
/*      SPRMCC (0xb00)                                                          */
/*      SPRUCC (0xb00)                                                          */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* 32.0 GT/s Lane Equalization Control Register
*/


#define G5LANEEQCTL_0_SB_FBLP_REG 0x2C000B00

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT8 dptp : 4;

                            /* Bits[3:0], Access Type=RW/V/L, default=None*/

                            /* inserted reg from XML modification tool */
    UINT8 uptp : 4;

                            /* Bits[7:4], Access Type=RW/V/L, default=None*/

                            /* inserted reg from XML modification tool */

  } Bits;
  UINT8 Data;

} G5LANEEQCTL_0_SB_FBLP_STRUCT;

/* G5LANEEQCTL_1_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0xb01)                                                           */
/*      SPRB0 (0xb01)                                                           */
/*      SPRHBM (0xb01)                                                          */
/*      SPRC0 (0xb01)                                                           */
/*      SPRMCC (0xb01)                                                          */
/*      SPRUCC (0xb01)                                                          */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* 32.0 GT/s Lane Equalization Control Register
*/


#define G5LANEEQCTL_1_SB_FBLP_REG 0x2C000B01

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT8 dptp : 4;

                            /* Bits[3:0], Access Type=RW/V/L, default=None*/

                            /* inserted reg from XML modification tool */
    UINT8 uptp : 4;

                            /* Bits[7:4], Access Type=RW/V/L, default=None*/

                            /* inserted reg from XML modification tool */

  } Bits;
  UINT8 Data;

} G5LANEEQCTL_1_SB_FBLP_STRUCT;

/* G5LANEEQCTL_2_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0xb02)                                                           */
/*      SPRB0 (0xb02)                                                           */
/*      SPRHBM (0xb02)                                                          */
/*      SPRC0 (0xb02)                                                           */
/*      SPRMCC (0xb02)                                                          */
/*      SPRUCC (0xb02)                                                          */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* 32.0 GT/s Lane Equalization Control Register
*/


#define G5LANEEQCTL_2_SB_FBLP_REG 0x2C000B02

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT8 dptp : 4;

                            /* Bits[3:0], Access Type=RW/V/L, default=None*/

                            /* inserted reg from XML modification tool */
    UINT8 uptp : 4;

                            /* Bits[7:4], Access Type=RW/V/L, default=None*/

                            /* inserted reg from XML modification tool */

  } Bits;
  UINT8 Data;

} G5LANEEQCTL_2_SB_FBLP_STRUCT;

/* G5LANEEQCTL_3_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0xb03)                                                           */
/*      SPRB0 (0xb03)                                                           */
/*      SPRHBM (0xb03)                                                          */
/*      SPRC0 (0xb03)                                                           */
/*      SPRMCC (0xb03)                                                          */
/*      SPRUCC (0xb03)                                                          */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* 32.0 GT/s Lane Equalization Control Register
*/


#define G5LANEEQCTL_3_SB_FBLP_REG 0x2C000B03

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT8 dptp : 4;

                            /* Bits[3:0], Access Type=RW/V/L, default=None*/

                            /* inserted reg from XML modification tool */
    UINT8 uptp : 4;

                            /* Bits[7:4], Access Type=RW/V/L, default=None*/

                            /* inserted reg from XML modification tool */

  } Bits;
  UINT8 Data;

} G5LANEEQCTL_3_SB_FBLP_STRUCT;

/* G5LANEEQCTL_4_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0xb04)                                                           */
/*      SPRB0 (0xb04)                                                           */
/*      SPRHBM (0xb04)                                                          */
/*      SPRC0 (0xb04)                                                           */
/*      SPRMCC (0xb04)                                                          */
/*      SPRUCC (0xb04)                                                          */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* 32.0 GT/s Lane Equalization Control Register
*/


#define G5LANEEQCTL_4_SB_FBLP_REG 0x2C000B04

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT8 dptp : 4;

                            /* Bits[3:0], Access Type=RW/V/L, default=None*/

                            /* inserted reg from XML modification tool */
    UINT8 uptp : 4;

                            /* Bits[7:4], Access Type=RW/V/L, default=None*/

                            /* inserted reg from XML modification tool */

  } Bits;
  UINT8 Data;

} G5LANEEQCTL_4_SB_FBLP_STRUCT;

/* G5LANEEQCTL_5_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0xb05)                                                           */
/*      SPRB0 (0xb05)                                                           */
/*      SPRHBM (0xb05)                                                          */
/*      SPRC0 (0xb05)                                                           */
/*      SPRMCC (0xb05)                                                          */
/*      SPRUCC (0xb05)                                                          */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* 32.0 GT/s Lane Equalization Control Register
*/


#define G5LANEEQCTL_5_SB_FBLP_REG 0x2C000B05

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT8 dptp : 4;

                            /* Bits[3:0], Access Type=RW/V/L, default=None*/

                            /* inserted reg from XML modification tool */
    UINT8 uptp : 4;

                            /* Bits[7:4], Access Type=RW/V/L, default=None*/

                            /* inserted reg from XML modification tool */

  } Bits;
  UINT8 Data;

} G5LANEEQCTL_5_SB_FBLP_STRUCT;

/* G5LANEEQCTL_6_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0xb06)                                                           */
/*      SPRB0 (0xb06)                                                           */
/*      SPRHBM (0xb06)                                                          */
/*      SPRC0 (0xb06)                                                           */
/*      SPRMCC (0xb06)                                                          */
/*      SPRUCC (0xb06)                                                          */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* 32.0 GT/s Lane Equalization Control Register
*/


#define G5LANEEQCTL_6_SB_FBLP_REG 0x2C000B06

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT8 dptp : 4;

                            /* Bits[3:0], Access Type=RW/V/L, default=None*/

                            /* inserted reg from XML modification tool */
    UINT8 uptp : 4;

                            /* Bits[7:4], Access Type=RW/V/L, default=None*/

                            /* inserted reg from XML modification tool */

  } Bits;
  UINT8 Data;

} G5LANEEQCTL_6_SB_FBLP_STRUCT;

/* G5LANEEQCTL_7_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0xb07)                                                           */
/*      SPRB0 (0xb07)                                                           */
/*      SPRHBM (0xb07)                                                          */
/*      SPRC0 (0xb07)                                                           */
/*      SPRMCC (0xb07)                                                          */
/*      SPRUCC (0xb07)                                                          */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* 32.0 GT/s Lane Equalization Control Register
*/


#define G5LANEEQCTL_7_SB_FBLP_REG 0x2C000B07

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT8 dptp : 4;

                            /* Bits[3:0], Access Type=RW/V/L, default=None*/

                            /* inserted reg from XML modification tool */
    UINT8 uptp : 4;

                            /* Bits[7:4], Access Type=RW/V/L, default=None*/

                            /* inserted reg from XML modification tool */

  } Bits;
  UINT8 Data;

} G5LANEEQCTL_7_SB_FBLP_STRUCT;

/* G5LANEEQCTL_8_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0xb08)                                                           */
/*      SPRB0 (0xb08)                                                           */
/*      SPRHBM (0xb08)                                                          */
/*      SPRC0 (0xb08)                                                           */
/*      SPRMCC (0xb08)                                                          */
/*      SPRUCC (0xb08)                                                          */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* 32.0 GT/s Lane Equalization Control Register
*/


#define G5LANEEQCTL_8_SB_FBLP_REG 0x2C000B08

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT8 dptp : 4;

                            /* Bits[3:0], Access Type=RW/V/L, default=None*/

                            /* inserted reg from XML modification tool */
    UINT8 uptp : 4;

                            /* Bits[7:4], Access Type=RW/V/L, default=None*/

                            /* inserted reg from XML modification tool */

  } Bits;
  UINT8 Data;

} G5LANEEQCTL_8_SB_FBLP_STRUCT;

/* G5LANEEQCTL_9_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0xb09)                                                           */
/*      SPRB0 (0xb09)                                                           */
/*      SPRHBM (0xb09)                                                          */
/*      SPRC0 (0xb09)                                                           */
/*      SPRMCC (0xb09)                                                          */
/*      SPRUCC (0xb09)                                                          */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* 32.0 GT/s Lane Equalization Control Register
*/


#define G5LANEEQCTL_9_SB_FBLP_REG 0x2C000B09

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT8 dptp : 4;

                            /* Bits[3:0], Access Type=RW/V/L, default=None*/

                            /* inserted reg from XML modification tool */
    UINT8 uptp : 4;

                            /* Bits[7:4], Access Type=RW/V/L, default=None*/

                            /* inserted reg from XML modification tool */

  } Bits;
  UINT8 Data;

} G5LANEEQCTL_9_SB_FBLP_STRUCT;

/* G5LANEEQCTL_10_SB_FBLP_REG supported on:                                     */
/*      SPRA0 (0xb0a)                                                           */
/*      SPRB0 (0xb0a)                                                           */
/*      SPRHBM (0xb0a)                                                          */
/*      SPRC0 (0xb0a)                                                           */
/*      SPRMCC (0xb0a)                                                          */
/*      SPRUCC (0xb0a)                                                          */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* 32.0 GT/s Lane Equalization Control Register
*/


#define G5LANEEQCTL_10_SB_FBLP_REG 0x2C000B0A

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT8 dptp : 4;

                            /* Bits[3:0], Access Type=RW/V/L, default=None*/

                            /* inserted reg from XML modification tool */
    UINT8 uptp : 4;

                            /* Bits[7:4], Access Type=RW/V/L, default=None*/

                            /* inserted reg from XML modification tool */

  } Bits;
  UINT8 Data;

} G5LANEEQCTL_10_SB_FBLP_STRUCT;

/* G5LANEEQCTL_11_SB_FBLP_REG supported on:                                     */
/*      SPRA0 (0xb0b)                                                           */
/*      SPRB0 (0xb0b)                                                           */
/*      SPRHBM (0xb0b)                                                          */
/*      SPRC0 (0xb0b)                                                           */
/*      SPRMCC (0xb0b)                                                          */
/*      SPRUCC (0xb0b)                                                          */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* 32.0 GT/s Lane Equalization Control Register
*/


#define G5LANEEQCTL_11_SB_FBLP_REG 0x2C000B0B

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT8 dptp : 4;

                            /* Bits[3:0], Access Type=RW/V/L, default=None*/

                            /* inserted reg from XML modification tool */
    UINT8 uptp : 4;

                            /* Bits[7:4], Access Type=RW/V/L, default=None*/

                            /* inserted reg from XML modification tool */

  } Bits;
  UINT8 Data;

} G5LANEEQCTL_11_SB_FBLP_STRUCT;

/* G5LANEEQCTL_12_SB_FBLP_REG supported on:                                     */
/*      SPRA0 (0xb0c)                                                           */
/*      SPRB0 (0xb0c)                                                           */
/*      SPRHBM (0xb0c)                                                          */
/*      SPRC0 (0xb0c)                                                           */
/*      SPRMCC (0xb0c)                                                          */
/*      SPRUCC (0xb0c)                                                          */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* 32.0 GT/s Lane Equalization Control Register
*/


#define G5LANEEQCTL_12_SB_FBLP_REG 0x2C000B0C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT8 dptp : 4;

                            /* Bits[3:0], Access Type=RW/V/L, default=None*/

                            /* inserted reg from XML modification tool */
    UINT8 uptp : 4;

                            /* Bits[7:4], Access Type=RW/V/L, default=None*/

                            /* inserted reg from XML modification tool */

  } Bits;
  UINT8 Data;

} G5LANEEQCTL_12_SB_FBLP_STRUCT;

/* G5LANEEQCTL_13_SB_FBLP_REG supported on:                                     */
/*      SPRA0 (0xb0d)                                                           */
/*      SPRB0 (0xb0d)                                                           */
/*      SPRHBM (0xb0d)                                                          */
/*      SPRC0 (0xb0d)                                                           */
/*      SPRMCC (0xb0d)                                                          */
/*      SPRUCC (0xb0d)                                                          */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* 32.0 GT/s Lane Equalization Control Register
*/


#define G5LANEEQCTL_13_SB_FBLP_REG 0x2C000B0D

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT8 dptp : 4;

                            /* Bits[3:0], Access Type=RW/V/L, default=None*/

                            /* inserted reg from XML modification tool */
    UINT8 uptp : 4;

                            /* Bits[7:4], Access Type=RW/V/L, default=None*/

                            /* inserted reg from XML modification tool */

  } Bits;
  UINT8 Data;

} G5LANEEQCTL_13_SB_FBLP_STRUCT;

/* G5LANEEQCTL_14_SB_FBLP_REG supported on:                                     */
/*      SPRA0 (0xb0e)                                                           */
/*      SPRB0 (0xb0e)                                                           */
/*      SPRHBM (0xb0e)                                                          */
/*      SPRC0 (0xb0e)                                                           */
/*      SPRMCC (0xb0e)                                                          */
/*      SPRUCC (0xb0e)                                                          */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* 32.0 GT/s Lane Equalization Control Register
*/


#define G5LANEEQCTL_14_SB_FBLP_REG 0x2C000B0E

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT8 dptp : 4;

                            /* Bits[3:0], Access Type=RW/V/L, default=None*/

                            /* inserted reg from XML modification tool */
    UINT8 uptp : 4;

                            /* Bits[7:4], Access Type=RW/V/L, default=None*/

                            /* inserted reg from XML modification tool */

  } Bits;
  UINT8 Data;

} G5LANEEQCTL_14_SB_FBLP_STRUCT;

/* G5LANEEQCTL_15_SB_FBLP_REG supported on:                                     */
/*      SPRA0 (0xb0f)                                                           */
/*      SPRB0 (0xb0f)                                                           */
/*      SPRHBM (0xb0f)                                                          */
/*      SPRC0 (0xb0f)                                                           */
/*      SPRMCC (0xb0f)                                                          */
/*      SPRUCC (0xb0f)                                                          */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* 32.0 GT/s Lane Equalization Control Register
*/


#define G5LANEEQCTL_15_SB_FBLP_REG 0x2C000B0F

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT8 dptp : 4;

                            /* Bits[3:0], Access Type=RW/V/L, default=None*/

                            /* inserted reg from XML modification tool */
    UINT8 uptp : 4;

                            /* Bits[7:4], Access Type=RW/V/L, default=None*/

                            /* inserted reg from XML modification tool */

  } Bits;
  UINT8 Data;

} G5LANEEQCTL_15_SB_FBLP_STRUCT;

/* APCAP_SB_FBLP_REG supported on:                                              */
/*      SPRA0 (0x20000b24)                                                      */
/*      SPRB0 (0x20000b24)                                                      */
/*      SPRHBM (0x20000b24)                                                     */
/*      SPRC0 (0x20000b24)                                                      */
/*      SPRMCC (0x20000b24)                                                     */
/*      SPRUCC (0x20000b24)                                                     */
/* Register default value on SPRA0: 0x00000001                                  */
/* Register default value on SPRB0: 0x00000001                                  */
/* Register default value on SPRHBM: 0x00000001                                 */
/* Register default value on SPRC0: 0x00000001                                  */
/* Register default value on SPRMCC: 0x00000001                                 */
/* Register default value on SPRUCC: 0x00000001                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* Alternate Protocol Capabilities Register
*/


#define APCAP_SB_FBLP_REG 0x2C020B24

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 apc : 8;

                            /* Bits[7:0], Access Type=RO/V, default=0x00000001*/

                            /*
                               Indicates the number of Alternate Protocols
                               supported by one or more Lanes of this Link.
                               Since support for PCI Express is mandatory, the
                               value of this field must be greater than or
                               equal to 1.
                            */
    UINT32 apses : 1;

                            /* Bits[8:8], Access Type=RO, default=0x00000000*/

                            /*
                               If Set, the Alternate Protocol Selective Enable
                               Mask Register is present. If Clear, the
                               Alternate Protocol Selective Enable Mask
                               Register is not present and alternate protocol
                               negotiation is controlled soley by the Alternate
                               Protocol Negotiation Global Enable bit. In
                               Upstream Ports, this bit is hardwired to 0b. In
                               Downstream Ports, this bit is HwInit with an
                               implementation specific default value.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} APCAP_SB_FBLP_STRUCT;

/* APCTL_SB_FBLP_REG supported on:                                              */
/*      SPRA0 (0x20000b28)                                                      */
/*      SPRB0 (0x20000b28)                                                      */
/*      SPRHBM (0x20000b28)                                                     */
/*      SPRC0 (0x20000b28)                                                      */
/*      SPRMCC (0x20000b28)                                                     */
/*      SPRUCC (0x20000b28)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Alternate Protocol Control Register
*/


#define APCTL_SB_FBLP_REG 0x2C020B28

#if defined(SPRA0_HOST) || defined(SPRB0_HOST) || defined(SPRHBM_HOST)
typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 apis : 8;

                            /* Bits[7:0], Access Type=RW, default=0x00000000*/

                            /*
                               This field determines which Lane and which
                               Alternate Protocol of that Lane is visible in
                               Alternate Protocol Data 1 Register and Alternate
                               Protocol Data 2 Register. The default value of
                               this field is 00h. Unused bits in this field are
                               permitted to be hardwired to 0b. If Alternate
                               Protocol Count is 01h, this field is permitted
                               to be hardwired to 00h. Behavior is undefined if
                               this field is greater than Alternate Protocol
                               Count. Specific Alternate Protocol Index Select
                               values are permitted to be disabled without
                               renumbering other protocol index values.
                               Disabled entries return an Alternate Protocol
                               Vendor ID of FFFFh.
                            */
    UINT32 rsvd : 24;

                            /* Bits[31:8], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} APCTL_SB_FBLP_SPRA0_SPRB0_SPRHBM_STRUCT;
#endif /* (SPRA0_HOST) || defined(SPRB0_HOST) || defined(SPRHBM_HOST) */

#if defined(SPRC0_HOST) || defined(SPRMCC_HOST) || defined(SPRUCC_HOST)
typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 apis : 8;

                            /* Bits[7:0], Access Type=RW, default=0x00000000*/

                            /*
                               This field determines which Lane and which
                               Alternate Protocol of that Lane is visible in
                               Alternate Protocol Data 1 Register and Alternate
                               Protocol Data 2 Register. The default value of
                               this field is 00h. Unused bits in this field are
                               permitted to be hardwired to 0b. If Alternate
                               Protocol Count is 01h, this field is permitted
                               to be hardwired to 00h. Behavior is undefined if
                               this field is greater than Alternate Protocol
                               Count. Specific Alternate Protocol Index Select
                               values are permitted to be disabled without
                               renumbering other protocol index values.
                               Disabled entries return an Alternate Protocol
                               Vendor ID of FFFFh.
                            */
    UINT32 apnge : 1;

                            /* Bits[8:8], Access Type=RW/P, default=0x00000000*/

                            /*
                               When this bit is Set, Alternate Protocol
                               Negotiation is enabled for this Link. When this
                               bit is Clear, Alternate Protocol Negotiation is
                               disabled for this Link
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} APCTL_SB_FBLP_SPRC0_SPRMCC_SPRUCC_STRUCT;
#endif /* (SPRC0_HOST) || defined(SPRMCC_HOST) || defined(SPRUCC_HOST) */

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 apis : 8;

                            /* Bits[7:0], Access Type=RW, default=0x00000000*/

                            /*
                               This field determines which Lane and which
                               Alternate Protocol of that Lane is visible in
                               Alternate Protocol Data 1 Register and Alternate
                               Protocol Data 2 Register. The default value of
                               this field is 00h. Unused bits in this field are
                               permitted to be hardwired to 0b. If Alternate
                               Protocol Count is 01h, this field is permitted
                               to be hardwired to 00h. Behavior is undefined if
                               this field is greater than Alternate Protocol
                               Count. Specific Alternate Protocol Index Select
                               values are permitted to be disabled without
                               renumbering other protocol index values.
                               Disabled entries return an Alternate Protocol
                               Vendor ID of FFFFh.
                            */
    UINT32 rsvd : 24;

                            /* Bits[31:8], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} APCTL_SB_FBLP_STRUCT;

/* APDATA1_SB_FBLP_REG supported on:                                            */
/*      SPRA0 (0x20000b2c)                                                      */
/*      SPRB0 (0x20000b2c)                                                      */
/*      SPRHBM (0x20000b2c)                                                     */
/*      SPRC0 (0x20000b2c)                                                      */
/*      SPRMCC (0x20000b2c)                                                     */
/*      SPRUCC (0x20000b2c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Alternate Protocol Data 1 Register
*/


#define APDATA1_SB_FBLP_REG 0x2C020B2C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 apui : 3;

                            /* Bits[2:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               This field contains the Modified TS Usage
                               Information associated alternate protocol
                               associated with the Alternate Protocol Index
                               Select value. If Alternate Protocol Vendor ID is
                               FFFFh, the value of this field is undefined.
                            */
    UINT32 rsvd : 2;

                            /* Bits[4:3], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 apd : 11;

                            /* Bits[15:5], Access Type=RO/V, default=0x00000000*/

                            /*
                               This field contains the Alternate Protocol
                               Details associated alternate protocol associated
                               with the Alternate Protocol Index Select value.
                               If Alternate Protocol Vendor ID is FFFFh, the
                               value of this field is undefined.
                            */
    UINT32 apvid : 16;

                            /* Bits[31:16], Access Type=RO/V, default=0x00000000*/

                            /*
                               This field contains the Vendor ID associated
                               alternate protocol associated with the Alternate
                               Protocol Index Select value. Bits 7:0 of this
                               field contain bits 7:0 of Vendor ID (Symbol 10).
                               Bits 15:8 of this field contain bits 15:8 of
                               Vendor ID (Symbol 11). If Alternate Protocol
                               Index Select is greater than or equal to
                               Alternate Protocol Count, this field contains
                               FFFFh. If Alternate Protocol Index Select is
                               associated with a disabled alternate protocol,
                               this field contains FFFFh.
                            */

  } Bits;
  UINT32 Data;

} APDATA1_SB_FBLP_STRUCT;

/* APDATA2_SB_FBLP_REG supported on:                                            */
/*      SPRA0 (0x20000b30)                                                      */
/*      SPRB0 (0x20000b30)                                                      */
/*      SPRHBM (0x20000b30)                                                     */
/*      SPRC0 (0x20000b30)                                                      */
/*      SPRMCC (0x20000b30)                                                     */
/*      SPRUCC (0x20000b30)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Alternate Protocol Data 2 Register
*/


#define APDATA2_SB_FBLP_REG 0x2C020B30

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 mtsi2 : 24;

                            /* Bits[23:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               This field contains the value for symbols 12
                               throught 14 for the alternate protocol
                               associated with the Alternate Protocol Index
                               Select value. If Alternate Protocol Vendor ID is
                               FFFFh, the value of this field is undefined.
                               Bits 7:0 contain the value of Symbol 12. Bits
                               15:8 contain the value of Symbol 13. Bits 23:16
                               contain the value of Symbol 14.
                            */
    UINT32 rsvd : 8;

                            /* Bits[31:24], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} APDATA2_SB_FBLP_STRUCT;

/* APSEM_SB_FBLP_REG supported on:                                              */
/*      SPRA0 (0x20000b34)                                                      */
/*      SPRB0 (0x20000b34)                                                      */
/*      SPRHBM (0x20000b34)                                                     */
/*      SPRC0 (0x20000b34)                                                      */
/*      SPRMCC (0x20000b34)                                                     */
/*      SPRUCC (0x20000b34)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* [RESERVED] Alternate Protocol Selective Enable Mask Register
*/


#define APSEM_SB_FBLP_REG 0x2C020B34

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 apsempcie : 1;

                            /* Bits[0:0], Access Type=RO, default=0x00000000*/

                            /*
                               The PCI Express Protocol is always index 00h.
                               The default value of this bit is 1b (i.e., PCI
                               Express is always enabled by default). This bit
                               is permitted to be hardwired to 1b.
                            */
    UINT32 apsem : 31;

                            /* Bits[31:1], Access Type=RO, default=0x00000000*/

                            /*
                               Other bits in this register represent protocols
                               other than PCI Express. The default values of
                               these other bits is implementation specific. The
                               width of this field is shown here as 32 bits.
                               The actual width derpends on Alternate Protocol
                               Count. Bits in this field corresponding to
                               disabled Alternate Protocol Index values are
                               permitted to be hardwired to 0b. Bits in this
                               field corresponding to Alternate Protocol Index
                               Select values above Alternate Protocol Count are
                               permitted to be hardwired to 0b.
                            */

  } Bits;
  UINT32 Data;

} APSEM_SB_FBLP_STRUCT;

/* UPCFGCSR_SB_FBLP_REG supported on:                                           */
/*      SPRA0 (0x20000d00)                                                      */
/*      SPRB0 (0x20000d00)                                                      */
/*      SPRHBM (0x20000d00)                                                     */
/*      SPRC0 (0x20000d00)                                                      */
/*      SPRMCC (0x20000d00)                                                     */
/*      SPRUCC (0x20000d00)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* UP CFG Control Status
*/


#define UPCFGCSR_SB_FBLP_REG 0x2C020D00

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 upcfgen : 1;

                            /* Bits[0:0], Access Type=RW/V, default=0x00000000*/

                            /*
                               When UPCFGCAPEN is set to 1 and this bit is set
                               to 1, a dynamic width change is initiated if the
                               TLW field is not equal to the current link width
                               (if other end advertises support for it), this
                               bit is cleared by hardware after making one
                               attempt to change width. On error, this bit will
                               be cleared and TLW != NLW. If TLW==NLW and this
                               bit is set, hardware will clear it without
                               entering Recovery/Config.
                            */
    UINT32 tlw : 6;

                            /* Bits[6:1], Access Type=RW/P, default=0x00000000*/

                            /*
                               This is the target link width used when
                               mastering a dynamic width change. If TLW is
                               greater than the initial trained link width when
                               LinkUp goes to 0-->1, then the initial link
                               width is chosen as a cap.
                            */
    UINT32 upcfgcapen : 1;

                            /* Bits[7:7], Access Type=RW/P, default=0x00000000*/

                            /*
                               This bit when set to 1 enables advertising
                               dynamic width support in the training sequences.
                               When this bit is set 1 from 0, the link will
                               move through Recovery to Config advertising
                               upconfigure capability. It will also ignore the
                               settings in fields TLW and UPCFGEN at the time
                               the bit is set.
                            */
    UINT32 rsvd : 8;

                            /* Bits[15:8], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ilw : 6;

                            /* Bits[21:16], Access Type=RO/V, default=0x00000000*/

                            /*
                               Initial Link Width (maximum width to up
                               configure to). ILW format is the same as MLW.
                            */
    UINT32 rcvdupcfgcap : 1;

                            /* Bits[22:22], Access Type=RO/V, default=0x00000000*/

                            /* Received up configure support by link partner. */
    UINT32 rsvd_23 : 9;

                            /* Bits[31:23], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} UPCFGCSR_SB_FBLP_STRUCT;


/* SPEEDCTL2_SB_FBLP_REG supported on:                                          */
/*      SPRA0 (0x20000d08)                                                      */
/*      SPRB0 (0x20000d08)                                                      */
/*      SPRHBM (0x20000d08)                                                     */
/*      SPRC0 (0x20000d08)                                                      */
/*      SPRMCC (0x20000d08)                                                     */
/*      SPRUCC (0x20000d08)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Speed Control 2
*/


#define SPEEDCTL2_SB_FBLP_REG 0x2C020D08

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 ovrdisgen4 : 1;

                            /* Bits[0:0], Access Type=RW/P, default=0x00000000*/

                            /* Override of disabling gen4 */
    UINT32 disg4polcfg : 1;

                            /* Bits[1:1], Access Type=RW/P, default=0x00000000*/

                            /* Don't support advertising Gen4 speed in polling. */
    UINT32 disg4unlessrcvdts : 1;

                            /* Bits[2:2], Access Type=RW/P, default=0x00000000*/

                            /*
                               Don't support speeds 16GT/s and higher until
                               other device advertises it after a speed change
                               failure or the 200ms timer expires.
                            */
    UINT32 forcegen4 : 1;

                            /* Bits[3:3], Access Type=RW/P, default=0x00000000*/

                            /*
                               1: Forces LTSSM to Detect and then trains link
                               at 16GT/s mode 0: Releases forced speed
                            */
    UINT32 ovrdisgen5 : 1;

                            /* Bits[4:4], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 disg5polcfg : 1;

                            /* Bits[5:5], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 disg5unlessrcvdts : 1;

                            /* Bits[6:6], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 forcegen5 : 1;

                            /* Bits[7:7], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 maxadv4initeq : 1;

                            /* Bits[8:8], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the highest rate advertised since
                               exiting Detect is used to determine the 16GT/s
                               and 32GT/s initial speed change for EQ. If not
                               set, use last advertised speed from TS2s. This
                               is applicable to DP only.
                            */
    UINT32 rsvd : 7;

                            /* Bits[15:9], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 clrspeedblocks : 1;

                            /* Bits[16:16], Access Type=RW/V, default=0x00000000*/

                            /*
                               Clear RAS speed blocks not tied to control
                               registers Always reads 0. A write of 1 will
                               clear internal state that blocks speed support.
                               This includes but may not be limited to EQ fail
                               and speed change fail timer. If the blocker can
                               be cleared with an existing control register, it
                               is not affected by this bit.
                            */
    UINT32 rsvd_17 : 15;

                            /* Bits[31:17], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} SPEEDCTL2_SB_FBLP_STRUCT;

/* LTLGCAP_SB_FBLP_REG supported on:                                            */
/*      SPRA0 (0x20000d14)                                                      */
/*      SPRB0 (0x20000d14)                                                      */
/*      SPRHBM (0x20000d14)                                                     */
/*      SPRC0 (0x20000d14)                                                      */
/*      SPRMCC (0x20000d14)                                                     */
/*      SPRUCC (0x20000d14)                                                     */
/* Register default value on SPRA0: 0x3D000000                                  */
/* Register default value on SPRB0: 0x3D000000                                  */
/* Register default value on SPRHBM: 0x3D000000                                 */
/* Register default value on SPRC0: 0x3D000000                                  */
/* Register default value on SPRMCC: 0x3D000000                                 */
/* Register default value on SPRUCC: 0x3D000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Capability
*/


#define LTLGCAP_SB_FBLP_REG 0x2C020D14

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 numsublog : 3;

                            /* Bits[2:0], Access Type=RO/V, default=0x00000000*/

                            /* Number of sub-loggers supported. */
    UINT32 rsvd : 1;

                            /* Bits[3:3], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ramsize : 12;

                            /* Bits[15:4], Access Type=RO/V, default=0x00000000*/

                            /* Number of total ram entries. */
    UINT32 baroffset : 16;

                            /* Bits[31:16], Access Type=RO, default=0x00003D00*/

                            /* Memory bar offset for ram entry 0 */

  } Bits;
  UINT32 Data;

} LTLGCAP_SB_FBLP_STRUCT;

/* LTLGCTRL_SB_FBLP_REG supported on:                                           */
/*      SPRA0 (0x20000d18)                                                      */
/*      SPRB0 (0x20000d18)                                                      */
/*      SPRHBM (0x20000d18)                                                     */
/*      SPRC0 (0x20000d18)                                                      */
/*      SPRMCC (0x20000d18)                                                     */
/*      SPRUCC (0x20000d18)                                                     */
/* Register default value on SPRA0: 0x00321000                                  */
/* Register default value on SPRB0: 0x00321000                                  */
/* Register default value on SPRHBM: 0x00321000                                 */
/* Register default value on SPRC0: 0x00321000                                  */
/* Register default value on SPRMCC: 0x00321000                                 */
/* Register default value on SPRUCC: 0x00321000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Control
*/


#define LTLGCTRL_SB_FBLP_REG 0x2C020D18

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 splitctl : 3;

                            /* Bits[2:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               Control of splitting logger if 1 sub log,
                               ignored if 2 sub logs, only bit 0 used [0] = 1,
                               sublog0 owns full ram [0] = 0, sublog0/1 split
                               ram if 4 sub-logs 1-- = sublog0 owns full ram
                               011 = sublog0/2 split ram in half 001 = sublog0
                               gets half, sublog2/3 get a quarter each 010 =
                               sublog0/1 get a quarter each, sublog2 gets half
                               000 = sublog0/1/2/3 get a quarter each
                            */
    UINT32 rsvd : 1;

                            /* Bits[3:3], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 clearall : 1;

                            /* Bits[4:4], Access Type=RW/V/P, default=0x00000000*/

                            /* Clear and restart all sub-loggers. */
    UINT32 rsvd_5 : 3;

                            /* Bits[7:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 sublog0pt : 3;

                            /* Bits[10:8], Access Type=RW/P, default=0x00000000*/

                            /* Port to assign to sub-logger 0. */
    UINT32 rsvd_11 : 1;

                            /* Bits[11:11], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 sublog1pt : 3;

                            /* Bits[14:12], Access Type=RW/P, default=0x00000001*/

                            /* Port to assign to sub-logger 1. */
    UINT32 rsvd_15 : 1;

                            /* Bits[15:15], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 sublog2pt : 3;

                            /* Bits[18:16], Access Type=RW/P, default=0x00000002*/

                            /* Port to assign to sub-logger 2. */
    UINT32 rsvd_19 : 1;

                            /* Bits[19:19], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 sublog3pt : 3;

                            /* Bits[22:20], Access Type=RW/P, default=0x00000003*/

                            /* Port to assign to sub-logger 3. */
    UINT32 rsvd_23 : 9;

                            /* Bits[31:23], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} LTLGCTRL_SB_FBLP_STRUCT;

/* LTLGRDCT_SB_FBLP_REG supported on:                                           */
/*      SPRA0 (0x20000d1c)                                                      */
/*      SPRB0 (0x20000d1c)                                                      */
/*      SPRHBM (0x20000d1c)                                                     */
/*      SPRC0 (0x20000d1c)                                                      */
/*      SPRMCC (0x20000d1c)                                                     */
/*      SPRUCC (0x20000d1c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Read Control
*/


#define LTLGRDCT_SB_FBLP_REG 0x2C020D1C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 rdindex : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /*
                               The value in this field will point the LTLGRES
                               register to a particular log entry. 0 is the
                               latest entry 63 is oldest entry
                            */
    UINT32 rsvd : 9;

                            /* Bits[14:6], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 autoinc : 1;

                            /* Bits[15:15], Access Type=RW/P, default=0x00000000*/

                            /*
                               1: Every time a read to LTLGRES happens, the
                               read index increment automatically 0: manual
                               movement of the read index is required
                            */
    UINT32 logsel : 2;

                            /* Bits[17:16], Access Type=RW/P, default=0x00000000*/

                            /* Select which sub-logger to read. */
    UINT32 rsvd_18 : 14;

                            /* Bits[31:18], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} LTLGRDCT_SB_FBLP_STRUCT;

/* LTLGRES_SB_FBLP_REG supported on:                                            */
/*      SPRA0 (0x20000d20)                                                      */
/*      SPRB0 (0x20000d20)                                                      */
/*      SPRHBM (0x20000d20)                                                     */
/*      SPRC0 (0x20000d20)                                                      */
/*      SPRMCC (0x20000d20)                                                     */
/*      SPRUCC (0x20000d20)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Read Result
*/


#define LTLGRES_SB_FBLP_REG 0x2C020D20

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGRES_SB_FBLP_STRUCT;

/* LTLGSTART0_SB_FBLP_REG supported on:                                         */
/*      SPRA0 (0x20000d24)                                                      */
/*      SPRB0 (0x20000d24)                                                      */
/*      SPRHBM (0x20000d24)                                                     */
/*      SPRC0 (0x20000d24)                                                      */
/*      SPRMCC (0x20000d24)                                                     */
/*      SPRUCC (0x20000d24)                                                     */
/* Register default value on SPRA0: 0x00000001                                  */
/* Register default value on SPRB0: 0x00000001                                  */
/* Register default value on SPRHBM: 0x00000001                                 */
/* Register default value on SPRC0: 0x00000001                                  */
/* Register default value on SPRMCC: 0x00000001                                 */
/* Register default value on SPRUCC: 0x00000001                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Start
*/


#define LTLGSTART0_SB_FBLP_REG 0x2C020D24

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 start : 1;

                            /* Bits[0:0], Access Type=RW/V/P, default=0x00000001*/

                            /*
                               Enable logging. 0-->1 transition will clear log
                               data If using the stop trigger, this bit will
                               clear if the stop trigger event occurs.
                               LTLGSTART[3:0] is based on one per sub-logger.
                            */
    UINT32 rsvd : 1;

                            /* Bits[1:1], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 starttriggered : 1;

                            /* Bits[2:2], Access Type=RW/1C/V/P, default=0x00000000*/

                            /* If 1, the start trigger event was hit. */
    UINT32 starttrgen : 1;

                            /* Bits[3:3], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, logging starts when the start trigger
                               field and mask match the current LTSSM state/arc
                            */
    UINT32 starttrg : 14;

                            /* Bits[17:4], Access Type=RW/P, default=0x00000000*/

                            /*
                               If XSTOPTRGEN = 0, start trigger value, used in
                               conjunction with the start trigger mask [13:10]
                               State exit arc [9:8] RxL0s state [7:4] LTSSM
                               main state [3:0] LTSSM sub state If XSTOPTRGEN =
                               1, bits [12:4] are used, [17:13] reserved. Here
                               is the definition of the external trigger event
                               using the mask and dmona/b values (Note: bits
                               [12:7] act as a RATEV field just like the
                               LTLGSTPEXT register) bits [6:4] 000 - trigger <=
                               (!a and !b) 001 - trigger <= ( a and !b) 010 -
                               trigger <= (!a and b) 011 - trigger <= ( a and
                               b) 100 - trigger <= (!a | !b) 101 - trigger <= (
                               a | !b) 110 - trigger <= (!a | b) 111 - trigger
                               <= ( a | b) a = bit[18] | dmona b = bit[19] |
                               dmonb
                            */
    UINT32 starttrgmsk : 14;

                            /* Bits[31:18], Access Type=RW/P, default=0x00000000*/

                            /*
                               If XSTOPTRGEN = 0, and any bit is set to 1, it
                               will make that corresponding start trigger bit a
                               don't care (always match). If XSTOPTRGEN = 1,
                               bits [19:18] are used and [31:20] reserved. Here
                               is the definition for a and b which is the OR
                               mask to dmona/b. a = bit[18] | dmona b = bit[19]
                               | dmonb
                            */

  } Bits;
  UINT32 Data;

} LTLGSTART0_SB_FBLP_STRUCT;

/* LTLGSTARTEXT0_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20000d28)                                                      */
/*      SPRB0 (0x20000d28)                                                      */
/*      SPRHBM (0x20000d28)                                                     */
/*      SPRC0 (0x20000d28)                                                      */
/*      SPRMCC (0x20000d28)                                                     */
/*      SPRUCC (0x20000d28)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Start Ext
*/


#define LTLGSTARTEXT0_SB_FBLP_REG 0x2C020D28

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 ratev : 6;

                            /* Bits[5:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               Rate Match Vector [0] -- Gen1 .. [3] -- Gen4,
                               [5:4] are reserved for future expansion if any
                               bit is set, the start trigger will require a
                               match to one of the corresponding data rate bits
                               to trigger. All zeros means ignore data rate for
                               trigger matching
                            */
    UINT32 rsvd : 26;

                            /* Bits[31:6], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} LTLGSTARTEXT0_SB_FBLP_STRUCT;

/* LTLGSTART1_SB_FBLP_REG supported on:                                         */
/*      SPRA0 (0x20000d2c)                                                      */
/*      SPRB0 (0x20000d2c)                                                      */
/*      SPRHBM (0x20000d2c)                                                     */
/*      SPRC0 (0x20000d2c)                                                      */
/*      SPRMCC (0x20000d2c)                                                     */
/*      SPRUCC (0x20000d2c)                                                     */
/* Register default value on SPRA0: 0x00000001                                  */
/* Register default value on SPRB0: 0x00000001                                  */
/* Register default value on SPRHBM: 0x00000001                                 */
/* Register default value on SPRC0: 0x00000001                                  */
/* Register default value on SPRMCC: 0x00000001                                 */
/* Register default value on SPRUCC: 0x00000001                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Start
*/


#define LTLGSTART1_SB_FBLP_REG 0x2C020D2C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 start : 1;

                            /* Bits[0:0], Access Type=RW/V/P, default=0x00000001*/

                            /*
                               Enable logging. 0-->1 transition will clear log
                               data If using the stop trigger, this bit will
                               clear if the stop trigger event occurs.
                               LTLGSTART[3:0] is based on one per sub-logger.
                            */
    UINT32 rsvd : 1;

                            /* Bits[1:1], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 starttriggered : 1;

                            /* Bits[2:2], Access Type=RW/1C/V/P, default=0x00000000*/

                            /* If 1, the start trigger event was hit. */
    UINT32 starttrgen : 1;

                            /* Bits[3:3], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, logging starts when the start trigger
                               field and mask match the current LTSSM state/arc
                            */
    UINT32 starttrg : 14;

                            /* Bits[17:4], Access Type=RW/P, default=0x00000000*/

                            /*
                               If XSTOPTRGEN = 0, start trigger value, used in
                               conjunction with the start trigger mask [13:10]
                               State exit arc [9:8] RxL0s state [7:4] LTSSM
                               main state [3:0] LTSSM sub state If XSTOPTRGEN =
                               1, bits [12:4] are used, [17:13] reserved. Here
                               is the definition of the external trigger event
                               using the mask and dmona/b values (Note: bits
                               [12:7] act as a RATEV field just like the
                               LTLGSTPEXT register) bits [6:4] 000 - trigger <=
                               (!a and !b) 001 - trigger <= ( a and !b) 010 -
                               trigger <= (!a and b) 011 - trigger <= ( a and
                               b) 100 - trigger <= (!a | !b) 101 - trigger <= (
                               a | !b) 110 - trigger <= (!a | b) 111 - trigger
                               <= ( a | b) a = bit[18] | dmona b = bit[19] |
                               dmonb
                            */
    UINT32 starttrgmsk : 14;

                            /* Bits[31:18], Access Type=RW/P, default=0x00000000*/

                            /*
                               If XSTOPTRGEN = 0, and any bit is set to 1, it
                               will make that corresponding start trigger bit a
                               don't care (always match). If XSTOPTRGEN = 1,
                               bits [19:18] are used and [31:20] reserved. Here
                               is the definition for a and b which is the OR
                               mask to dmona/b. a = bit[18] | dmona b = bit[19]
                               | dmonb
                            */

  } Bits;
  UINT32 Data;

} LTLGSTART1_SB_FBLP_STRUCT;

/* LTLGSTARTEXT1_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20000d30)                                                      */
/*      SPRB0 (0x20000d30)                                                      */
/*      SPRHBM (0x20000d30)                                                     */
/*      SPRC0 (0x20000d30)                                                      */
/*      SPRMCC (0x20000d30)                                                     */
/*      SPRUCC (0x20000d30)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Start Ext
*/


#define LTLGSTARTEXT1_SB_FBLP_REG 0x2C020D30

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 ratev : 6;

                            /* Bits[5:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               Rate Match Vector [0] -- Gen1 .. [3] -- Gen4,
                               [5:4] are reserved for future expansion if any
                               bit is set, the start trigger will require a
                               match to one of the corresponding data rate bits
                               to trigger. All zeros means ignore data rate for
                               trigger matching
                            */
    UINT32 rsvd : 26;

                            /* Bits[31:6], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} LTLGSTARTEXT1_SB_FBLP_STRUCT;

/* LTLGSTART2_SB_FBLP_REG supported on:                                         */
/*      SPRA0 (0x20000d34)                                                      */
/*      SPRB0 (0x20000d34)                                                      */
/*      SPRHBM (0x20000d34)                                                     */
/*      SPRC0 (0x20000d34)                                                      */
/*      SPRMCC (0x20000d34)                                                     */
/*      SPRUCC (0x20000d34)                                                     */
/* Register default value on SPRA0: 0x00000001                                  */
/* Register default value on SPRB0: 0x00000001                                  */
/* Register default value on SPRHBM: 0x00000001                                 */
/* Register default value on SPRC0: 0x00000001                                  */
/* Register default value on SPRMCC: 0x00000001                                 */
/* Register default value on SPRUCC: 0x00000001                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Start
*/


#define LTLGSTART2_SB_FBLP_REG 0x2C020D34

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 start : 1;

                            /* Bits[0:0], Access Type=RW/V/P, default=0x00000001*/

                            /*
                               Enable logging. 0-->1 transition will clear log
                               data If using the stop trigger, this bit will
                               clear if the stop trigger event occurs.
                               LTLGSTART[3:0] is based on one per sub-logger.
                            */
    UINT32 rsvd : 1;

                            /* Bits[1:1], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 starttriggered : 1;

                            /* Bits[2:2], Access Type=RW/1C/V/P, default=0x00000000*/

                            /* If 1, the start trigger event was hit. */
    UINT32 starttrgen : 1;

                            /* Bits[3:3], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, logging starts when the start trigger
                               field and mask match the current LTSSM state/arc
                            */
    UINT32 starttrg : 14;

                            /* Bits[17:4], Access Type=RW/P, default=0x00000000*/

                            /*
                               If XSTOPTRGEN = 0, start trigger value, used in
                               conjunction with the start trigger mask [13:10]
                               State exit arc [9:8] RxL0s state [7:4] LTSSM
                               main state [3:0] LTSSM sub state If XSTOPTRGEN =
                               1, bits [12:4] are used, [17:13] reserved. Here
                               is the definition of the external trigger event
                               using the mask and dmona/b values (Note: bits
                               [12:7] act as a RATEV field just like the
                               LTLGSTPEXT register) bits [6:4] 000 - trigger <=
                               (!a and !b) 001 - trigger <= ( a and !b) 010 -
                               trigger <= (!a and b) 011 - trigger <= ( a and
                               b) 100 - trigger <= (!a | !b) 101 - trigger <= (
                               a | !b) 110 - trigger <= (!a | b) 111 - trigger
                               <= ( a | b) a = bit[18] | dmona b = bit[19] |
                               dmonb
                            */
    UINT32 starttrgmsk : 14;

                            /* Bits[31:18], Access Type=RW/P, default=0x00000000*/

                            /*
                               If XSTOPTRGEN = 0, and any bit is set to 1, it
                               will make that corresponding start trigger bit a
                               don't care (always match). If XSTOPTRGEN = 1,
                               bits [19:18] are used and [31:20] reserved. Here
                               is the definition for a and b which is the OR
                               mask to dmona/b. a = bit[18] | dmona b = bit[19]
                               | dmonb
                            */

  } Bits;
  UINT32 Data;

} LTLGSTART2_SB_FBLP_STRUCT;

/* LTLGSTARTEXT2_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20000d38)                                                      */
/*      SPRB0 (0x20000d38)                                                      */
/*      SPRHBM (0x20000d38)                                                     */
/*      SPRC0 (0x20000d38)                                                      */
/*      SPRMCC (0x20000d38)                                                     */
/*      SPRUCC (0x20000d38)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Start Ext
*/


#define LTLGSTARTEXT2_SB_FBLP_REG 0x2C020D38

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 ratev : 6;

                            /* Bits[5:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               Rate Match Vector [0] -- Gen1 .. [3] -- Gen4,
                               [5:4] are reserved for future expansion if any
                               bit is set, the start trigger will require a
                               match to one of the corresponding data rate bits
                               to trigger. All zeros means ignore data rate for
                               trigger matching
                            */
    UINT32 rsvd : 26;

                            /* Bits[31:6], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} LTLGSTARTEXT2_SB_FBLP_STRUCT;

/* LTLGSTART3_SB_FBLP_REG supported on:                                         */
/*      SPRA0 (0x20000d3c)                                                      */
/*      SPRB0 (0x20000d3c)                                                      */
/*      SPRHBM (0x20000d3c)                                                     */
/*      SPRC0 (0x20000d3c)                                                      */
/*      SPRMCC (0x20000d3c)                                                     */
/*      SPRUCC (0x20000d3c)                                                     */
/* Register default value on SPRA0: 0x00000001                                  */
/* Register default value on SPRB0: 0x00000001                                  */
/* Register default value on SPRHBM: 0x00000001                                 */
/* Register default value on SPRC0: 0x00000001                                  */
/* Register default value on SPRMCC: 0x00000001                                 */
/* Register default value on SPRUCC: 0x00000001                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Start
*/


#define LTLGSTART3_SB_FBLP_REG 0x2C020D3C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 start : 1;

                            /* Bits[0:0], Access Type=RW/V/P, default=0x00000001*/

                            /*
                               Enable logging. 0-->1 transition will clear log
                               data If using the stop trigger, this bit will
                               clear if the stop trigger event occurs.
                               LTLGSTART[3:0] is based on one per sub-logger.
                            */
    UINT32 rsvd : 1;

                            /* Bits[1:1], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 starttriggered : 1;

                            /* Bits[2:2], Access Type=RW/1C/V/P, default=0x00000000*/

                            /* If 1, the start trigger event was hit. */
    UINT32 starttrgen : 1;

                            /* Bits[3:3], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, logging starts when the start trigger
                               field and mask match the current LTSSM state/arc
                            */
    UINT32 starttrg : 14;

                            /* Bits[17:4], Access Type=RW/P, default=0x00000000*/

                            /*
                               If XSTOPTRGEN = 0, start trigger value, used in
                               conjunction with the start trigger mask [13:10]
                               State exit arc [9:8] RxL0s state [7:4] LTSSM
                               main state [3:0] LTSSM sub state If XSTOPTRGEN =
                               1, bits [12:4] are used, [17:13] reserved. Here
                               is the definition of the external trigger event
                               using the mask and dmona/b values (Note: bits
                               [12:7] act as a RATEV field just like the
                               LTLGSTPEXT register) bits [6:4] 000 - trigger <=
                               (!a and !b) 001 - trigger <= ( a and !b) 010 -
                               trigger <= (!a and b) 011 - trigger <= ( a and
                               b) 100 - trigger <= (!a | !b) 101 - trigger <= (
                               a | !b) 110 - trigger <= (!a | b) 111 - trigger
                               <= ( a | b) a = bit[18] | dmona b = bit[19] |
                               dmonb
                            */
    UINT32 starttrgmsk : 14;

                            /* Bits[31:18], Access Type=RW/P, default=0x00000000*/

                            /*
                               If XSTOPTRGEN = 0, and any bit is set to 1, it
                               will make that corresponding start trigger bit a
                               don't care (always match). If XSTOPTRGEN = 1,
                               bits [19:18] are used and [31:20] reserved. Here
                               is the definition for a and b which is the OR
                               mask to dmona/b. a = bit[18] | dmona b = bit[19]
                               | dmonb
                            */

  } Bits;
  UINT32 Data;

} LTLGSTART3_SB_FBLP_STRUCT;

/* LTLGSTARTEXT3_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20000d40)                                                      */
/*      SPRB0 (0x20000d40)                                                      */
/*      SPRHBM (0x20000d40)                                                     */
/*      SPRC0 (0x20000d40)                                                      */
/*      SPRMCC (0x20000d40)                                                     */
/*      SPRUCC (0x20000d40)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Start Ext
*/


#define LTLGSTARTEXT3_SB_FBLP_REG 0x2C020D40

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 ratev : 6;

                            /* Bits[5:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               Rate Match Vector [0] -- Gen1 .. [3] -- Gen4,
                               [5:4] are reserved for future expansion if any
                               bit is set, the start trigger will require a
                               match to one of the corresponding data rate bits
                               to trigger. All zeros means ignore data rate for
                               trigger matching
                            */
    UINT32 rsvd : 26;

                            /* Bits[31:6], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} LTLGSTARTEXT3_SB_FBLP_STRUCT;

/* LTLGSTP0_SB_FBLP_REG supported on:                                           */
/*      SPRA0 (0x20000d44)                                                      */
/*      SPRB0 (0x20000d44)                                                      */
/*      SPRHBM (0x20000d44)                                                     */
/*      SPRC0 (0x20000d44)                                                      */
/*      SPRMCC (0x20000d44)                                                     */
/*      SPRUCC (0x20000d44)                                                     */
/* Register default value on SPRA0: 0x1E000009                                  */
/* Register default value on SPRB0: 0x1E000009                                  */
/* Register default value on SPRHBM: 0x1E000009                                 */
/* Register default value on SPRC0: 0x1E000009                                  */
/* Register default value on SPRMCC: 0x1E000009                                 */
/* Register default value on SPRUCC: 0x1E000009                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Stop
*/


#define LTLGSTP0_SB_FBLP_REG 0x2C020D44

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 stoptrgen : 1;

                            /* Bits[0:0], Access Type=RW/P, default=0x00000001*/

                            /*
                               If set, logging stops when the stop trigger
                               field and mask match the current LTSSM
                               state/arc. LTLGSTP[3:0] is based on one per sub-
                               logger.
                            */
    UINT32 stoptrg : 14;

                            /* Bits[14:1], Access Type=RW/P, default=0x00000004*/

                            /*
                               Stop trigger value, used in conjunction with the
                               stop trigger mask [13:10] State exit arc [9:8]
                               RxL0s state [7:4] LTSSM main state [3:0] LTSSM
                               sub state
                            */
    UINT32 stoptrgmsk : 14;

                            /* Bits[28:15], Access Type=RW/P, default=0x00003C00*/

                            /*
                               if any bit is set to 1, it will make that
                               corresponding stopt trigger bit a don't care
                               (always match)
                            */
    UINT32 xstoptrgen : 1;

                            /* Bits[29:29], Access Type=RW/P, default=0x00000000*/

                            /*
                               Use external trigger event to stop logging, see
                               LTLGCTL.STARTTRG and STARTTRGMSK for
                               configuration details. Enabling this does not
                               disable the state match stop event and it does
                               disable the state match start event (acts as if
                               STARTTRGEN=0).
                            */
    UINT32 xtriggered : 1;

                            /* Bits[30:30], Access Type=RW/1C/V/P, default=0x00000000*/

                            /* If 1, external stop trigger event occurred. */
    UINT32 triggered : 1;

                            /* Bits[31:31], Access Type=RW/1C/V/P, default=0x00000000*/

                            /* If 1, the trigger event was hit. */

  } Bits;
  UINT32 Data;

} LTLGSTP0_SB_FBLP_STRUCT;

/* LTLGSTPEXT0_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20000d48)                                                      */
/*      SPRB0 (0x20000d48)                                                      */
/*      SPRHBM (0x20000d48)                                                     */
/*      SPRC0 (0x20000d48)                                                      */
/*      SPRMCC (0x20000d48)                                                     */
/*      SPRUCC (0x20000d48)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Stop Ext
*/


#define LTLGSTPEXT0_SB_FBLP_REG 0x2C020D48

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 ratev : 6;

                            /* Bits[5:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               Rate Match Vector [0] -- Gen1 .. [3] -- Gen4,
                               [5:4] are reserved for future expansion if any
                               bit is set, the stop trigger will require a
                               match to one of the corresponding data rate bits
                               to trigger. All zeros means ignore data rate for
                               trigger matching
                            */
    UINT32 rsvd : 26;

                            /* Bits[31:6], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} LTLGSTPEXT0_SB_FBLP_STRUCT;

/* LTLGSTP1_SB_FBLP_REG supported on:                                           */
/*      SPRA0 (0x20000d4c)                                                      */
/*      SPRB0 (0x20000d4c)                                                      */
/*      SPRHBM (0x20000d4c)                                                     */
/*      SPRC0 (0x20000d4c)                                                      */
/*      SPRMCC (0x20000d4c)                                                     */
/*      SPRUCC (0x20000d4c)                                                     */
/* Register default value on SPRA0: 0x1E000009                                  */
/* Register default value on SPRB0: 0x1E000009                                  */
/* Register default value on SPRHBM: 0x1E000009                                 */
/* Register default value on SPRC0: 0x1E000009                                  */
/* Register default value on SPRMCC: 0x1E000009                                 */
/* Register default value on SPRUCC: 0x1E000009                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Stop
*/


#define LTLGSTP1_SB_FBLP_REG 0x2C020D4C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 stoptrgen : 1;

                            /* Bits[0:0], Access Type=RW/P, default=0x00000001*/

                            /*
                               If set, logging stops when the stop trigger
                               field and mask match the current LTSSM
                               state/arc. LTLGSTP[3:0] is based on one per sub-
                               logger.
                            */
    UINT32 stoptrg : 14;

                            /* Bits[14:1], Access Type=RW/P, default=0x00000004*/

                            /*
                               Stop trigger value, used in conjunction with the
                               stop trigger mask [13:10] State exit arc [9:8]
                               RxL0s state [7:4] LTSSM main state [3:0] LTSSM
                               sub state
                            */
    UINT32 stoptrgmsk : 14;

                            /* Bits[28:15], Access Type=RW/P, default=0x00003C00*/

                            /*
                               if any bit is set to 1, it will make that
                               corresponding stopt trigger bit a don't care
                               (always match)
                            */
    UINT32 xstoptrgen : 1;

                            /* Bits[29:29], Access Type=RW/P, default=0x00000000*/

                            /*
                               Use external trigger event to stop logging, see
                               LTLGCTL.STARTTRG and STARTTRGMSK for
                               configuration details. Enabling this does not
                               disable the state match stop event and it does
                               disable the state match start event (acts as if
                               STARTTRGEN=0).
                            */
    UINT32 xtriggered : 1;

                            /* Bits[30:30], Access Type=RW/1C/V/P, default=0x00000000*/

                            /* If 1, external stop trigger event occurred. */
    UINT32 triggered : 1;

                            /* Bits[31:31], Access Type=RW/1C/V/P, default=0x00000000*/

                            /* If 1, the trigger event was hit. */

  } Bits;
  UINT32 Data;

} LTLGSTP1_SB_FBLP_STRUCT;

/* LTLGSTPEXT1_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20000d50)                                                      */
/*      SPRB0 (0x20000d50)                                                      */
/*      SPRHBM (0x20000d50)                                                     */
/*      SPRC0 (0x20000d50)                                                      */
/*      SPRMCC (0x20000d50)                                                     */
/*      SPRUCC (0x20000d50)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Stop Ext
*/


#define LTLGSTPEXT1_SB_FBLP_REG 0x2C020D50

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 ratev : 6;

                            /* Bits[5:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               Rate Match Vector [0] -- Gen1 .. [3] -- Gen4,
                               [5:4] are reserved for future expansion if any
                               bit is set, the stop trigger will require a
                               match to one of the corresponding data rate bits
                               to trigger. All zeros means ignore data rate for
                               trigger matching
                            */
    UINT32 rsvd : 26;

                            /* Bits[31:6], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} LTLGSTPEXT1_SB_FBLP_STRUCT;

/* LTLGSTP2_SB_FBLP_REG supported on:                                           */
/*      SPRA0 (0x20000d54)                                                      */
/*      SPRB0 (0x20000d54)                                                      */
/*      SPRHBM (0x20000d54)                                                     */
/*      SPRC0 (0x20000d54)                                                      */
/*      SPRMCC (0x20000d54)                                                     */
/*      SPRUCC (0x20000d54)                                                     */
/* Register default value on SPRA0: 0x1E000009                                  */
/* Register default value on SPRB0: 0x1E000009                                  */
/* Register default value on SPRHBM: 0x1E000009                                 */
/* Register default value on SPRC0: 0x1E000009                                  */
/* Register default value on SPRMCC: 0x1E000009                                 */
/* Register default value on SPRUCC: 0x1E000009                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Stop
*/


#define LTLGSTP2_SB_FBLP_REG 0x2C020D54

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 stoptrgen : 1;

                            /* Bits[0:0], Access Type=RW/P, default=0x00000001*/

                            /*
                               If set, logging stops when the stop trigger
                               field and mask match the current LTSSM
                               state/arc. LTLGSTP[3:0] is based on one per sub-
                               logger.
                            */
    UINT32 stoptrg : 14;

                            /* Bits[14:1], Access Type=RW/P, default=0x00000004*/

                            /*
                               Stop trigger value, used in conjunction with the
                               stop trigger mask [13:10] State exit arc [9:8]
                               RxL0s state [7:4] LTSSM main state [3:0] LTSSM
                               sub state
                            */
    UINT32 stoptrgmsk : 14;

                            /* Bits[28:15], Access Type=RW/P, default=0x00003C00*/

                            /*
                               if any bit is set to 1, it will make that
                               corresponding stopt trigger bit a don't care
                               (always match)
                            */
    UINT32 xstoptrgen : 1;

                            /* Bits[29:29], Access Type=RW/P, default=0x00000000*/

                            /*
                               Use external trigger event to stop logging, see
                               LTLGCTL.STARTTRG and STARTTRGMSK for
                               configuration details. Enabling this does not
                               disable the state match stop event and it does
                               disable the state match start event (acts as if
                               STARTTRGEN=0).
                            */
    UINT32 xtriggered : 1;

                            /* Bits[30:30], Access Type=RW/1C/V/P, default=0x00000000*/

                            /* If 1, external stop trigger event occurred. */
    UINT32 triggered : 1;

                            /* Bits[31:31], Access Type=RW/1C/V/P, default=0x00000000*/

                            /* If 1, the trigger event was hit. */

  } Bits;
  UINT32 Data;

} LTLGSTP2_SB_FBLP_STRUCT;

/* LTLGSTPEXT2_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20000d58)                                                      */
/*      SPRB0 (0x20000d58)                                                      */
/*      SPRHBM (0x20000d58)                                                     */
/*      SPRC0 (0x20000d58)                                                      */
/*      SPRMCC (0x20000d58)                                                     */
/*      SPRUCC (0x20000d58)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Stop Ext
*/


#define LTLGSTPEXT2_SB_FBLP_REG 0x2C020D58

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 ratev : 6;

                            /* Bits[5:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               Rate Match Vector [0] -- Gen1 .. [3] -- Gen4,
                               [5:4] are reserved for future expansion if any
                               bit is set, the stop trigger will require a
                               match to one of the corresponding data rate bits
                               to trigger. All zeros means ignore data rate for
                               trigger matching
                            */
    UINT32 rsvd : 26;

                            /* Bits[31:6], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} LTLGSTPEXT2_SB_FBLP_STRUCT;

/* LTLGSTP3_SB_FBLP_REG supported on:                                           */
/*      SPRA0 (0x20000d5c)                                                      */
/*      SPRB0 (0x20000d5c)                                                      */
/*      SPRHBM (0x20000d5c)                                                     */
/*      SPRC0 (0x20000d5c)                                                      */
/*      SPRMCC (0x20000d5c)                                                     */
/*      SPRUCC (0x20000d5c)                                                     */
/* Register default value on SPRA0: 0x1E000009                                  */
/* Register default value on SPRB0: 0x1E000009                                  */
/* Register default value on SPRHBM: 0x1E000009                                 */
/* Register default value on SPRC0: 0x1E000009                                  */
/* Register default value on SPRMCC: 0x1E000009                                 */
/* Register default value on SPRUCC: 0x1E000009                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Stop
*/


#define LTLGSTP3_SB_FBLP_REG 0x2C020D5C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 stoptrgen : 1;

                            /* Bits[0:0], Access Type=RW/P, default=0x00000001*/

                            /*
                               If set, logging stops when the stop trigger
                               field and mask match the current LTSSM
                               state/arc. LTLGSTP[3:0] is based on one per sub-
                               logger.
                            */
    UINT32 stoptrg : 14;

                            /* Bits[14:1], Access Type=RW/P, default=0x00000004*/

                            /*
                               Stop trigger value, used in conjunction with the
                               stop trigger mask [13:10] State exit arc [9:8]
                               RxL0s state [7:4] LTSSM main state [3:0] LTSSM
                               sub state
                            */
    UINT32 stoptrgmsk : 14;

                            /* Bits[28:15], Access Type=RW/P, default=0x00003C00*/

                            /*
                               if any bit is set to 1, it will make that
                               corresponding stopt trigger bit a don't care
                               (always match)
                            */
    UINT32 xstoptrgen : 1;

                            /* Bits[29:29], Access Type=RW/P, default=0x00000000*/

                            /*
                               Use external trigger event to stop logging, see
                               LTLGCTL.STARTTRG and STARTTRGMSK for
                               configuration details. Enabling this does not
                               disable the state match stop event and it does
                               disable the state match start event (acts as if
                               STARTTRGEN=0).
                            */
    UINT32 xtriggered : 1;

                            /* Bits[30:30], Access Type=RW/1C/V/P, default=0x00000000*/

                            /* If 1, external stop trigger event occurred. */
    UINT32 triggered : 1;

                            /* Bits[31:31], Access Type=RW/1C/V/P, default=0x00000000*/

                            /* If 1, the trigger event was hit. */

  } Bits;
  UINT32 Data;

} LTLGSTP3_SB_FBLP_STRUCT;

/* LTLGSTPEXT3_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20000d60)                                                      */
/*      SPRB0 (0x20000d60)                                                      */
/*      SPRHBM (0x20000d60)                                                     */
/*      SPRC0 (0x20000d60)                                                      */
/*      SPRMCC (0x20000d60)                                                     */
/*      SPRUCC (0x20000d60)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Stop Ext
*/


#define LTLGSTPEXT3_SB_FBLP_REG 0x2C020D60

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 ratev : 6;

                            /* Bits[5:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               Rate Match Vector [0] -- Gen1 .. [3] -- Gen4,
                               [5:4] are reserved for future expansion if any
                               bit is set, the stop trigger will require a
                               match to one of the corresponding data rate bits
                               to trigger. All zeros means ignore data rate for
                               trigger matching
                            */
    UINT32 rsvd : 26;

                            /* Bits[31:6], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} LTLGSTPEXT3_SB_FBLP_STRUCT;

/* LTLGTMEV0_SB_FBLP_REG supported on:                                          */
/*      SPRA0 (0x20000d64)                                                      */
/*      SPRB0 (0x20000d64)                                                      */
/*      SPRHBM (0x20000d64)                                                     */
/*      SPRC0 (0x20000d64)                                                      */
/*      SPRMCC (0x20000d64)                                                     */
/*      SPRUCC (0x20000d64)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Time Match Event
*/


#define LTLGTMEV0_SB_FBLP_REG 0x2C020D64

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 enable : 1;

                            /* Bits[0:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               Enable timer event using port defined in the
                               start register. LTLGMEV[3:0] is based on one per
                               sub-logger.
                            */
    UINT32 smegc : 1;

                            /* Bits[1:1], Access Type=RW/P, default=0x00000000*/

                            /*
                               Select which state matching register to use for
                               the state matching portion. The register must
                               belong to the port set in the start register.
                            */
    UINT32 unit : 1;

                            /* Bits[2:2], Access Type=RW/P, default=0x00000000*/

                            /*
                               1 = 256cc 0 = 1cc Where cc is 1 pclk period and
                               the user needs to be cognizant of designs that
                               utilize variable (rate based) pclk.
                            */
    UINT32 cmp : 3;

                            /* Bits[5:3], Access Type=RW/P, default=0x00000000*/

                            /*
                               00 = compare to equal the time value 01 =
                               compare to greater than the time value 10 =
                               compare to less than the time value 11 =
                               reserved
                            */
    UINT32 count : 17;

                            /* Bits[22:6], Access Type=RW/P, default=0x00000000*/

                            /*
                               The time value to compare with. The value is in
                               units defined by the UNIT field.
                            */
    UINT32 evlvl : 1;

                            /* Bits[23:23], Access Type=RW/P, default=0x00000000*/

                            /*
                               1: Event should be a level signal (high as long
                               as compare condition is true) 0: Event should be
                               a pulse
                            */
    UINT32 rsvd : 7;

                            /* Bits[30:24], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 triggered : 1;

                            /* Bits[31:31], Access Type=RW/1C/V/P, default=0x00000000*/

                            /* If 1, the trigger event was hit. */

  } Bits;
  UINT32 Data;

} LTLGTMEV0_SB_FBLP_STRUCT;

/* LTLGTMEV1_SB_FBLP_REG supported on:                                          */
/*      SPRA0 (0x20000d68)                                                      */
/*      SPRB0 (0x20000d68)                                                      */
/*      SPRHBM (0x20000d68)                                                     */
/*      SPRC0 (0x20000d68)                                                      */
/*      SPRMCC (0x20000d68)                                                     */
/*      SPRUCC (0x20000d68)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Time Match Event
*/


#define LTLGTMEV1_SB_FBLP_REG 0x2C020D68

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 enable : 1;

                            /* Bits[0:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               Enable timer event using port defined in the
                               start register. LTLGMEV[3:0] is based on one per
                               sub-logger.
                            */
    UINT32 smegc : 1;

                            /* Bits[1:1], Access Type=RW/P, default=0x00000000*/

                            /*
                               Select which state matching register to use for
                               the state matching portion. The register must
                               belong to the port set in the start register.
                            */
    UINT32 unit : 1;

                            /* Bits[2:2], Access Type=RW/P, default=0x00000000*/

                            /*
                               1 = 256cc 0 = 1cc Where cc is 1 pclk period and
                               the user needs to be cognizant of designs that
                               utilize variable (rate based) pclk.
                            */
    UINT32 cmp : 3;

                            /* Bits[5:3], Access Type=RW/P, default=0x00000000*/

                            /*
                               00 = compare to equal the time value 01 =
                               compare to greater than the time value 10 =
                               compare to less than the time value 11 =
                               reserved
                            */
    UINT32 count : 17;

                            /* Bits[22:6], Access Type=RW/P, default=0x00000000*/

                            /*
                               The time value to compare with. The value is in
                               units defined by the UNIT field.
                            */
    UINT32 evlvl : 1;

                            /* Bits[23:23], Access Type=RW/P, default=0x00000000*/

                            /*
                               1: Event should be a level signal (high as long
                               as compare condition is true) 0: Event should be
                               a pulse
                            */
    UINT32 rsvd : 7;

                            /* Bits[30:24], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 triggered : 1;

                            /* Bits[31:31], Access Type=RW/1C/V/P, default=0x00000000*/

                            /* If 1, the trigger event was hit. */

  } Bits;
  UINT32 Data;

} LTLGTMEV1_SB_FBLP_STRUCT;

/* LTLGTMEV2_SB_FBLP_REG supported on:                                          */
/*      SPRA0 (0x20000d6c)                                                      */
/*      SPRB0 (0x20000d6c)                                                      */
/*      SPRHBM (0x20000d6c)                                                     */
/*      SPRC0 (0x20000d6c)                                                      */
/*      SPRMCC (0x20000d6c)                                                     */
/*      SPRUCC (0x20000d6c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Time Match Event
*/


#define LTLGTMEV2_SB_FBLP_REG 0x2C020D6C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 enable : 1;

                            /* Bits[0:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               Enable timer event using port defined in the
                               start register. LTLGMEV[3:0] is based on one per
                               sub-logger.
                            */
    UINT32 smegc : 1;

                            /* Bits[1:1], Access Type=RW/P, default=0x00000000*/

                            /*
                               Select which state matching register to use for
                               the state matching portion. The register must
                               belong to the port set in the start register.
                            */
    UINT32 unit : 1;

                            /* Bits[2:2], Access Type=RW/P, default=0x00000000*/

                            /*
                               1 = 256cc 0 = 1cc Where cc is 1 pclk period and
                               the user needs to be cognizant of designs that
                               utilize variable (rate based) pclk.
                            */
    UINT32 cmp : 3;

                            /* Bits[5:3], Access Type=RW/P, default=0x00000000*/

                            /*
                               00 = compare to equal the time value 01 =
                               compare to greater than the time value 10 =
                               compare to less than the time value 11 =
                               reserved
                            */
    UINT32 count : 17;

                            /* Bits[22:6], Access Type=RW/P, default=0x00000000*/

                            /*
                               The time value to compare with. The value is in
                               units defined by the UNIT field.
                            */
    UINT32 evlvl : 1;

                            /* Bits[23:23], Access Type=RW/P, default=0x00000000*/

                            /*
                               1: Event should be a level signal (high as long
                               as compare condition is true) 0: Event should be
                               a pulse
                            */
    UINT32 rsvd : 7;

                            /* Bits[30:24], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 triggered : 1;

                            /* Bits[31:31], Access Type=RW/1C/V/P, default=0x00000000*/

                            /* If 1, the trigger event was hit. */

  } Bits;
  UINT32 Data;

} LTLGTMEV2_SB_FBLP_STRUCT;

/* LTLGTMEV3_SB_FBLP_REG supported on:                                          */
/*      SPRA0 (0x20000d70)                                                      */
/*      SPRB0 (0x20000d70)                                                      */
/*      SPRHBM (0x20000d70)                                                     */
/*      SPRC0 (0x20000d70)                                                      */
/*      SPRMCC (0x20000d70)                                                     */
/*      SPRUCC (0x20000d70)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Time Match Event
*/


#define LTLGTMEV3_SB_FBLP_REG 0x2C020D70

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 enable : 1;

                            /* Bits[0:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               Enable timer event using port defined in the
                               start register. LTLGMEV[3:0] is based on one per
                               sub-logger.
                            */
    UINT32 smegc : 1;

                            /* Bits[1:1], Access Type=RW/P, default=0x00000000*/

                            /*
                               Select which state matching register to use for
                               the state matching portion. The register must
                               belong to the port set in the start register.
                            */
    UINT32 unit : 1;

                            /* Bits[2:2], Access Type=RW/P, default=0x00000000*/

                            /*
                               1 = 256cc 0 = 1cc Where cc is 1 pclk period and
                               the user needs to be cognizant of designs that
                               utilize variable (rate based) pclk.
                            */
    UINT32 cmp : 3;

                            /* Bits[5:3], Access Type=RW/P, default=0x00000000*/

                            /*
                               00 = compare to equal the time value 01 =
                               compare to greater than the time value 10 =
                               compare to less than the time value 11 =
                               reserved
                            */
    UINT32 count : 17;

                            /* Bits[22:6], Access Type=RW/P, default=0x00000000*/

                            /*
                               The time value to compare with. The value is in
                               units defined by the UNIT field.
                            */
    UINT32 evlvl : 1;

                            /* Bits[23:23], Access Type=RW/P, default=0x00000000*/

                            /*
                               1: Event should be a level signal (high as long
                               as compare condition is true) 0: Event should be
                               a pulse
                            */
    UINT32 rsvd : 7;

                            /* Bits[30:24], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 triggered : 1;

                            /* Bits[31:31], Access Type=RW/1C/V/P, default=0x00000000*/

                            /* If 1, the trigger event was hit. */

  } Bits;
  UINT32 Data;

} LTLGTMEV3_SB_FBLP_STRUCT;


/* LTLGSMEV0_SB_FBLP_REG supported on:                                          */
/*      SPRA0 (0x20000d78)                                                      */
/*      SPRB0 (0x20000d78)                                                      */
/*      SPRHBM (0x20000d78)                                                     */
/*      SPRC0 (0x20000d78)                                                      */
/*      SPRMCC (0x20000d78)                                                     */
/*      SPRUCC (0x20000d78)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger State Match Event 0
*/


#define LTLGSMEV0_SB_FBLP_REG 0x2C020D78

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 enable : 1;

                            /* Bits[0:0], Access Type=RW/P, default=0x00000000*/

                            /* Enable the trigger on match */
    UINT32 value : 14;

                            /* Bits[14:1], Access Type=RW/P, default=0x00000000*/

                            /*
                               trigger value, used in conjunction with the mask
                               [13:10] State exit arc [9:8] RxL0s state [7:4]
                               LTSSM main state [3:0] LTSSM sub state
                            */
    UINT32 mask : 14;

                            /* Bits[28:15], Access Type=RW/P, default=0x00000000*/

                            /*
                               if any bit is set to 1, it will make that
                               corresponding trigger bit a don't care (always
                               match)
                            */
    UINT32 rsvd : 2;

                            /* Bits[30:29], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 triggered : 1;

                            /* Bits[31:31], Access Type=RW/1C/V/P, default=0x00000000*/

                            /* If 1, the trigger event was hit. */

  } Bits;
  UINT32 Data;

} LTLGSMEV0_SB_FBLP_STRUCT;

/* LTLGSMEV1_SB_FBLP_REG supported on:                                          */
/*      SPRA0 (0x20000d7c)                                                      */
/*      SPRB0 (0x20000d7c)                                                      */
/*      SPRHBM (0x20000d7c)                                                     */
/*      SPRC0 (0x20000d7c)                                                      */
/*      SPRMCC (0x20000d7c)                                                     */
/*      SPRUCC (0x20000d7c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger State Match Event 1
*/


#define LTLGSMEV1_SB_FBLP_REG 0x2C020D7C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 enable : 1;

                            /* Bits[0:0], Access Type=RW/P, default=0x00000000*/

                            /* Enable the trigger on match */
    UINT32 value : 14;

                            /* Bits[14:1], Access Type=RW/P, default=0x00000000*/

                            /*
                               trigger value, used in conjunction with the mask
                               [13:10] State exit arc [9:8] RxL0s state [7:4]
                               LTSSM main state [3:0] LTSSM sub state
                            */
    UINT32 mask : 14;

                            /* Bits[28:15], Access Type=RW/P, default=0x00000000*/

                            /*
                               if any bit is set to 1, it will make that
                               corresponding trigger bit a don't care (always
                               match)
                            */
    UINT32 rsvd : 2;

                            /* Bits[30:29], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 triggered : 1;

                            /* Bits[31:31], Access Type=RW/1C/V/P, default=0x00000000*/

                            /* If 1, the trigger event was hit. */

  } Bits;
  UINT32 Data;

} LTLGSMEV1_SB_FBLP_STRUCT;

/* LTLGSMEVEXT0_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20000d80)                                                      */
/*      SPRB0 (0x20000d80)                                                      */
/*      SPRHBM (0x20000d80)                                                     */
/*      SPRC0 (0x20000d80)                                                      */
/*      SPRMCC (0x20000d80)                                                     */
/*      SPRUCC (0x20000d80)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger State Match Event Ext 0
*/


#define LTLGSMEVEXT0_SB_FBLP_REG 0x2C020D80

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 ratev : 6;

                            /* Bits[5:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               Rate Match Vector [0] -- Gen1 .. [3] -- Gen4,
                               [5:4] are reserved for future expansion if any
                               bit is set, the state match event trigger will
                               require a match to one of the corresponding data
                               rate bits to trigger. All zeros means ignore
                               data rate for trigger matching
                            */
    UINT32 rsvd : 10;

                            /* Bits[15:6], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 onchange : 1;

                            /* Bits[16:16], Access Type=RW/P, default=0x00000000*/

                            /* Only trigger on initial change to match */
    UINT32 rsvd_17 : 14;

                            /* Bits[30:17], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 retrig : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               Re-arm trigger after every match 0 -- once
                               triggered, event stops firing 1 -- triggered
                               state does not block future triggers. The
                               triggered field still is set by first trigger.
                            */

  } Bits;
  UINT32 Data;

} LTLGSMEVEXT0_SB_FBLP_STRUCT;

/* LTLGSMEVEXT1_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20000d84)                                                      */
/*      SPRB0 (0x20000d84)                                                      */
/*      SPRHBM (0x20000d84)                                                     */
/*      SPRC0 (0x20000d84)                                                      */
/*      SPRMCC (0x20000d84)                                                     */
/*      SPRUCC (0x20000d84)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger State Match Event Ext 1
*/


#define LTLGSMEVEXT1_SB_FBLP_REG 0x2C020D84

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 ratev : 6;

                            /* Bits[5:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               Rate Match Vector [0] -- Gen1 .. [3] -- Gen4,
                               [5:4] are reserved for future expansion if any
                               bit is set, the state match event trigger will
                               require a match to one of the corresponding data
                               rate bits to trigger. All zeros means ignore
                               data rate for trigger matching
                            */
    UINT32 rsvd : 10;

                            /* Bits[15:6], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 onchange : 1;

                            /* Bits[16:16], Access Type=RW/P, default=0x00000000*/

                            /* Only trigger on initial change to match */
    UINT32 rsvd_17 : 14;

                            /* Bits[30:17], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 retrig : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               Re-arm trigger after every match 0 -- once
                               triggered, event stops firing 1 -- triggered
                               state does not block future triggers. The
                               triggered field still is set by first trigger.
                            */

  } Bits;
  UINT32 Data;

} LTLGSMEVEXT1_SB_FBLP_STRUCT;

/* L1TELEMCTR_SB_FBLP_REG supported on:                                         */
/*      SPRA0 (0x20000d88)                                                      */
/*      SPRB0 (0x20000d88)                                                      */
/*      SPRHBM (0x20000d88)                                                     */
/*      SPRC0 (0x20000d88)                                                      */
/*      SPRMCC (0x20000d88)                                                     */
/*      SPRUCC (0x20000d88)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* L1 Telemetry Counter
*/


#define L1TELEMCTR_SB_FBLP_REG 0x2C020D88

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 count : 32;

                            /* Bits[31:0], Access Type=RW/V, default=0x00000000*/

                            /*
                               A free running counter that counts the number of
                               L1 state exits. The counter is reset to 0
                               anytime the link is in the Detect state.
                            */

  } Bits;
  UINT32 Data;

} L1TELEMCTR_SB_FBLP_STRUCT;



/* PHYRECAL_SB_FBLP_REG supported on:                                           */
/*      SPRA0 (0x20000da0)                                                      */
/*      SPRB0 (0x20000da0)                                                      */
/*      SPRHBM (0x20000da0)                                                     */
/*      SPRC0 (0x20000da0)                                                      */
/*      SPRMCC (0x20000da0)                                                     */
/*      SPRUCC (0x20000da0)                                                     */
/* Register default value on SPRA0: 0x000003E8                                  */
/* Register default value on SPRB0: 0x000003E8                                  */
/* Register default value on SPRHBM: 0x000003E8                                 */
/* Register default value on SPRC0: 0x000003E8                                  */
/* Register default value on SPRMCC: 0x000003E8                                 */
/* Register default value on SPRUCC: 0x000003E8                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* PHY Recalibrate
*/


#define PHYRECAL_SB_FBLP_REG 0x2C020DA0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g2l1exiten : 1;

                            /* Bits[0:0], Access Type=RW/P, default=0x00000000*/

                            /* Request recal on Gen2 L1 exit */
    UINT32 g3l1exiten : 1;

                            /* Bits[1:1], Access Type=RW/P, default=0x00000000*/

                            /* Request recal on Gen3 L1 exit */
    UINT32 g2reconerren : 1;

                            /* Bits[2:2], Access Type=RW/P, default=0x00000000*/

                            /* Request recal on Gen2 Recovery due to Error */
    UINT32 g3reconerren : 1;

                            /* Bits[3:3], Access Type=RW/P, default=0x00000001*/

                            /* Request recal on Gen3 Recovery due to Error */
    UINT32 g4l1exiten : 1;

                            /* Bits[4:4], Access Type=RW/P, default=0x00000000*/

                            /* Request recal on Gen4 L1 exit */
    UINT32 g4reconerren : 1;

                            /* Bits[5:5], Access Type=RW/P, default=0x00000001*/

                            /* Request recal on Gen4 Recovery due to Error */
    UINT32 phyreqen : 5;

                            /* Bits[10:6], Access Type=RW/P, default=0x0000000F*/

                            /*
                               Enable honoring of the PIPE-Phy's request for a
                               PhyRecal. bit 0 is Gen2, bit 1 Gen3, bit 2 Gen4
                            */
    UINT32 g5l1exiten : 1;

                            /* Bits[11:11], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 g5reconerren : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 rsvd : 19;

                            /* Bits[31:13], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} PHYRECAL_SB_FBLP_STRUCT;



/* FBLP_PPD0_SB_FBLP_REG supported on:                                          */
/*      SPRA0 (0x20000db4)                                                      */
/*      SPRB0 (0x20000db4)                                                      */
/*      SPRHBM (0x20000db4)                                                     */
/*      SPRC0 (0x20000db4)                                                      */
/*      SPRMCC (0x20000db4)                                                     */
/*      SPRUCC (0x20000db4)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* PCIe Port Definition Control Register 0
*/


#define FBLP_PPD0_SB_FBLP_REG 0x2C020DB4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 clrtrnenonlnkdn : 1;

                            /* Bits[0:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               when set to 1, a link down event will cause the
                               link train enable field (ILINKTRN0) of this
                               register to be cleared and block subsequent
                               training until that train enable is set again.
                               If 0, a link down will not clear the train
                               enable unless a link down causes a reset.
                            */
    UINT32 rsvd : 2;

                            /* Bits[2:1], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ilinktrn0 : 1;

                            /* Bits[3:3], Access Type=RW/V, default=0x00000000*/

                            /*
                               This bit controls PCI Express port link training
                               for the associated port. A value of '1'
                               initiates link training on the corresponding
                               port. After writing this bit to a '1', software
                               can poll the Data Link Layer link active bit in
                               the LINKSTS register to determine if a port is
                               up and running. This bit clears on warm reset,
                               i.e. the associated port will not automatically
                               initiate link training after warm reset.
                               Hardware-aware of software should set
                               PPD0.ClrTrnEnOnLnkDn to '1' on DL_Down events if
                               desirable, such as in NTB mode. 0: The
                               associated PCI Express port has not initiated
                               link training. 1: The associated PCI Express
                               port is initiating link training or has trained.
                            */
    UINT32 rsvd_4 : 28;

                            /* Bits[31:4], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} FBLP_PPD0_SB_FBLP_STRUCT;


/* LEKBAR_SB_FBLP_REG supported on:                                             */
/*      SPRA0 (0x20000dc4)                                                      */
/*      SPRB0 (0x20000dc4)                                                      */
/*      SPRHBM (0x20000dc4)                                                     */
/*      SPRC0 (0x20000dc4)                                                      */
/*      SPRMCC (0x20000dc4)                                                     */
/*      SPRUCC (0x20000dc4)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* Leaky Bucket Actions
*/


#define LEKBAR_SB_FBLP_REG 0x2C020DC4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 rsvd : 24;

                            /* Bits[23:0], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lbeg2degradeen : 1;

                            /* Bits[24:24], Access Type=RW/P, default=0x00000000*/

                            /*
                               Enable LBE to trigger a speed degrade from 5GT/s
                               operation. The 5GT/s mode and higher is disabled
                               until LBEG2DIS is cleared.
                            */
    UINT32 lbeg3degradeen : 1;

                            /* Bits[25:25], Access Type=RW/P, default=0x00000000*/

                            /*
                               Enable LBE to trigger a speed degrade from 8GT/s
                               operation. The 8GT/s mode and higher is disabled
                               until LBEG3DIS is cleared.
                            */
    UINT32 lbeg4degradeen : 1;

                            /* Bits[26:26], Access Type=RW/P, default=0x00000000*/

                            /*
                               Enable LBE to trigger a speed degrade from
                               16GT/s operation. The 16GT/s mode and higher is
                               disabled until LBEG4DIS is cleared.
                            */
    UINT32 lbeg5degradeen : 1;

                            /* Bits[27:27], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 lbeg2dis : 1;

                            /* Bits[28:28], Access Type=RW/V, default=0x00000000*/

                            /*
                               When set to 1, 5GT/s and higher rates are
                               disabled. Hardware or software may set this bit.
                               Hardware will set it when the LBE is enabled to
                               degrade link speed and the LBE threshold is
                               tripped. Software may set or clear at its will.
                               The register is sticky through in-band resets.
                            */
    UINT32 lbeg3dis : 1;

                            /* Bits[29:29], Access Type=RW/V, default=0x00000000*/

                            /*
                               When set to 1, 8GT/s and higher rates are
                               disabled. Hardware or software may set this bit.
                               Hardware will set it when the LBE is enabled to
                               degrade link speed and the LBE threshold is
                               tripped. Software may set or clear at its will.
                               The register is sticky through in-band resets.
                            */
    UINT32 lbeg4dis : 1;

                            /* Bits[30:30], Access Type=RW/V, default=0x00000000*/

                            /*
                               When set to 1, 16GT/s and higher rates are
                               disabled. Hardware or software may set this bit.
                               Hardware will set it when the LBE is enabled to
                               degrade link speed and the LBE threshold is
                               tripped. Software may set or clear at its will.
                               The register is sticky through in-band resets.
                            */
    UINT32 lbeg5dis : 1;

                            /* Bits[31:31], Access Type=RW/V, default=0x00000000*/

                            /* inserted reg from XML modification tool */

  } Bits;
  UINT32 Data;

} LEKBAR_SB_FBLP_STRUCT;

/* LEKBERR_SB_FBLP_REG supported on:                                            */
/*      SPRA0 (0x20000dc8)                                                      */
/*      SPRB0 (0x20000dc8)                                                      */
/*      SPRHBM (0x20000dc8)                                                     */
/*      SPRC0 (0x20000dc8)                                                      */
/*      SPRMCC (0x20000dc8)                                                     */
/*      SPRUCC (0x20000dc8)                                                     */
/* Register default value on SPRA0: 0x2000FFFF                                  */
/* Register default value on SPRB0: 0x2000FFFF                                  */
/* Register default value on SPRHBM: 0x2000FFFF                                 */
/* Register default value on SPRC0: 0x2000FFFF                                  */
/* Register default value on SPRMCC: 0x2000FFFF                                 */
/* Register default value on SPRUCC: 0x2000FFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* Leaky Bucket Error
*/


#define LEKBERR_SB_FBLP_REG 0x2C020DC8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 aggrerr : 20;

                            /* Bits[19:0], Access Type=RW/P, default=0x0000FFFF*/

                            /*
                               The error count for the leaky bucket algorithm
                               increments by one when AGGRERR number of errors
                               have been encountered during the specified time
                               period.
                            */
    UINT32 errthresh : 5;

                            /* Bits[24:20], Access Type=RW/P, default=0x00000000*/

                            /*
                               Sets the threshold for leaky bucket error
                               handling. When the error count for a lane passes
                               this threshold, that lane will be flagged as
                               faulty.
                            */
    UINT32 g3errthresh : 5;

                            /* Bits[29:25], Access Type=RW/P, default=0x00000010*/

                            /*
                               Leaky Bucket error threshold used for 8GT/s and
                               above. When the error count for a lane passes
                               this threshold, that lane will be flagged as
                               faulty.
                            */
    UINT32 rsvd : 1;

                            /* Bits[30:30], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 g3lbeen : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               Enable Leaky Bucket Error Counters for gen3,
                               this allows H/W to request re-equalization based
                               on error rate.
                            */

  } Bits;
  UINT32 Data;

} LEKBERR_SB_FBLP_STRUCT;

/* LEKBERR0_SB_FBLP_REG supported on:                                           */
/*      SPRA0 (0x20000dcc)                                                      */
/*      SPRB0 (0x20000dcc)                                                      */
/*      SPRHBM (0x20000dcc)                                                     */
/*      SPRC0 (0x20000dcc)                                                      */
/*      SPRMCC (0x20000dcc)                                                     */
/*      SPRUCC (0x20000dcc)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* Leaky Bucket Time Window
*/


#define LEKBERR0_SB_FBLP_REG 0x2C020DCC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 exp_ber : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0xFFFFFFFF*/

                            /*
                               [31:0] Expected BER for leaky bucket error
                               handling [31:0]. Selects the time window that is
                               sampled for aggregate errors.
                            */

  } Bits;
  UINT32 Data;

} LEKBERR0_SB_FBLP_STRUCT;

/* LEKBERR1_SB_FBLP_REG supported on:                                           */
/*      SPRA0 (0x20000dd0)                                                      */
/*      SPRB0 (0x20000dd0)                                                      */
/*      SPRHBM (0x20000dd0)                                                     */
/*      SPRC0 (0x20000dd0)                                                      */
/*      SPRMCC (0x20000dd0)                                                     */
/*      SPRUCC (0x20000dd0)                                                     */
/* Register default value on SPRA0: 0x02000007                                  */
/* Register default value on SPRB0: 0x02000007                                  */
/* Register default value on SPRHBM: 0x02000007                                 */
/* Register default value on SPRC0: 0x02000007                                  */
/* Register default value on SPRMCC: 0x02000007                                 */
/* Register default value on SPRUCC: 0x02000007                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* Leaky Bucket Time Window
*/


#define LEKBERR1_SB_FBLP_REG 0x2C020DD0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 exp_ber : 18;

                            /* Bits[17:0], Access Type=RW/P, default=0x00000007*/

                            /*
                               [49:32] Expected BER for leaky bucket error
                               handling [49:32]. Selects the time window that
                               is sampled for aggregate errors.
                            */
    UINT32 rsvd : 6;

                            /* Bits[23:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 g3aggrerr : 8;

                            /* Bits[31:24], Access Type=RW/P, default=0x00000002*/

                            /*
                               Aggregate error for gen3. The error count for
                               the leaky bucket algorithm increments by one
                               when AGGRERR number of errors have been
                               encountered during the specified time period.
                            */

  } Bits;
  UINT32 Data;

} LEKBERR1_SB_FBLP_STRUCT;

/* LEKBLNERRCNT0_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20000dd4)                                                      */
/*      SPRB0 (0x20000dd4)                                                      */
/*      SPRHBM (0x20000dd4)                                                     */
/*      SPRC0 (0x20000dd4)                                                      */
/*      SPRMCC (0x20000dd4)                                                     */
/*      SPRUCC (0x20000dd4)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* Leaky Bucket Lane Error Count
*/


#define LEKBLNERRCNT0_SB_FBLP_REG 0x2C020DD4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 errcnt0 : 5;

                            /* Bits[4:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Error count seen on a lane for the current time
                               window. Decrements progressively to 0 if no
                               errors seen over a prolonged time period.
                            */
    UINT32 errcnt1 : 5;

                            /* Bits[9:5], Access Type=RO/V, default=0x00000000*/

                            /*
                               Error count seen on a lane for the current time
                               window. Decrements progressively to 0 if no
                               errors seen over a prolonged time period.
                            */
    UINT32 errcnt2 : 5;

                            /* Bits[14:10], Access Type=RO/V, default=0x00000000*/

                            /*
                               Error count seen on a lane for the current time
                               window. Decrements progressively to 0 if no
                               errors seen over a prolonged time period.
                            */
    UINT32 errcnt3 : 5;

                            /* Bits[19:15], Access Type=RO/V, default=0x00000000*/

                            /*
                               Error count seen on a lane for the current time
                               window. Decrements progressively to 0 if no
                               errors seen over a prolonged time period.
                            */
    UINT32 errcnt4 : 5;

                            /* Bits[24:20], Access Type=RO/V, default=0x00000000*/

                            /*
                               Error count seen on a lane for the current time
                               window. Decrements progressively to 0 if no
                               errors seen over a prolonged time period.
                            */
    UINT32 errcnt5 : 5;

                            /* Bits[29:25], Access Type=RO/V, default=0x00000000*/

                            /*
                               Error count seen on a lane for the current time
                               window. Decrements progressively to 0 if no
                               errors seen over a prolonged time period.
                            */
    UINT32 rsvd : 2;

                            /* Bits[31:30], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} LEKBLNERRCNT0_SB_FBLP_STRUCT;

/* LEKBLNERRCNT1_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20000dd8)                                                      */
/*      SPRB0 (0x20000dd8)                                                      */
/*      SPRHBM (0x20000dd8)                                                     */
/*      SPRC0 (0x20000dd8)                                                      */
/*      SPRMCC (0x20000dd8)                                                     */
/*      SPRUCC (0x20000dd8)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* Leaky Bucket Lane Error Count
*/


#define LEKBLNERRCNT1_SB_FBLP_REG 0x2C020DD8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 errcnt6 : 5;

                            /* Bits[4:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Error count seen on a lane for the current time
                               window. Decrements progressively to 0 if no
                               errors seen over a prolonged time period.
                            */
    UINT32 errcnt7 : 5;

                            /* Bits[9:5], Access Type=RO/V, default=0x00000000*/

                            /*
                               Error count seen on a lane for the current time
                               window. Decrements progressively to 0 if no
                               errors seen over a prolonged time period.
                            */
    UINT32 errcnt8 : 5;

                            /* Bits[14:10], Access Type=RO/V, default=0x00000000*/

                            /*
                               Error count seen on a lane for the current time
                               window. Decrements progressively to 0 if no
                               errors seen over a prolonged time period.
                            */
    UINT32 errcnt9 : 5;

                            /* Bits[19:15], Access Type=RO/V, default=0x00000000*/

                            /*
                               Error count seen on a lane for the current time
                               window. Decrements progressively to 0 if no
                               errors seen over a prolonged time period.
                            */
    UINT32 errcnt10 : 5;

                            /* Bits[24:20], Access Type=RO/V, default=0x00000000*/

                            /*
                               Error count seen on a lane for the current time
                               window. Decrements progressively to 0 if no
                               errors seen over a prolonged time period.
                            */
    UINT32 errcnt11 : 5;

                            /* Bits[29:25], Access Type=RO/V, default=0x00000000*/

                            /*
                               Error count seen on a lane for the current time
                               window. Decrements progressively to 0 if no
                               errors seen over a prolonged time period.
                            */
    UINT32 rsvd : 2;

                            /* Bits[31:30], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} LEKBLNERRCNT1_SB_FBLP_STRUCT;

/* LEKBLNERRCNT2_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20000ddc)                                                      */
/*      SPRB0 (0x20000ddc)                                                      */
/*      SPRHBM (0x20000ddc)                                                     */
/*      SPRC0 (0x20000ddc)                                                      */
/*      SPRMCC (0x20000ddc)                                                     */
/*      SPRUCC (0x20000ddc)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* Leaky Bucket Lane Error Count
*/


#define LEKBLNERRCNT2_SB_FBLP_REG 0x2C020DDC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 errcnt12 : 5;

                            /* Bits[4:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Error count seen on a lane for the current time
                               window. Decrements progressively to 0 if no
                               errors seen over a prolonged time period.
                            */
    UINT32 errcnt13 : 5;

                            /* Bits[9:5], Access Type=RO/V, default=0x00000000*/

                            /*
                               Error count seen on a lane for the current time
                               window. Decrements progressively to 0 if no
                               errors seen over a prolonged time period.
                            */
    UINT32 errcnt14 : 5;

                            /* Bits[14:10], Access Type=RO/V, default=0x00000000*/

                            /*
                               Error count seen on a lane for the current time
                               window. Decrements progressively to 0 if no
                               errors seen over a prolonged time period.
                            */
    UINT32 errcnt15 : 5;

                            /* Bits[19:15], Access Type=RO/V, default=0x00000000*/

                            /*
                               Error count seen on a lane for the current time
                               window. Decrements progressively to 0 if no
                               errors seen over a prolonged time period.
                            */
    UINT32 rsvd : 12;

                            /* Bits[31:20], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} LEKBLNERRCNT2_SB_FBLP_STRUCT;

/* LEKBPROERR_SB_FBLP_REG supported on:                                         */
/*      SPRA0 (0x20000de0)                                                      */
/*      SPRB0 (0x20000de0)                                                      */
/*      SPRHBM (0x20000de0)                                                     */
/*      SPRC0 (0x20000de0)                                                      */
/*      SPRMCC (0x20000de0)                                                     */
/*      SPRUCC (0x20000de0)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* Leaky Bucket Prolonged Error
*/


#define LEKBPROERR_SB_FBLP_REG 0x2C020DE0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 errlnsts : 16;

                            /* Bits[15:0], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Feature to check status of lane. Bit is set when
                               the current error rate exceeds the set error
                               threshold.
                            */
    UINT32 g3errlnsts : 16;

                            /* Bits[31:16], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Feature to check status of lane for Gen3. Bit is
                               set when the current error rate exceeds the set
                               error threshold.
                            */

  } Bits;
  UINT32 Data;

} LEKBPROERR_SB_FBLP_STRUCT;



/* IAPCTL_SB_FBLP_REG supported on:                                             */
/*      SPRA0 (0x20000dfc)                                                      */
/*      SPRB0 (0x20000dfc)                                                      */
/*      SPRHBM (0x20000dfc)                                                     */
/*      SPRC0 (0x20000dfc)                                                      */
/*      SPRMCC (0x20000dfc)                                                     */
/*      SPRUCC (0x20000dfc)                                                     */
/* Register default value on SPRA0: 0x00001080                                  */
/* Register default value on SPRB0: 0x00001080                                  */
/* Register default value on SPRHBM: 0x00001080                                 */
/* Register default value on SPRC0: 0x00001080                                  */
/* Register default value on SPRMCC: 0x00001080                                 */
/* Register default value on SPRUCC: 0x00001080                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* IAL Alternate Protocol Control
*/


#define IAPCTL_SB_FBLP_REG 0x2C020DFC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 ial_en : 1;

                            /* Bits[0:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               Enable support of IAL. If not set, the Flex Bus
                               Port DVSEC control register has no effect.
                            */
    UINT32 force_ial : 1;

                            /* Bits[1:1], Access Type=RW/P, default=0x00000000*/

                            /*
                               Ignore PCIE AP negotiation results (allows
                               skipping AP negotion altogether), assume IAL in
                               Gen3+ speeds. Must have similar function on
                               attached link.
                            */
    UINT32 mem : 1;

                            /* Bits[2:2], Access Type=RW/P, default=0x00000000*/

                            /*
                               If force_ial is set, this represents the
                               override state of enabling IAL.Cache/Mem support
                               negotiation
                            */
    UINT32 cache : 1;

                            /* Bits[3:3], Access Type=RW/P, default=0x00000000*/

                            /*
                               If force_ial is set, this represents the
                               override state of enabling IAL.Cache/Mem support
                               negotiation
                            */
    UINT32 hdrbyp : 1;

                            /* Bits[4:4], Access Type=RW/P, default=0x00000000*/

                            /*
                               If force_ial is set, this represents the
                               override state of Sync Header Bypass negotiation
                            */
    UINT32 comclk : 1;

                            /* Bits[5:5], Access Type=RW/P, default=0x00000000*/

                            /*
                               Indication that the platform is in Common Clock
                               mode. This controls the Alt. Protocol TS Info2
                               field for common clock.
                            */
    UINT32 profile : 2;

                            /* Bits[7:6], Access Type=RW/P, default=0x00000002*/

                            /*
                               --deprecated-- This controls the alternate
                               protocol TS Info2 field for client/server
                               profile. If force_ial is set, this represents
                               the override state of server(msb)/client(lsb)
                               profile negotiation
                            */
    UINT32 rt1byp : 1;

                            /* Bits[8:8], Access Type=RW/P, default=0x00000000*/

                            /*
                               --deprecated-- If force_ial is cleared: If this
                               field is set to 0, masks off retimer1's bypass
                               capability, in effect disabling retimer bypass
                               If force_ial is set: This represents the
                               override state of Retimer1 Bypass Path
                               negotiation
                            */
    UINT32 rt1ial : 1;

                            /* Bits[9:9], Access Type=RW/P, default=0x00000000*/

                            /*
                               If force_ial is set, this represents the
                               override state of Retimer1 IAL aware negotiation
                            */
    UINT32 rt2byp : 1;

                            /* Bits[10:10], Access Type=RW/P, default=0x00000000*/

                            /*
                               --deprecated-- If force_ial is cleared: If this
                               field is set to 0, masks off retimer2's bypass
                               capability, in effect disabling retimer bypass
                               If force_ial is set: This represents the
                               override state of Retimer2 Bypass Path
                               negotiation
                            */
    UINT32 rt2ial : 1;

                            /* Bits[11:11], Access Type=RW/P, default=0x00000000*/

                            /*
                               If force_ial is set, this represents the
                               override state of Retimer2 IAL aware negotiation
                            */
    UINT32 linkdnmd : 2;

                            /* Bits[13:12], Access Type=RW/P, default=0x00000001*/

                            /*
                               00 - A link down resets the prior alternate
                               protocol negotiation (APN) results to allow a
                               full APN on next link up 01 - A link down while
                               not in an AP results in link staying down by
                               clearing PPD0.ILINKTRN0 10 - A link down can
                               only be followed by like training (initial
                               training locks in protocol), If subsequent
                               training does not match, link is taken down
                               again and PPD0.ILINKTRN0 is cleared 11 -
                               Reserved
                            */
    UINT32 ialonly : 1;

                            /* Bits[14:14], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this port will only operate as an IAL
                               port. Should the alternate protocol negotiation
                               lead to PCIe, the link will go down.
                            */
    UINT32 rsvd : 17;

                            /* Bits[31:15], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} IAPCTL_SB_FBLP_STRUCT;

/* LPIFSTS_SB_FBLP_REG supported on:                                            */
/*      SPRA0 (0x20000e00)                                                      */
/*      SPRB0 (0x20000e00)                                                      */
/*      SPRHBM (0x20000e00)                                                     */
/*      SPRC0 (0x20000e00)                                                      */
/*      SPRMCC (0x20000e00)                                                     */
/*      SPRUCC (0x20000e00)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LPIF Status
*/


#define LPIFSTS_SB_FBLP_REG 0x2C020E00

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 linkerr : 1;

                            /* Bits[0:0], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               LPIF status SM reached LinkError state. If
                               LPIFCTL.HOLDLINKERROR is set, this must be
                               cleared before link will retrain.
                            */
    UINT32 rsvd : 31;

                            /* Bits[31:1], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} LPIFSTS_SB_FBLP_STRUCT;

/* EQEVALSTS4_SB_FBLP_REG supported on:                                         */
/*      SPRA0 (0x20000e0c)                                                      */
/*      SPRB0 (0x20000e0c)                                                      */
/*      SPRHBM (0x20000e0c)                                                     */
/*      SPRC0 (0x20000e0c)                                                      */
/*      SPRMCC (0x20000e0c)                                                     */
/*      SPRUCC (0x20000e0c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* EQEVALSTS4
*/


#define EQEVALSTS4_SB_FBLP_REG 0x2C020E0C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 saveeq4noeq : 1;

                            /* Bits[0:0], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               This bit gets set when a successful EQ through
                               all rates upto 32GT/s is seen and
                               LTSSMTRNCTL3.NOEQEN and LTSSMTRNCTL3.SAVEEQMD
                               are both set, see LTSSMTRNCTL3.SAVEEQMD. HW will
                               clear this bit if re-entry to Recovery.Phase1
                               should occur.
                            */
    UINT32 rsvd : 31;

                            /* Bits[31:1], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} EQEVALSTS4_SB_FBLP_STRUCT;

/* FBLP_PPD1_SB_FBLP_REG supported on:                                          */
/*      SPRA0 (0x20000e18)                                                      */
/*      SPRB0 (0x20000e18)                                                      */
/*      SPRHBM (0x20000e18)                                                     */
/*      SPRC0 (0x20000e18)                                                      */
/*      SPRMCC (0x20000e18)                                                     */
/*      SPRUCC (0x20000e18)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* PCIe Port Definition Control Register 1
*/


#define FBLP_PPD1_SB_FBLP_REG 0x2C020E18

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 rsvd : 8;

                            /* Bits[7:0], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 npd : 2;

                            /* Bits[9:8], Access Type=RW/V/L, default=None*/

                            /*
                               00b - Reserved 01b - Operate as RP 10b - Operate
                               as NTB-NTB (NT Port) 11b - Operate as NTB-> DSP
                               (NTB EP) Note: Lock Key bit is located in the
                               Personality Lock Key Control Register . The
                               default value is determined by soft straps/fuse
                               proxy. (DSP and NTB only)
                            */
    UINT32 pcfgor : 2;

                            /* Bits[11:10], Access Type=RW/V/L, default=None*/

                            /*
                               11 - Force Port to DSD/USP. 10 - Force Port to
                               USD/DSP. 01 - Reserved 00 - Use external Port
                               Configuration Strap pin if applicable to
                               determine USD (default) or DSD Note: Lock Key
                               bit is located in the Personality Lock Key
                               Control Register . This field will be reserved
                               in case of pure DSP. Refer to Table 3-27, 'Port
                               Configuration' for more details.
                            */
    UINT32 pcfgsts : 1;

                            /* Bits[12:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               This bit is written by hardware and shows the
                               result of the Port Configuration strap combined
                               with the Port Configuration override settings. 0
                               - Port is configured as USD/DSP 1 - Port is
                               configured as DSD/USP This field will be
                               reserved in case of pure DSP.
                            */
    UINT32 rsvd_13 : 18;

                            /* Bits[30:13], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 cl : 1;

                            /* Bits[31:31], Access Type=RW/L, default=None*/

                            /*
                               Lock key bit for all RW-L bits of PPD1 register
                               only. 1b: Lock 0b: Unlocked Note: Lock Key bit
                               is located in the PPD1 Register . This bit is
                               self-locking. Once this bit is set to a 1b, this
                               key bit can not be unlocked. Writing a 0b has no
                               effect on this bit.
                            */

  } Bits;
  UINT32 Data;

} FBLP_PPD1_SB_FBLP_STRUCT;

/* RTLLCTL_SB_FBLP_REG supported on:                                            */
/*      SPRA0 (0x20000e24)                                                      */
/*      SPRB0 (0x20000e24)                                                      */
/*      SPRHBM (0x20000e24)                                                     */
/*      SPRC0 (0x20000e24)                                                      */
/*      SPRMCC (0x20000e24)                                                     */
/*      SPRUCC (0x20000e24)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* Retimer Low Latency Control
*/


#define RTLLCTL_SB_FBLP_REG 0x2C020E24

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 enable : 2;

                            /* Bits[1:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               [0] = Enable 16GT/s HW autonmous retimer low
                               latency mode [1] = Enable 32GT/s HW autonmous
                               retimer low latency mode
                            */
    UINT32 rsvd : 2;

                            /* Bits[3:2], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 initautohw : 1;

                            /* Bits[4:4], Access Type=RW/V/P, default=0x00000000*/

                            /*
                               At present data rate, if proper ENABLE bit is
                               set, start initiation of HW Auto entry to
                               Retimer Low Latency mode. Clears on completion
                               or error.
                            */
    UINT32 rsvd_5 : 27;

                            /* Bits[31:5], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} RTLLCTL_SB_FBLP_STRUCT;

/* G4RTLLSTS_SB_FBLP_REG supported on:                                          */
/*      SPRA0 (0x10000e28)                                                      */
/*      SPRB0 (0x10000e28)                                                      */
/*      SPRHBM (0x10000e28)                                                     */
/*      SPRC0 (0x10000e28)                                                      */
/*      SPRMCC (0x10000e28)                                                     */
/*      SPRUCC (0x10000e28)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* Retimer Low Latency Status
*/


#define G4RTLLSTS_SB_FBLP_REG 0x2C010E28

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 llsts : 4;

                            /* Bits[3:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               0000 - Disabled/not initiated, low latency mode
                               is off 0001 - Low latency entry request in
                               progress 0010 - Low latency mode exit in
                               progress 0011 - Request retrain link for LL
                               enable, wait to enter Recovery 0100 - Request
                               retrain link for LL disable, wait to enter
                               Recovery 0101 - Retrain link in progress for LL
                               enable 0110 - Retrain link in progress for LL
                               disable 0111 - Enabled (LL mode on) 1000 - Low
                               latency mode entry timed out - low latency mode
                               is disabled 1001 - During retrain to enable low
                               latency mode, a speed degrade occurred - low
                               latency mode is disabled 1010 - During retrain
                               to disable low latency mode, a speed degrade
                               occurred - low latency mode is disabled 1011 -
                               Redo eq occurred and autonomous low latency
                               enable after redo eq is blocked - low latency
                               mode is disabled 1100 - Low latency mode is
                               blocked due to margining 1101 - Margining is
                               stopped, quiesce for further SW margining
                               commands
                            */
    UINT16 disonerr : 1;

                            /* Bits[4:4], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Implementation specific error detection
                               mechanism has blocked further LL mode usage.
                            */
    UINT16 disformarg : 1;

                            /* Bits[5:5], Access Type=RO/V, default=0x00000000*/

                            /*
                               LL mode has been disabled as a result of
                               receiver lane margining being initiated.
                            */
    UINT16 rtmxzack : 1;

                            /* Bits[6:6], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               HW received response from Retimer X-Z during
                               retimer low latency entry
                            */
    UINT16 rtmyack : 1;

                            /* Bits[7:7], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               HW received response from Retimer Y during
                               retimer low latency entry
                            */
    UINT16 rsvd : 8;

                            /* Bits[15:8], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT16 Data;

} G4RTLLSTS_SB_FBLP_STRUCT;

/* G5RTLLSTS_SB_FBLP_REG supported on:                                          */
/*      SPRA0 (0x10000e2a)                                                      */
/*      SPRB0 (0x10000e2a)                                                      */
/*      SPRHBM (0x10000e2a)                                                     */
/*      SPRC0 (0x10000e2a)                                                      */
/*      SPRMCC (0x10000e2a)                                                     */
/*      SPRUCC (0x10000e2a)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* Retimer Low Latency Status
*/


#define G5RTLLSTS_SB_FBLP_REG 0x2C010E2A

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 llsts : 4;

                            /* Bits[3:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               0000 - Disabled/not initiated, low latency mode
                               is off 0001 - Low latency entry request in
                               progress 0010 - Low latency mode exit in
                               progress 0011 - Request retrain link for LL
                               enable, wait to enter Recovery 0100 - Request
                               retrain link for LL disable, wait to enter
                               Recovery 0101 - Retrain link in progress for LL
                               enable 0110 - Retrain link in progress for LL
                               disable 0111 - Enabled (LL mode on) 1000 - Low
                               latency mode entry timed out - low latency mode
                               is disabled 1001 - During retrain to enable low
                               latency mode, a speed degrade occurred - low
                               latency mode is disabled 1010 - During retrain
                               to disable low latency mode, a speed degrade
                               occurred - low latency mode is disabled 1011 -
                               Redo eq occurred and autonomous low latency
                               enable after redo eq is blocked - low latency
                               mode is disabled 1100 - Low latency mode is
                               blocked due to margining 1101 - Margining is
                               stopped, quiesce for further SW margining
                               commands
                            */
    UINT16 disonerr : 1;

                            /* Bits[4:4], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Implementation specific error detection
                               mechanism has blocked further LL mode usage.
                            */
    UINT16 disformarg : 1;

                            /* Bits[5:5], Access Type=RO/V, default=0x00000000*/

                            /*
                               LL mode has been disabled as a result of
                               receiver lane margining being initiated.
                            */
    UINT16 rtmxzack : 1;

                            /* Bits[6:6], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               HW received response from Retimer X-Z during
                               retimer low latency entry
                            */
    UINT16 rtmyack : 1;

                            /* Bits[7:7], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               HW received response from Retimer Y during
                               retimer low latency entry
                            */
    UINT16 rsvd : 8;

                            /* Bits[15:8], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT16 Data;

} G5RTLLSTS_SB_FBLP_STRUCT;

/* RTLLCTL2_SB_FBLP_REG supported on:                                           */
/*      SPRA0 (0x20000e2c)                                                      */
/*      SPRB0 (0x20000e2c)                                                      */
/*      SPRHBM (0x20000e2c)                                                     */
/*      SPRC0 (0x20000e2c)                                                      */
/*      SPRMCC (0x20000e2c)                                                     */
/*      SPRUCC (0x20000e2c)                                                     */
/* Register default value on SPRA0: 0x0012C902                                  */
/* Register default value on SPRB0: 0x0012C902                                  */
/* Register default value on SPRHBM: 0x0012C902                                 */
/* Register default value on SPRC0: 0x0012C902                                  */
/* Register default value on SPRMCC: 0x0012C902                                 */
/* Register default value on SPRUCC: 0x0012C902                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Retimer Low Latency Control 2
*/


#define RTLLCTL2_SB_FBLP_REG 0x2C020E2C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 hwreeq : 2;

                            /* Bits[1:0], Access Type=RW/P, default=0x00000002*/

                            /*
                               00 - Don't autonomously disable nor re-enable
                               for HW re-qualization 01 - Autonomously disable
                               for HW re-qualization 10 - Autonomously re-
                               enable for HW re-qualization 11 - Autonomously
                               disable and re-enable for HW re-qualization SW
                               re-eq must manage LL mode exit/entry on its own
                            */
    UINT32 disrxlnmarg : 1;

                            /* Bits[2:2], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, will disable RT LL mode prior to sending
                               Receiver Lane Margin Control command in Control
                               SOS to Retimer
                            */
    UINT32 lbedisll : 2;

                            /* Bits[4:3], Access Type=RW/P, default=0x00000000*/

                            /*
                               [0] = Enable 16GT/s HW autonmous disable if LBE
                               logic triggers for 16GT/s speed [1] = Enable
                               32GT/s HW autonmous disable if LBE logic
                               triggers for 32GT/s speed
                            */
    UINT32 occ : 2;

                            /* Bits[6:5], Access Type=RW/P, default=0x00000000*/

                            /*
                               00 - no override, 10 - non-common clock, 11 -
                               common clock
                            */
    UINT32 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 wtentry : 3;

                            /* Bits[10:8], Access Type=RW/P, default=0x00000001*/

                            /*
                               0 - 50us, 1 - 100us, 2 - 150us, 3 - 200us, 4 -
                               250us, 5 - 500us, 6 - 750us, 7 - 1ms
                            */
    UINT32 wtexit : 3;

                            /* Bits[13:11], Access Type=RW/P, default=0x00000001*/

                            /*
                               0 - 50us, 1 - 100us, 2 - 150us, 3 - 200us, 4 -
                               250us, 5 - 500us, 6 - 750us, 7 - 1ms
                            */
    UINT32 wtmargquiesce : 2;

                            /* Bits[15:14], Access Type=RW/P, default=0x00000003*/

                            /*
                               When HW auto disable for Reciver Lane Margining
                               is enabled, this is the amount of time hardware
                               will wait prior to reenabling margining. Allows
                               a time window for software to issue a new
                               margining command to avoid thrashing retimer
                               exit and entries for margining. 0 - 20us, 1 -
                               100us, 2 - 50ms, 3 - 100ms
                            */
    UINT32 recenbtm : 3;

                            /* Bits[18:16], Access Type=RW/P, default=0x00000002*/

                            /*
                               Minimum time to hold in Recovery.ReceiverLock
                               before allowing a transition to
                               Rec.ReceiverConfig while retimer enters low
                               latency mode. 0 - 10us, 1 - 50us, 2 - 100us, 3 -
                               150us, 4 - 250us, 5 - 500us, 6 - 1ms, 7 - 2ms
                            */
    UINT32 recdistm : 3;

                            /* Bits[21:19], Access Type=RW/P, default=0x00000002*/

                            /*
                               Minimum time to hold in Recovery.ReceiverLock
                               before allowing a transition to
                               Rec.ReceiverConfig while retimer exits low
                               latency mode. 0 - 10us, 1 - 50us, 2 - 100us, 3 -
                               150us, 4 - 250us, 5 - 500us, 6 - 1ms, 7 - 2ms
                            */
    UINT32 rsvd_22 : 10;

                            /* Bits[31:22], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} RTLLCTL2_SB_FBLP_STRUCT;

/* RTLLCTL3_SB_FBLP_REG supported on:                                           */
/*      SPRA0 (0x20000e30)                                                      */
/*      SPRB0 (0x20000e30)                                                      */
/*      SPRHBM (0x20000e30)                                                     */
/*      SPRC0 (0x20000e30)                                                      */
/*      SPRMCC (0x20000e30)                                                     */
/*      SPRUCC (0x20000e30)                                                     */
/* Register default value on SPRA0: 0x0B128086                                  */
/* Register default value on SPRB0: 0x0B128086                                  */
/* Register default value on SPRHBM: 0x0B128086                                 */
/* Register default value on SPRC0: 0x0B128086                                  */
/* Register default value on SPRMCC: 0x0B128086                                 */
/* Register default value on SPRUCC: 0x0B128086                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Retimer Low Latency Control 3
*/


#define RTLLCTL3_SB_FBLP_REG 0x2C020E30

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 vid : 16;

                            /* Bits[15:0], Access Type=RW/P, default=0x00008086*/

                            /*
                               The VID to use in the Control SOS for low
                               latency retimer commands.
                            */
    UINT32 rcvrnumtgt : 3;

                            /* Bits[18:16], Access Type=RW/P, default=0x00000002*/

                            /*
                               The Receiver Number to use in the Control SOS
                               for low latency retimer commands.
                            */
    UINT32 rcvrnumrspxz : 3;

                            /* Bits[21:19], Access Type=RW/P, default=0x00000002*/

                            /*
                               The expected Receiver Number response to check
                               for retimers X or Z
                            */
    UINT32 rcvrnumrspy : 3;

                            /* Bits[24:22], Access Type=RW/P, default=0x00000004*/

                            /*
                               The expected Receiver Number response to check
                               for retimer Y
                            */
    UINT32 mtype : 3;

                            /* Bits[27:25], Access Type=RW/P, default=0x00000005*/

                            /* 101 - Vender Defined */
    UINT32 usagemd : 1;

                            /* Bits[28:28], Access Type=RW/P, default=0x00000000*/

                            /* See PCIE base spec for definition of usage model */
    UINT32 mp76 : 2;

                            /* Bits[30:29], Access Type=RW/P, default=0x00000000*/

                            /*
                               Margin Payload bits 7 and 6 transmitted in the
                               Control SOS for low latency retimer commands
                            */
    UINT32 vidrspmask : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               When set, the vendor ID check on responses is
                               masked/ignored.
                            */

  } Bits;
  UINT32 Data;

} RTLLCTL3_SB_FBLP_STRUCT;

/* FLXBUSPTHD1_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20000ea8)                                                      */
/*      SPRB0 (0x20000ea8)                                                      */
/*      SPRHBM (0x20000ea8)                                                     */
/*      SPRC0 (0x20000ea8)                                                      */
/*      SPRMCC (0x20000ea8)                                                     */
/*      SPRUCC (0x20000ea8)                                                     */
/* Register default value on SPRA0: 0x01008086                                  */
/* Register default value on SPRB0: 0x01008086                                  */
/* Register default value on SPRHBM: 0x01008086                                 */
/* Register default value on SPRC0: 0x01001E98                                  */
/* Register default value on SPRMCC: 0x01001E98                                 */
/* Register default value on SPRUCC: 0x01001E98                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* Flex Bus Port Designated Vendor-Specific Header 1
*/


#define FLXBUSPTHD1_SB_FBLP_REG 0x2C020EA8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 vid : 16;

                            /* Bits[15:0], Access Type=RO, default=0x00008086*/

                            /* DVSEC Vendor ID */
    UINT32 rev : 4;

                            /* Bits[19:16], Access Type=RO, default=0x00000000*/

                            /* DVSEC Revision */
    UINT32 dvsec_len : 12;

                            /* Bits[31:20], Access Type=RO, default=0x00000010*/

                            /* DVSEC Length */

  } Bits;
  UINT32 Data;

} FLXBUSPTHD1_SB_FBLP_STRUCT;

/* FLXBUSPTHD2_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x10000eac)                                                      */
/*      SPRB0 (0x10000eac)                                                      */
/*      SPRHBM (0x10000eac)                                                     */
/*      SPRC0 (0x10000eac)                                                      */
/*      SPRMCC (0x10000eac)                                                     */
/*      SPRUCC (0x10000eac)                                                     */
/* Register default value on SPRA0: 0x00000007                                  */
/* Register default value on SPRB0: 0x00000007                                  */
/* Register default value on SPRHBM: 0x00000007                                 */
/* Register default value on SPRC0: 0x00000007                                  */
/* Register default value on SPRMCC: 0x00000007                                 */
/* Register default value on SPRUCC: 0x00000007                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* Flex Bus Port Designated Vendor-Specific Header 2
*/


#define FLXBUSPTHD2_SB_FBLP_REG 0x2C010EAC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 dvsec_id : 16;

                            /* Bits[15:0], Access Type=RO, default=0x00000007*/

                            /* DVSEC ID */

  } Bits;
  UINT16 Data;

} FLXBUSPTHD2_SB_FBLP_STRUCT;

/* FLXBUSPTCAP_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x10000eae)                                                      */
/*      SPRB0 (0x10000eae)                                                      */
/*      SPRHBM (0x10000eae)                                                     */
/*      SPRC0 (0x10000eae)                                                      */
/*      SPRMCC (0x10000eae)                                                     */
/*      SPRUCC (0x10000eae)                                                     */
/* Register default value on SPRA0: 0x00000007                                  */
/* Register default value on SPRB0: 0x00000007                                  */
/* Register default value on SPRHBM: 0x00000007                                 */
/* Register default value on SPRC0: 0x00000007                                  */
/* Register default value on SPRMCC: 0x00000007                                 */
/* Register default value on SPRUCC: 0x00000007                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* Flex Bus Port Cap DVSEC
*/


#define FLXBUSPTCAP_SB_FBLP_REG 0x2C010EAE

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 cache_cap : 1;

                            /* Bits[0:0], Access Type=RO/V, default=0x00000001*/

                            /*
                               If set, indicates CXL.cache protocol support
                               when operating in Flex Bus.AL mode.
                            */
    UINT16 io_cap : 1;

                            /* Bits[1:1], Access Type=RO/V, default=0x00000001*/

                            /*
                               If set, indicates CXL.io protocol support when
                               operating in Flex Bus.AL mode. Must be 1.
                            */
    UINT16 mem_cap : 1;

                            /* Bits[2:2], Access Type=RO/V, default=0x00000001*/

                            /*
                               If set, indicates CXL.mem protocol support when
                               operating in Flex Bus.AL mode.
                            */
    UINT16 rsvd : 13;

                            /* Bits[15:3], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT16 Data;

} FLXBUSPTCAP_SB_FBLP_STRUCT;

/* FLXBUSPTCTL_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x10000eb0)                                                      */
/*      SPRB0 (0x10000eb0)                                                      */
/*      SPRHBM (0x10000eb0)                                                     */
/*      SPRC0 (0x10000eb0)                                                      */
/*      SPRMCC (0x10000eb0)                                                     */
/*      SPRUCC (0x10000eb0)                                                     */
/* Register default value on SPRA0: 0x00000002                                  */
/* Register default value on SPRB0: 0x00000002                                  */
/* Register default value on SPRHBM: 0x00000002                                 */
/* Register default value on SPRC0: 0x00000002                                  */
/* Register default value on SPRMCC: 0x00000002                                 */
/* Register default value on SPRUCC: 0x00000002                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Flex Bus Port Control DVSEC
*/


#define FLXBUSPTCTL_SB_FBLP_REG 0x2C010EB0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 cache_en : 1;

                            /* Bits[0:0], Access Type=RW, default=0x00000000*/

                            /*
                               When set, enables CXL.cache protocol operation
                               when in Flex Bus.AL mode.
                            */
    UINT16 io_en : 1;

                            /* Bits[1:1], Access Type=RO, default=0x00000001*/

                            /*
                               When set, enables CXL.io protocol operation when
                               in Flex Bus.AL mode. (Must always be set to 1)
                            */
    UINT16 mem_en : 1;

                            /* Bits[2:2], Access Type=RW, default=0x00000000*/

                            /*
                               When set, enables CXL.mem protocol operation
                               when in Flex Bus.AL mode.
                            */
    UINT16 synchdrbypen : 1;

                            /* Bits[3:3], Access Type=RW, default=0x00000000*/

                            /*
                               When set, enables bypass of the 2-bit sync
                               header by the Flex Bus physical layer when
                               operating in Flex Bus.AL mode. This is a
                               performance optimization.
                            */
    UINT16 driftbuf_en : 1;

                            /* Bits[4:4], Access Type=RW, default=0x00000000*/

                            /*
                               When set, enables drift buffer (instead of
                               elastic buffer) if there is common reference
                               clock.
                            */
    UINT16 rsvd : 3;

                            /* Bits[7:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 rt1_pres : 1;

                            /* Bits[8:8], Access Type=RW, default=0x00000000*/

                            /*
                               When set, indicates presence of retimer1
                               (Retimer X or Z). This bit is defined only for a
                               downstream port. This bit is reserved for an
                               upstream port.
                            */
    UINT16 rt2_pres : 1;

                            /* Bits[9:9], Access Type=RW, default=0x00000000*/

                            /*
                               When set, indicates presence of retimer2
                               (Retimer Y). This bit is defined only for a
                               downstream port. This bit is reserved for an
                               upstream port.
                            */
    UINT16 rsvd_10 : 6;

                            /* Bits[15:10], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT16 Data;

} FLXBUSPTCTL_SB_FBLP_STRUCT;

/* FLXBUSPTSTS_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x10000eb2)                                                      */
/*      SPRB0 (0x10000eb2)                                                      */
/*      SPRHBM (0x10000eb2)                                                     */
/*      SPRC0 (0x10000eb2)                                                      */
/*      SPRMCC (0x10000eb2)                                                     */
/*      SPRUCC (0x10000eb2)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Flex Bus Port Status DVSEC
*/


#define FLXBUSPTSTS_SB_FBLP_REG 0x2C010EB2

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 cache_en : 1;

                            /* Bits[0:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               When set, indicates that CXL.cache protocol
                               operation has been enabled as a result of PCIe
                               alternate protocol negotiation for Flex Bus.
                            */
    UINT16 io_en : 1;

                            /* Bits[1:1], Access Type=RO/V, default=0x00000000*/

                            /*
                               When set, indicates that CXL.io protocol
                               operation has been enabled as a result of PCIe
                               alternate protocol negotiation for Flex Bus.
                            */
    UINT16 mem_en : 1;

                            /* Bits[2:2], Access Type=RO/V, default=0x00000000*/

                            /*
                               When set, indicates that CXL.mem protocol
                               operation has been enabled as a result of PCIe
                               alternate protocol negotiation for Flex Bus.
                            */
    UINT16 synchdrbypen : 1;

                            /* Bits[3:3], Access Type=RO/V, default=0x00000000*/

                            /*
                               When set, indicates that bypass of the 2-bit
                               sync header by the Flex Bus physical layer has
                               been enabled when operating in Flex Bus.AL mode
                               as a result of PCIe alternate protocol
                               negotiation for Flex Bus.
                            */
    UINT16 driftbuf_en : 1;

                            /* Bits[4:4], Access Type=RO/V, default=0x00000000*/

                            /*
                               When set, indicates that physical layer has
                               enabled its drift buffer instead of its elastic
                               buffer.
                            */
    UINT16 rsvd : 3;

                            /* Bits[7:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 ial_cor_frmerr : 1;

                            /* Bits[8:8], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Correctable Procool ID Error. See CXL
                               specification for details.
                            */
    UINT16 ial_uncor_frmerr : 1;

                            /* Bits[9:9], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Uncorrectable Protocol ID Errror. See CXL
                               specification for details.
                            */
    UINT16 ial_unexp_protid : 1;

                            /* Bits[10:10], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               Unexpected Protocol ID Error. When set,
                               indicates that the physical layer dropped a flit
                               with an unexpected protocol ID that is not due
                               to an Uncorrectable Protocol ID Framing Error.
                               See CXL specification for more details.
                            */
    UINT16 rsvd_11 : 5;

                            /* Bits[15:11], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT16 Data;

} FLXBUSPTSTS_SB_FBLP_STRUCT;

/* MARGPTCAP_SB_FBLP_REG supported on:                                          */
/*      SPRA0 (0x10000ee0)                                                      */
/*      SPRB0 (0x10000ee0)                                                      */
/*      SPRHBM (0x10000ee0)                                                     */
/*      SPRC0 (0x10000ee0)                                                      */
/*      SPRMCC (0x10000ee0)                                                     */
/*      SPRUCC (0x10000ee0)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* Margining Port Capability
*/


#define MARGPTCAP_SB_FBLP_REG 0x2C010EE0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 mudsw : 1;

                            /* Bits[0:0], Access Type=RW/L, default=None*/

                            /*
                               If Set, indicates that Margining is partially
                               implemented using Device Driver software.
                               Margining Software Ready indicates when this
                               software is initialized. If Clear, Margining
                               does not require device driver software. In this
                               case the value read from Margining Software
                               Ready is undefined. Note: Lock Key bit is
                               located in the Personality Lock Key Control
                               Register .
                            */
    UINT16 rsvd : 15;

                            /* Bits[15:1], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT16 Data;

} MARGPTCAP_SB_FBLP_STRUCT;

/* MARGPTSTS_SB_FBLP_REG supported on:                                          */
/*      SPRA0 (0x10000ee2)                                                      */
/*      SPRB0 (0x10000ee2)                                                      */
/*      SPRHBM (0x10000ee2)                                                     */
/*      SPRC0 (0x10000ee2)                                                      */
/*      SPRMCC (0x10000ee2)                                                     */
/*      SPRUCC (0x10000ee2)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Margining Port Status
*/


#define MARGPTSTS_SB_FBLP_REG 0x2C010EE2

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 margrdy : 1;

                            /* Bits[0:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Indicates when the Margining feature is ready to
                               accept margining commands. Behavior is undefined
                               if this bit is Clear and, for any Lane, any of
                               the Receiver Number, Margin Type, Usage Model,
                               or Margin Payload fields are written. Refer to
                               Margining Lane Control Register. If Margining
                               uses Driver Software is Set, Margining Ready
                               must be Set no later than 100 ms after the later
                               of Margining Software Ready becoming Set or the
                               link training to 16.0 GT/s. If Margining uses
                               Driver Software is Clear, Margining Ready must
                               be Set no later than 100 ms after the Link
                               trains to 16.0 GT/s. Default value is
                               implementation specific.
                            */
    UINT16 margswrdy : 1;

                            /* Bits[1:1], Access Type=RO/V, default=0x00000000*/

                            /*
                               When Margining uses Driver Software is Set, then
                               this bit, when Set, indicates that the required
                               software has performed the required
                               initialization. The value of this bit is
                               Undefined if Margining uses Driver Software is
                               Clear. The default value of this bit is
                               implementation specific
                            */
    UINT16 rsvd : 14;

                            /* Bits[15:2], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT16 Data;

} MARGPTSTS_SB_FBLP_STRUCT;

/* MARGLNCTL_0_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x10000ee4)                                                      */
/*      SPRB0 (0x10000ee4)                                                      */
/*      SPRHBM (0x10000ee4)                                                     */
/*      SPRC0 (0x10000ee4)                                                      */
/*      SPRMCC (0x10000ee4)                                                     */
/*      SPRUCC (0x10000ee4)                                                     */
/* Register default value on SPRA0: 0x00009C38                                  */
/* Register default value on SPRB0: 0x00009C38                                  */
/* Register default value on SPRHBM: 0x00009C38                                 */
/* Register default value on SPRC0: 0x00009C38                                  */
/* Register default value on SPRMCC: 0x00009C38                                 */
/* Register default value on SPRUCC: 0x00009C38                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Margining Lane Control
*/


#define MARGLNCTL_0_SB_FBLP_REG 0x2C010EE4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 rcvrnum : 3;

                            /* Bits[2:0], Access Type=RW, default=0x00000000*/

                            /*
                               The default value is 000b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 mtype : 3;

                            /* Bits[5:3], Access Type=RW, default=0x00000007*/

                            /*
                               The default value is 111b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 usagemd : 1;

                            /* Bits[6:6], Access Type=RW, default=0x00000000*/

                            /*
                               The default value is 0b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 mp : 8;

                            /* Bits[15:8], Access Type=RW, default=0x0000009C*/

                            /*
                               This field's value is used in conjunction with
                               the Margin Type field. The default value is 9Ch.
                               This field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */

  } Bits;
  UINT16 Data;

} MARGLNCTL_0_SB_FBLP_STRUCT;

/* MARGLNSTS_0_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x10000ee6)                                                      */
/*      SPRB0 (0x10000ee6)                                                      */
/*      SPRHBM (0x10000ee6)                                                     */
/*      SPRC0 (0x10000ee6)                                                      */
/*      SPRMCC (0x10000ee6)                                                     */
/*      SPRUCC (0x10000ee6)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Margining Lane Status
*/


#define MARGLNSTS_0_SB_FBLP_REG 0x2C010EE6

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 rcvrnum : 3;

                            /* Bits[2:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 000b. For Downstream Ports,
                               this field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */
    UINT16 mtype : 3;

                            /* Bits[5:3], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 000b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 usagemd : 1;

                            /* Bits[6:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 0b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 mp : 8;

                            /* Bits[15:8], Access Type=RO/V, default=0x00000000*/

                            /*
                               This field's value is used in conjunction with
                               the Margin Type field. The default value is 00h.
                               This field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */

  } Bits;
  UINT16 Data;

} MARGLNSTS_0_SB_FBLP_STRUCT;

/* MARGLNCTL_1_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x10000ee8)                                                      */
/*      SPRB0 (0x10000ee8)                                                      */
/*      SPRHBM (0x10000ee8)                                                     */
/*      SPRC0 (0x10000ee8)                                                      */
/*      SPRMCC (0x10000ee8)                                                     */
/*      SPRUCC (0x10000ee8)                                                     */
/* Register default value on SPRA0: 0x00009C38                                  */
/* Register default value on SPRB0: 0x00009C38                                  */
/* Register default value on SPRHBM: 0x00009C38                                 */
/* Register default value on SPRC0: 0x00009C38                                  */
/* Register default value on SPRMCC: 0x00009C38                                 */
/* Register default value on SPRUCC: 0x00009C38                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Margining Lane Control
*/


#define MARGLNCTL_1_SB_FBLP_REG 0x2C010EE8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 rcvrnum : 3;

                            /* Bits[2:0], Access Type=RW, default=0x00000000*/

                            /*
                               The default value is 000b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 mtype : 3;

                            /* Bits[5:3], Access Type=RW, default=0x00000007*/

                            /*
                               The default value is 111b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 usagemd : 1;

                            /* Bits[6:6], Access Type=RW, default=0x00000000*/

                            /*
                               The default value is 0b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 mp : 8;

                            /* Bits[15:8], Access Type=RW, default=0x0000009C*/

                            /*
                               This field's value is used in conjunction with
                               the Margin Type field. The default value is 9Ch.
                               This field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */

  } Bits;
  UINT16 Data;

} MARGLNCTL_1_SB_FBLP_STRUCT;

/* MARGLNSTS_1_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x10000eea)                                                      */
/*      SPRB0 (0x10000eea)                                                      */
/*      SPRHBM (0x10000eea)                                                     */
/*      SPRC0 (0x10000eea)                                                      */
/*      SPRMCC (0x10000eea)                                                     */
/*      SPRUCC (0x10000eea)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Margining Lane Status
*/


#define MARGLNSTS_1_SB_FBLP_REG 0x2C010EEA

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 rcvrnum : 3;

                            /* Bits[2:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 000b. For Downstream Ports,
                               this field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */
    UINT16 mtype : 3;

                            /* Bits[5:3], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 000b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 usagemd : 1;

                            /* Bits[6:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 0b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 mp : 8;

                            /* Bits[15:8], Access Type=RO/V, default=0x00000000*/

                            /*
                               This field's value is used in conjunction with
                               the Margin Type field. The default value is 00h.
                               This field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */

  } Bits;
  UINT16 Data;

} MARGLNSTS_1_SB_FBLP_STRUCT;

/* MARGLNCTL_2_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x10000eec)                                                      */
/*      SPRB0 (0x10000eec)                                                      */
/*      SPRHBM (0x10000eec)                                                     */
/*      SPRC0 (0x10000eec)                                                      */
/*      SPRMCC (0x10000eec)                                                     */
/*      SPRUCC (0x10000eec)                                                     */
/* Register default value on SPRA0: 0x00009C38                                  */
/* Register default value on SPRB0: 0x00009C38                                  */
/* Register default value on SPRHBM: 0x00009C38                                 */
/* Register default value on SPRC0: 0x00009C38                                  */
/* Register default value on SPRMCC: 0x00009C38                                 */
/* Register default value on SPRUCC: 0x00009C38                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Margining Lane Control
*/


#define MARGLNCTL_2_SB_FBLP_REG 0x2C010EEC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 rcvrnum : 3;

                            /* Bits[2:0], Access Type=RW, default=0x00000000*/

                            /*
                               The default value is 000b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 mtype : 3;

                            /* Bits[5:3], Access Type=RW, default=0x00000007*/

                            /*
                               The default value is 111b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 usagemd : 1;

                            /* Bits[6:6], Access Type=RW, default=0x00000000*/

                            /*
                               The default value is 0b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 mp : 8;

                            /* Bits[15:8], Access Type=RW, default=0x0000009C*/

                            /*
                               This field's value is used in conjunction with
                               the Margin Type field. The default value is 9Ch.
                               This field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */

  } Bits;
  UINT16 Data;

} MARGLNCTL_2_SB_FBLP_STRUCT;

/* MARGLNSTS_2_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x10000eee)                                                      */
/*      SPRB0 (0x10000eee)                                                      */
/*      SPRHBM (0x10000eee)                                                     */
/*      SPRC0 (0x10000eee)                                                      */
/*      SPRMCC (0x10000eee)                                                     */
/*      SPRUCC (0x10000eee)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Margining Lane Status
*/


#define MARGLNSTS_2_SB_FBLP_REG 0x2C010EEE

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 rcvrnum : 3;

                            /* Bits[2:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 000b. For Downstream Ports,
                               this field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */
    UINT16 mtype : 3;

                            /* Bits[5:3], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 000b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 usagemd : 1;

                            /* Bits[6:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 0b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 mp : 8;

                            /* Bits[15:8], Access Type=RO/V, default=0x00000000*/

                            /*
                               This field's value is used in conjunction with
                               the Margin Type field. The default value is 00h.
                               This field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */

  } Bits;
  UINT16 Data;

} MARGLNSTS_2_SB_FBLP_STRUCT;

/* MARGLNCTL_3_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x10000ef0)                                                      */
/*      SPRB0 (0x10000ef0)                                                      */
/*      SPRHBM (0x10000ef0)                                                     */
/*      SPRC0 (0x10000ef0)                                                      */
/*      SPRMCC (0x10000ef0)                                                     */
/*      SPRUCC (0x10000ef0)                                                     */
/* Register default value on SPRA0: 0x00009C38                                  */
/* Register default value on SPRB0: 0x00009C38                                  */
/* Register default value on SPRHBM: 0x00009C38                                 */
/* Register default value on SPRC0: 0x00009C38                                  */
/* Register default value on SPRMCC: 0x00009C38                                 */
/* Register default value on SPRUCC: 0x00009C38                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Margining Lane Control
*/


#define MARGLNCTL_3_SB_FBLP_REG 0x2C010EF0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 rcvrnum : 3;

                            /* Bits[2:0], Access Type=RW, default=0x00000000*/

                            /*
                               The default value is 000b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 mtype : 3;

                            /* Bits[5:3], Access Type=RW, default=0x00000007*/

                            /*
                               The default value is 111b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 usagemd : 1;

                            /* Bits[6:6], Access Type=RW, default=0x00000000*/

                            /*
                               The default value is 0b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 mp : 8;

                            /* Bits[15:8], Access Type=RW, default=0x0000009C*/

                            /*
                               This field's value is used in conjunction with
                               the Margin Type field. The default value is 9Ch.
                               This field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */

  } Bits;
  UINT16 Data;

} MARGLNCTL_3_SB_FBLP_STRUCT;

/* MARGLNSTS_3_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x10000ef2)                                                      */
/*      SPRB0 (0x10000ef2)                                                      */
/*      SPRHBM (0x10000ef2)                                                     */
/*      SPRC0 (0x10000ef2)                                                      */
/*      SPRMCC (0x10000ef2)                                                     */
/*      SPRUCC (0x10000ef2)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Margining Lane Status
*/


#define MARGLNSTS_3_SB_FBLP_REG 0x2C010EF2

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 rcvrnum : 3;

                            /* Bits[2:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 000b. For Downstream Ports,
                               this field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */
    UINT16 mtype : 3;

                            /* Bits[5:3], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 000b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 usagemd : 1;

                            /* Bits[6:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 0b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 mp : 8;

                            /* Bits[15:8], Access Type=RO/V, default=0x00000000*/

                            /*
                               This field's value is used in conjunction with
                               the Margin Type field. The default value is 00h.
                               This field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */

  } Bits;
  UINT16 Data;

} MARGLNSTS_3_SB_FBLP_STRUCT;

/* MARGLNCTL_4_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x10000ef4)                                                      */
/*      SPRB0 (0x10000ef4)                                                      */
/*      SPRHBM (0x10000ef4)                                                     */
/*      SPRC0 (0x10000ef4)                                                      */
/*      SPRMCC (0x10000ef4)                                                     */
/*      SPRUCC (0x10000ef4)                                                     */
/* Register default value on SPRA0: 0x00009C38                                  */
/* Register default value on SPRB0: 0x00009C38                                  */
/* Register default value on SPRHBM: 0x00009C38                                 */
/* Register default value on SPRC0: 0x00009C38                                  */
/* Register default value on SPRMCC: 0x00009C38                                 */
/* Register default value on SPRUCC: 0x00009C38                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Margining Lane Control
*/


#define MARGLNCTL_4_SB_FBLP_REG 0x2C010EF4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 rcvrnum : 3;

                            /* Bits[2:0], Access Type=RW, default=0x00000000*/

                            /*
                               The default value is 000b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 mtype : 3;

                            /* Bits[5:3], Access Type=RW, default=0x00000007*/

                            /*
                               The default value is 111b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 usagemd : 1;

                            /* Bits[6:6], Access Type=RW, default=0x00000000*/

                            /*
                               The default value is 0b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 mp : 8;

                            /* Bits[15:8], Access Type=RW, default=0x0000009C*/

                            /*
                               This field's value is used in conjunction with
                               the Margin Type field. The default value is 9Ch.
                               This field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */

  } Bits;
  UINT16 Data;

} MARGLNCTL_4_SB_FBLP_STRUCT;

/* MARGLNSTS_4_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x10000ef6)                                                      */
/*      SPRB0 (0x10000ef6)                                                      */
/*      SPRHBM (0x10000ef6)                                                     */
/*      SPRC0 (0x10000ef6)                                                      */
/*      SPRMCC (0x10000ef6)                                                     */
/*      SPRUCC (0x10000ef6)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Margining Lane Status
*/


#define MARGLNSTS_4_SB_FBLP_REG 0x2C010EF6

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 rcvrnum : 3;

                            /* Bits[2:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 000b. For Downstream Ports,
                               this field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */
    UINT16 mtype : 3;

                            /* Bits[5:3], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 000b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 usagemd : 1;

                            /* Bits[6:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 0b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 mp : 8;

                            /* Bits[15:8], Access Type=RO/V, default=0x00000000*/

                            /*
                               This field's value is used in conjunction with
                               the Margin Type field. The default value is 00h.
                               This field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */

  } Bits;
  UINT16 Data;

} MARGLNSTS_4_SB_FBLP_STRUCT;

/* MARGLNCTL_5_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x10000ef8)                                                      */
/*      SPRB0 (0x10000ef8)                                                      */
/*      SPRHBM (0x10000ef8)                                                     */
/*      SPRC0 (0x10000ef8)                                                      */
/*      SPRMCC (0x10000ef8)                                                     */
/*      SPRUCC (0x10000ef8)                                                     */
/* Register default value on SPRA0: 0x00009C38                                  */
/* Register default value on SPRB0: 0x00009C38                                  */
/* Register default value on SPRHBM: 0x00009C38                                 */
/* Register default value on SPRC0: 0x00009C38                                  */
/* Register default value on SPRMCC: 0x00009C38                                 */
/* Register default value on SPRUCC: 0x00009C38                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Margining Lane Control
*/


#define MARGLNCTL_5_SB_FBLP_REG 0x2C010EF8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 rcvrnum : 3;

                            /* Bits[2:0], Access Type=RW, default=0x00000000*/

                            /*
                               The default value is 000b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 mtype : 3;

                            /* Bits[5:3], Access Type=RW, default=0x00000007*/

                            /*
                               The default value is 111b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 usagemd : 1;

                            /* Bits[6:6], Access Type=RW, default=0x00000000*/

                            /*
                               The default value is 0b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 mp : 8;

                            /* Bits[15:8], Access Type=RW, default=0x0000009C*/

                            /*
                               This field's value is used in conjunction with
                               the Margin Type field. The default value is 9Ch.
                               This field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */

  } Bits;
  UINT16 Data;

} MARGLNCTL_5_SB_FBLP_STRUCT;

/* MARGLNSTS_5_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x10000efa)                                                      */
/*      SPRB0 (0x10000efa)                                                      */
/*      SPRHBM (0x10000efa)                                                     */
/*      SPRC0 (0x10000efa)                                                      */
/*      SPRMCC (0x10000efa)                                                     */
/*      SPRUCC (0x10000efa)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Margining Lane Status
*/


#define MARGLNSTS_5_SB_FBLP_REG 0x2C010EFA

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 rcvrnum : 3;

                            /* Bits[2:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 000b. For Downstream Ports,
                               this field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */
    UINT16 mtype : 3;

                            /* Bits[5:3], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 000b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 usagemd : 1;

                            /* Bits[6:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 0b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 mp : 8;

                            /* Bits[15:8], Access Type=RO/V, default=0x00000000*/

                            /*
                               This field's value is used in conjunction with
                               the Margin Type field. The default value is 00h.
                               This field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */

  } Bits;
  UINT16 Data;

} MARGLNSTS_5_SB_FBLP_STRUCT;

/* MARGLNCTL_6_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x10000efc)                                                      */
/*      SPRB0 (0x10000efc)                                                      */
/*      SPRHBM (0x10000efc)                                                     */
/*      SPRC0 (0x10000efc)                                                      */
/*      SPRMCC (0x10000efc)                                                     */
/*      SPRUCC (0x10000efc)                                                     */
/* Register default value on SPRA0: 0x00009C38                                  */
/* Register default value on SPRB0: 0x00009C38                                  */
/* Register default value on SPRHBM: 0x00009C38                                 */
/* Register default value on SPRC0: 0x00009C38                                  */
/* Register default value on SPRMCC: 0x00009C38                                 */
/* Register default value on SPRUCC: 0x00009C38                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Margining Lane Control
*/


#define MARGLNCTL_6_SB_FBLP_REG 0x2C010EFC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 rcvrnum : 3;

                            /* Bits[2:0], Access Type=RW, default=0x00000000*/

                            /*
                               The default value is 000b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 mtype : 3;

                            /* Bits[5:3], Access Type=RW, default=0x00000007*/

                            /*
                               The default value is 111b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 usagemd : 1;

                            /* Bits[6:6], Access Type=RW, default=0x00000000*/

                            /*
                               The default value is 0b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 mp : 8;

                            /* Bits[15:8], Access Type=RW, default=0x0000009C*/

                            /*
                               This field's value is used in conjunction with
                               the Margin Type field. The default value is 9Ch.
                               This field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */

  } Bits;
  UINT16 Data;

} MARGLNCTL_6_SB_FBLP_STRUCT;

/* MARGLNSTS_6_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x10000efe)                                                      */
/*      SPRB0 (0x10000efe)                                                      */
/*      SPRHBM (0x10000efe)                                                     */
/*      SPRC0 (0x10000efe)                                                      */
/*      SPRMCC (0x10000efe)                                                     */
/*      SPRUCC (0x10000efe)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Margining Lane Status
*/


#define MARGLNSTS_6_SB_FBLP_REG 0x2C010EFE

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 rcvrnum : 3;

                            /* Bits[2:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 000b. For Downstream Ports,
                               this field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */
    UINT16 mtype : 3;

                            /* Bits[5:3], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 000b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 usagemd : 1;

                            /* Bits[6:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 0b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 mp : 8;

                            /* Bits[15:8], Access Type=RO/V, default=0x00000000*/

                            /*
                               This field's value is used in conjunction with
                               the Margin Type field. The default value is 00h.
                               This field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */

  } Bits;
  UINT16 Data;

} MARGLNSTS_6_SB_FBLP_STRUCT;

/* MARGLNCTL_7_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x10000f00)                                                      */
/*      SPRB0 (0x10000f00)                                                      */
/*      SPRHBM (0x10000f00)                                                     */
/*      SPRC0 (0x10000f00)                                                      */
/*      SPRMCC (0x10000f00)                                                     */
/*      SPRUCC (0x10000f00)                                                     */
/* Register default value on SPRA0: 0x00009C38                                  */
/* Register default value on SPRB0: 0x00009C38                                  */
/* Register default value on SPRHBM: 0x00009C38                                 */
/* Register default value on SPRC0: 0x00009C38                                  */
/* Register default value on SPRMCC: 0x00009C38                                 */
/* Register default value on SPRUCC: 0x00009C38                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Margining Lane Control
*/


#define MARGLNCTL_7_SB_FBLP_REG 0x2C010F00

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 rcvrnum : 3;

                            /* Bits[2:0], Access Type=RW, default=0x00000000*/

                            /*
                               The default value is 000b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 mtype : 3;

                            /* Bits[5:3], Access Type=RW, default=0x00000007*/

                            /*
                               The default value is 111b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 usagemd : 1;

                            /* Bits[6:6], Access Type=RW, default=0x00000000*/

                            /*
                               The default value is 0b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 mp : 8;

                            /* Bits[15:8], Access Type=RW, default=0x0000009C*/

                            /*
                               This field's value is used in conjunction with
                               the Margin Type field. The default value is 9Ch.
                               This field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */

  } Bits;
  UINT16 Data;

} MARGLNCTL_7_SB_FBLP_STRUCT;

/* MARGLNSTS_7_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x10000f02)                                                      */
/*      SPRB0 (0x10000f02)                                                      */
/*      SPRHBM (0x10000f02)                                                     */
/*      SPRC0 (0x10000f02)                                                      */
/*      SPRMCC (0x10000f02)                                                     */
/*      SPRUCC (0x10000f02)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Margining Lane Status
*/


#define MARGLNSTS_7_SB_FBLP_REG 0x2C010F02

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 rcvrnum : 3;

                            /* Bits[2:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 000b. For Downstream Ports,
                               this field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */
    UINT16 mtype : 3;

                            /* Bits[5:3], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 000b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 usagemd : 1;

                            /* Bits[6:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 0b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 mp : 8;

                            /* Bits[15:8], Access Type=RO/V, default=0x00000000*/

                            /*
                               This field's value is used in conjunction with
                               the Margin Type field. The default value is 00h.
                               This field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */

  } Bits;
  UINT16 Data;

} MARGLNSTS_7_SB_FBLP_STRUCT;

/* MARGLNCTL_8_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x10000f04)                                                      */
/*      SPRB0 (0x10000f04)                                                      */
/*      SPRHBM (0x10000f04)                                                     */
/*      SPRC0 (0x10000f04)                                                      */
/*      SPRMCC (0x10000f04)                                                     */
/*      SPRUCC (0x10000f04)                                                     */
/* Register default value on SPRA0: 0x00009C38                                  */
/* Register default value on SPRB0: 0x00009C38                                  */
/* Register default value on SPRHBM: 0x00009C38                                 */
/* Register default value on SPRC0: 0x00009C38                                  */
/* Register default value on SPRMCC: 0x00009C38                                 */
/* Register default value on SPRUCC: 0x00009C38                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Margining Lane Control
*/


#define MARGLNCTL_8_SB_FBLP_REG 0x2C010F04

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 rcvrnum : 3;

                            /* Bits[2:0], Access Type=RW, default=0x00000000*/

                            /*
                               The default value is 000b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 mtype : 3;

                            /* Bits[5:3], Access Type=RW, default=0x00000007*/

                            /*
                               The default value is 111b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 usagemd : 1;

                            /* Bits[6:6], Access Type=RW, default=0x00000000*/

                            /*
                               The default value is 0b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 mp : 8;

                            /* Bits[15:8], Access Type=RW, default=0x0000009C*/

                            /*
                               This field's value is used in conjunction with
                               the Margin Type field. The default value is 9Ch.
                               This field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */

  } Bits;
  UINT16 Data;

} MARGLNCTL_8_SB_FBLP_STRUCT;

/* MARGLNSTS_8_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x10000f06)                                                      */
/*      SPRB0 (0x10000f06)                                                      */
/*      SPRHBM (0x10000f06)                                                     */
/*      SPRC0 (0x10000f06)                                                      */
/*      SPRMCC (0x10000f06)                                                     */
/*      SPRUCC (0x10000f06)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Margining Lane Status
*/


#define MARGLNSTS_8_SB_FBLP_REG 0x2C010F06

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 rcvrnum : 3;

                            /* Bits[2:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 000b. For Downstream Ports,
                               this field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */
    UINT16 mtype : 3;

                            /* Bits[5:3], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 000b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 usagemd : 1;

                            /* Bits[6:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 0b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 mp : 8;

                            /* Bits[15:8], Access Type=RO/V, default=0x00000000*/

                            /*
                               This field's value is used in conjunction with
                               the Margin Type field. The default value is 00h.
                               This field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */

  } Bits;
  UINT16 Data;

} MARGLNSTS_8_SB_FBLP_STRUCT;

/* MARGLNCTL_9_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x10000f08)                                                      */
/*      SPRB0 (0x10000f08)                                                      */
/*      SPRHBM (0x10000f08)                                                     */
/*      SPRC0 (0x10000f08)                                                      */
/*      SPRMCC (0x10000f08)                                                     */
/*      SPRUCC (0x10000f08)                                                     */
/* Register default value on SPRA0: 0x00009C38                                  */
/* Register default value on SPRB0: 0x00009C38                                  */
/* Register default value on SPRHBM: 0x00009C38                                 */
/* Register default value on SPRC0: 0x00009C38                                  */
/* Register default value on SPRMCC: 0x00009C38                                 */
/* Register default value on SPRUCC: 0x00009C38                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Margining Lane Control
*/


#define MARGLNCTL_9_SB_FBLP_REG 0x2C010F08

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 rcvrnum : 3;

                            /* Bits[2:0], Access Type=RW, default=0x00000000*/

                            /*
                               The default value is 000b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 mtype : 3;

                            /* Bits[5:3], Access Type=RW, default=0x00000007*/

                            /*
                               The default value is 111b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 usagemd : 1;

                            /* Bits[6:6], Access Type=RW, default=0x00000000*/

                            /*
                               The default value is 0b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 mp : 8;

                            /* Bits[15:8], Access Type=RW, default=0x0000009C*/

                            /*
                               This field's value is used in conjunction with
                               the Margin Type field. The default value is 9Ch.
                               This field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */

  } Bits;
  UINT16 Data;

} MARGLNCTL_9_SB_FBLP_STRUCT;

/* MARGLNSTS_9_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x10000f0a)                                                      */
/*      SPRB0 (0x10000f0a)                                                      */
/*      SPRHBM (0x10000f0a)                                                     */
/*      SPRC0 (0x10000f0a)                                                      */
/*      SPRMCC (0x10000f0a)                                                     */
/*      SPRUCC (0x10000f0a)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Margining Lane Status
*/


#define MARGLNSTS_9_SB_FBLP_REG 0x2C010F0A

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 rcvrnum : 3;

                            /* Bits[2:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 000b. For Downstream Ports,
                               this field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */
    UINT16 mtype : 3;

                            /* Bits[5:3], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 000b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 usagemd : 1;

                            /* Bits[6:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 0b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 mp : 8;

                            /* Bits[15:8], Access Type=RO/V, default=0x00000000*/

                            /*
                               This field's value is used in conjunction with
                               the Margin Type field. The default value is 00h.
                               This field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */

  } Bits;
  UINT16 Data;

} MARGLNSTS_9_SB_FBLP_STRUCT;

/* MARGLNCTL_10_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x10000f0c)                                                      */
/*      SPRB0 (0x10000f0c)                                                      */
/*      SPRHBM (0x10000f0c)                                                     */
/*      SPRC0 (0x10000f0c)                                                      */
/*      SPRMCC (0x10000f0c)                                                     */
/*      SPRUCC (0x10000f0c)                                                     */
/* Register default value on SPRA0: 0x00009C38                                  */
/* Register default value on SPRB0: 0x00009C38                                  */
/* Register default value on SPRHBM: 0x00009C38                                 */
/* Register default value on SPRC0: 0x00009C38                                  */
/* Register default value on SPRMCC: 0x00009C38                                 */
/* Register default value on SPRUCC: 0x00009C38                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Margining Lane Control
*/


#define MARGLNCTL_10_SB_FBLP_REG 0x2C010F0C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 rcvrnum : 3;

                            /* Bits[2:0], Access Type=RW, default=0x00000000*/

                            /*
                               The default value is 000b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 mtype : 3;

                            /* Bits[5:3], Access Type=RW, default=0x00000007*/

                            /*
                               The default value is 111b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 usagemd : 1;

                            /* Bits[6:6], Access Type=RW, default=0x00000000*/

                            /*
                               The default value is 0b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 mp : 8;

                            /* Bits[15:8], Access Type=RW, default=0x0000009C*/

                            /*
                               This field's value is used in conjunction with
                               the Margin Type field. The default value is 9Ch.
                               This field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */

  } Bits;
  UINT16 Data;

} MARGLNCTL_10_SB_FBLP_STRUCT;

/* MARGLNSTS_10_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x10000f0e)                                                      */
/*      SPRB0 (0x10000f0e)                                                      */
/*      SPRHBM (0x10000f0e)                                                     */
/*      SPRC0 (0x10000f0e)                                                      */
/*      SPRMCC (0x10000f0e)                                                     */
/*      SPRUCC (0x10000f0e)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Margining Lane Status
*/


#define MARGLNSTS_10_SB_FBLP_REG 0x2C010F0E

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 rcvrnum : 3;

                            /* Bits[2:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 000b. For Downstream Ports,
                               this field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */
    UINT16 mtype : 3;

                            /* Bits[5:3], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 000b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 usagemd : 1;

                            /* Bits[6:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 0b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 mp : 8;

                            /* Bits[15:8], Access Type=RO/V, default=0x00000000*/

                            /*
                               This field's value is used in conjunction with
                               the Margin Type field. The default value is 00h.
                               This field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */

  } Bits;
  UINT16 Data;

} MARGLNSTS_10_SB_FBLP_STRUCT;

/* MARGLNCTL_11_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x10000f10)                                                      */
/*      SPRB0 (0x10000f10)                                                      */
/*      SPRHBM (0x10000f10)                                                     */
/*      SPRC0 (0x10000f10)                                                      */
/*      SPRMCC (0x10000f10)                                                     */
/*      SPRUCC (0x10000f10)                                                     */
/* Register default value on SPRA0: 0x00009C38                                  */
/* Register default value on SPRB0: 0x00009C38                                  */
/* Register default value on SPRHBM: 0x00009C38                                 */
/* Register default value on SPRC0: 0x00009C38                                  */
/* Register default value on SPRMCC: 0x00009C38                                 */
/* Register default value on SPRUCC: 0x00009C38                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Margining Lane Control
*/


#define MARGLNCTL_11_SB_FBLP_REG 0x2C010F10

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 rcvrnum : 3;

                            /* Bits[2:0], Access Type=RW, default=0x00000000*/

                            /*
                               The default value is 000b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 mtype : 3;

                            /* Bits[5:3], Access Type=RW, default=0x00000007*/

                            /*
                               The default value is 111b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 usagemd : 1;

                            /* Bits[6:6], Access Type=RW, default=0x00000000*/

                            /*
                               The default value is 0b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 mp : 8;

                            /* Bits[15:8], Access Type=RW, default=0x0000009C*/

                            /*
                               This field's value is used in conjunction with
                               the Margin Type field. The default value is 9Ch.
                               This field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */

  } Bits;
  UINT16 Data;

} MARGLNCTL_11_SB_FBLP_STRUCT;

/* MARGLNSTS_11_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x10000f12)                                                      */
/*      SPRB0 (0x10000f12)                                                      */
/*      SPRHBM (0x10000f12)                                                     */
/*      SPRC0 (0x10000f12)                                                      */
/*      SPRMCC (0x10000f12)                                                     */
/*      SPRUCC (0x10000f12)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Margining Lane Status
*/


#define MARGLNSTS_11_SB_FBLP_REG 0x2C010F12

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 rcvrnum : 3;

                            /* Bits[2:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 000b. For Downstream Ports,
                               this field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */
    UINT16 mtype : 3;

                            /* Bits[5:3], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 000b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 usagemd : 1;

                            /* Bits[6:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 0b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 mp : 8;

                            /* Bits[15:8], Access Type=RO/V, default=0x00000000*/

                            /*
                               This field's value is used in conjunction with
                               the Margin Type field. The default value is 00h.
                               This field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */

  } Bits;
  UINT16 Data;

} MARGLNSTS_11_SB_FBLP_STRUCT;

/* MARGLNCTL_12_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x10000f14)                                                      */
/*      SPRB0 (0x10000f14)                                                      */
/*      SPRHBM (0x10000f14)                                                     */
/*      SPRC0 (0x10000f14)                                                      */
/*      SPRMCC (0x10000f14)                                                     */
/*      SPRUCC (0x10000f14)                                                     */
/* Register default value on SPRA0: 0x00009C38                                  */
/* Register default value on SPRB0: 0x00009C38                                  */
/* Register default value on SPRHBM: 0x00009C38                                 */
/* Register default value on SPRC0: 0x00009C38                                  */
/* Register default value on SPRMCC: 0x00009C38                                 */
/* Register default value on SPRUCC: 0x00009C38                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Margining Lane Control
*/


#define MARGLNCTL_12_SB_FBLP_REG 0x2C010F14

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 rcvrnum : 3;

                            /* Bits[2:0], Access Type=RW, default=0x00000000*/

                            /*
                               The default value is 000b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 mtype : 3;

                            /* Bits[5:3], Access Type=RW, default=0x00000007*/

                            /*
                               The default value is 111b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 usagemd : 1;

                            /* Bits[6:6], Access Type=RW, default=0x00000000*/

                            /*
                               The default value is 0b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 mp : 8;

                            /* Bits[15:8], Access Type=RW, default=0x0000009C*/

                            /*
                               This field's value is used in conjunction with
                               the Margin Type field. The default value is 9Ch.
                               This field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */

  } Bits;
  UINT16 Data;

} MARGLNCTL_12_SB_FBLP_STRUCT;

/* MARGLNSTS_12_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x10000f16)                                                      */
/*      SPRB0 (0x10000f16)                                                      */
/*      SPRHBM (0x10000f16)                                                     */
/*      SPRC0 (0x10000f16)                                                      */
/*      SPRMCC (0x10000f16)                                                     */
/*      SPRUCC (0x10000f16)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Margining Lane Status
*/


#define MARGLNSTS_12_SB_FBLP_REG 0x2C010F16

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 rcvrnum : 3;

                            /* Bits[2:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 000b. For Downstream Ports,
                               this field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */
    UINT16 mtype : 3;

                            /* Bits[5:3], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 000b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 usagemd : 1;

                            /* Bits[6:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 0b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 mp : 8;

                            /* Bits[15:8], Access Type=RO/V, default=0x00000000*/

                            /*
                               This field's value is used in conjunction with
                               the Margin Type field. The default value is 00h.
                               This field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */

  } Bits;
  UINT16 Data;

} MARGLNSTS_12_SB_FBLP_STRUCT;

/* MARGLNCTL_13_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x10000f18)                                                      */
/*      SPRB0 (0x10000f18)                                                      */
/*      SPRHBM (0x10000f18)                                                     */
/*      SPRC0 (0x10000f18)                                                      */
/*      SPRMCC (0x10000f18)                                                     */
/*      SPRUCC (0x10000f18)                                                     */
/* Register default value on SPRA0: 0x00009C38                                  */
/* Register default value on SPRB0: 0x00009C38                                  */
/* Register default value on SPRHBM: 0x00009C38                                 */
/* Register default value on SPRC0: 0x00009C38                                  */
/* Register default value on SPRMCC: 0x00009C38                                 */
/* Register default value on SPRUCC: 0x00009C38                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Margining Lane Control
*/


#define MARGLNCTL_13_SB_FBLP_REG 0x2C010F18

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 rcvrnum : 3;

                            /* Bits[2:0], Access Type=RW, default=0x00000000*/

                            /*
                               The default value is 000b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 mtype : 3;

                            /* Bits[5:3], Access Type=RW, default=0x00000007*/

                            /*
                               The default value is 111b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 usagemd : 1;

                            /* Bits[6:6], Access Type=RW, default=0x00000000*/

                            /*
                               The default value is 0b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 mp : 8;

                            /* Bits[15:8], Access Type=RW, default=0x0000009C*/

                            /*
                               This field's value is used in conjunction with
                               the Margin Type field. The default value is 9Ch.
                               This field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */

  } Bits;
  UINT16 Data;

} MARGLNCTL_13_SB_FBLP_STRUCT;

/* MARGLNSTS_13_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x10000f1a)                                                      */
/*      SPRB0 (0x10000f1a)                                                      */
/*      SPRHBM (0x10000f1a)                                                     */
/*      SPRC0 (0x10000f1a)                                                      */
/*      SPRMCC (0x10000f1a)                                                     */
/*      SPRUCC (0x10000f1a)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Margining Lane Status
*/


#define MARGLNSTS_13_SB_FBLP_REG 0x2C010F1A

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 rcvrnum : 3;

                            /* Bits[2:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 000b. For Downstream Ports,
                               this field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */
    UINT16 mtype : 3;

                            /* Bits[5:3], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 000b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 usagemd : 1;

                            /* Bits[6:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 0b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 mp : 8;

                            /* Bits[15:8], Access Type=RO/V, default=0x00000000*/

                            /*
                               This field's value is used in conjunction with
                               the Margin Type field. The default value is 00h.
                               This field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */

  } Bits;
  UINT16 Data;

} MARGLNSTS_13_SB_FBLP_STRUCT;

/* MARGLNCTL_14_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x10000f1c)                                                      */
/*      SPRB0 (0x10000f1c)                                                      */
/*      SPRHBM (0x10000f1c)                                                     */
/*      SPRC0 (0x10000f1c)                                                      */
/*      SPRMCC (0x10000f1c)                                                     */
/*      SPRUCC (0x10000f1c)                                                     */
/* Register default value on SPRA0: 0x00009C38                                  */
/* Register default value on SPRB0: 0x00009C38                                  */
/* Register default value on SPRHBM: 0x00009C38                                 */
/* Register default value on SPRC0: 0x00009C38                                  */
/* Register default value on SPRMCC: 0x00009C38                                 */
/* Register default value on SPRUCC: 0x00009C38                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Margining Lane Control
*/


#define MARGLNCTL_14_SB_FBLP_REG 0x2C010F1C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 rcvrnum : 3;

                            /* Bits[2:0], Access Type=RW, default=0x00000000*/

                            /*
                               The default value is 000b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 mtype : 3;

                            /* Bits[5:3], Access Type=RW, default=0x00000007*/

                            /*
                               The default value is 111b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 usagemd : 1;

                            /* Bits[6:6], Access Type=RW, default=0x00000000*/

                            /*
                               The default value is 0b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 mp : 8;

                            /* Bits[15:8], Access Type=RW, default=0x0000009C*/

                            /*
                               This field's value is used in conjunction with
                               the Margin Type field. The default value is 9Ch.
                               This field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */

  } Bits;
  UINT16 Data;

} MARGLNCTL_14_SB_FBLP_STRUCT;

/* MARGLNSTS_14_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x10000f1e)                                                      */
/*      SPRB0 (0x10000f1e)                                                      */
/*      SPRHBM (0x10000f1e)                                                     */
/*      SPRC0 (0x10000f1e)                                                      */
/*      SPRMCC (0x10000f1e)                                                     */
/*      SPRUCC (0x10000f1e)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Margining Lane Status
*/


#define MARGLNSTS_14_SB_FBLP_REG 0x2C010F1E

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 rcvrnum : 3;

                            /* Bits[2:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 000b. For Downstream Ports,
                               this field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */
    UINT16 mtype : 3;

                            /* Bits[5:3], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 000b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 usagemd : 1;

                            /* Bits[6:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 0b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 mp : 8;

                            /* Bits[15:8], Access Type=RO/V, default=0x00000000*/

                            /*
                               This field's value is used in conjunction with
                               the Margin Type field. The default value is 00h.
                               This field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */

  } Bits;
  UINT16 Data;

} MARGLNSTS_14_SB_FBLP_STRUCT;

/* MARGLNCTL_15_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x10000f20)                                                      */
/*      SPRB0 (0x10000f20)                                                      */
/*      SPRHBM (0x10000f20)                                                     */
/*      SPRC0 (0x10000f20)                                                      */
/*      SPRMCC (0x10000f20)                                                     */
/*      SPRUCC (0x10000f20)                                                     */
/* Register default value on SPRA0: 0x00009C38                                  */
/* Register default value on SPRB0: 0x00009C38                                  */
/* Register default value on SPRHBM: 0x00009C38                                 */
/* Register default value on SPRC0: 0x00009C38                                  */
/* Register default value on SPRMCC: 0x00009C38                                 */
/* Register default value on SPRUCC: 0x00009C38                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Margining Lane Control
*/


#define MARGLNCTL_15_SB_FBLP_REG 0x2C010F20

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 rcvrnum : 3;

                            /* Bits[2:0], Access Type=RW, default=0x00000000*/

                            /*
                               The default value is 000b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 mtype : 3;

                            /* Bits[5:3], Access Type=RW, default=0x00000007*/

                            /*
                               The default value is 111b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 usagemd : 1;

                            /* Bits[6:6], Access Type=RW, default=0x00000000*/

                            /*
                               The default value is 0b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 mp : 8;

                            /* Bits[15:8], Access Type=RW, default=0x0000009C*/

                            /*
                               This field's value is used in conjunction with
                               the Margin Type field. The default value is 9Ch.
                               This field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */

  } Bits;
  UINT16 Data;

} MARGLNCTL_15_SB_FBLP_STRUCT;

/* MARGLNSTS_15_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x10000f22)                                                      */
/*      SPRB0 (0x10000f22)                                                      */
/*      SPRHBM (0x10000f22)                                                     */
/*      SPRC0 (0x10000f22)                                                      */
/*      SPRMCC (0x10000f22)                                                     */
/*      SPRUCC (0x10000f22)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Margining Lane Status
*/


#define MARGLNSTS_15_SB_FBLP_REG 0x2C010F22

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 rcvrnum : 3;

                            /* Bits[2:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 000b. For Downstream Ports,
                               this field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */
    UINT16 mtype : 3;

                            /* Bits[5:3], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 000b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 usagemd : 1;

                            /* Bits[6:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               The default value is 0b. This field must be
                               reset to the default value if the Port goes to
                               DL_Down status.
                            */
    UINT16 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 mp : 8;

                            /* Bits[15:8], Access Type=RO/V, default=0x00000000*/

                            /*
                               This field's value is used in conjunction with
                               the Margin Type field. The default value is 00h.
                               This field must be reset to the default value if
                               the Port goes to DL_Down status.
                            */

  } Bits;
  UINT16 Data;

} MARGLNSTS_15_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_LSB_0_N0_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x20001000)                                                      */
/*      SPRB0 (0x20001000)                                                      */
/*      SPRHBM (0x20001000)                                                     */
/*      SPRC0 (0x20001000)                                                      */
/*      SPRMCC (0x20001000)                                                     */
/*      SPRUCC (0x20001000)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_LSB_0
*/


#define CR_LCEG3_CHK_SLATE_LSB_0_N0_SB_FBLP_REG 0x2C021000

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_lsb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_LSB_0_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_LSB_0_N1_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x20001004)                                                      */
/*      SPRB0 (0x20001004)                                                      */
/*      SPRHBM (0x20001004)                                                     */
/*      SPRC0 (0x20001004)                                                      */
/*      SPRMCC (0x20001004)                                                     */
/*      SPRUCC (0x20001004)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_LSB_0
*/


#define CR_LCEG3_CHK_SLATE_LSB_0_N1_SB_FBLP_REG 0x2C021004

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_lsb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_LSB_0_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_LSB_1_N0_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x20001008)                                                      */
/*      SPRB0 (0x20001008)                                                      */
/*      SPRHBM (0x20001008)                                                     */
/*      SPRC0 (0x20001008)                                                      */
/*      SPRMCC (0x20001008)                                                     */
/*      SPRUCC (0x20001008)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_LSB_1
*/


#define CR_LCEG3_CHK_SLATE_LSB_1_N0_SB_FBLP_REG 0x2C021008

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_lsb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_LSB_1_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_LSB_1_N1_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x2000100c)                                                      */
/*      SPRB0 (0x2000100c)                                                      */
/*      SPRHBM (0x2000100c)                                                     */
/*      SPRC0 (0x2000100c)                                                      */
/*      SPRMCC (0x2000100c)                                                     */
/*      SPRUCC (0x2000100c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_LSB_1
*/


#define CR_LCEG3_CHK_SLATE_LSB_1_N1_SB_FBLP_REG 0x2C02100C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_lsb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_LSB_1_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_LSB_2_N0_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x20001010)                                                      */
/*      SPRB0 (0x20001010)                                                      */
/*      SPRHBM (0x20001010)                                                     */
/*      SPRC0 (0x20001010)                                                      */
/*      SPRMCC (0x20001010)                                                     */
/*      SPRUCC (0x20001010)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_LSB_2
*/


#define CR_LCEG3_CHK_SLATE_LSB_2_N0_SB_FBLP_REG 0x2C021010

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_lsb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_LSB_2_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_LSB_2_N1_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x20001014)                                                      */
/*      SPRB0 (0x20001014)                                                      */
/*      SPRHBM (0x20001014)                                                     */
/*      SPRC0 (0x20001014)                                                      */
/*      SPRMCC (0x20001014)                                                     */
/*      SPRUCC (0x20001014)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_LSB_2
*/


#define CR_LCEG3_CHK_SLATE_LSB_2_N1_SB_FBLP_REG 0x2C021014

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_lsb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_LSB_2_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_LSB_3_N0_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x20001018)                                                      */
/*      SPRB0 (0x20001018)                                                      */
/*      SPRHBM (0x20001018)                                                     */
/*      SPRC0 (0x20001018)                                                      */
/*      SPRMCC (0x20001018)                                                     */
/*      SPRUCC (0x20001018)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_LSB_3
*/


#define CR_LCEG3_CHK_SLATE_LSB_3_N0_SB_FBLP_REG 0x2C021018

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_lsb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_LSB_3_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_LSB_3_N1_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x2000101c)                                                      */
/*      SPRB0 (0x2000101c)                                                      */
/*      SPRHBM (0x2000101c)                                                     */
/*      SPRC0 (0x2000101c)                                                      */
/*      SPRMCC (0x2000101c)                                                     */
/*      SPRUCC (0x2000101c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_LSB_3
*/


#define CR_LCEG3_CHK_SLATE_LSB_3_N1_SB_FBLP_REG 0x2C02101C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_lsb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_LSB_3_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_LSB_4_N0_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x20001020)                                                      */
/*      SPRB0 (0x20001020)                                                      */
/*      SPRHBM (0x20001020)                                                     */
/*      SPRC0 (0x20001020)                                                      */
/*      SPRMCC (0x20001020)                                                     */
/*      SPRUCC (0x20001020)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_LSB_4
*/


#define CR_LCEG3_CHK_SLATE_LSB_4_N0_SB_FBLP_REG 0x2C021020

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_lsb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_LSB_4_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_LSB_4_N1_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x20001024)                                                      */
/*      SPRB0 (0x20001024)                                                      */
/*      SPRHBM (0x20001024)                                                     */
/*      SPRC0 (0x20001024)                                                      */
/*      SPRMCC (0x20001024)                                                     */
/*      SPRUCC (0x20001024)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_LSB_4
*/


#define CR_LCEG3_CHK_SLATE_LSB_4_N1_SB_FBLP_REG 0x2C021024

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_lsb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_LSB_4_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_LSB_5_N0_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x20001028)                                                      */
/*      SPRB0 (0x20001028)                                                      */
/*      SPRHBM (0x20001028)                                                     */
/*      SPRC0 (0x20001028)                                                      */
/*      SPRMCC (0x20001028)                                                     */
/*      SPRUCC (0x20001028)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_LSB_5
*/


#define CR_LCEG3_CHK_SLATE_LSB_5_N0_SB_FBLP_REG 0x2C021028

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_lsb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_LSB_5_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_LSB_5_N1_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x2000102c)                                                      */
/*      SPRB0 (0x2000102c)                                                      */
/*      SPRHBM (0x2000102c)                                                     */
/*      SPRC0 (0x2000102c)                                                      */
/*      SPRMCC (0x2000102c)                                                     */
/*      SPRUCC (0x2000102c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_LSB_5
*/


#define CR_LCEG3_CHK_SLATE_LSB_5_N1_SB_FBLP_REG 0x2C02102C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_lsb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_LSB_5_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_LSB_6_N0_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x20001030)                                                      */
/*      SPRB0 (0x20001030)                                                      */
/*      SPRHBM (0x20001030)                                                     */
/*      SPRC0 (0x20001030)                                                      */
/*      SPRMCC (0x20001030)                                                     */
/*      SPRUCC (0x20001030)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_LSB_6
*/


#define CR_LCEG3_CHK_SLATE_LSB_6_N0_SB_FBLP_REG 0x2C021030

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_lsb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_LSB_6_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_LSB_6_N1_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x20001034)                                                      */
/*      SPRB0 (0x20001034)                                                      */
/*      SPRHBM (0x20001034)                                                     */
/*      SPRC0 (0x20001034)                                                      */
/*      SPRMCC (0x20001034)                                                     */
/*      SPRUCC (0x20001034)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_LSB_6
*/


#define CR_LCEG3_CHK_SLATE_LSB_6_N1_SB_FBLP_REG 0x2C021034

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_lsb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_LSB_6_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_LSB_7_N0_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x20001038)                                                      */
/*      SPRB0 (0x20001038)                                                      */
/*      SPRHBM (0x20001038)                                                     */
/*      SPRC0 (0x20001038)                                                      */
/*      SPRMCC (0x20001038)                                                     */
/*      SPRUCC (0x20001038)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_LSB_7
*/


#define CR_LCEG3_CHK_SLATE_LSB_7_N0_SB_FBLP_REG 0x2C021038

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_lsb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_LSB_7_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_LSB_7_N1_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x2000103c)                                                      */
/*      SPRB0 (0x2000103c)                                                      */
/*      SPRHBM (0x2000103c)                                                     */
/*      SPRC0 (0x2000103c)                                                      */
/*      SPRMCC (0x2000103c)                                                     */
/*      SPRUCC (0x2000103c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_LSB_7
*/


#define CR_LCEG3_CHK_SLATE_LSB_7_N1_SB_FBLP_REG 0x2C02103C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_lsb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_LSB_7_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_LSB_8_N0_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x20001040)                                                      */
/*      SPRB0 (0x20001040)                                                      */
/*      SPRHBM (0x20001040)                                                     */
/*      SPRC0 (0x20001040)                                                      */
/*      SPRMCC (0x20001040)                                                     */
/*      SPRUCC (0x20001040)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_LSB_8
*/


#define CR_LCEG3_CHK_SLATE_LSB_8_N0_SB_FBLP_REG 0x2C021040

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_lsb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_LSB_8_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_LSB_8_N1_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x20001044)                                                      */
/*      SPRB0 (0x20001044)                                                      */
/*      SPRHBM (0x20001044)                                                     */
/*      SPRC0 (0x20001044)                                                      */
/*      SPRMCC (0x20001044)                                                     */
/*      SPRUCC (0x20001044)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_LSB_8
*/


#define CR_LCEG3_CHK_SLATE_LSB_8_N1_SB_FBLP_REG 0x2C021044

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_lsb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_LSB_8_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_LSB_9_N0_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x20001048)                                                      */
/*      SPRB0 (0x20001048)                                                      */
/*      SPRHBM (0x20001048)                                                     */
/*      SPRC0 (0x20001048)                                                      */
/*      SPRMCC (0x20001048)                                                     */
/*      SPRUCC (0x20001048)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_LSB_9
*/


#define CR_LCEG3_CHK_SLATE_LSB_9_N0_SB_FBLP_REG 0x2C021048

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_lsb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_LSB_9_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_LSB_9_N1_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x2000104c)                                                      */
/*      SPRB0 (0x2000104c)                                                      */
/*      SPRHBM (0x2000104c)                                                     */
/*      SPRC0 (0x2000104c)                                                      */
/*      SPRMCC (0x2000104c)                                                     */
/*      SPRUCC (0x2000104c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_LSB_9
*/


#define CR_LCEG3_CHK_SLATE_LSB_9_N1_SB_FBLP_REG 0x2C02104C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_lsb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_LSB_9_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_LSB_10_N0_SB_FBLP_REG supported on:                       */
/*      SPRA0 (0x20001050)                                                      */
/*      SPRB0 (0x20001050)                                                      */
/*      SPRHBM (0x20001050)                                                     */
/*      SPRC0 (0x20001050)                                                      */
/*      SPRMCC (0x20001050)                                                     */
/*      SPRUCC (0x20001050)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_LSB_10
*/


#define CR_LCEG3_CHK_SLATE_LSB_10_N0_SB_FBLP_REG 0x2C021050

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_lsb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_LSB_10_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_LSB_10_N1_SB_FBLP_REG supported on:                       */
/*      SPRA0 (0x20001054)                                                      */
/*      SPRB0 (0x20001054)                                                      */
/*      SPRHBM (0x20001054)                                                     */
/*      SPRC0 (0x20001054)                                                      */
/*      SPRMCC (0x20001054)                                                     */
/*      SPRUCC (0x20001054)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_LSB_10
*/


#define CR_LCEG3_CHK_SLATE_LSB_10_N1_SB_FBLP_REG 0x2C021054

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_lsb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_LSB_10_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_LSB_11_N0_SB_FBLP_REG supported on:                       */
/*      SPRA0 (0x20001058)                                                      */
/*      SPRB0 (0x20001058)                                                      */
/*      SPRHBM (0x20001058)                                                     */
/*      SPRC0 (0x20001058)                                                      */
/*      SPRMCC (0x20001058)                                                     */
/*      SPRUCC (0x20001058)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_LSB_11
*/


#define CR_LCEG3_CHK_SLATE_LSB_11_N0_SB_FBLP_REG 0x2C021058

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_lsb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_LSB_11_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_LSB_11_N1_SB_FBLP_REG supported on:                       */
/*      SPRA0 (0x2000105c)                                                      */
/*      SPRB0 (0x2000105c)                                                      */
/*      SPRHBM (0x2000105c)                                                     */
/*      SPRC0 (0x2000105c)                                                      */
/*      SPRMCC (0x2000105c)                                                     */
/*      SPRUCC (0x2000105c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_LSB_11
*/


#define CR_LCEG3_CHK_SLATE_LSB_11_N1_SB_FBLP_REG 0x2C02105C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_lsb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_LSB_11_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_LSB_12_N0_SB_FBLP_REG supported on:                       */
/*      SPRA0 (0x20001060)                                                      */
/*      SPRB0 (0x20001060)                                                      */
/*      SPRHBM (0x20001060)                                                     */
/*      SPRC0 (0x20001060)                                                      */
/*      SPRMCC (0x20001060)                                                     */
/*      SPRUCC (0x20001060)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_LSB_12
*/


#define CR_LCEG3_CHK_SLATE_LSB_12_N0_SB_FBLP_REG 0x2C021060

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_lsb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_LSB_12_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_LSB_12_N1_SB_FBLP_REG supported on:                       */
/*      SPRA0 (0x20001064)                                                      */
/*      SPRB0 (0x20001064)                                                      */
/*      SPRHBM (0x20001064)                                                     */
/*      SPRC0 (0x20001064)                                                      */
/*      SPRMCC (0x20001064)                                                     */
/*      SPRUCC (0x20001064)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_LSB_12
*/


#define CR_LCEG3_CHK_SLATE_LSB_12_N1_SB_FBLP_REG 0x2C021064

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_lsb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_LSB_12_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_LSB_13_N0_SB_FBLP_REG supported on:                       */
/*      SPRA0 (0x20001068)                                                      */
/*      SPRB0 (0x20001068)                                                      */
/*      SPRHBM (0x20001068)                                                     */
/*      SPRC0 (0x20001068)                                                      */
/*      SPRMCC (0x20001068)                                                     */
/*      SPRUCC (0x20001068)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_LSB_13
*/


#define CR_LCEG3_CHK_SLATE_LSB_13_N0_SB_FBLP_REG 0x2C021068

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_lsb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_LSB_13_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_LSB_13_N1_SB_FBLP_REG supported on:                       */
/*      SPRA0 (0x2000106c)                                                      */
/*      SPRB0 (0x2000106c)                                                      */
/*      SPRHBM (0x2000106c)                                                     */
/*      SPRC0 (0x2000106c)                                                      */
/*      SPRMCC (0x2000106c)                                                     */
/*      SPRUCC (0x2000106c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_LSB_13
*/


#define CR_LCEG3_CHK_SLATE_LSB_13_N1_SB_FBLP_REG 0x2C02106C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_lsb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_LSB_13_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_LSB_14_N0_SB_FBLP_REG supported on:                       */
/*      SPRA0 (0x20001070)                                                      */
/*      SPRB0 (0x20001070)                                                      */
/*      SPRHBM (0x20001070)                                                     */
/*      SPRC0 (0x20001070)                                                      */
/*      SPRMCC (0x20001070)                                                     */
/*      SPRUCC (0x20001070)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_LSB_14
*/


#define CR_LCEG3_CHK_SLATE_LSB_14_N0_SB_FBLP_REG 0x2C021070

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_lsb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_LSB_14_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_LSB_14_N1_SB_FBLP_REG supported on:                       */
/*      SPRA0 (0x20001074)                                                      */
/*      SPRB0 (0x20001074)                                                      */
/*      SPRHBM (0x20001074)                                                     */
/*      SPRC0 (0x20001074)                                                      */
/*      SPRMCC (0x20001074)                                                     */
/*      SPRUCC (0x20001074)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_LSB_14
*/


#define CR_LCEG3_CHK_SLATE_LSB_14_N1_SB_FBLP_REG 0x2C021074

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_lsb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_LSB_14_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_LSB_15_N0_SB_FBLP_REG supported on:                       */
/*      SPRA0 (0x20001078)                                                      */
/*      SPRB0 (0x20001078)                                                      */
/*      SPRHBM (0x20001078)                                                     */
/*      SPRC0 (0x20001078)                                                      */
/*      SPRMCC (0x20001078)                                                     */
/*      SPRUCC (0x20001078)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_LSB_15
*/


#define CR_LCEG3_CHK_SLATE_LSB_15_N0_SB_FBLP_REG 0x2C021078

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_lsb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_LSB_15_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_LSB_15_N1_SB_FBLP_REG supported on:                       */
/*      SPRA0 (0x2000107c)                                                      */
/*      SPRB0 (0x2000107c)                                                      */
/*      SPRHBM (0x2000107c)                                                     */
/*      SPRC0 (0x2000107c)                                                      */
/*      SPRMCC (0x2000107c)                                                     */
/*      SPRUCC (0x2000107c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_LSB_15
*/


#define CR_LCEG3_CHK_SLATE_LSB_15_N1_SB_FBLP_REG 0x2C02107C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_lsb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_LSB_15_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_MSB_0_N0_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x20001080)                                                      */
/*      SPRB0 (0x20001080)                                                      */
/*      SPRHBM (0x20001080)                                                     */
/*      SPRC0 (0x20001080)                                                      */
/*      SPRMCC (0x20001080)                                                     */
/*      SPRUCC (0x20001080)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_MSB_0
*/


#define CR_LCEG3_CHK_SLATE_MSB_0_N0_SB_FBLP_REG 0x2C021080

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_msb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_MSB_0_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_MSB_0_N1_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x20001084)                                                      */
/*      SPRB0 (0x20001084)                                                      */
/*      SPRHBM (0x20001084)                                                     */
/*      SPRC0 (0x20001084)                                                      */
/*      SPRMCC (0x20001084)                                                     */
/*      SPRUCC (0x20001084)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_MSB_0
*/


#define CR_LCEG3_CHK_SLATE_MSB_0_N1_SB_FBLP_REG 0x2C021084

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_msb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_MSB_0_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_MSB_1_N0_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x20001088)                                                      */
/*      SPRB0 (0x20001088)                                                      */
/*      SPRHBM (0x20001088)                                                     */
/*      SPRC0 (0x20001088)                                                      */
/*      SPRMCC (0x20001088)                                                     */
/*      SPRUCC (0x20001088)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_MSB_1
*/


#define CR_LCEG3_CHK_SLATE_MSB_1_N0_SB_FBLP_REG 0x2C021088

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_msb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_MSB_1_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_MSB_1_N1_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x2000108c)                                                      */
/*      SPRB0 (0x2000108c)                                                      */
/*      SPRHBM (0x2000108c)                                                     */
/*      SPRC0 (0x2000108c)                                                      */
/*      SPRMCC (0x2000108c)                                                     */
/*      SPRUCC (0x2000108c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_MSB_1
*/


#define CR_LCEG3_CHK_SLATE_MSB_1_N1_SB_FBLP_REG 0x2C02108C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_msb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_MSB_1_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_MSB_2_N0_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x20001090)                                                      */
/*      SPRB0 (0x20001090)                                                      */
/*      SPRHBM (0x20001090)                                                     */
/*      SPRC0 (0x20001090)                                                      */
/*      SPRMCC (0x20001090)                                                     */
/*      SPRUCC (0x20001090)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_MSB_2
*/


#define CR_LCEG3_CHK_SLATE_MSB_2_N0_SB_FBLP_REG 0x2C021090

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_msb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_MSB_2_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_MSB_2_N1_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x20001094)                                                      */
/*      SPRB0 (0x20001094)                                                      */
/*      SPRHBM (0x20001094)                                                     */
/*      SPRC0 (0x20001094)                                                      */
/*      SPRMCC (0x20001094)                                                     */
/*      SPRUCC (0x20001094)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_MSB_2
*/


#define CR_LCEG3_CHK_SLATE_MSB_2_N1_SB_FBLP_REG 0x2C021094

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_msb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_MSB_2_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_MSB_3_N0_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x20001098)                                                      */
/*      SPRB0 (0x20001098)                                                      */
/*      SPRHBM (0x20001098)                                                     */
/*      SPRC0 (0x20001098)                                                      */
/*      SPRMCC (0x20001098)                                                     */
/*      SPRUCC (0x20001098)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_MSB_3
*/


#define CR_LCEG3_CHK_SLATE_MSB_3_N0_SB_FBLP_REG 0x2C021098

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_msb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_MSB_3_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_MSB_3_N1_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x2000109c)                                                      */
/*      SPRB0 (0x2000109c)                                                      */
/*      SPRHBM (0x2000109c)                                                     */
/*      SPRC0 (0x2000109c)                                                      */
/*      SPRMCC (0x2000109c)                                                     */
/*      SPRUCC (0x2000109c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_MSB_3
*/


#define CR_LCEG3_CHK_SLATE_MSB_3_N1_SB_FBLP_REG 0x2C02109C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_msb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_MSB_3_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_MSB_4_N0_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x200010a0)                                                      */
/*      SPRB0 (0x200010a0)                                                      */
/*      SPRHBM (0x200010a0)                                                     */
/*      SPRC0 (0x200010a0)                                                      */
/*      SPRMCC (0x200010a0)                                                     */
/*      SPRUCC (0x200010a0)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_MSB_4
*/


#define CR_LCEG3_CHK_SLATE_MSB_4_N0_SB_FBLP_REG 0x2C0210A0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_msb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_MSB_4_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_MSB_4_N1_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x200010a4)                                                      */
/*      SPRB0 (0x200010a4)                                                      */
/*      SPRHBM (0x200010a4)                                                     */
/*      SPRC0 (0x200010a4)                                                      */
/*      SPRMCC (0x200010a4)                                                     */
/*      SPRUCC (0x200010a4)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_MSB_4
*/


#define CR_LCEG3_CHK_SLATE_MSB_4_N1_SB_FBLP_REG 0x2C0210A4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_msb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_MSB_4_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_MSB_5_N0_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x200010a8)                                                      */
/*      SPRB0 (0x200010a8)                                                      */
/*      SPRHBM (0x200010a8)                                                     */
/*      SPRC0 (0x200010a8)                                                      */
/*      SPRMCC (0x200010a8)                                                     */
/*      SPRUCC (0x200010a8)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_MSB_5
*/


#define CR_LCEG3_CHK_SLATE_MSB_5_N0_SB_FBLP_REG 0x2C0210A8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_msb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_MSB_5_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_MSB_5_N1_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x200010ac)                                                      */
/*      SPRB0 (0x200010ac)                                                      */
/*      SPRHBM (0x200010ac)                                                     */
/*      SPRC0 (0x200010ac)                                                      */
/*      SPRMCC (0x200010ac)                                                     */
/*      SPRUCC (0x200010ac)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_MSB_5
*/


#define CR_LCEG3_CHK_SLATE_MSB_5_N1_SB_FBLP_REG 0x2C0210AC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_msb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_MSB_5_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_MSB_6_N0_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x200010b0)                                                      */
/*      SPRB0 (0x200010b0)                                                      */
/*      SPRHBM (0x200010b0)                                                     */
/*      SPRC0 (0x200010b0)                                                      */
/*      SPRMCC (0x200010b0)                                                     */
/*      SPRUCC (0x200010b0)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_MSB_6
*/


#define CR_LCEG3_CHK_SLATE_MSB_6_N0_SB_FBLP_REG 0x2C0210B0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_msb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_MSB_6_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_MSB_6_N1_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x200010b4)                                                      */
/*      SPRB0 (0x200010b4)                                                      */
/*      SPRHBM (0x200010b4)                                                     */
/*      SPRC0 (0x200010b4)                                                      */
/*      SPRMCC (0x200010b4)                                                     */
/*      SPRUCC (0x200010b4)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_MSB_6
*/


#define CR_LCEG3_CHK_SLATE_MSB_6_N1_SB_FBLP_REG 0x2C0210B4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_msb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_MSB_6_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_MSB_7_N0_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x200010b8)                                                      */
/*      SPRB0 (0x200010b8)                                                      */
/*      SPRHBM (0x200010b8)                                                     */
/*      SPRC0 (0x200010b8)                                                      */
/*      SPRMCC (0x200010b8)                                                     */
/*      SPRUCC (0x200010b8)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_MSB_7
*/


#define CR_LCEG3_CHK_SLATE_MSB_7_N0_SB_FBLP_REG 0x2C0210B8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_msb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_MSB_7_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_MSB_7_N1_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x200010bc)                                                      */
/*      SPRB0 (0x200010bc)                                                      */
/*      SPRHBM (0x200010bc)                                                     */
/*      SPRC0 (0x200010bc)                                                      */
/*      SPRMCC (0x200010bc)                                                     */
/*      SPRUCC (0x200010bc)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_MSB_7
*/


#define CR_LCEG3_CHK_SLATE_MSB_7_N1_SB_FBLP_REG 0x2C0210BC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_msb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_MSB_7_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_MSB_8_N0_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x200010c0)                                                      */
/*      SPRB0 (0x200010c0)                                                      */
/*      SPRHBM (0x200010c0)                                                     */
/*      SPRC0 (0x200010c0)                                                      */
/*      SPRMCC (0x200010c0)                                                     */
/*      SPRUCC (0x200010c0)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_MSB_8
*/


#define CR_LCEG3_CHK_SLATE_MSB_8_N0_SB_FBLP_REG 0x2C0210C0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_msb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_MSB_8_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_MSB_8_N1_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x200010c4)                                                      */
/*      SPRB0 (0x200010c4)                                                      */
/*      SPRHBM (0x200010c4)                                                     */
/*      SPRC0 (0x200010c4)                                                      */
/*      SPRMCC (0x200010c4)                                                     */
/*      SPRUCC (0x200010c4)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_MSB_8
*/


#define CR_LCEG3_CHK_SLATE_MSB_8_N1_SB_FBLP_REG 0x2C0210C4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_msb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_MSB_8_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_MSB_9_N0_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x200010c8)                                                      */
/*      SPRB0 (0x200010c8)                                                      */
/*      SPRHBM (0x200010c8)                                                     */
/*      SPRC0 (0x200010c8)                                                      */
/*      SPRMCC (0x200010c8)                                                     */
/*      SPRUCC (0x200010c8)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_MSB_9
*/


#define CR_LCEG3_CHK_SLATE_MSB_9_N0_SB_FBLP_REG 0x2C0210C8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_msb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_MSB_9_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_MSB_9_N1_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x200010cc)                                                      */
/*      SPRB0 (0x200010cc)                                                      */
/*      SPRHBM (0x200010cc)                                                     */
/*      SPRC0 (0x200010cc)                                                      */
/*      SPRMCC (0x200010cc)                                                     */
/*      SPRUCC (0x200010cc)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_MSB_9
*/


#define CR_LCEG3_CHK_SLATE_MSB_9_N1_SB_FBLP_REG 0x2C0210CC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_msb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_MSB_9_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_MSB_10_N0_SB_FBLP_REG supported on:                       */
/*      SPRA0 (0x200010d0)                                                      */
/*      SPRB0 (0x200010d0)                                                      */
/*      SPRHBM (0x200010d0)                                                     */
/*      SPRC0 (0x200010d0)                                                      */
/*      SPRMCC (0x200010d0)                                                     */
/*      SPRUCC (0x200010d0)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_MSB_10
*/


#define CR_LCEG3_CHK_SLATE_MSB_10_N0_SB_FBLP_REG 0x2C0210D0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_msb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_MSB_10_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_MSB_10_N1_SB_FBLP_REG supported on:                       */
/*      SPRA0 (0x200010d4)                                                      */
/*      SPRB0 (0x200010d4)                                                      */
/*      SPRHBM (0x200010d4)                                                     */
/*      SPRC0 (0x200010d4)                                                      */
/*      SPRMCC (0x200010d4)                                                     */
/*      SPRUCC (0x200010d4)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_MSB_10
*/


#define CR_LCEG3_CHK_SLATE_MSB_10_N1_SB_FBLP_REG 0x2C0210D4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_msb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_MSB_10_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_MSB_11_N0_SB_FBLP_REG supported on:                       */
/*      SPRA0 (0x200010d8)                                                      */
/*      SPRB0 (0x200010d8)                                                      */
/*      SPRHBM (0x200010d8)                                                     */
/*      SPRC0 (0x200010d8)                                                      */
/*      SPRMCC (0x200010d8)                                                     */
/*      SPRUCC (0x200010d8)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_MSB_11
*/


#define CR_LCEG3_CHK_SLATE_MSB_11_N0_SB_FBLP_REG 0x2C0210D8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_msb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_MSB_11_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_MSB_11_N1_SB_FBLP_REG supported on:                       */
/*      SPRA0 (0x200010dc)                                                      */
/*      SPRB0 (0x200010dc)                                                      */
/*      SPRHBM (0x200010dc)                                                     */
/*      SPRC0 (0x200010dc)                                                      */
/*      SPRMCC (0x200010dc)                                                     */
/*      SPRUCC (0x200010dc)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_MSB_11
*/


#define CR_LCEG3_CHK_SLATE_MSB_11_N1_SB_FBLP_REG 0x2C0210DC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_msb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_MSB_11_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_MSB_12_N0_SB_FBLP_REG supported on:                       */
/*      SPRA0 (0x200010e0)                                                      */
/*      SPRB0 (0x200010e0)                                                      */
/*      SPRHBM (0x200010e0)                                                     */
/*      SPRC0 (0x200010e0)                                                      */
/*      SPRMCC (0x200010e0)                                                     */
/*      SPRUCC (0x200010e0)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_MSB_12
*/


#define CR_LCEG3_CHK_SLATE_MSB_12_N0_SB_FBLP_REG 0x2C0210E0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_msb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_MSB_12_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_MSB_12_N1_SB_FBLP_REG supported on:                       */
/*      SPRA0 (0x200010e4)                                                      */
/*      SPRB0 (0x200010e4)                                                      */
/*      SPRHBM (0x200010e4)                                                     */
/*      SPRC0 (0x200010e4)                                                      */
/*      SPRMCC (0x200010e4)                                                     */
/*      SPRUCC (0x200010e4)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_MSB_12
*/


#define CR_LCEG3_CHK_SLATE_MSB_12_N1_SB_FBLP_REG 0x2C0210E4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_msb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_MSB_12_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_MSB_13_N0_SB_FBLP_REG supported on:                       */
/*      SPRA0 (0x200010e8)                                                      */
/*      SPRB0 (0x200010e8)                                                      */
/*      SPRHBM (0x200010e8)                                                     */
/*      SPRC0 (0x200010e8)                                                      */
/*      SPRMCC (0x200010e8)                                                     */
/*      SPRUCC (0x200010e8)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_MSB_13
*/


#define CR_LCEG3_CHK_SLATE_MSB_13_N0_SB_FBLP_REG 0x2C0210E8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_msb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_MSB_13_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_MSB_13_N1_SB_FBLP_REG supported on:                       */
/*      SPRA0 (0x200010ec)                                                      */
/*      SPRB0 (0x200010ec)                                                      */
/*      SPRHBM (0x200010ec)                                                     */
/*      SPRC0 (0x200010ec)                                                      */
/*      SPRMCC (0x200010ec)                                                     */
/*      SPRUCC (0x200010ec)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_MSB_13
*/


#define CR_LCEG3_CHK_SLATE_MSB_13_N1_SB_FBLP_REG 0x2C0210EC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_msb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_MSB_13_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_MSB_14_N0_SB_FBLP_REG supported on:                       */
/*      SPRA0 (0x200010f0)                                                      */
/*      SPRB0 (0x200010f0)                                                      */
/*      SPRHBM (0x200010f0)                                                     */
/*      SPRC0 (0x200010f0)                                                      */
/*      SPRMCC (0x200010f0)                                                     */
/*      SPRUCC (0x200010f0)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_MSB_14
*/


#define CR_LCEG3_CHK_SLATE_MSB_14_N0_SB_FBLP_REG 0x2C0210F0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_msb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_MSB_14_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_MSB_14_N1_SB_FBLP_REG supported on:                       */
/*      SPRA0 (0x200010f4)                                                      */
/*      SPRB0 (0x200010f4)                                                      */
/*      SPRHBM (0x200010f4)                                                     */
/*      SPRC0 (0x200010f4)                                                      */
/*      SPRMCC (0x200010f4)                                                     */
/*      SPRUCC (0x200010f4)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_MSB_14
*/


#define CR_LCEG3_CHK_SLATE_MSB_14_N1_SB_FBLP_REG 0x2C0210F4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_msb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_MSB_14_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_MSB_15_N0_SB_FBLP_REG supported on:                       */
/*      SPRA0 (0x200010f8)                                                      */
/*      SPRB0 (0x200010f8)                                                      */
/*      SPRHBM (0x200010f8)                                                     */
/*      SPRC0 (0x200010f8)                                                      */
/*      SPRMCC (0x200010f8)                                                     */
/*      SPRUCC (0x200010f8)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_MSB_15
*/


#define CR_LCEG3_CHK_SLATE_MSB_15_N0_SB_FBLP_REG 0x2C0210F8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_msb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_MSB_15_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_CHK_SLATE_MSB_15_N1_SB_FBLP_REG supported on:                       */
/*      SPRA0 (0x200010fc)                                                      */
/*      SPRB0 (0x200010fc)                                                      */
/*      SPRHBM (0x200010fc)                                                     */
/*      SPRC0 (0x200010fc)                                                      */
/*      SPRMCC (0x200010fc)                                                     */
/*      SPRUCC (0x200010fc)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CHK_SLATE_MSB_15
*/


#define CR_LCEG3_CHK_SLATE_MSB_15_N1_SB_FBLP_REG 0x2C0210FC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 chk_slate_value_msb : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               value of checker Slate - capture of latest 128
                               bits of data
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CHK_SLATE_MSB_15_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_ACT_VAL_0_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x20001120)                                                      */
/*      SPRB0 (0x20001120)                                                      */
/*      SPRHBM (0x20001120)                                                     */
/*      SPRC0 (0x20001120)                                                      */
/*      SPRMCC (0x20001120)                                                     */
/*      SPRUCC (0x20001120)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_ACT_VAL_0
*/


#define CR_LCEG3_ACT_VAL_0_SB_FBLP_REG 0x2C021120

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 actual_value : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Last Actual Value that caused an Error */

  } Bits;
  UINT32 Data;

} CR_LCEG3_ACT_VAL_0_SB_FBLP_STRUCT;

/* CR_LCEG3_ACT_VAL_1_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x20001124)                                                      */
/*      SPRB0 (0x20001124)                                                      */
/*      SPRHBM (0x20001124)                                                     */
/*      SPRC0 (0x20001124)                                                      */
/*      SPRMCC (0x20001124)                                                     */
/*      SPRUCC (0x20001124)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_ACT_VAL_1
*/


#define CR_LCEG3_ACT_VAL_1_SB_FBLP_REG 0x2C021124

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 actual_value : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Last Actual Value that caused an Error */

  } Bits;
  UINT32 Data;

} CR_LCEG3_ACT_VAL_1_SB_FBLP_STRUCT;

/* CR_LCEG3_ACT_VAL_2_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x20001128)                                                      */
/*      SPRB0 (0x20001128)                                                      */
/*      SPRHBM (0x20001128)                                                     */
/*      SPRC0 (0x20001128)                                                      */
/*      SPRMCC (0x20001128)                                                     */
/*      SPRUCC (0x20001128)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_ACT_VAL_2
*/


#define CR_LCEG3_ACT_VAL_2_SB_FBLP_REG 0x2C021128

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 actual_value : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Last Actual Value that caused an Error */

  } Bits;
  UINT32 Data;

} CR_LCEG3_ACT_VAL_2_SB_FBLP_STRUCT;

/* CR_LCEG3_ACT_VAL_3_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x2000112c)                                                      */
/*      SPRB0 (0x2000112c)                                                      */
/*      SPRHBM (0x2000112c)                                                     */
/*      SPRC0 (0x2000112c)                                                      */
/*      SPRMCC (0x2000112c)                                                     */
/*      SPRUCC (0x2000112c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_ACT_VAL_3
*/


#define CR_LCEG3_ACT_VAL_3_SB_FBLP_REG 0x2C02112C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 actual_value : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Last Actual Value that caused an Error */

  } Bits;
  UINT32 Data;

} CR_LCEG3_ACT_VAL_3_SB_FBLP_STRUCT;

/* CR_LCEG3_ACT_VAL_4_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x20001130)                                                      */
/*      SPRB0 (0x20001130)                                                      */
/*      SPRHBM (0x20001130)                                                     */
/*      SPRC0 (0x20001130)                                                      */
/*      SPRMCC (0x20001130)                                                     */
/*      SPRUCC (0x20001130)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_ACT_VAL_4
*/


#define CR_LCEG3_ACT_VAL_4_SB_FBLP_REG 0x2C021130

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 actual_value : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Last Actual Value that caused an Error */

  } Bits;
  UINT32 Data;

} CR_LCEG3_ACT_VAL_4_SB_FBLP_STRUCT;

/* CR_LCEG3_ACT_VAL_5_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x20001134)                                                      */
/*      SPRB0 (0x20001134)                                                      */
/*      SPRHBM (0x20001134)                                                     */
/*      SPRC0 (0x20001134)                                                      */
/*      SPRMCC (0x20001134)                                                     */
/*      SPRUCC (0x20001134)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_ACT_VAL_5
*/


#define CR_LCEG3_ACT_VAL_5_SB_FBLP_REG 0x2C021134

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 actual_value : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Last Actual Value that caused an Error */

  } Bits;
  UINT32 Data;

} CR_LCEG3_ACT_VAL_5_SB_FBLP_STRUCT;

/* CR_LCEG3_ACT_VAL_6_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x20001138)                                                      */
/*      SPRB0 (0x20001138)                                                      */
/*      SPRHBM (0x20001138)                                                     */
/*      SPRC0 (0x20001138)                                                      */
/*      SPRMCC (0x20001138)                                                     */
/*      SPRUCC (0x20001138)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_ACT_VAL_6
*/


#define CR_LCEG3_ACT_VAL_6_SB_FBLP_REG 0x2C021138

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 actual_value : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Last Actual Value that caused an Error */

  } Bits;
  UINT32 Data;

} CR_LCEG3_ACT_VAL_6_SB_FBLP_STRUCT;

/* CR_LCEG3_ACT_VAL_7_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x2000113c)                                                      */
/*      SPRB0 (0x2000113c)                                                      */
/*      SPRHBM (0x2000113c)                                                     */
/*      SPRC0 (0x2000113c)                                                      */
/*      SPRMCC (0x2000113c)                                                     */
/*      SPRUCC (0x2000113c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_ACT_VAL_7
*/


#define CR_LCEG3_ACT_VAL_7_SB_FBLP_REG 0x2C02113C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 actual_value : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Last Actual Value that caused an Error */

  } Bits;
  UINT32 Data;

} CR_LCEG3_ACT_VAL_7_SB_FBLP_STRUCT;

/* CR_LCEG3_ACT_VAL_8_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x20001140)                                                      */
/*      SPRB0 (0x20001140)                                                      */
/*      SPRHBM (0x20001140)                                                     */
/*      SPRC0 (0x20001140)                                                      */
/*      SPRMCC (0x20001140)                                                     */
/*      SPRUCC (0x20001140)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_ACT_VAL_8
*/


#define CR_LCEG3_ACT_VAL_8_SB_FBLP_REG 0x2C021140

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 actual_value : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Last Actual Value that caused an Error */

  } Bits;
  UINT32 Data;

} CR_LCEG3_ACT_VAL_8_SB_FBLP_STRUCT;

/* CR_LCEG3_ACT_VAL_9_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x20001144)                                                      */
/*      SPRB0 (0x20001144)                                                      */
/*      SPRHBM (0x20001144)                                                     */
/*      SPRC0 (0x20001144)                                                      */
/*      SPRMCC (0x20001144)                                                     */
/*      SPRUCC (0x20001144)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_ACT_VAL_9
*/


#define CR_LCEG3_ACT_VAL_9_SB_FBLP_REG 0x2C021144

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 actual_value : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Last Actual Value that caused an Error */

  } Bits;
  UINT32 Data;

} CR_LCEG3_ACT_VAL_9_SB_FBLP_STRUCT;

/* CR_LCEG3_ACT_VAL_10_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x20001148)                                                      */
/*      SPRB0 (0x20001148)                                                      */
/*      SPRHBM (0x20001148)                                                     */
/*      SPRC0 (0x20001148)                                                      */
/*      SPRMCC (0x20001148)                                                     */
/*      SPRUCC (0x20001148)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_ACT_VAL_10
*/


#define CR_LCEG3_ACT_VAL_10_SB_FBLP_REG 0x2C021148

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 actual_value : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Last Actual Value that caused an Error */

  } Bits;
  UINT32 Data;

} CR_LCEG3_ACT_VAL_10_SB_FBLP_STRUCT;

/* CR_LCEG3_ACT_VAL_11_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x2000114c)                                                      */
/*      SPRB0 (0x2000114c)                                                      */
/*      SPRHBM (0x2000114c)                                                     */
/*      SPRC0 (0x2000114c)                                                      */
/*      SPRMCC (0x2000114c)                                                     */
/*      SPRUCC (0x2000114c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_ACT_VAL_11
*/


#define CR_LCEG3_ACT_VAL_11_SB_FBLP_REG 0x2C02114C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 actual_value : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Last Actual Value that caused an Error */

  } Bits;
  UINT32 Data;

} CR_LCEG3_ACT_VAL_11_SB_FBLP_STRUCT;

/* CR_LCEG3_ACT_VAL_12_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x20001150)                                                      */
/*      SPRB0 (0x20001150)                                                      */
/*      SPRHBM (0x20001150)                                                     */
/*      SPRC0 (0x20001150)                                                      */
/*      SPRMCC (0x20001150)                                                     */
/*      SPRUCC (0x20001150)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_ACT_VAL_12
*/


#define CR_LCEG3_ACT_VAL_12_SB_FBLP_REG 0x2C021150

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 actual_value : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Last Actual Value that caused an Error */

  } Bits;
  UINT32 Data;

} CR_LCEG3_ACT_VAL_12_SB_FBLP_STRUCT;

/* CR_LCEG3_ACT_VAL_13_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x20001154)                                                      */
/*      SPRB0 (0x20001154)                                                      */
/*      SPRHBM (0x20001154)                                                     */
/*      SPRC0 (0x20001154)                                                      */
/*      SPRMCC (0x20001154)                                                     */
/*      SPRUCC (0x20001154)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_ACT_VAL_13
*/


#define CR_LCEG3_ACT_VAL_13_SB_FBLP_REG 0x2C021154

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 actual_value : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Last Actual Value that caused an Error */

  } Bits;
  UINT32 Data;

} CR_LCEG3_ACT_VAL_13_SB_FBLP_STRUCT;

/* CR_LCEG3_ACT_VAL_14_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x20001158)                                                      */
/*      SPRB0 (0x20001158)                                                      */
/*      SPRHBM (0x20001158)                                                     */
/*      SPRC0 (0x20001158)                                                      */
/*      SPRMCC (0x20001158)                                                     */
/*      SPRUCC (0x20001158)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_ACT_VAL_14
*/


#define CR_LCEG3_ACT_VAL_14_SB_FBLP_REG 0x2C021158

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 actual_value : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Last Actual Value that caused an Error */

  } Bits;
  UINT32 Data;

} CR_LCEG3_ACT_VAL_14_SB_FBLP_STRUCT;

/* CR_LCEG3_ACT_VAL_15_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x2000115c)                                                      */
/*      SPRB0 (0x2000115c)                                                      */
/*      SPRHBM (0x2000115c)                                                     */
/*      SPRC0 (0x2000115c)                                                      */
/*      SPRMCC (0x2000115c)                                                     */
/*      SPRUCC (0x2000115c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_ACT_VAL_15
*/


#define CR_LCEG3_ACT_VAL_15_SB_FBLP_REG 0x2C02115C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 actual_value : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Last Actual Value that caused an Error */

  } Bits;
  UINT32 Data;

} CR_LCEG3_ACT_VAL_15_SB_FBLP_STRUCT;

/* CR_LCEG3_ERR_CNT_0_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x20001160)                                                      */
/*      SPRB0 (0x20001160)                                                      */
/*      SPRHBM (0x20001160)                                                     */
/*      SPRC0 (0x20001160)                                                      */
/*      SPRMCC (0x20001160)                                                     */
/*      SPRUCC (0x20001160)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_ERR_CNT_0
*/


#define CR_LCEG3_ERR_CNT_0_SB_FBLP_REG 0x2C021160

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lce_err_cnt : 16;

                            /* Bits[15:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Error count from checker */
    UINT32 csr_lceg3_train_pat_err_obs : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* Atleast 1 error det during train phase */
    UINT32 csr_lceg3_err_during_seed_lck : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* Atelast 1 error det during seed lock */
    UINT32 csr_lceg3_last_seed_lck_success : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* Rx/Tx LFSR in perfect sync bef check phase */
    UINT32 csr_lceg3_seed_err_dur_skp : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* Rx/Tx LFSR not in sync for atleast 1 SKP */
    UINT32 csr_lceg3_atleast1_seed_lck_dur_skp : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* RX/TX LFSR in sync for atleast 1 SKP OS */
    UINT32 lce_err_cnt_ext : 11;

                            /* Bits[31:21], Access Type=RO/V/P, default=0x00000000*/

                            /* Error count extension from checker */

  } Bits;
  UINT32 Data;

} CR_LCEG3_ERR_CNT_0_SB_FBLP_STRUCT;

/* CR_LCEG3_ERR_CNT_1_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x20001164)                                                      */
/*      SPRB0 (0x20001164)                                                      */
/*      SPRHBM (0x20001164)                                                     */
/*      SPRC0 (0x20001164)                                                      */
/*      SPRMCC (0x20001164)                                                     */
/*      SPRUCC (0x20001164)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_ERR_CNT_1
*/


#define CR_LCEG3_ERR_CNT_1_SB_FBLP_REG 0x2C021164

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lce_err_cnt : 16;

                            /* Bits[15:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Error count from checker */
    UINT32 csr_lceg3_train_pat_err_obs : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* Atleast 1 error det during train phase */
    UINT32 csr_lceg3_err_during_seed_lck : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* Atelast 1 error det during seed lock */
    UINT32 csr_lceg3_last_seed_lck_success : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* Rx/Tx LFSR in perfect sync bef check phase */
    UINT32 csr_lceg3_seed_err_dur_skp : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* Rx/Tx LFSR not in sync for atleast 1 SKP */
    UINT32 csr_lceg3_atleast1_seed_lck_dur_skp : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* RX/TX LFSR in sync for atleast 1 SKP OS */
    UINT32 lce_err_cnt_ext : 11;

                            /* Bits[31:21], Access Type=RO/V/P, default=0x00000000*/

                            /* Error count extension from checker */

  } Bits;
  UINT32 Data;

} CR_LCEG3_ERR_CNT_1_SB_FBLP_STRUCT;

/* CR_LCEG3_ERR_CNT_2_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x20001168)                                                      */
/*      SPRB0 (0x20001168)                                                      */
/*      SPRHBM (0x20001168)                                                     */
/*      SPRC0 (0x20001168)                                                      */
/*      SPRMCC (0x20001168)                                                     */
/*      SPRUCC (0x20001168)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_ERR_CNT_2
*/


#define CR_LCEG3_ERR_CNT_2_SB_FBLP_REG 0x2C021168

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lce_err_cnt : 16;

                            /* Bits[15:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Error count from checker */
    UINT32 csr_lceg3_train_pat_err_obs : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* Atleast 1 error det during train phase */
    UINT32 csr_lceg3_err_during_seed_lck : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* Atelast 1 error det during seed lock */
    UINT32 csr_lceg3_last_seed_lck_success : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* Rx/Tx LFSR in perfect sync bef check phase */
    UINT32 csr_lceg3_seed_err_dur_skp : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* Rx/Tx LFSR not in sync for atleast 1 SKP */
    UINT32 csr_lceg3_atleast1_seed_lck_dur_skp : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* RX/TX LFSR in sync for atleast 1 SKP OS */
    UINT32 lce_err_cnt_ext : 11;

                            /* Bits[31:21], Access Type=RO/V/P, default=0x00000000*/

                            /* Error count extension from checker */

  } Bits;
  UINT32 Data;

} CR_LCEG3_ERR_CNT_2_SB_FBLP_STRUCT;

/* CR_LCEG3_ERR_CNT_3_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x2000116c)                                                      */
/*      SPRB0 (0x2000116c)                                                      */
/*      SPRHBM (0x2000116c)                                                     */
/*      SPRC0 (0x2000116c)                                                      */
/*      SPRMCC (0x2000116c)                                                     */
/*      SPRUCC (0x2000116c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_ERR_CNT_3
*/


#define CR_LCEG3_ERR_CNT_3_SB_FBLP_REG 0x2C02116C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lce_err_cnt : 16;

                            /* Bits[15:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Error count from checker */
    UINT32 csr_lceg3_train_pat_err_obs : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* Atleast 1 error det during train phase */
    UINT32 csr_lceg3_err_during_seed_lck : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* Atelast 1 error det during seed lock */
    UINT32 csr_lceg3_last_seed_lck_success : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* Rx/Tx LFSR in perfect sync bef check phase */
    UINT32 csr_lceg3_seed_err_dur_skp : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* Rx/Tx LFSR not in sync for atleast 1 SKP */
    UINT32 csr_lceg3_atleast1_seed_lck_dur_skp : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* RX/TX LFSR in sync for atleast 1 SKP OS */
    UINT32 lce_err_cnt_ext : 11;

                            /* Bits[31:21], Access Type=RO/V/P, default=0x00000000*/

                            /* Error count extension from checker */

  } Bits;
  UINT32 Data;

} CR_LCEG3_ERR_CNT_3_SB_FBLP_STRUCT;

/* CR_LCEG3_ERR_CNT_4_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x20001170)                                                      */
/*      SPRB0 (0x20001170)                                                      */
/*      SPRHBM (0x20001170)                                                     */
/*      SPRC0 (0x20001170)                                                      */
/*      SPRMCC (0x20001170)                                                     */
/*      SPRUCC (0x20001170)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_ERR_CNT_4
*/


#define CR_LCEG3_ERR_CNT_4_SB_FBLP_REG 0x2C021170

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lce_err_cnt : 16;

                            /* Bits[15:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Error count from checker */
    UINT32 csr_lceg3_train_pat_err_obs : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* Atleast 1 error det during train phase */
    UINT32 csr_lceg3_err_during_seed_lck : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* Atelast 1 error det during seed lock */
    UINT32 csr_lceg3_last_seed_lck_success : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* Rx/Tx LFSR in perfect sync bef check phase */
    UINT32 csr_lceg3_seed_err_dur_skp : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* Rx/Tx LFSR not in sync for atleast 1 SKP */
    UINT32 csr_lceg3_atleast1_seed_lck_dur_skp : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* RX/TX LFSR in sync for atleast 1 SKP OS */
    UINT32 lce_err_cnt_ext : 11;

                            /* Bits[31:21], Access Type=RO/V/P, default=0x00000000*/

                            /* Error count extension from checker */

  } Bits;
  UINT32 Data;

} CR_LCEG3_ERR_CNT_4_SB_FBLP_STRUCT;

/* CR_LCEG3_ERR_CNT_5_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x20001174)                                                      */
/*      SPRB0 (0x20001174)                                                      */
/*      SPRHBM (0x20001174)                                                     */
/*      SPRC0 (0x20001174)                                                      */
/*      SPRMCC (0x20001174)                                                     */
/*      SPRUCC (0x20001174)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_ERR_CNT_5
*/


#define CR_LCEG3_ERR_CNT_5_SB_FBLP_REG 0x2C021174

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lce_err_cnt : 16;

                            /* Bits[15:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Error count from checker */
    UINT32 csr_lceg3_train_pat_err_obs : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* Atleast 1 error det during train phase */
    UINT32 csr_lceg3_err_during_seed_lck : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* Atelast 1 error det during seed lock */
    UINT32 csr_lceg3_last_seed_lck_success : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* Rx/Tx LFSR in perfect sync bef check phase */
    UINT32 csr_lceg3_seed_err_dur_skp : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* Rx/Tx LFSR not in sync for atleast 1 SKP */
    UINT32 csr_lceg3_atleast1_seed_lck_dur_skp : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* RX/TX LFSR in sync for atleast 1 SKP OS */
    UINT32 lce_err_cnt_ext : 11;

                            /* Bits[31:21], Access Type=RO/V/P, default=0x00000000*/

                            /* Error count extension from checker */

  } Bits;
  UINT32 Data;

} CR_LCEG3_ERR_CNT_5_SB_FBLP_STRUCT;

/* CR_LCEG3_ERR_CNT_6_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x20001178)                                                      */
/*      SPRB0 (0x20001178)                                                      */
/*      SPRHBM (0x20001178)                                                     */
/*      SPRC0 (0x20001178)                                                      */
/*      SPRMCC (0x20001178)                                                     */
/*      SPRUCC (0x20001178)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_ERR_CNT_6
*/


#define CR_LCEG3_ERR_CNT_6_SB_FBLP_REG 0x2C021178

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lce_err_cnt : 16;

                            /* Bits[15:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Error count from checker */
    UINT32 csr_lceg3_train_pat_err_obs : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* Atleast 1 error det during train phase */
    UINT32 csr_lceg3_err_during_seed_lck : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* Atelast 1 error det during seed lock */
    UINT32 csr_lceg3_last_seed_lck_success : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* Rx/Tx LFSR in perfect sync bef check phase */
    UINT32 csr_lceg3_seed_err_dur_skp : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* Rx/Tx LFSR not in sync for atleast 1 SKP */
    UINT32 csr_lceg3_atleast1_seed_lck_dur_skp : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* RX/TX LFSR in sync for atleast 1 SKP OS */
    UINT32 lce_err_cnt_ext : 11;

                            /* Bits[31:21], Access Type=RO/V/P, default=0x00000000*/

                            /* Error count extension from checker */

  } Bits;
  UINT32 Data;

} CR_LCEG3_ERR_CNT_6_SB_FBLP_STRUCT;

/* CR_LCEG3_ERR_CNT_7_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x2000117c)                                                      */
/*      SPRB0 (0x2000117c)                                                      */
/*      SPRHBM (0x2000117c)                                                     */
/*      SPRC0 (0x2000117c)                                                      */
/*      SPRMCC (0x2000117c)                                                     */
/*      SPRUCC (0x2000117c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_ERR_CNT_7
*/


#define CR_LCEG3_ERR_CNT_7_SB_FBLP_REG 0x2C02117C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lce_err_cnt : 16;

                            /* Bits[15:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Error count from checker */
    UINT32 csr_lceg3_train_pat_err_obs : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* Atleast 1 error det during train phase */
    UINT32 csr_lceg3_err_during_seed_lck : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* Atelast 1 error det during seed lock */
    UINT32 csr_lceg3_last_seed_lck_success : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* Rx/Tx LFSR in perfect sync bef check phase */
    UINT32 csr_lceg3_seed_err_dur_skp : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* Rx/Tx LFSR not in sync for atleast 1 SKP */
    UINT32 csr_lceg3_atleast1_seed_lck_dur_skp : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* RX/TX LFSR in sync for atleast 1 SKP OS */
    UINT32 lce_err_cnt_ext : 11;

                            /* Bits[31:21], Access Type=RO/V/P, default=0x00000000*/

                            /* Error count extension from checker */

  } Bits;
  UINT32 Data;

} CR_LCEG3_ERR_CNT_7_SB_FBLP_STRUCT;

/* CR_LCEG3_ERR_CNT_8_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x20001180)                                                      */
/*      SPRB0 (0x20001180)                                                      */
/*      SPRHBM (0x20001180)                                                     */
/*      SPRC0 (0x20001180)                                                      */
/*      SPRMCC (0x20001180)                                                     */
/*      SPRUCC (0x20001180)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_ERR_CNT_8
*/


#define CR_LCEG3_ERR_CNT_8_SB_FBLP_REG 0x2C021180

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lce_err_cnt : 16;

                            /* Bits[15:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Error count from checker */
    UINT32 csr_lceg3_train_pat_err_obs : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* Atleast 1 error det during train phase */
    UINT32 csr_lceg3_err_during_seed_lck : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* Atelast 1 error det during seed lock */
    UINT32 csr_lceg3_last_seed_lck_success : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* Rx/Tx LFSR in perfect sync bef check phase */
    UINT32 csr_lceg3_seed_err_dur_skp : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* Rx/Tx LFSR not in sync for atleast 1 SKP */
    UINT32 csr_lceg3_atleast1_seed_lck_dur_skp : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* RX/TX LFSR in sync for atleast 1 SKP OS */
    UINT32 lce_err_cnt_ext : 11;

                            /* Bits[31:21], Access Type=RO/V/P, default=0x00000000*/

                            /* Error count extension from checker */

  } Bits;
  UINT32 Data;

} CR_LCEG3_ERR_CNT_8_SB_FBLP_STRUCT;

/* CR_LCEG3_ERR_CNT_9_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x20001184)                                                      */
/*      SPRB0 (0x20001184)                                                      */
/*      SPRHBM (0x20001184)                                                     */
/*      SPRC0 (0x20001184)                                                      */
/*      SPRMCC (0x20001184)                                                     */
/*      SPRUCC (0x20001184)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_ERR_CNT_9
*/


#define CR_LCEG3_ERR_CNT_9_SB_FBLP_REG 0x2C021184

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lce_err_cnt : 16;

                            /* Bits[15:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Error count from checker */
    UINT32 csr_lceg3_train_pat_err_obs : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* Atleast 1 error det during train phase */
    UINT32 csr_lceg3_err_during_seed_lck : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* Atelast 1 error det during seed lock */
    UINT32 csr_lceg3_last_seed_lck_success : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* Rx/Tx LFSR in perfect sync bef check phase */
    UINT32 csr_lceg3_seed_err_dur_skp : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* Rx/Tx LFSR not in sync for atleast 1 SKP */
    UINT32 csr_lceg3_atleast1_seed_lck_dur_skp : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* RX/TX LFSR in sync for atleast 1 SKP OS */
    UINT32 lce_err_cnt_ext : 11;

                            /* Bits[31:21], Access Type=RO/V/P, default=0x00000000*/

                            /* Error count extension from checker */

  } Bits;
  UINT32 Data;

} CR_LCEG3_ERR_CNT_9_SB_FBLP_STRUCT;

/* CR_LCEG3_ERR_CNT_10_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x20001188)                                                      */
/*      SPRB0 (0x20001188)                                                      */
/*      SPRHBM (0x20001188)                                                     */
/*      SPRC0 (0x20001188)                                                      */
/*      SPRMCC (0x20001188)                                                     */
/*      SPRUCC (0x20001188)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_ERR_CNT_10
*/


#define CR_LCEG3_ERR_CNT_10_SB_FBLP_REG 0x2C021188

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lce_err_cnt : 16;

                            /* Bits[15:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Error count from checker */
    UINT32 csr_lceg3_train_pat_err_obs : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* Atleast 1 error det during train phase */
    UINT32 csr_lceg3_err_during_seed_lck : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* Atelast 1 error det during seed lock */
    UINT32 csr_lceg3_last_seed_lck_success : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* Rx/Tx LFSR in perfect sync bef check phase */
    UINT32 csr_lceg3_seed_err_dur_skp : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* Rx/Tx LFSR not in sync for atleast 1 SKP */
    UINT32 csr_lceg3_atleast1_seed_lck_dur_skp : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* RX/TX LFSR in sync for atleast 1 SKP OS */
    UINT32 lce_err_cnt_ext : 11;

                            /* Bits[31:21], Access Type=RO/V/P, default=0x00000000*/

                            /* Error count extension from checker */

  } Bits;
  UINT32 Data;

} CR_LCEG3_ERR_CNT_10_SB_FBLP_STRUCT;

/* CR_LCEG3_ERR_CNT_11_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x2000118c)                                                      */
/*      SPRB0 (0x2000118c)                                                      */
/*      SPRHBM (0x2000118c)                                                     */
/*      SPRC0 (0x2000118c)                                                      */
/*      SPRMCC (0x2000118c)                                                     */
/*      SPRUCC (0x2000118c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_ERR_CNT_11
*/


#define CR_LCEG3_ERR_CNT_11_SB_FBLP_REG 0x2C02118C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lce_err_cnt : 16;

                            /* Bits[15:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Error count from checker */
    UINT32 csr_lceg3_train_pat_err_obs : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* Atleast 1 error det during train phase */
    UINT32 csr_lceg3_err_during_seed_lck : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* Atelast 1 error det during seed lock */
    UINT32 csr_lceg3_last_seed_lck_success : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* Rx/Tx LFSR in perfect sync bef check phase */
    UINT32 csr_lceg3_seed_err_dur_skp : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* Rx/Tx LFSR not in sync for atleast 1 SKP */
    UINT32 csr_lceg3_atleast1_seed_lck_dur_skp : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* RX/TX LFSR in sync for atleast 1 SKP OS */
    UINT32 lce_err_cnt_ext : 11;

                            /* Bits[31:21], Access Type=RO/V/P, default=0x00000000*/

                            /* Error count extension from checker */

  } Bits;
  UINT32 Data;

} CR_LCEG3_ERR_CNT_11_SB_FBLP_STRUCT;

/* CR_LCEG3_ERR_CNT_12_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x20001190)                                                      */
/*      SPRB0 (0x20001190)                                                      */
/*      SPRHBM (0x20001190)                                                     */
/*      SPRC0 (0x20001190)                                                      */
/*      SPRMCC (0x20001190)                                                     */
/*      SPRUCC (0x20001190)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_ERR_CNT_12
*/


#define CR_LCEG3_ERR_CNT_12_SB_FBLP_REG 0x2C021190

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lce_err_cnt : 16;

                            /* Bits[15:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Error count from checker */
    UINT32 csr_lceg3_train_pat_err_obs : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* Atleast 1 error det during train phase */
    UINT32 csr_lceg3_err_during_seed_lck : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* Atelast 1 error det during seed lock */
    UINT32 csr_lceg3_last_seed_lck_success : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* Rx/Tx LFSR in perfect sync bef check phase */
    UINT32 csr_lceg3_seed_err_dur_skp : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* Rx/Tx LFSR not in sync for atleast 1 SKP */
    UINT32 csr_lceg3_atleast1_seed_lck_dur_skp : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* RX/TX LFSR in sync for atleast 1 SKP OS */
    UINT32 lce_err_cnt_ext : 11;

                            /* Bits[31:21], Access Type=RO/V/P, default=0x00000000*/

                            /* Error count extension from checker */

  } Bits;
  UINT32 Data;

} CR_LCEG3_ERR_CNT_12_SB_FBLP_STRUCT;

/* CR_LCEG3_ERR_CNT_13_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x20001194)                                                      */
/*      SPRB0 (0x20001194)                                                      */
/*      SPRHBM (0x20001194)                                                     */
/*      SPRC0 (0x20001194)                                                      */
/*      SPRMCC (0x20001194)                                                     */
/*      SPRUCC (0x20001194)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_ERR_CNT_13
*/


#define CR_LCEG3_ERR_CNT_13_SB_FBLP_REG 0x2C021194

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lce_err_cnt : 16;

                            /* Bits[15:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Error count from checker */
    UINT32 csr_lceg3_train_pat_err_obs : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* Atleast 1 error det during train phase */
    UINT32 csr_lceg3_err_during_seed_lck : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* Atelast 1 error det during seed lock */
    UINT32 csr_lceg3_last_seed_lck_success : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* Rx/Tx LFSR in perfect sync bef check phase */
    UINT32 csr_lceg3_seed_err_dur_skp : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* Rx/Tx LFSR not in sync for atleast 1 SKP */
    UINT32 csr_lceg3_atleast1_seed_lck_dur_skp : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* RX/TX LFSR in sync for atleast 1 SKP OS */
    UINT32 lce_err_cnt_ext : 11;

                            /* Bits[31:21], Access Type=RO/V/P, default=0x00000000*/

                            /* Error count extension from checker */

  } Bits;
  UINT32 Data;

} CR_LCEG3_ERR_CNT_13_SB_FBLP_STRUCT;

/* CR_LCEG3_ERR_CNT_14_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x20001198)                                                      */
/*      SPRB0 (0x20001198)                                                      */
/*      SPRHBM (0x20001198)                                                     */
/*      SPRC0 (0x20001198)                                                      */
/*      SPRMCC (0x20001198)                                                     */
/*      SPRUCC (0x20001198)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_ERR_CNT_14
*/


#define CR_LCEG3_ERR_CNT_14_SB_FBLP_REG 0x2C021198

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lce_err_cnt : 16;

                            /* Bits[15:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Error count from checker */
    UINT32 csr_lceg3_train_pat_err_obs : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* Atleast 1 error det during train phase */
    UINT32 csr_lceg3_err_during_seed_lck : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* Atelast 1 error det during seed lock */
    UINT32 csr_lceg3_last_seed_lck_success : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* Rx/Tx LFSR in perfect sync bef check phase */
    UINT32 csr_lceg3_seed_err_dur_skp : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* Rx/Tx LFSR not in sync for atleast 1 SKP */
    UINT32 csr_lceg3_atleast1_seed_lck_dur_skp : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* RX/TX LFSR in sync for atleast 1 SKP OS */
    UINT32 lce_err_cnt_ext : 11;

                            /* Bits[31:21], Access Type=RO/V/P, default=0x00000000*/

                            /* Error count extension from checker */

  } Bits;
  UINT32 Data;

} CR_LCEG3_ERR_CNT_14_SB_FBLP_STRUCT;

/* CR_LCEG3_ERR_CNT_15_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x2000119c)                                                      */
/*      SPRB0 (0x2000119c)                                                      */
/*      SPRHBM (0x2000119c)                                                     */
/*      SPRC0 (0x2000119c)                                                      */
/*      SPRMCC (0x2000119c)                                                     */
/*      SPRUCC (0x2000119c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_ERR_CNT_15
*/


#define CR_LCEG3_ERR_CNT_15_SB_FBLP_REG 0x2C02119C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lce_err_cnt : 16;

                            /* Bits[15:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Error count from checker */
    UINT32 csr_lceg3_train_pat_err_obs : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* Atleast 1 error det during train phase */
    UINT32 csr_lceg3_err_during_seed_lck : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* Atelast 1 error det during seed lock */
    UINT32 csr_lceg3_last_seed_lck_success : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* Rx/Tx LFSR in perfect sync bef check phase */
    UINT32 csr_lceg3_seed_err_dur_skp : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* Rx/Tx LFSR not in sync for atleast 1 SKP */
    UINT32 csr_lceg3_atleast1_seed_lck_dur_skp : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* RX/TX LFSR in sync for atleast 1 SKP OS */
    UINT32 lce_err_cnt_ext : 11;

                            /* Bits[31:21], Access Type=RO/V/P, default=0x00000000*/

                            /* Error count extension from checker */

  } Bits;
  UINT32 Data;

} CR_LCEG3_ERR_CNT_15_SB_FBLP_STRUCT;

/* CR_LCEG3_EXP_VAL_0_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x200011a0)                                                      */
/*      SPRB0 (0x200011a0)                                                      */
/*      SPRHBM (0x200011a0)                                                     */
/*      SPRC0 (0x200011a0)                                                      */
/*      SPRMCC (0x200011a0)                                                     */
/*      SPRUCC (0x200011a0)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_EXP_VAL_0
*/


#define CR_LCEG3_EXP_VAL_0_SB_FBLP_REG 0x2C0211A0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 expected_value : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Last Expected Value that caused an Error */

  } Bits;
  UINT32 Data;

} CR_LCEG3_EXP_VAL_0_SB_FBLP_STRUCT;

/* CR_LCEG3_EXP_VAL_1_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x200011a4)                                                      */
/*      SPRB0 (0x200011a4)                                                      */
/*      SPRHBM (0x200011a4)                                                     */
/*      SPRC0 (0x200011a4)                                                      */
/*      SPRMCC (0x200011a4)                                                     */
/*      SPRUCC (0x200011a4)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_EXP_VAL_1
*/


#define CR_LCEG3_EXP_VAL_1_SB_FBLP_REG 0x2C0211A4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 expected_value : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Last Expected Value that caused an Error */

  } Bits;
  UINT32 Data;

} CR_LCEG3_EXP_VAL_1_SB_FBLP_STRUCT;

/* CR_LCEG3_EXP_VAL_2_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x200011a8)                                                      */
/*      SPRB0 (0x200011a8)                                                      */
/*      SPRHBM (0x200011a8)                                                     */
/*      SPRC0 (0x200011a8)                                                      */
/*      SPRMCC (0x200011a8)                                                     */
/*      SPRUCC (0x200011a8)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_EXP_VAL_2
*/


#define CR_LCEG3_EXP_VAL_2_SB_FBLP_REG 0x2C0211A8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 expected_value : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Last Expected Value that caused an Error */

  } Bits;
  UINT32 Data;

} CR_LCEG3_EXP_VAL_2_SB_FBLP_STRUCT;

/* CR_LCEG3_EXP_VAL_3_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x200011ac)                                                      */
/*      SPRB0 (0x200011ac)                                                      */
/*      SPRHBM (0x200011ac)                                                     */
/*      SPRC0 (0x200011ac)                                                      */
/*      SPRMCC (0x200011ac)                                                     */
/*      SPRUCC (0x200011ac)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_EXP_VAL_3
*/


#define CR_LCEG3_EXP_VAL_3_SB_FBLP_REG 0x2C0211AC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 expected_value : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Last Expected Value that caused an Error */

  } Bits;
  UINT32 Data;

} CR_LCEG3_EXP_VAL_3_SB_FBLP_STRUCT;

/* CR_LCEG3_EXP_VAL_4_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x200011b0)                                                      */
/*      SPRB0 (0x200011b0)                                                      */
/*      SPRHBM (0x200011b0)                                                     */
/*      SPRC0 (0x200011b0)                                                      */
/*      SPRMCC (0x200011b0)                                                     */
/*      SPRUCC (0x200011b0)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_EXP_VAL_4
*/


#define CR_LCEG3_EXP_VAL_4_SB_FBLP_REG 0x2C0211B0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 expected_value : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Last Expected Value that caused an Error */

  } Bits;
  UINT32 Data;

} CR_LCEG3_EXP_VAL_4_SB_FBLP_STRUCT;

/* CR_LCEG3_EXP_VAL_5_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x200011b4)                                                      */
/*      SPRB0 (0x200011b4)                                                      */
/*      SPRHBM (0x200011b4)                                                     */
/*      SPRC0 (0x200011b4)                                                      */
/*      SPRMCC (0x200011b4)                                                     */
/*      SPRUCC (0x200011b4)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_EXP_VAL_5
*/


#define CR_LCEG3_EXP_VAL_5_SB_FBLP_REG 0x2C0211B4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 expected_value : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Last Expected Value that caused an Error */

  } Bits;
  UINT32 Data;

} CR_LCEG3_EXP_VAL_5_SB_FBLP_STRUCT;

/* CR_LCEG3_EXP_VAL_6_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x200011b8)                                                      */
/*      SPRB0 (0x200011b8)                                                      */
/*      SPRHBM (0x200011b8)                                                     */
/*      SPRC0 (0x200011b8)                                                      */
/*      SPRMCC (0x200011b8)                                                     */
/*      SPRUCC (0x200011b8)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_EXP_VAL_6
*/


#define CR_LCEG3_EXP_VAL_6_SB_FBLP_REG 0x2C0211B8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 expected_value : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Last Expected Value that caused an Error */

  } Bits;
  UINT32 Data;

} CR_LCEG3_EXP_VAL_6_SB_FBLP_STRUCT;

/* CR_LCEG3_EXP_VAL_7_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x200011bc)                                                      */
/*      SPRB0 (0x200011bc)                                                      */
/*      SPRHBM (0x200011bc)                                                     */
/*      SPRC0 (0x200011bc)                                                      */
/*      SPRMCC (0x200011bc)                                                     */
/*      SPRUCC (0x200011bc)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_EXP_VAL_7
*/


#define CR_LCEG3_EXP_VAL_7_SB_FBLP_REG 0x2C0211BC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 expected_value : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Last Expected Value that caused an Error */

  } Bits;
  UINT32 Data;

} CR_LCEG3_EXP_VAL_7_SB_FBLP_STRUCT;

/* CR_LCEG3_EXP_VAL_8_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x200011c0)                                                      */
/*      SPRB0 (0x200011c0)                                                      */
/*      SPRHBM (0x200011c0)                                                     */
/*      SPRC0 (0x200011c0)                                                      */
/*      SPRMCC (0x200011c0)                                                     */
/*      SPRUCC (0x200011c0)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_EXP_VAL_8
*/


#define CR_LCEG3_EXP_VAL_8_SB_FBLP_REG 0x2C0211C0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 expected_value : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Last Expected Value that caused an Error */

  } Bits;
  UINT32 Data;

} CR_LCEG3_EXP_VAL_8_SB_FBLP_STRUCT;

/* CR_LCEG3_EXP_VAL_9_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x200011c4)                                                      */
/*      SPRB0 (0x200011c4)                                                      */
/*      SPRHBM (0x200011c4)                                                     */
/*      SPRC0 (0x200011c4)                                                      */
/*      SPRMCC (0x200011c4)                                                     */
/*      SPRUCC (0x200011c4)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_EXP_VAL_9
*/


#define CR_LCEG3_EXP_VAL_9_SB_FBLP_REG 0x2C0211C4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 expected_value : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Last Expected Value that caused an Error */

  } Bits;
  UINT32 Data;

} CR_LCEG3_EXP_VAL_9_SB_FBLP_STRUCT;

/* CR_LCEG3_EXP_VAL_10_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x200011c8)                                                      */
/*      SPRB0 (0x200011c8)                                                      */
/*      SPRHBM (0x200011c8)                                                     */
/*      SPRC0 (0x200011c8)                                                      */
/*      SPRMCC (0x200011c8)                                                     */
/*      SPRUCC (0x200011c8)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_EXP_VAL_10
*/


#define CR_LCEG3_EXP_VAL_10_SB_FBLP_REG 0x2C0211C8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 expected_value : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Last Expected Value that caused an Error */

  } Bits;
  UINT32 Data;

} CR_LCEG3_EXP_VAL_10_SB_FBLP_STRUCT;

/* CR_LCEG3_EXP_VAL_11_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x200011cc)                                                      */
/*      SPRB0 (0x200011cc)                                                      */
/*      SPRHBM (0x200011cc)                                                     */
/*      SPRC0 (0x200011cc)                                                      */
/*      SPRMCC (0x200011cc)                                                     */
/*      SPRUCC (0x200011cc)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_EXP_VAL_11
*/


#define CR_LCEG3_EXP_VAL_11_SB_FBLP_REG 0x2C0211CC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 expected_value : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Last Expected Value that caused an Error */

  } Bits;
  UINT32 Data;

} CR_LCEG3_EXP_VAL_11_SB_FBLP_STRUCT;

/* CR_LCEG3_EXP_VAL_12_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x200011d0)                                                      */
/*      SPRB0 (0x200011d0)                                                      */
/*      SPRHBM (0x200011d0)                                                     */
/*      SPRC0 (0x200011d0)                                                      */
/*      SPRMCC (0x200011d0)                                                     */
/*      SPRUCC (0x200011d0)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_EXP_VAL_12
*/


#define CR_LCEG3_EXP_VAL_12_SB_FBLP_REG 0x2C0211D0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 expected_value : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Last Expected Value that caused an Error */

  } Bits;
  UINT32 Data;

} CR_LCEG3_EXP_VAL_12_SB_FBLP_STRUCT;

/* CR_LCEG3_EXP_VAL_13_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x200011d4)                                                      */
/*      SPRB0 (0x200011d4)                                                      */
/*      SPRHBM (0x200011d4)                                                     */
/*      SPRC0 (0x200011d4)                                                      */
/*      SPRMCC (0x200011d4)                                                     */
/*      SPRUCC (0x200011d4)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_EXP_VAL_13
*/


#define CR_LCEG3_EXP_VAL_13_SB_FBLP_REG 0x2C0211D4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 expected_value : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Last Expected Value that caused an Error */

  } Bits;
  UINT32 Data;

} CR_LCEG3_EXP_VAL_13_SB_FBLP_STRUCT;

/* CR_LCEG3_EXP_VAL_14_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x200011d8)                                                      */
/*      SPRB0 (0x200011d8)                                                      */
/*      SPRHBM (0x200011d8)                                                     */
/*      SPRC0 (0x200011d8)                                                      */
/*      SPRMCC (0x200011d8)                                                     */
/*      SPRUCC (0x200011d8)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_EXP_VAL_14
*/


#define CR_LCEG3_EXP_VAL_14_SB_FBLP_REG 0x2C0211D8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 expected_value : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Last Expected Value that caused an Error */

  } Bits;
  UINT32 Data;

} CR_LCEG3_EXP_VAL_14_SB_FBLP_STRUCT;

/* CR_LCEG3_EXP_VAL_15_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x200011dc)                                                      */
/*      SPRB0 (0x200011dc)                                                      */
/*      SPRHBM (0x200011dc)                                                     */
/*      SPRC0 (0x200011dc)                                                      */
/*      SPRMCC (0x200011dc)                                                     */
/*      SPRUCC (0x200011dc)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_EXP_VAL_15
*/


#define CR_LCEG3_EXP_VAL_15_SB_FBLP_REG 0x2C0211DC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 expected_value : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Last Expected Value that caused an Error */

  } Bits;
  UINT32 Data;

} CR_LCEG3_EXP_VAL_15_SB_FBLP_STRUCT;

/* CR_LCEG3_STATUS_REG_0_SB_FBLP_REG supported on:                              */
/*      SPRA0 (0x200011e0)                                                      */
/*      SPRB0 (0x200011e0)                                                      */
/*      SPRHBM (0x200011e0)                                                     */
/*      SPRC0 (0x200011e0)                                                      */
/*      SPRMCC (0x200011e0)                                                     */
/*      SPRUCC (0x200011e0)                                                     */
/* Register default value on SPRA0: 0x02200000                                  */
/* Register default value on SPRB0: 0x02200000                                  */
/* Register default value on SPRHBM: 0x02200000                                 */
/* Register default value on SPRC0: 0x02200000                                  */
/* Register default value on SPRMCC: 0x02200000                                 */
/* Register default value on SPRUCC: 0x02200000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_STATUS_REG_0
*/


#define CR_LCEG3_STATUS_REG_0_SB_FBLP_REG 0x2C0211E0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 rx_fsm : 3;

                            /* Bits[2:0], Access Type=RO/V/P, default=0x00000000*/

                            /* RX Side FSm Status */
    UINT32 rxchk2rxfsm_eieos_det : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /* Chk signal Indicating EIEOS Detect */
    UINT32 rxchk2rxfsm_tag_det : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /* Chk signal Indicating Tag Detect */
    UINT32 rxfsm_sos_det : 1;

                            /* Bits[5:5], Access Type=RO/V/P, default=0x00000000*/

                            /* SOS Detect Signal from Rx fsm */
    UINT32 rxfsm2rxprbs_loadseed : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /* Load Seed Sign from Rxfsm-to Rxprbs */
    UINT32 rxfsm2rxprbs_prbs_enable : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /* Master PRBS Enable Signal from Rx-fsm to Rx prbs */
    UINT32 rxfsm2rxpatbuf_enable : 1;

                            /* Bits[8:8], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               master Patbuf Enable Signal from Rx-fsm to Rx
                               patbuf
                            */
    UINT32 prbs_chk_cnt_f : 2;

                            /* Bits[10:9], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Index value to be used in checker Slate for
                               Comparison
                            */
    UINT32 prbs2chk_enable_chk : 1;

                            /* Bits[11:11], Access Type=RO/V/P, default=0x00000000*/

                            /* Enable Check indicator from rx prbs to Checker */
    UINT32 slate_cnt_f : 2;

                            /* Bits[13:12], Access Type=RO/V/P, default=0x00000000*/

                            /* Checker Slate Counter Indicator */
    UINT32 err_seen : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* Error Observed in Checker */
    UINT32 rxfsm2csr_write_data : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* Write to CSR Signal Indicator */
    UINT32 tx_fsm : 3;

                            /* Bits[18:16], Access Type=RO/V/P, default=0x00000000*/

                            /* TX Side FSm Status */
    UINT32 lceg3_lce_start_qual : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* Qualified Start Signal from Block Aligner */
    UINT32 txfsm2txprbs_loadseed : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* Load Seed Indicator from Tx FSM to TX PRBS */
    UINT32 txfsm2txsos_reset_sos_cnt : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000001*/

                            /* SoS Counter reset Signal from Tx FSM 2 Tx SOS */
    UINT32 csr_err_log_stable : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               High indicating Error Status Registers are
                               frozen
                            */
    UINT32 rcvd_n_eieos_blocks : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* Rcvd N eieos Blocks Indicator from Rx2Tx */
    UINT32 rcvd_n_prbs_seed_chunks : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* Rcvd N Seed Chunks Indicator from Rx2Tx */
    UINT32 sos_cnt_reached_zero : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000001*/

                            /* SoS Counter reached Zero */
    UINT32 txfsm2txprbs_start_prbs : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* start PRBS signal sig from TX-fsm to TX PRBS */
    UINT32 txfsm2txtrain_enable : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Start train Signal sig from Tx-FSM to TX train
                               Module
                            */
    UINT32 txfsm2txprbs_send_seed : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* Send PRBS Seed sig from TX FSM to TXPRBS */
    UINT32 txfsm2txprbs_send_deta : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* Send PRBS DATA sig from TX FSM to TXPRBS */
    UINT32 txfsm2patbuf_run : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* Start Pat BUF Signal from Tx-FSM to TX PatBuf */
    UINT32 txfsm2txsos_send_sos : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* Send SOS Block sig from Tx fsm to TX SoS Gen */

  } Bits;
  UINT32 Data;

} CR_LCEG3_STATUS_REG_0_SB_FBLP_STRUCT;

/* CR_LCEG3_STATUS_REG_1_SB_FBLP_REG supported on:                              */
/*      SPRA0 (0x200011e4)                                                      */
/*      SPRB0 (0x200011e4)                                                      */
/*      SPRHBM (0x200011e4)                                                     */
/*      SPRC0 (0x200011e4)                                                      */
/*      SPRMCC (0x200011e4)                                                     */
/*      SPRUCC (0x200011e4)                                                     */
/* Register default value on SPRA0: 0x02200000                                  */
/* Register default value on SPRB0: 0x02200000                                  */
/* Register default value on SPRHBM: 0x02200000                                 */
/* Register default value on SPRC0: 0x02200000                                  */
/* Register default value on SPRMCC: 0x02200000                                 */
/* Register default value on SPRUCC: 0x02200000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_STATUS_REG_1
*/


#define CR_LCEG3_STATUS_REG_1_SB_FBLP_REG 0x2C0211E4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 rx_fsm : 3;

                            /* Bits[2:0], Access Type=RO/V/P, default=0x00000000*/

                            /* RX Side FSm Status */
    UINT32 rxchk2rxfsm_eieos_det : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /* Chk signal Indicating EIEOS Detect */
    UINT32 rxchk2rxfsm_tag_det : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /* Chk signal Indicating Tag Detect */
    UINT32 rxfsm_sos_det : 1;

                            /* Bits[5:5], Access Type=RO/V/P, default=0x00000000*/

                            /* SOS Detect Signal from Rx fsm */
    UINT32 rxfsm2rxprbs_loadseed : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /* Load Seed Sign from Rxfsm-to Rxprbs */
    UINT32 rxfsm2rxprbs_prbs_enable : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /* Master PRBS Enable Signal from Rx-fsm to Rx prbs */
    UINT32 rxfsm2rxpatbuf_enable : 1;

                            /* Bits[8:8], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               master Patbuf Enable Signal from Rx-fsm to Rx
                               patbuf
                            */
    UINT32 prbs_chk_cnt_f : 2;

                            /* Bits[10:9], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Index value to be used in checker Slate for
                               Comparison
                            */
    UINT32 prbs2chk_enable_chk : 1;

                            /* Bits[11:11], Access Type=RO/V/P, default=0x00000000*/

                            /* Enable Check indicator from rx prbs to Checker */
    UINT32 slate_cnt_f : 2;

                            /* Bits[13:12], Access Type=RO/V/P, default=0x00000000*/

                            /* Checker Slate Counter Indicator */
    UINT32 err_seen : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* Error Observed in Checker */
    UINT32 rxfsm2csr_write_data : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* Write to CSR Signal Indicator */
    UINT32 tx_fsm : 3;

                            /* Bits[18:16], Access Type=RO/V/P, default=0x00000000*/

                            /* TX Side FSm Status */
    UINT32 lceg3_lce_start_qual : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* Qualified Start Signal from Block Aligner */
    UINT32 txfsm2txprbs_loadseed : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* Load Seed Indicator from Tx FSM to TX PRBS */
    UINT32 txfsm2txsos_reset_sos_cnt : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000001*/

                            /* SoS Counter reset Signal from Tx FSM 2 Tx SOS */
    UINT32 csr_err_log_stable : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               High indicating Error Status Registers are
                               frozen
                            */
    UINT32 rcvd_n_eieos_blocks : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* Rcvd N eieos Blocks Indicator from Rx2Tx */
    UINT32 rcvd_n_prbs_seed_chunks : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* Rcvd N Seed Chunks Indicator from Rx2Tx */
    UINT32 sos_cnt_reached_zero : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000001*/

                            /* SoS Counter reached Zero */
    UINT32 txfsm2txprbs_start_prbs : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* start PRBS signal sig from TX-fsm to TX PRBS */
    UINT32 txfsm2txtrain_enable : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Start train Signal sig from Tx-FSM to TX train
                               Module
                            */
    UINT32 txfsm2txprbs_send_seed : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* Send PRBS Seed sig from TX FSM to TXPRBS */
    UINT32 txfsm2txprbs_send_deta : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* Send PRBS DATA sig from TX FSM to TXPRBS */
    UINT32 txfsm2patbuf_run : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* Start Pat BUF Signal from Tx-FSM to TX PatBuf */
    UINT32 txfsm2txsos_send_sos : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* Send SOS Block sig from Tx fsm to TX SoS Gen */

  } Bits;
  UINT32 Data;

} CR_LCEG3_STATUS_REG_1_SB_FBLP_STRUCT;

/* CR_LCEG3_STATUS_REG_2_SB_FBLP_REG supported on:                              */
/*      SPRA0 (0x200011e8)                                                      */
/*      SPRB0 (0x200011e8)                                                      */
/*      SPRHBM (0x200011e8)                                                     */
/*      SPRC0 (0x200011e8)                                                      */
/*      SPRMCC (0x200011e8)                                                     */
/*      SPRUCC (0x200011e8)                                                     */
/* Register default value on SPRA0: 0x02200000                                  */
/* Register default value on SPRB0: 0x02200000                                  */
/* Register default value on SPRHBM: 0x02200000                                 */
/* Register default value on SPRC0: 0x02200000                                  */
/* Register default value on SPRMCC: 0x02200000                                 */
/* Register default value on SPRUCC: 0x02200000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_STATUS_REG_2
*/


#define CR_LCEG3_STATUS_REG_2_SB_FBLP_REG 0x2C0211E8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 rx_fsm : 3;

                            /* Bits[2:0], Access Type=RO/V/P, default=0x00000000*/

                            /* RX Side FSm Status */
    UINT32 rxchk2rxfsm_eieos_det : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /* Chk signal Indicating EIEOS Detect */
    UINT32 rxchk2rxfsm_tag_det : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /* Chk signal Indicating Tag Detect */
    UINT32 rxfsm_sos_det : 1;

                            /* Bits[5:5], Access Type=RO/V/P, default=0x00000000*/

                            /* SOS Detect Signal from Rx fsm */
    UINT32 rxfsm2rxprbs_loadseed : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /* Load Seed Sign from Rxfsm-to Rxprbs */
    UINT32 rxfsm2rxprbs_prbs_enable : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /* Master PRBS Enable Signal from Rx-fsm to Rx prbs */
    UINT32 rxfsm2rxpatbuf_enable : 1;

                            /* Bits[8:8], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               master Patbuf Enable Signal from Rx-fsm to Rx
                               patbuf
                            */
    UINT32 prbs_chk_cnt_f : 2;

                            /* Bits[10:9], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Index value to be used in checker Slate for
                               Comparison
                            */
    UINT32 prbs2chk_enable_chk : 1;

                            /* Bits[11:11], Access Type=RO/V/P, default=0x00000000*/

                            /* Enable Check indicator from rx prbs to Checker */
    UINT32 slate_cnt_f : 2;

                            /* Bits[13:12], Access Type=RO/V/P, default=0x00000000*/

                            /* Checker Slate Counter Indicator */
    UINT32 err_seen : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* Error Observed in Checker */
    UINT32 rxfsm2csr_write_data : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* Write to CSR Signal Indicator */
    UINT32 tx_fsm : 3;

                            /* Bits[18:16], Access Type=RO/V/P, default=0x00000000*/

                            /* TX Side FSm Status */
    UINT32 lceg3_lce_start_qual : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* Qualified Start Signal from Block Aligner */
    UINT32 txfsm2txprbs_loadseed : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* Load Seed Indicator from Tx FSM to TX PRBS */
    UINT32 txfsm2txsos_reset_sos_cnt : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000001*/

                            /* SoS Counter reset Signal from Tx FSM 2 Tx SOS */
    UINT32 csr_err_log_stable : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               High indicating Error Status Registers are
                               frozen
                            */
    UINT32 rcvd_n_eieos_blocks : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* Rcvd N eieos Blocks Indicator from Rx2Tx */
    UINT32 rcvd_n_prbs_seed_chunks : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* Rcvd N Seed Chunks Indicator from Rx2Tx */
    UINT32 sos_cnt_reached_zero : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000001*/

                            /* SoS Counter reached Zero */
    UINT32 txfsm2txprbs_start_prbs : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* start PRBS signal sig from TX-fsm to TX PRBS */
    UINT32 txfsm2txtrain_enable : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Start train Signal sig from Tx-FSM to TX train
                               Module
                            */
    UINT32 txfsm2txprbs_send_seed : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* Send PRBS Seed sig from TX FSM to TXPRBS */
    UINT32 txfsm2txprbs_send_deta : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* Send PRBS DATA sig from TX FSM to TXPRBS */
    UINT32 txfsm2patbuf_run : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* Start Pat BUF Signal from Tx-FSM to TX PatBuf */
    UINT32 txfsm2txsos_send_sos : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* Send SOS Block sig from Tx fsm to TX SoS Gen */

  } Bits;
  UINT32 Data;

} CR_LCEG3_STATUS_REG_2_SB_FBLP_STRUCT;

/* CR_LCEG3_STATUS_REG_3_SB_FBLP_REG supported on:                              */
/*      SPRA0 (0x200011ec)                                                      */
/*      SPRB0 (0x200011ec)                                                      */
/*      SPRHBM (0x200011ec)                                                     */
/*      SPRC0 (0x200011ec)                                                      */
/*      SPRMCC (0x200011ec)                                                     */
/*      SPRUCC (0x200011ec)                                                     */
/* Register default value on SPRA0: 0x02200000                                  */
/* Register default value on SPRB0: 0x02200000                                  */
/* Register default value on SPRHBM: 0x02200000                                 */
/* Register default value on SPRC0: 0x02200000                                  */
/* Register default value on SPRMCC: 0x02200000                                 */
/* Register default value on SPRUCC: 0x02200000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_STATUS_REG_3
*/


#define CR_LCEG3_STATUS_REG_3_SB_FBLP_REG 0x2C0211EC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 rx_fsm : 3;

                            /* Bits[2:0], Access Type=RO/V/P, default=0x00000000*/

                            /* RX Side FSm Status */
    UINT32 rxchk2rxfsm_eieos_det : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /* Chk signal Indicating EIEOS Detect */
    UINT32 rxchk2rxfsm_tag_det : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /* Chk signal Indicating Tag Detect */
    UINT32 rxfsm_sos_det : 1;

                            /* Bits[5:5], Access Type=RO/V/P, default=0x00000000*/

                            /* SOS Detect Signal from Rx fsm */
    UINT32 rxfsm2rxprbs_loadseed : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /* Load Seed Sign from Rxfsm-to Rxprbs */
    UINT32 rxfsm2rxprbs_prbs_enable : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /* Master PRBS Enable Signal from Rx-fsm to Rx prbs */
    UINT32 rxfsm2rxpatbuf_enable : 1;

                            /* Bits[8:8], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               master Patbuf Enable Signal from Rx-fsm to Rx
                               patbuf
                            */
    UINT32 prbs_chk_cnt_f : 2;

                            /* Bits[10:9], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Index value to be used in checker Slate for
                               Comparison
                            */
    UINT32 prbs2chk_enable_chk : 1;

                            /* Bits[11:11], Access Type=RO/V/P, default=0x00000000*/

                            /* Enable Check indicator from rx prbs to Checker */
    UINT32 slate_cnt_f : 2;

                            /* Bits[13:12], Access Type=RO/V/P, default=0x00000000*/

                            /* Checker Slate Counter Indicator */
    UINT32 err_seen : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* Error Observed in Checker */
    UINT32 rxfsm2csr_write_data : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* Write to CSR Signal Indicator */
    UINT32 tx_fsm : 3;

                            /* Bits[18:16], Access Type=RO/V/P, default=0x00000000*/

                            /* TX Side FSm Status */
    UINT32 lceg3_lce_start_qual : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* Qualified Start Signal from Block Aligner */
    UINT32 txfsm2txprbs_loadseed : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* Load Seed Indicator from Tx FSM to TX PRBS */
    UINT32 txfsm2txsos_reset_sos_cnt : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000001*/

                            /* SoS Counter reset Signal from Tx FSM 2 Tx SOS */
    UINT32 csr_err_log_stable : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               High indicating Error Status Registers are
                               frozen
                            */
    UINT32 rcvd_n_eieos_blocks : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* Rcvd N eieos Blocks Indicator from Rx2Tx */
    UINT32 rcvd_n_prbs_seed_chunks : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* Rcvd N Seed Chunks Indicator from Rx2Tx */
    UINT32 sos_cnt_reached_zero : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000001*/

                            /* SoS Counter reached Zero */
    UINT32 txfsm2txprbs_start_prbs : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* start PRBS signal sig from TX-fsm to TX PRBS */
    UINT32 txfsm2txtrain_enable : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Start train Signal sig from Tx-FSM to TX train
                               Module
                            */
    UINT32 txfsm2txprbs_send_seed : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* Send PRBS Seed sig from TX FSM to TXPRBS */
    UINT32 txfsm2txprbs_send_deta : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* Send PRBS DATA sig from TX FSM to TXPRBS */
    UINT32 txfsm2patbuf_run : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* Start Pat BUF Signal from Tx-FSM to TX PatBuf */
    UINT32 txfsm2txsos_send_sos : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* Send SOS Block sig from Tx fsm to TX SoS Gen */

  } Bits;
  UINT32 Data;

} CR_LCEG3_STATUS_REG_3_SB_FBLP_STRUCT;

/* CR_LCEG3_STATUS_REG_4_SB_FBLP_REG supported on:                              */
/*      SPRA0 (0x200011f0)                                                      */
/*      SPRB0 (0x200011f0)                                                      */
/*      SPRHBM (0x200011f0)                                                     */
/*      SPRC0 (0x200011f0)                                                      */
/*      SPRMCC (0x200011f0)                                                     */
/*      SPRUCC (0x200011f0)                                                     */
/* Register default value on SPRA0: 0x02200000                                  */
/* Register default value on SPRB0: 0x02200000                                  */
/* Register default value on SPRHBM: 0x02200000                                 */
/* Register default value on SPRC0: 0x02200000                                  */
/* Register default value on SPRMCC: 0x02200000                                 */
/* Register default value on SPRUCC: 0x02200000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_STATUS_REG_4
*/


#define CR_LCEG3_STATUS_REG_4_SB_FBLP_REG 0x2C0211F0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 rx_fsm : 3;

                            /* Bits[2:0], Access Type=RO/V/P, default=0x00000000*/

                            /* RX Side FSm Status */
    UINT32 rxchk2rxfsm_eieos_det : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /* Chk signal Indicating EIEOS Detect */
    UINT32 rxchk2rxfsm_tag_det : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /* Chk signal Indicating Tag Detect */
    UINT32 rxfsm_sos_det : 1;

                            /* Bits[5:5], Access Type=RO/V/P, default=0x00000000*/

                            /* SOS Detect Signal from Rx fsm */
    UINT32 rxfsm2rxprbs_loadseed : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /* Load Seed Sign from Rxfsm-to Rxprbs */
    UINT32 rxfsm2rxprbs_prbs_enable : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /* Master PRBS Enable Signal from Rx-fsm to Rx prbs */
    UINT32 rxfsm2rxpatbuf_enable : 1;

                            /* Bits[8:8], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               master Patbuf Enable Signal from Rx-fsm to Rx
                               patbuf
                            */
    UINT32 prbs_chk_cnt_f : 2;

                            /* Bits[10:9], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Index value to be used in checker Slate for
                               Comparison
                            */
    UINT32 prbs2chk_enable_chk : 1;

                            /* Bits[11:11], Access Type=RO/V/P, default=0x00000000*/

                            /* Enable Check indicator from rx prbs to Checker */
    UINT32 slate_cnt_f : 2;

                            /* Bits[13:12], Access Type=RO/V/P, default=0x00000000*/

                            /* Checker Slate Counter Indicator */
    UINT32 err_seen : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* Error Observed in Checker */
    UINT32 rxfsm2csr_write_data : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* Write to CSR Signal Indicator */
    UINT32 tx_fsm : 3;

                            /* Bits[18:16], Access Type=RO/V/P, default=0x00000000*/

                            /* TX Side FSm Status */
    UINT32 lceg3_lce_start_qual : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* Qualified Start Signal from Block Aligner */
    UINT32 txfsm2txprbs_loadseed : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* Load Seed Indicator from Tx FSM to TX PRBS */
    UINT32 txfsm2txsos_reset_sos_cnt : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000001*/

                            /* SoS Counter reset Signal from Tx FSM 2 Tx SOS */
    UINT32 csr_err_log_stable : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               High indicating Error Status Registers are
                               frozen
                            */
    UINT32 rcvd_n_eieos_blocks : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* Rcvd N eieos Blocks Indicator from Rx2Tx */
    UINT32 rcvd_n_prbs_seed_chunks : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* Rcvd N Seed Chunks Indicator from Rx2Tx */
    UINT32 sos_cnt_reached_zero : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000001*/

                            /* SoS Counter reached Zero */
    UINT32 txfsm2txprbs_start_prbs : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* start PRBS signal sig from TX-fsm to TX PRBS */
    UINT32 txfsm2txtrain_enable : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Start train Signal sig from Tx-FSM to TX train
                               Module
                            */
    UINT32 txfsm2txprbs_send_seed : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* Send PRBS Seed sig from TX FSM to TXPRBS */
    UINT32 txfsm2txprbs_send_deta : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* Send PRBS DATA sig from TX FSM to TXPRBS */
    UINT32 txfsm2patbuf_run : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* Start Pat BUF Signal from Tx-FSM to TX PatBuf */
    UINT32 txfsm2txsos_send_sos : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* Send SOS Block sig from Tx fsm to TX SoS Gen */

  } Bits;
  UINT32 Data;

} CR_LCEG3_STATUS_REG_4_SB_FBLP_STRUCT;

/* CR_LCEG3_STATUS_REG_5_SB_FBLP_REG supported on:                              */
/*      SPRA0 (0x200011f4)                                                      */
/*      SPRB0 (0x200011f4)                                                      */
/*      SPRHBM (0x200011f4)                                                     */
/*      SPRC0 (0x200011f4)                                                      */
/*      SPRMCC (0x200011f4)                                                     */
/*      SPRUCC (0x200011f4)                                                     */
/* Register default value on SPRA0: 0x02200000                                  */
/* Register default value on SPRB0: 0x02200000                                  */
/* Register default value on SPRHBM: 0x02200000                                 */
/* Register default value on SPRC0: 0x02200000                                  */
/* Register default value on SPRMCC: 0x02200000                                 */
/* Register default value on SPRUCC: 0x02200000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_STATUS_REG_5
*/


#define CR_LCEG3_STATUS_REG_5_SB_FBLP_REG 0x2C0211F4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 rx_fsm : 3;

                            /* Bits[2:0], Access Type=RO/V/P, default=0x00000000*/

                            /* RX Side FSm Status */
    UINT32 rxchk2rxfsm_eieos_det : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /* Chk signal Indicating EIEOS Detect */
    UINT32 rxchk2rxfsm_tag_det : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /* Chk signal Indicating Tag Detect */
    UINT32 rxfsm_sos_det : 1;

                            /* Bits[5:5], Access Type=RO/V/P, default=0x00000000*/

                            /* SOS Detect Signal from Rx fsm */
    UINT32 rxfsm2rxprbs_loadseed : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /* Load Seed Sign from Rxfsm-to Rxprbs */
    UINT32 rxfsm2rxprbs_prbs_enable : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /* Master PRBS Enable Signal from Rx-fsm to Rx prbs */
    UINT32 rxfsm2rxpatbuf_enable : 1;

                            /* Bits[8:8], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               master Patbuf Enable Signal from Rx-fsm to Rx
                               patbuf
                            */
    UINT32 prbs_chk_cnt_f : 2;

                            /* Bits[10:9], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Index value to be used in checker Slate for
                               Comparison
                            */
    UINT32 prbs2chk_enable_chk : 1;

                            /* Bits[11:11], Access Type=RO/V/P, default=0x00000000*/

                            /* Enable Check indicator from rx prbs to Checker */
    UINT32 slate_cnt_f : 2;

                            /* Bits[13:12], Access Type=RO/V/P, default=0x00000000*/

                            /* Checker Slate Counter Indicator */
    UINT32 err_seen : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* Error Observed in Checker */
    UINT32 rxfsm2csr_write_data : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* Write to CSR Signal Indicator */
    UINT32 tx_fsm : 3;

                            /* Bits[18:16], Access Type=RO/V/P, default=0x00000000*/

                            /* TX Side FSm Status */
    UINT32 lceg3_lce_start_qual : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* Qualified Start Signal from Block Aligner */
    UINT32 txfsm2txprbs_loadseed : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* Load Seed Indicator from Tx FSM to TX PRBS */
    UINT32 txfsm2txsos_reset_sos_cnt : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000001*/

                            /* SoS Counter reset Signal from Tx FSM 2 Tx SOS */
    UINT32 csr_err_log_stable : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               High indicating Error Status Registers are
                               frozen
                            */
    UINT32 rcvd_n_eieos_blocks : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* Rcvd N eieos Blocks Indicator from Rx2Tx */
    UINT32 rcvd_n_prbs_seed_chunks : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* Rcvd N Seed Chunks Indicator from Rx2Tx */
    UINT32 sos_cnt_reached_zero : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000001*/

                            /* SoS Counter reached Zero */
    UINT32 txfsm2txprbs_start_prbs : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* start PRBS signal sig from TX-fsm to TX PRBS */
    UINT32 txfsm2txtrain_enable : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Start train Signal sig from Tx-FSM to TX train
                               Module
                            */
    UINT32 txfsm2txprbs_send_seed : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* Send PRBS Seed sig from TX FSM to TXPRBS */
    UINT32 txfsm2txprbs_send_deta : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* Send PRBS DATA sig from TX FSM to TXPRBS */
    UINT32 txfsm2patbuf_run : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* Start Pat BUF Signal from Tx-FSM to TX PatBuf */
    UINT32 txfsm2txsos_send_sos : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* Send SOS Block sig from Tx fsm to TX SoS Gen */

  } Bits;
  UINT32 Data;

} CR_LCEG3_STATUS_REG_5_SB_FBLP_STRUCT;

/* CR_LCEG3_STATUS_REG_6_SB_FBLP_REG supported on:                              */
/*      SPRA0 (0x200011f8)                                                      */
/*      SPRB0 (0x200011f8)                                                      */
/*      SPRHBM (0x200011f8)                                                     */
/*      SPRC0 (0x200011f8)                                                      */
/*      SPRMCC (0x200011f8)                                                     */
/*      SPRUCC (0x200011f8)                                                     */
/* Register default value on SPRA0: 0x02200000                                  */
/* Register default value on SPRB0: 0x02200000                                  */
/* Register default value on SPRHBM: 0x02200000                                 */
/* Register default value on SPRC0: 0x02200000                                  */
/* Register default value on SPRMCC: 0x02200000                                 */
/* Register default value on SPRUCC: 0x02200000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_STATUS_REG_6
*/


#define CR_LCEG3_STATUS_REG_6_SB_FBLP_REG 0x2C0211F8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 rx_fsm : 3;

                            /* Bits[2:0], Access Type=RO/V/P, default=0x00000000*/

                            /* RX Side FSm Status */
    UINT32 rxchk2rxfsm_eieos_det : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /* Chk signal Indicating EIEOS Detect */
    UINT32 rxchk2rxfsm_tag_det : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /* Chk signal Indicating Tag Detect */
    UINT32 rxfsm_sos_det : 1;

                            /* Bits[5:5], Access Type=RO/V/P, default=0x00000000*/

                            /* SOS Detect Signal from Rx fsm */
    UINT32 rxfsm2rxprbs_loadseed : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /* Load Seed Sign from Rxfsm-to Rxprbs */
    UINT32 rxfsm2rxprbs_prbs_enable : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /* Master PRBS Enable Signal from Rx-fsm to Rx prbs */
    UINT32 rxfsm2rxpatbuf_enable : 1;

                            /* Bits[8:8], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               master Patbuf Enable Signal from Rx-fsm to Rx
                               patbuf
                            */
    UINT32 prbs_chk_cnt_f : 2;

                            /* Bits[10:9], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Index value to be used in checker Slate for
                               Comparison
                            */
    UINT32 prbs2chk_enable_chk : 1;

                            /* Bits[11:11], Access Type=RO/V/P, default=0x00000000*/

                            /* Enable Check indicator from rx prbs to Checker */
    UINT32 slate_cnt_f : 2;

                            /* Bits[13:12], Access Type=RO/V/P, default=0x00000000*/

                            /* Checker Slate Counter Indicator */
    UINT32 err_seen : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* Error Observed in Checker */
    UINT32 rxfsm2csr_write_data : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* Write to CSR Signal Indicator */
    UINT32 tx_fsm : 3;

                            /* Bits[18:16], Access Type=RO/V/P, default=0x00000000*/

                            /* TX Side FSm Status */
    UINT32 lceg3_lce_start_qual : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* Qualified Start Signal from Block Aligner */
    UINT32 txfsm2txprbs_loadseed : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* Load Seed Indicator from Tx FSM to TX PRBS */
    UINT32 txfsm2txsos_reset_sos_cnt : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000001*/

                            /* SoS Counter reset Signal from Tx FSM 2 Tx SOS */
    UINT32 csr_err_log_stable : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               High indicating Error Status Registers are
                               frozen
                            */
    UINT32 rcvd_n_eieos_blocks : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* Rcvd N eieos Blocks Indicator from Rx2Tx */
    UINT32 rcvd_n_prbs_seed_chunks : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* Rcvd N Seed Chunks Indicator from Rx2Tx */
    UINT32 sos_cnt_reached_zero : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000001*/

                            /* SoS Counter reached Zero */
    UINT32 txfsm2txprbs_start_prbs : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* start PRBS signal sig from TX-fsm to TX PRBS */
    UINT32 txfsm2txtrain_enable : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Start train Signal sig from Tx-FSM to TX train
                               Module
                            */
    UINT32 txfsm2txprbs_send_seed : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* Send PRBS Seed sig from TX FSM to TXPRBS */
    UINT32 txfsm2txprbs_send_deta : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* Send PRBS DATA sig from TX FSM to TXPRBS */
    UINT32 txfsm2patbuf_run : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* Start Pat BUF Signal from Tx-FSM to TX PatBuf */
    UINT32 txfsm2txsos_send_sos : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* Send SOS Block sig from Tx fsm to TX SoS Gen */

  } Bits;
  UINT32 Data;

} CR_LCEG3_STATUS_REG_6_SB_FBLP_STRUCT;

/* CR_LCEG3_STATUS_REG_7_SB_FBLP_REG supported on:                              */
/*      SPRA0 (0x200011fc)                                                      */
/*      SPRB0 (0x200011fc)                                                      */
/*      SPRHBM (0x200011fc)                                                     */
/*      SPRC0 (0x200011fc)                                                      */
/*      SPRMCC (0x200011fc)                                                     */
/*      SPRUCC (0x200011fc)                                                     */
/* Register default value on SPRA0: 0x02200000                                  */
/* Register default value on SPRB0: 0x02200000                                  */
/* Register default value on SPRHBM: 0x02200000                                 */
/* Register default value on SPRC0: 0x02200000                                  */
/* Register default value on SPRMCC: 0x02200000                                 */
/* Register default value on SPRUCC: 0x02200000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_STATUS_REG_7
*/


#define CR_LCEG3_STATUS_REG_7_SB_FBLP_REG 0x2C0211FC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 rx_fsm : 3;

                            /* Bits[2:0], Access Type=RO/V/P, default=0x00000000*/

                            /* RX Side FSm Status */
    UINT32 rxchk2rxfsm_eieos_det : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /* Chk signal Indicating EIEOS Detect */
    UINT32 rxchk2rxfsm_tag_det : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /* Chk signal Indicating Tag Detect */
    UINT32 rxfsm_sos_det : 1;

                            /* Bits[5:5], Access Type=RO/V/P, default=0x00000000*/

                            /* SOS Detect Signal from Rx fsm */
    UINT32 rxfsm2rxprbs_loadseed : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /* Load Seed Sign from Rxfsm-to Rxprbs */
    UINT32 rxfsm2rxprbs_prbs_enable : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /* Master PRBS Enable Signal from Rx-fsm to Rx prbs */
    UINT32 rxfsm2rxpatbuf_enable : 1;

                            /* Bits[8:8], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               master Patbuf Enable Signal from Rx-fsm to Rx
                               patbuf
                            */
    UINT32 prbs_chk_cnt_f : 2;

                            /* Bits[10:9], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Index value to be used in checker Slate for
                               Comparison
                            */
    UINT32 prbs2chk_enable_chk : 1;

                            /* Bits[11:11], Access Type=RO/V/P, default=0x00000000*/

                            /* Enable Check indicator from rx prbs to Checker */
    UINT32 slate_cnt_f : 2;

                            /* Bits[13:12], Access Type=RO/V/P, default=0x00000000*/

                            /* Checker Slate Counter Indicator */
    UINT32 err_seen : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* Error Observed in Checker */
    UINT32 rxfsm2csr_write_data : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* Write to CSR Signal Indicator */
    UINT32 tx_fsm : 3;

                            /* Bits[18:16], Access Type=RO/V/P, default=0x00000000*/

                            /* TX Side FSm Status */
    UINT32 lceg3_lce_start_qual : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* Qualified Start Signal from Block Aligner */
    UINT32 txfsm2txprbs_loadseed : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* Load Seed Indicator from Tx FSM to TX PRBS */
    UINT32 txfsm2txsos_reset_sos_cnt : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000001*/

                            /* SoS Counter reset Signal from Tx FSM 2 Tx SOS */
    UINT32 csr_err_log_stable : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               High indicating Error Status Registers are
                               frozen
                            */
    UINT32 rcvd_n_eieos_blocks : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* Rcvd N eieos Blocks Indicator from Rx2Tx */
    UINT32 rcvd_n_prbs_seed_chunks : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* Rcvd N Seed Chunks Indicator from Rx2Tx */
    UINT32 sos_cnt_reached_zero : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000001*/

                            /* SoS Counter reached Zero */
    UINT32 txfsm2txprbs_start_prbs : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* start PRBS signal sig from TX-fsm to TX PRBS */
    UINT32 txfsm2txtrain_enable : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Start train Signal sig from Tx-FSM to TX train
                               Module
                            */
    UINT32 txfsm2txprbs_send_seed : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* Send PRBS Seed sig from TX FSM to TXPRBS */
    UINT32 txfsm2txprbs_send_deta : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* Send PRBS DATA sig from TX FSM to TXPRBS */
    UINT32 txfsm2patbuf_run : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* Start Pat BUF Signal from Tx-FSM to TX PatBuf */
    UINT32 txfsm2txsos_send_sos : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* Send SOS Block sig from Tx fsm to TX SoS Gen */

  } Bits;
  UINT32 Data;

} CR_LCEG3_STATUS_REG_7_SB_FBLP_STRUCT;

/* CR_LCEG3_STATUS_REG_8_SB_FBLP_REG supported on:                              */
/*      SPRA0 (0x20001200)                                                      */
/*      SPRB0 (0x20001200)                                                      */
/*      SPRHBM (0x20001200)                                                     */
/*      SPRC0 (0x20001200)                                                      */
/*      SPRMCC (0x20001200)                                                     */
/*      SPRUCC (0x20001200)                                                     */
/* Register default value on SPRA0: 0x02200000                                  */
/* Register default value on SPRB0: 0x02200000                                  */
/* Register default value on SPRHBM: 0x02200000                                 */
/* Register default value on SPRC0: 0x02200000                                  */
/* Register default value on SPRMCC: 0x02200000                                 */
/* Register default value on SPRUCC: 0x02200000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_STATUS_REG_8
*/


#define CR_LCEG3_STATUS_REG_8_SB_FBLP_REG 0x2C021200

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 rx_fsm : 3;

                            /* Bits[2:0], Access Type=RO/V/P, default=0x00000000*/

                            /* RX Side FSm Status */
    UINT32 rxchk2rxfsm_eieos_det : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /* Chk signal Indicating EIEOS Detect */
    UINT32 rxchk2rxfsm_tag_det : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /* Chk signal Indicating Tag Detect */
    UINT32 rxfsm_sos_det : 1;

                            /* Bits[5:5], Access Type=RO/V/P, default=0x00000000*/

                            /* SOS Detect Signal from Rx fsm */
    UINT32 rxfsm2rxprbs_loadseed : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /* Load Seed Sign from Rxfsm-to Rxprbs */
    UINT32 rxfsm2rxprbs_prbs_enable : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /* Master PRBS Enable Signal from Rx-fsm to Rx prbs */
    UINT32 rxfsm2rxpatbuf_enable : 1;

                            /* Bits[8:8], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               master Patbuf Enable Signal from Rx-fsm to Rx
                               patbuf
                            */
    UINT32 prbs_chk_cnt_f : 2;

                            /* Bits[10:9], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Index value to be used in checker Slate for
                               Comparison
                            */
    UINT32 prbs2chk_enable_chk : 1;

                            /* Bits[11:11], Access Type=RO/V/P, default=0x00000000*/

                            /* Enable Check indicator from rx prbs to Checker */
    UINT32 slate_cnt_f : 2;

                            /* Bits[13:12], Access Type=RO/V/P, default=0x00000000*/

                            /* Checker Slate Counter Indicator */
    UINT32 err_seen : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* Error Observed in Checker */
    UINT32 rxfsm2csr_write_data : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* Write to CSR Signal Indicator */
    UINT32 tx_fsm : 3;

                            /* Bits[18:16], Access Type=RO/V/P, default=0x00000000*/

                            /* TX Side FSm Status */
    UINT32 lceg3_lce_start_qual : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* Qualified Start Signal from Block Aligner */
    UINT32 txfsm2txprbs_loadseed : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* Load Seed Indicator from Tx FSM to TX PRBS */
    UINT32 txfsm2txsos_reset_sos_cnt : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000001*/

                            /* SoS Counter reset Signal from Tx FSM 2 Tx SOS */
    UINT32 csr_err_log_stable : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               High indicating Error Status Registers are
                               frozen
                            */
    UINT32 rcvd_n_eieos_blocks : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* Rcvd N eieos Blocks Indicator from Rx2Tx */
    UINT32 rcvd_n_prbs_seed_chunks : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* Rcvd N Seed Chunks Indicator from Rx2Tx */
    UINT32 sos_cnt_reached_zero : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000001*/

                            /* SoS Counter reached Zero */
    UINT32 txfsm2txprbs_start_prbs : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* start PRBS signal sig from TX-fsm to TX PRBS */
    UINT32 txfsm2txtrain_enable : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Start train Signal sig from Tx-FSM to TX train
                               Module
                            */
    UINT32 txfsm2txprbs_send_seed : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* Send PRBS Seed sig from TX FSM to TXPRBS */
    UINT32 txfsm2txprbs_send_deta : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* Send PRBS DATA sig from TX FSM to TXPRBS */
    UINT32 txfsm2patbuf_run : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* Start Pat BUF Signal from Tx-FSM to TX PatBuf */
    UINT32 txfsm2txsos_send_sos : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* Send SOS Block sig from Tx fsm to TX SoS Gen */

  } Bits;
  UINT32 Data;

} CR_LCEG3_STATUS_REG_8_SB_FBLP_STRUCT;

/* CR_LCEG3_STATUS_REG_9_SB_FBLP_REG supported on:                              */
/*      SPRA0 (0x20001204)                                                      */
/*      SPRB0 (0x20001204)                                                      */
/*      SPRHBM (0x20001204)                                                     */
/*      SPRC0 (0x20001204)                                                      */
/*      SPRMCC (0x20001204)                                                     */
/*      SPRUCC (0x20001204)                                                     */
/* Register default value on SPRA0: 0x02200000                                  */
/* Register default value on SPRB0: 0x02200000                                  */
/* Register default value on SPRHBM: 0x02200000                                 */
/* Register default value on SPRC0: 0x02200000                                  */
/* Register default value on SPRMCC: 0x02200000                                 */
/* Register default value on SPRUCC: 0x02200000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_STATUS_REG_9
*/


#define CR_LCEG3_STATUS_REG_9_SB_FBLP_REG 0x2C021204

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 rx_fsm : 3;

                            /* Bits[2:0], Access Type=RO/V/P, default=0x00000000*/

                            /* RX Side FSm Status */
    UINT32 rxchk2rxfsm_eieos_det : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /* Chk signal Indicating EIEOS Detect */
    UINT32 rxchk2rxfsm_tag_det : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /* Chk signal Indicating Tag Detect */
    UINT32 rxfsm_sos_det : 1;

                            /* Bits[5:5], Access Type=RO/V/P, default=0x00000000*/

                            /* SOS Detect Signal from Rx fsm */
    UINT32 rxfsm2rxprbs_loadseed : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /* Load Seed Sign from Rxfsm-to Rxprbs */
    UINT32 rxfsm2rxprbs_prbs_enable : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /* Master PRBS Enable Signal from Rx-fsm to Rx prbs */
    UINT32 rxfsm2rxpatbuf_enable : 1;

                            /* Bits[8:8], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               master Patbuf Enable Signal from Rx-fsm to Rx
                               patbuf
                            */
    UINT32 prbs_chk_cnt_f : 2;

                            /* Bits[10:9], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Index value to be used in checker Slate for
                               Comparison
                            */
    UINT32 prbs2chk_enable_chk : 1;

                            /* Bits[11:11], Access Type=RO/V/P, default=0x00000000*/

                            /* Enable Check indicator from rx prbs to Checker */
    UINT32 slate_cnt_f : 2;

                            /* Bits[13:12], Access Type=RO/V/P, default=0x00000000*/

                            /* Checker Slate Counter Indicator */
    UINT32 err_seen : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* Error Observed in Checker */
    UINT32 rxfsm2csr_write_data : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* Write to CSR Signal Indicator */
    UINT32 tx_fsm : 3;

                            /* Bits[18:16], Access Type=RO/V/P, default=0x00000000*/

                            /* TX Side FSm Status */
    UINT32 lceg3_lce_start_qual : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* Qualified Start Signal from Block Aligner */
    UINT32 txfsm2txprbs_loadseed : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* Load Seed Indicator from Tx FSM to TX PRBS */
    UINT32 txfsm2txsos_reset_sos_cnt : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000001*/

                            /* SoS Counter reset Signal from Tx FSM 2 Tx SOS */
    UINT32 csr_err_log_stable : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               High indicating Error Status Registers are
                               frozen
                            */
    UINT32 rcvd_n_eieos_blocks : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* Rcvd N eieos Blocks Indicator from Rx2Tx */
    UINT32 rcvd_n_prbs_seed_chunks : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* Rcvd N Seed Chunks Indicator from Rx2Tx */
    UINT32 sos_cnt_reached_zero : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000001*/

                            /* SoS Counter reached Zero */
    UINT32 txfsm2txprbs_start_prbs : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* start PRBS signal sig from TX-fsm to TX PRBS */
    UINT32 txfsm2txtrain_enable : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Start train Signal sig from Tx-FSM to TX train
                               Module
                            */
    UINT32 txfsm2txprbs_send_seed : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* Send PRBS Seed sig from TX FSM to TXPRBS */
    UINT32 txfsm2txprbs_send_deta : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* Send PRBS DATA sig from TX FSM to TXPRBS */
    UINT32 txfsm2patbuf_run : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* Start Pat BUF Signal from Tx-FSM to TX PatBuf */
    UINT32 txfsm2txsos_send_sos : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* Send SOS Block sig from Tx fsm to TX SoS Gen */

  } Bits;
  UINT32 Data;

} CR_LCEG3_STATUS_REG_9_SB_FBLP_STRUCT;

/* CR_LCEG3_STATUS_REG_10_SB_FBLP_REG supported on:                             */
/*      SPRA0 (0x20001208)                                                      */
/*      SPRB0 (0x20001208)                                                      */
/*      SPRHBM (0x20001208)                                                     */
/*      SPRC0 (0x20001208)                                                      */
/*      SPRMCC (0x20001208)                                                     */
/*      SPRUCC (0x20001208)                                                     */
/* Register default value on SPRA0: 0x02200000                                  */
/* Register default value on SPRB0: 0x02200000                                  */
/* Register default value on SPRHBM: 0x02200000                                 */
/* Register default value on SPRC0: 0x02200000                                  */
/* Register default value on SPRMCC: 0x02200000                                 */
/* Register default value on SPRUCC: 0x02200000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_STATUS_REG_10
*/


#define CR_LCEG3_STATUS_REG_10_SB_FBLP_REG 0x2C021208

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 rx_fsm : 3;

                            /* Bits[2:0], Access Type=RO/V/P, default=0x00000000*/

                            /* RX Side FSm Status */
    UINT32 rxchk2rxfsm_eieos_det : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /* Chk signal Indicating EIEOS Detect */
    UINT32 rxchk2rxfsm_tag_det : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /* Chk signal Indicating Tag Detect */
    UINT32 rxfsm_sos_det : 1;

                            /* Bits[5:5], Access Type=RO/V/P, default=0x00000000*/

                            /* SOS Detect Signal from Rx fsm */
    UINT32 rxfsm2rxprbs_loadseed : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /* Load Seed Sign from Rxfsm-to Rxprbs */
    UINT32 rxfsm2rxprbs_prbs_enable : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /* Master PRBS Enable Signal from Rx-fsm to Rx prbs */
    UINT32 rxfsm2rxpatbuf_enable : 1;

                            /* Bits[8:8], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               master Patbuf Enable Signal from Rx-fsm to Rx
                               patbuf
                            */
    UINT32 prbs_chk_cnt_f : 2;

                            /* Bits[10:9], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Index value to be used in checker Slate for
                               Comparison
                            */
    UINT32 prbs2chk_enable_chk : 1;

                            /* Bits[11:11], Access Type=RO/V/P, default=0x00000000*/

                            /* Enable Check indicator from rx prbs to Checker */
    UINT32 slate_cnt_f : 2;

                            /* Bits[13:12], Access Type=RO/V/P, default=0x00000000*/

                            /* Checker Slate Counter Indicator */
    UINT32 err_seen : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* Error Observed in Checker */
    UINT32 rxfsm2csr_write_data : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* Write to CSR Signal Indicator */
    UINT32 tx_fsm : 3;

                            /* Bits[18:16], Access Type=RO/V/P, default=0x00000000*/

                            /* TX Side FSm Status */
    UINT32 lceg3_lce_start_qual : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* Qualified Start Signal from Block Aligner */
    UINT32 txfsm2txprbs_loadseed : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* Load Seed Indicator from Tx FSM to TX PRBS */
    UINT32 txfsm2txsos_reset_sos_cnt : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000001*/

                            /* SoS Counter reset Signal from Tx FSM 2 Tx SOS */
    UINT32 csr_err_log_stable : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               High indicating Error Status Registers are
                               frozen
                            */
    UINT32 rcvd_n_eieos_blocks : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* Rcvd N eieos Blocks Indicator from Rx2Tx */
    UINT32 rcvd_n_prbs_seed_chunks : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* Rcvd N Seed Chunks Indicator from Rx2Tx */
    UINT32 sos_cnt_reached_zero : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000001*/

                            /* SoS Counter reached Zero */
    UINT32 txfsm2txprbs_start_prbs : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* start PRBS signal sig from TX-fsm to TX PRBS */
    UINT32 txfsm2txtrain_enable : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Start train Signal sig from Tx-FSM to TX train
                               Module
                            */
    UINT32 txfsm2txprbs_send_seed : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* Send PRBS Seed sig from TX FSM to TXPRBS */
    UINT32 txfsm2txprbs_send_deta : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* Send PRBS DATA sig from TX FSM to TXPRBS */
    UINT32 txfsm2patbuf_run : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* Start Pat BUF Signal from Tx-FSM to TX PatBuf */
    UINT32 txfsm2txsos_send_sos : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* Send SOS Block sig from Tx fsm to TX SoS Gen */

  } Bits;
  UINT32 Data;

} CR_LCEG3_STATUS_REG_10_SB_FBLP_STRUCT;

/* CR_LCEG3_STATUS_REG_11_SB_FBLP_REG supported on:                             */
/*      SPRA0 (0x2000120c)                                                      */
/*      SPRB0 (0x2000120c)                                                      */
/*      SPRHBM (0x2000120c)                                                     */
/*      SPRC0 (0x2000120c)                                                      */
/*      SPRMCC (0x2000120c)                                                     */
/*      SPRUCC (0x2000120c)                                                     */
/* Register default value on SPRA0: 0x02200000                                  */
/* Register default value on SPRB0: 0x02200000                                  */
/* Register default value on SPRHBM: 0x02200000                                 */
/* Register default value on SPRC0: 0x02200000                                  */
/* Register default value on SPRMCC: 0x02200000                                 */
/* Register default value on SPRUCC: 0x02200000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_STATUS_REG_11
*/


#define CR_LCEG3_STATUS_REG_11_SB_FBLP_REG 0x2C02120C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 rx_fsm : 3;

                            /* Bits[2:0], Access Type=RO/V/P, default=0x00000000*/

                            /* RX Side FSm Status */
    UINT32 rxchk2rxfsm_eieos_det : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /* Chk signal Indicating EIEOS Detect */
    UINT32 rxchk2rxfsm_tag_det : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /* Chk signal Indicating Tag Detect */
    UINT32 rxfsm_sos_det : 1;

                            /* Bits[5:5], Access Type=RO/V/P, default=0x00000000*/

                            /* SOS Detect Signal from Rx fsm */
    UINT32 rxfsm2rxprbs_loadseed : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /* Load Seed Sign from Rxfsm-to Rxprbs */
    UINT32 rxfsm2rxprbs_prbs_enable : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /* Master PRBS Enable Signal from Rx-fsm to Rx prbs */
    UINT32 rxfsm2rxpatbuf_enable : 1;

                            /* Bits[8:8], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               master Patbuf Enable Signal from Rx-fsm to Rx
                               patbuf
                            */
    UINT32 prbs_chk_cnt_f : 2;

                            /* Bits[10:9], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Index value to be used in checker Slate for
                               Comparison
                            */
    UINT32 prbs2chk_enable_chk : 1;

                            /* Bits[11:11], Access Type=RO/V/P, default=0x00000000*/

                            /* Enable Check indicator from rx prbs to Checker */
    UINT32 slate_cnt_f : 2;

                            /* Bits[13:12], Access Type=RO/V/P, default=0x00000000*/

                            /* Checker Slate Counter Indicator */
    UINT32 err_seen : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* Error Observed in Checker */
    UINT32 rxfsm2csr_write_data : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* Write to CSR Signal Indicator */
    UINT32 tx_fsm : 3;

                            /* Bits[18:16], Access Type=RO/V/P, default=0x00000000*/

                            /* TX Side FSm Status */
    UINT32 lceg3_lce_start_qual : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* Qualified Start Signal from Block Aligner */
    UINT32 txfsm2txprbs_loadseed : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* Load Seed Indicator from Tx FSM to TX PRBS */
    UINT32 txfsm2txsos_reset_sos_cnt : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000001*/

                            /* SoS Counter reset Signal from Tx FSM 2 Tx SOS */
    UINT32 csr_err_log_stable : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               High indicating Error Status Registers are
                               frozen
                            */
    UINT32 rcvd_n_eieos_blocks : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* Rcvd N eieos Blocks Indicator from Rx2Tx */
    UINT32 rcvd_n_prbs_seed_chunks : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* Rcvd N Seed Chunks Indicator from Rx2Tx */
    UINT32 sos_cnt_reached_zero : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000001*/

                            /* SoS Counter reached Zero */
    UINT32 txfsm2txprbs_start_prbs : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* start PRBS signal sig from TX-fsm to TX PRBS */
    UINT32 txfsm2txtrain_enable : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Start train Signal sig from Tx-FSM to TX train
                               Module
                            */
    UINT32 txfsm2txprbs_send_seed : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* Send PRBS Seed sig from TX FSM to TXPRBS */
    UINT32 txfsm2txprbs_send_deta : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* Send PRBS DATA sig from TX FSM to TXPRBS */
    UINT32 txfsm2patbuf_run : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* Start Pat BUF Signal from Tx-FSM to TX PatBuf */
    UINT32 txfsm2txsos_send_sos : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* Send SOS Block sig from Tx fsm to TX SoS Gen */

  } Bits;
  UINT32 Data;

} CR_LCEG3_STATUS_REG_11_SB_FBLP_STRUCT;

/* CR_LCEG3_STATUS_REG_12_SB_FBLP_REG supported on:                             */
/*      SPRA0 (0x20001210)                                                      */
/*      SPRB0 (0x20001210)                                                      */
/*      SPRHBM (0x20001210)                                                     */
/*      SPRC0 (0x20001210)                                                      */
/*      SPRMCC (0x20001210)                                                     */
/*      SPRUCC (0x20001210)                                                     */
/* Register default value on SPRA0: 0x02200000                                  */
/* Register default value on SPRB0: 0x02200000                                  */
/* Register default value on SPRHBM: 0x02200000                                 */
/* Register default value on SPRC0: 0x02200000                                  */
/* Register default value on SPRMCC: 0x02200000                                 */
/* Register default value on SPRUCC: 0x02200000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_STATUS_REG_12
*/


#define CR_LCEG3_STATUS_REG_12_SB_FBLP_REG 0x2C021210

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 rx_fsm : 3;

                            /* Bits[2:0], Access Type=RO/V/P, default=0x00000000*/

                            /* RX Side FSm Status */
    UINT32 rxchk2rxfsm_eieos_det : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /* Chk signal Indicating EIEOS Detect */
    UINT32 rxchk2rxfsm_tag_det : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /* Chk signal Indicating Tag Detect */
    UINT32 rxfsm_sos_det : 1;

                            /* Bits[5:5], Access Type=RO/V/P, default=0x00000000*/

                            /* SOS Detect Signal from Rx fsm */
    UINT32 rxfsm2rxprbs_loadseed : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /* Load Seed Sign from Rxfsm-to Rxprbs */
    UINT32 rxfsm2rxprbs_prbs_enable : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /* Master PRBS Enable Signal from Rx-fsm to Rx prbs */
    UINT32 rxfsm2rxpatbuf_enable : 1;

                            /* Bits[8:8], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               master Patbuf Enable Signal from Rx-fsm to Rx
                               patbuf
                            */
    UINT32 prbs_chk_cnt_f : 2;

                            /* Bits[10:9], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Index value to be used in checker Slate for
                               Comparison
                            */
    UINT32 prbs2chk_enable_chk : 1;

                            /* Bits[11:11], Access Type=RO/V/P, default=0x00000000*/

                            /* Enable Check indicator from rx prbs to Checker */
    UINT32 slate_cnt_f : 2;

                            /* Bits[13:12], Access Type=RO/V/P, default=0x00000000*/

                            /* Checker Slate Counter Indicator */
    UINT32 err_seen : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* Error Observed in Checker */
    UINT32 rxfsm2csr_write_data : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* Write to CSR Signal Indicator */
    UINT32 tx_fsm : 3;

                            /* Bits[18:16], Access Type=RO/V/P, default=0x00000000*/

                            /* TX Side FSm Status */
    UINT32 lceg3_lce_start_qual : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* Qualified Start Signal from Block Aligner */
    UINT32 txfsm2txprbs_loadseed : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* Load Seed Indicator from Tx FSM to TX PRBS */
    UINT32 txfsm2txsos_reset_sos_cnt : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000001*/

                            /* SoS Counter reset Signal from Tx FSM 2 Tx SOS */
    UINT32 csr_err_log_stable : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               High indicating Error Status Registers are
                               frozen
                            */
    UINT32 rcvd_n_eieos_blocks : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* Rcvd N eieos Blocks Indicator from Rx2Tx */
    UINT32 rcvd_n_prbs_seed_chunks : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* Rcvd N Seed Chunks Indicator from Rx2Tx */
    UINT32 sos_cnt_reached_zero : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000001*/

                            /* SoS Counter reached Zero */
    UINT32 txfsm2txprbs_start_prbs : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* start PRBS signal sig from TX-fsm to TX PRBS */
    UINT32 txfsm2txtrain_enable : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Start train Signal sig from Tx-FSM to TX train
                               Module
                            */
    UINT32 txfsm2txprbs_send_seed : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* Send PRBS Seed sig from TX FSM to TXPRBS */
    UINT32 txfsm2txprbs_send_deta : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* Send PRBS DATA sig from TX FSM to TXPRBS */
    UINT32 txfsm2patbuf_run : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* Start Pat BUF Signal from Tx-FSM to TX PatBuf */
    UINT32 txfsm2txsos_send_sos : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* Send SOS Block sig from Tx fsm to TX SoS Gen */

  } Bits;
  UINT32 Data;

} CR_LCEG3_STATUS_REG_12_SB_FBLP_STRUCT;

/* CR_LCEG3_STATUS_REG_13_SB_FBLP_REG supported on:                             */
/*      SPRA0 (0x20001214)                                                      */
/*      SPRB0 (0x20001214)                                                      */
/*      SPRHBM (0x20001214)                                                     */
/*      SPRC0 (0x20001214)                                                      */
/*      SPRMCC (0x20001214)                                                     */
/*      SPRUCC (0x20001214)                                                     */
/* Register default value on SPRA0: 0x02200000                                  */
/* Register default value on SPRB0: 0x02200000                                  */
/* Register default value on SPRHBM: 0x02200000                                 */
/* Register default value on SPRC0: 0x02200000                                  */
/* Register default value on SPRMCC: 0x02200000                                 */
/* Register default value on SPRUCC: 0x02200000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_STATUS_REG_13
*/


#define CR_LCEG3_STATUS_REG_13_SB_FBLP_REG 0x2C021214

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 rx_fsm : 3;

                            /* Bits[2:0], Access Type=RO/V/P, default=0x00000000*/

                            /* RX Side FSm Status */
    UINT32 rxchk2rxfsm_eieos_det : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /* Chk signal Indicating EIEOS Detect */
    UINT32 rxchk2rxfsm_tag_det : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /* Chk signal Indicating Tag Detect */
    UINT32 rxfsm_sos_det : 1;

                            /* Bits[5:5], Access Type=RO/V/P, default=0x00000000*/

                            /* SOS Detect Signal from Rx fsm */
    UINT32 rxfsm2rxprbs_loadseed : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /* Load Seed Sign from Rxfsm-to Rxprbs */
    UINT32 rxfsm2rxprbs_prbs_enable : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /* Master PRBS Enable Signal from Rx-fsm to Rx prbs */
    UINT32 rxfsm2rxpatbuf_enable : 1;

                            /* Bits[8:8], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               master Patbuf Enable Signal from Rx-fsm to Rx
                               patbuf
                            */
    UINT32 prbs_chk_cnt_f : 2;

                            /* Bits[10:9], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Index value to be used in checker Slate for
                               Comparison
                            */
    UINT32 prbs2chk_enable_chk : 1;

                            /* Bits[11:11], Access Type=RO/V/P, default=0x00000000*/

                            /* Enable Check indicator from rx prbs to Checker */
    UINT32 slate_cnt_f : 2;

                            /* Bits[13:12], Access Type=RO/V/P, default=0x00000000*/

                            /* Checker Slate Counter Indicator */
    UINT32 err_seen : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* Error Observed in Checker */
    UINT32 rxfsm2csr_write_data : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* Write to CSR Signal Indicator */
    UINT32 tx_fsm : 3;

                            /* Bits[18:16], Access Type=RO/V/P, default=0x00000000*/

                            /* TX Side FSm Status */
    UINT32 lceg3_lce_start_qual : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* Qualified Start Signal from Block Aligner */
    UINT32 txfsm2txprbs_loadseed : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* Load Seed Indicator from Tx FSM to TX PRBS */
    UINT32 txfsm2txsos_reset_sos_cnt : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000001*/

                            /* SoS Counter reset Signal from Tx FSM 2 Tx SOS */
    UINT32 csr_err_log_stable : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               High indicating Error Status Registers are
                               frozen
                            */
    UINT32 rcvd_n_eieos_blocks : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* Rcvd N eieos Blocks Indicator from Rx2Tx */
    UINT32 rcvd_n_prbs_seed_chunks : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* Rcvd N Seed Chunks Indicator from Rx2Tx */
    UINT32 sos_cnt_reached_zero : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000001*/

                            /* SoS Counter reached Zero */
    UINT32 txfsm2txprbs_start_prbs : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* start PRBS signal sig from TX-fsm to TX PRBS */
    UINT32 txfsm2txtrain_enable : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Start train Signal sig from Tx-FSM to TX train
                               Module
                            */
    UINT32 txfsm2txprbs_send_seed : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* Send PRBS Seed sig from TX FSM to TXPRBS */
    UINT32 txfsm2txprbs_send_deta : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* Send PRBS DATA sig from TX FSM to TXPRBS */
    UINT32 txfsm2patbuf_run : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* Start Pat BUF Signal from Tx-FSM to TX PatBuf */
    UINT32 txfsm2txsos_send_sos : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* Send SOS Block sig from Tx fsm to TX SoS Gen */

  } Bits;
  UINT32 Data;

} CR_LCEG3_STATUS_REG_13_SB_FBLP_STRUCT;

/* CR_LCEG3_STATUS_REG_14_SB_FBLP_REG supported on:                             */
/*      SPRA0 (0x20001218)                                                      */
/*      SPRB0 (0x20001218)                                                      */
/*      SPRHBM (0x20001218)                                                     */
/*      SPRC0 (0x20001218)                                                      */
/*      SPRMCC (0x20001218)                                                     */
/*      SPRUCC (0x20001218)                                                     */
/* Register default value on SPRA0: 0x02200000                                  */
/* Register default value on SPRB0: 0x02200000                                  */
/* Register default value on SPRHBM: 0x02200000                                 */
/* Register default value on SPRC0: 0x02200000                                  */
/* Register default value on SPRMCC: 0x02200000                                 */
/* Register default value on SPRUCC: 0x02200000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_STATUS_REG_14
*/


#define CR_LCEG3_STATUS_REG_14_SB_FBLP_REG 0x2C021218

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 rx_fsm : 3;

                            /* Bits[2:0], Access Type=RO/V/P, default=0x00000000*/

                            /* RX Side FSm Status */
    UINT32 rxchk2rxfsm_eieos_det : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /* Chk signal Indicating EIEOS Detect */
    UINT32 rxchk2rxfsm_tag_det : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /* Chk signal Indicating Tag Detect */
    UINT32 rxfsm_sos_det : 1;

                            /* Bits[5:5], Access Type=RO/V/P, default=0x00000000*/

                            /* SOS Detect Signal from Rx fsm */
    UINT32 rxfsm2rxprbs_loadseed : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /* Load Seed Sign from Rxfsm-to Rxprbs */
    UINT32 rxfsm2rxprbs_prbs_enable : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /* Master PRBS Enable Signal from Rx-fsm to Rx prbs */
    UINT32 rxfsm2rxpatbuf_enable : 1;

                            /* Bits[8:8], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               master Patbuf Enable Signal from Rx-fsm to Rx
                               patbuf
                            */
    UINT32 prbs_chk_cnt_f : 2;

                            /* Bits[10:9], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Index value to be used in checker Slate for
                               Comparison
                            */
    UINT32 prbs2chk_enable_chk : 1;

                            /* Bits[11:11], Access Type=RO/V/P, default=0x00000000*/

                            /* Enable Check indicator from rx prbs to Checker */
    UINT32 slate_cnt_f : 2;

                            /* Bits[13:12], Access Type=RO/V/P, default=0x00000000*/

                            /* Checker Slate Counter Indicator */
    UINT32 err_seen : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* Error Observed in Checker */
    UINT32 rxfsm2csr_write_data : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* Write to CSR Signal Indicator */
    UINT32 tx_fsm : 3;

                            /* Bits[18:16], Access Type=RO/V/P, default=0x00000000*/

                            /* TX Side FSm Status */
    UINT32 lceg3_lce_start_qual : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* Qualified Start Signal from Block Aligner */
    UINT32 txfsm2txprbs_loadseed : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* Load Seed Indicator from Tx FSM to TX PRBS */
    UINT32 txfsm2txsos_reset_sos_cnt : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000001*/

                            /* SoS Counter reset Signal from Tx FSM 2 Tx SOS */
    UINT32 csr_err_log_stable : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               High indicating Error Status Registers are
                               frozen
                            */
    UINT32 rcvd_n_eieos_blocks : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* Rcvd N eieos Blocks Indicator from Rx2Tx */
    UINT32 rcvd_n_prbs_seed_chunks : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* Rcvd N Seed Chunks Indicator from Rx2Tx */
    UINT32 sos_cnt_reached_zero : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000001*/

                            /* SoS Counter reached Zero */
    UINT32 txfsm2txprbs_start_prbs : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* start PRBS signal sig from TX-fsm to TX PRBS */
    UINT32 txfsm2txtrain_enable : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Start train Signal sig from Tx-FSM to TX train
                               Module
                            */
    UINT32 txfsm2txprbs_send_seed : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* Send PRBS Seed sig from TX FSM to TXPRBS */
    UINT32 txfsm2txprbs_send_deta : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* Send PRBS DATA sig from TX FSM to TXPRBS */
    UINT32 txfsm2patbuf_run : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* Start Pat BUF Signal from Tx-FSM to TX PatBuf */
    UINT32 txfsm2txsos_send_sos : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* Send SOS Block sig from Tx fsm to TX SoS Gen */

  } Bits;
  UINT32 Data;

} CR_LCEG3_STATUS_REG_14_SB_FBLP_STRUCT;

/* CR_LCEG3_STATUS_REG_15_SB_FBLP_REG supported on:                             */
/*      SPRA0 (0x2000121c)                                                      */
/*      SPRB0 (0x2000121c)                                                      */
/*      SPRHBM (0x2000121c)                                                     */
/*      SPRC0 (0x2000121c)                                                      */
/*      SPRMCC (0x2000121c)                                                     */
/*      SPRUCC (0x2000121c)                                                     */
/* Register default value on SPRA0: 0x02200000                                  */
/* Register default value on SPRB0: 0x02200000                                  */
/* Register default value on SPRHBM: 0x02200000                                 */
/* Register default value on SPRC0: 0x02200000                                  */
/* Register default value on SPRMCC: 0x02200000                                 */
/* Register default value on SPRUCC: 0x02200000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_STATUS_REG_15
*/


#define CR_LCEG3_STATUS_REG_15_SB_FBLP_REG 0x2C02121C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 rx_fsm : 3;

                            /* Bits[2:0], Access Type=RO/V/P, default=0x00000000*/

                            /* RX Side FSm Status */
    UINT32 rxchk2rxfsm_eieos_det : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /* Chk signal Indicating EIEOS Detect */
    UINT32 rxchk2rxfsm_tag_det : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /* Chk signal Indicating Tag Detect */
    UINT32 rxfsm_sos_det : 1;

                            /* Bits[5:5], Access Type=RO/V/P, default=0x00000000*/

                            /* SOS Detect Signal from Rx fsm */
    UINT32 rxfsm2rxprbs_loadseed : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /* Load Seed Sign from Rxfsm-to Rxprbs */
    UINT32 rxfsm2rxprbs_prbs_enable : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /* Master PRBS Enable Signal from Rx-fsm to Rx prbs */
    UINT32 rxfsm2rxpatbuf_enable : 1;

                            /* Bits[8:8], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               master Patbuf Enable Signal from Rx-fsm to Rx
                               patbuf
                            */
    UINT32 prbs_chk_cnt_f : 2;

                            /* Bits[10:9], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Index value to be used in checker Slate for
                               Comparison
                            */
    UINT32 prbs2chk_enable_chk : 1;

                            /* Bits[11:11], Access Type=RO/V/P, default=0x00000000*/

                            /* Enable Check indicator from rx prbs to Checker */
    UINT32 slate_cnt_f : 2;

                            /* Bits[13:12], Access Type=RO/V/P, default=0x00000000*/

                            /* Checker Slate Counter Indicator */
    UINT32 err_seen : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* Error Observed in Checker */
    UINT32 rxfsm2csr_write_data : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* Write to CSR Signal Indicator */
    UINT32 tx_fsm : 3;

                            /* Bits[18:16], Access Type=RO/V/P, default=0x00000000*/

                            /* TX Side FSm Status */
    UINT32 lceg3_lce_start_qual : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* Qualified Start Signal from Block Aligner */
    UINT32 txfsm2txprbs_loadseed : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* Load Seed Indicator from Tx FSM to TX PRBS */
    UINT32 txfsm2txsos_reset_sos_cnt : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000001*/

                            /* SoS Counter reset Signal from Tx FSM 2 Tx SOS */
    UINT32 csr_err_log_stable : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               High indicating Error Status Registers are
                               frozen
                            */
    UINT32 rcvd_n_eieos_blocks : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* Rcvd N eieos Blocks Indicator from Rx2Tx */
    UINT32 rcvd_n_prbs_seed_chunks : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* Rcvd N Seed Chunks Indicator from Rx2Tx */
    UINT32 sos_cnt_reached_zero : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000001*/

                            /* SoS Counter reached Zero */
    UINT32 txfsm2txprbs_start_prbs : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* start PRBS signal sig from TX-fsm to TX PRBS */
    UINT32 txfsm2txtrain_enable : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Start train Signal sig from Tx-FSM to TX train
                               Module
                            */
    UINT32 txfsm2txprbs_send_seed : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* Send PRBS Seed sig from TX FSM to TXPRBS */
    UINT32 txfsm2txprbs_send_deta : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* Send PRBS DATA sig from TX FSM to TXPRBS */
    UINT32 txfsm2patbuf_run : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* Start Pat BUF Signal from Tx-FSM to TX PatBuf */
    UINT32 txfsm2txsos_send_sos : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* Send SOS Block sig from Tx fsm to TX SoS Gen */

  } Bits;
  UINT32 Data;

} CR_LCEG3_STATUS_REG_15_SB_FBLP_STRUCT;

/* DFX_LCE_G1_ACT_DATA_0_SB_FBLP_REG supported on:                              */
/*      SPRA0 (0x20001220)                                                      */
/*      SPRB0 (0x20001220)                                                      */
/*      SPRHBM (0x20001220)                                                     */
/*      SPRC0 (0x20001220)                                                      */
/*      SPRMCC (0x20001220)                                                     */
/*      SPRUCC (0x20001220)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_ACT_DATA_0
*/


#define DFX_LCE_G1_ACT_DATA_0_SB_FBLP_REG 0x2C021220

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg1_actual_data : 10;

                            /* Bits[9:0], Access Type=RO/V/P, default=0x00000000*/

                            /* CR to write Actual data to LCE */
    UINT32 lceg1_txfsm_cur_state : 3;

                            /* Bits[12:10], Access Type=RO/V/P, default=0x00000000*/

                            /* CR LCEg1 - tx fsm cur State */
    UINT32 lceg1_txfsm_done_state : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - DONE STATE */
    UINT32 lceg1_txfsm_patbuf_mode_state : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - PATBUF MODE */
    UINT32 lceg1_txfsm_sos_det_state : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - SOS DET STATE */
    UINT32 lceg1_txfsm_prbs_run_state : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - PRBS RUN STATE */
    UINT32 lceg1_txfsm_sync_state : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - SYNC STATE */
    UINT32 lceg1_txfsm_train_state : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - TRAIN STATE */
    UINT32 lceg1_txfsm_idle_state : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - IDLE state */
    UINT32 lceg1_lce_start_qual : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* lce start qual(after alignment) */
    UINT32 lceg1_txfsm2txprbs_loadseed : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 txprbs - Load seed */
    UINT32 lceg1_txfsm2txsos_reset_sos_cnt : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 txprbs - reset sos cnt */
    UINT32 lceg1_sos_cnt_reached_zero : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 sosgen - sos cnt reached zero */
    UINT32 lceg1_txfsm2txtrain_enable : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 train - send training data */
    UINT32 lceg1_txfsm2patbuf_run : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 patbuf - send patbuf data */
    UINT32 lceg1_txfsm2txsos_send_sos : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 sosgen - send sos data */
    UINT32 lceg1_txfsm2txprbs_send_data : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 prbs - send Data values */
    UINT32 lceg1_txfsm2txprbs_send_seed : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 prbs - send seed values */
    UINT32 lceg1_txfsm2txprbs_start_prbs : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* tx fsm 2 prbs - start signal */
    UINT32 lceg1_act_bit30 : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* act_data bit30 */
    UINT32 lceg1_act_bit31 : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* act_data bit31 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_ACT_DATA_0_SB_FBLP_STRUCT;

/* DFX_LCE_G1_ACT_DATA_1_SB_FBLP_REG supported on:                              */
/*      SPRA0 (0x20001224)                                                      */
/*      SPRB0 (0x20001224)                                                      */
/*      SPRHBM (0x20001224)                                                     */
/*      SPRC0 (0x20001224)                                                      */
/*      SPRMCC (0x20001224)                                                     */
/*      SPRUCC (0x20001224)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_ACT_DATA_1
*/


#define DFX_LCE_G1_ACT_DATA_1_SB_FBLP_REG 0x2C021224

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg1_actual_data : 10;

                            /* Bits[9:0], Access Type=RO/V/P, default=0x00000000*/

                            /* CR to write Actual data to LCE */
    UINT32 lceg1_txfsm_cur_state : 3;

                            /* Bits[12:10], Access Type=RO/V/P, default=0x00000000*/

                            /* CR LCEg1 - tx fsm cur State */
    UINT32 lceg1_txfsm_done_state : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - DONE STATE */
    UINT32 lceg1_txfsm_patbuf_mode_state : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - PATBUF MODE */
    UINT32 lceg1_txfsm_sos_det_state : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - SOS DET STATE */
    UINT32 lceg1_txfsm_prbs_run_state : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - PRBS RUN STATE */
    UINT32 lceg1_txfsm_sync_state : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - SYNC STATE */
    UINT32 lceg1_txfsm_train_state : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - TRAIN STATE */
    UINT32 lceg1_txfsm_idle_state : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - IDLE state */
    UINT32 lceg1_lce_start_qual : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* lce start qual(after alignment) */
    UINT32 lceg1_txfsm2txprbs_loadseed : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 txprbs - Load seed */
    UINT32 lceg1_txfsm2txsos_reset_sos_cnt : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 txprbs - reset sos cnt */
    UINT32 lceg1_sos_cnt_reached_zero : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 sosgen - sos cnt reached zero */
    UINT32 lceg1_txfsm2txtrain_enable : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 train - send training data */
    UINT32 lceg1_txfsm2patbuf_run : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 patbuf - send patbuf data */
    UINT32 lceg1_txfsm2txsos_send_sos : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 sosgen - send sos data */
    UINT32 lceg1_txfsm2txprbs_send_data : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 prbs - send Data values */
    UINT32 lceg1_txfsm2txprbs_send_seed : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 prbs - send seed values */
    UINT32 lceg1_txfsm2txprbs_start_prbs : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* tx fsm 2 prbs - start signal */
    UINT32 lceg1_act_bit30 : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* act_data bit30 */
    UINT32 lceg1_act_bit31 : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* act_data bit31 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_ACT_DATA_1_SB_FBLP_STRUCT;

/* DFX_LCE_G1_ACT_DATA_2_SB_FBLP_REG supported on:                              */
/*      SPRA0 (0x20001228)                                                      */
/*      SPRB0 (0x20001228)                                                      */
/*      SPRHBM (0x20001228)                                                     */
/*      SPRC0 (0x20001228)                                                      */
/*      SPRMCC (0x20001228)                                                     */
/*      SPRUCC (0x20001228)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_ACT_DATA_2
*/


#define DFX_LCE_G1_ACT_DATA_2_SB_FBLP_REG 0x2C021228

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg1_actual_data : 10;

                            /* Bits[9:0], Access Type=RO/V/P, default=0x00000000*/

                            /* CR to write Actual data to LCE */
    UINT32 lceg1_txfsm_cur_state : 3;

                            /* Bits[12:10], Access Type=RO/V/P, default=0x00000000*/

                            /* CR LCEg1 - tx fsm cur State */
    UINT32 lceg1_txfsm_done_state : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - DONE STATE */
    UINT32 lceg1_txfsm_patbuf_mode_state : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - PATBUF MODE */
    UINT32 lceg1_txfsm_sos_det_state : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - SOS DET STATE */
    UINT32 lceg1_txfsm_prbs_run_state : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - PRBS RUN STATE */
    UINT32 lceg1_txfsm_sync_state : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - SYNC STATE */
    UINT32 lceg1_txfsm_train_state : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - TRAIN STATE */
    UINT32 lceg1_txfsm_idle_state : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - IDLE state */
    UINT32 lceg1_lce_start_qual : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* lce start qual(after alignment) */
    UINT32 lceg1_txfsm2txprbs_loadseed : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 txprbs - Load seed */
    UINT32 lceg1_txfsm2txsos_reset_sos_cnt : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 txprbs - reset sos cnt */
    UINT32 lceg1_sos_cnt_reached_zero : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 sosgen - sos cnt reached zero */
    UINT32 lceg1_txfsm2txtrain_enable : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 train - send training data */
    UINT32 lceg1_txfsm2patbuf_run : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 patbuf - send patbuf data */
    UINT32 lceg1_txfsm2txsos_send_sos : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 sosgen - send sos data */
    UINT32 lceg1_txfsm2txprbs_send_data : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 prbs - send Data values */
    UINT32 lceg1_txfsm2txprbs_send_seed : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 prbs - send seed values */
    UINT32 lceg1_txfsm2txprbs_start_prbs : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* tx fsm 2 prbs - start signal */
    UINT32 lceg1_act_bit30 : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* act_data bit30 */
    UINT32 lceg1_act_bit31 : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* act_data bit31 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_ACT_DATA_2_SB_FBLP_STRUCT;

/* DFX_LCE_G1_ACT_DATA_3_SB_FBLP_REG supported on:                              */
/*      SPRA0 (0x2000122c)                                                      */
/*      SPRB0 (0x2000122c)                                                      */
/*      SPRHBM (0x2000122c)                                                     */
/*      SPRC0 (0x2000122c)                                                      */
/*      SPRMCC (0x2000122c)                                                     */
/*      SPRUCC (0x2000122c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_ACT_DATA_3
*/


#define DFX_LCE_G1_ACT_DATA_3_SB_FBLP_REG 0x2C02122C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg1_actual_data : 10;

                            /* Bits[9:0], Access Type=RO/V/P, default=0x00000000*/

                            /* CR to write Actual data to LCE */
    UINT32 lceg1_txfsm_cur_state : 3;

                            /* Bits[12:10], Access Type=RO/V/P, default=0x00000000*/

                            /* CR LCEg1 - tx fsm cur State */
    UINT32 lceg1_txfsm_done_state : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - DONE STATE */
    UINT32 lceg1_txfsm_patbuf_mode_state : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - PATBUF MODE */
    UINT32 lceg1_txfsm_sos_det_state : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - SOS DET STATE */
    UINT32 lceg1_txfsm_prbs_run_state : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - PRBS RUN STATE */
    UINT32 lceg1_txfsm_sync_state : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - SYNC STATE */
    UINT32 lceg1_txfsm_train_state : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - TRAIN STATE */
    UINT32 lceg1_txfsm_idle_state : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - IDLE state */
    UINT32 lceg1_lce_start_qual : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* lce start qual(after alignment) */
    UINT32 lceg1_txfsm2txprbs_loadseed : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 txprbs - Load seed */
    UINT32 lceg1_txfsm2txsos_reset_sos_cnt : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 txprbs - reset sos cnt */
    UINT32 lceg1_sos_cnt_reached_zero : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 sosgen - sos cnt reached zero */
    UINT32 lceg1_txfsm2txtrain_enable : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 train - send training data */
    UINT32 lceg1_txfsm2patbuf_run : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 patbuf - send patbuf data */
    UINT32 lceg1_txfsm2txsos_send_sos : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 sosgen - send sos data */
    UINT32 lceg1_txfsm2txprbs_send_data : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 prbs - send Data values */
    UINT32 lceg1_txfsm2txprbs_send_seed : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 prbs - send seed values */
    UINT32 lceg1_txfsm2txprbs_start_prbs : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* tx fsm 2 prbs - start signal */
    UINT32 lceg1_act_bit30 : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* act_data bit30 */
    UINT32 lceg1_act_bit31 : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* act_data bit31 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_ACT_DATA_3_SB_FBLP_STRUCT;

/* DFX_LCE_G1_ACT_DATA_4_SB_FBLP_REG supported on:                              */
/*      SPRA0 (0x20001230)                                                      */
/*      SPRB0 (0x20001230)                                                      */
/*      SPRHBM (0x20001230)                                                     */
/*      SPRC0 (0x20001230)                                                      */
/*      SPRMCC (0x20001230)                                                     */
/*      SPRUCC (0x20001230)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_ACT_DATA_4
*/


#define DFX_LCE_G1_ACT_DATA_4_SB_FBLP_REG 0x2C021230

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg1_actual_data : 10;

                            /* Bits[9:0], Access Type=RO/V/P, default=0x00000000*/

                            /* CR to write Actual data to LCE */
    UINT32 lceg1_txfsm_cur_state : 3;

                            /* Bits[12:10], Access Type=RO/V/P, default=0x00000000*/

                            /* CR LCEg1 - tx fsm cur State */
    UINT32 lceg1_txfsm_done_state : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - DONE STATE */
    UINT32 lceg1_txfsm_patbuf_mode_state : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - PATBUF MODE */
    UINT32 lceg1_txfsm_sos_det_state : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - SOS DET STATE */
    UINT32 lceg1_txfsm_prbs_run_state : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - PRBS RUN STATE */
    UINT32 lceg1_txfsm_sync_state : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - SYNC STATE */
    UINT32 lceg1_txfsm_train_state : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - TRAIN STATE */
    UINT32 lceg1_txfsm_idle_state : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - IDLE state */
    UINT32 lceg1_lce_start_qual : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* lce start qual(after alignment) */
    UINT32 lceg1_txfsm2txprbs_loadseed : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 txprbs - Load seed */
    UINT32 lceg1_txfsm2txsos_reset_sos_cnt : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 txprbs - reset sos cnt */
    UINT32 lceg1_sos_cnt_reached_zero : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 sosgen - sos cnt reached zero */
    UINT32 lceg1_txfsm2txtrain_enable : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 train - send training data */
    UINT32 lceg1_txfsm2patbuf_run : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 patbuf - send patbuf data */
    UINT32 lceg1_txfsm2txsos_send_sos : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 sosgen - send sos data */
    UINT32 lceg1_txfsm2txprbs_send_data : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 prbs - send Data values */
    UINT32 lceg1_txfsm2txprbs_send_seed : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 prbs - send seed values */
    UINT32 lceg1_txfsm2txprbs_start_prbs : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* tx fsm 2 prbs - start signal */
    UINT32 lceg1_act_bit30 : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* act_data bit30 */
    UINT32 lceg1_act_bit31 : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* act_data bit31 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_ACT_DATA_4_SB_FBLP_STRUCT;

/* DFX_LCE_G1_ACT_DATA_5_SB_FBLP_REG supported on:                              */
/*      SPRA0 (0x20001234)                                                      */
/*      SPRB0 (0x20001234)                                                      */
/*      SPRHBM (0x20001234)                                                     */
/*      SPRC0 (0x20001234)                                                      */
/*      SPRMCC (0x20001234)                                                     */
/*      SPRUCC (0x20001234)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_ACT_DATA_5
*/


#define DFX_LCE_G1_ACT_DATA_5_SB_FBLP_REG 0x2C021234

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg1_actual_data : 10;

                            /* Bits[9:0], Access Type=RO/V/P, default=0x00000000*/

                            /* CR to write Actual data to LCE */
    UINT32 lceg1_txfsm_cur_state : 3;

                            /* Bits[12:10], Access Type=RO/V/P, default=0x00000000*/

                            /* CR LCEg1 - tx fsm cur State */
    UINT32 lceg1_txfsm_done_state : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - DONE STATE */
    UINT32 lceg1_txfsm_patbuf_mode_state : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - PATBUF MODE */
    UINT32 lceg1_txfsm_sos_det_state : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - SOS DET STATE */
    UINT32 lceg1_txfsm_prbs_run_state : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - PRBS RUN STATE */
    UINT32 lceg1_txfsm_sync_state : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - SYNC STATE */
    UINT32 lceg1_txfsm_train_state : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - TRAIN STATE */
    UINT32 lceg1_txfsm_idle_state : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - IDLE state */
    UINT32 lceg1_lce_start_qual : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* lce start qual(after alignment) */
    UINT32 lceg1_txfsm2txprbs_loadseed : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 txprbs - Load seed */
    UINT32 lceg1_txfsm2txsos_reset_sos_cnt : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 txprbs - reset sos cnt */
    UINT32 lceg1_sos_cnt_reached_zero : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 sosgen - sos cnt reached zero */
    UINT32 lceg1_txfsm2txtrain_enable : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 train - send training data */
    UINT32 lceg1_txfsm2patbuf_run : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 patbuf - send patbuf data */
    UINT32 lceg1_txfsm2txsos_send_sos : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 sosgen - send sos data */
    UINT32 lceg1_txfsm2txprbs_send_data : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 prbs - send Data values */
    UINT32 lceg1_txfsm2txprbs_send_seed : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 prbs - send seed values */
    UINT32 lceg1_txfsm2txprbs_start_prbs : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* tx fsm 2 prbs - start signal */
    UINT32 lceg1_act_bit30 : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* act_data bit30 */
    UINT32 lceg1_act_bit31 : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* act_data bit31 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_ACT_DATA_5_SB_FBLP_STRUCT;

/* DFX_LCE_G1_ACT_DATA_6_SB_FBLP_REG supported on:                              */
/*      SPRA0 (0x20001238)                                                      */
/*      SPRB0 (0x20001238)                                                      */
/*      SPRHBM (0x20001238)                                                     */
/*      SPRC0 (0x20001238)                                                      */
/*      SPRMCC (0x20001238)                                                     */
/*      SPRUCC (0x20001238)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_ACT_DATA_6
*/


#define DFX_LCE_G1_ACT_DATA_6_SB_FBLP_REG 0x2C021238

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg1_actual_data : 10;

                            /* Bits[9:0], Access Type=RO/V/P, default=0x00000000*/

                            /* CR to write Actual data to LCE */
    UINT32 lceg1_txfsm_cur_state : 3;

                            /* Bits[12:10], Access Type=RO/V/P, default=0x00000000*/

                            /* CR LCEg1 - tx fsm cur State */
    UINT32 lceg1_txfsm_done_state : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - DONE STATE */
    UINT32 lceg1_txfsm_patbuf_mode_state : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - PATBUF MODE */
    UINT32 lceg1_txfsm_sos_det_state : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - SOS DET STATE */
    UINT32 lceg1_txfsm_prbs_run_state : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - PRBS RUN STATE */
    UINT32 lceg1_txfsm_sync_state : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - SYNC STATE */
    UINT32 lceg1_txfsm_train_state : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - TRAIN STATE */
    UINT32 lceg1_txfsm_idle_state : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - IDLE state */
    UINT32 lceg1_lce_start_qual : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* lce start qual(after alignment) */
    UINT32 lceg1_txfsm2txprbs_loadseed : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 txprbs - Load seed */
    UINT32 lceg1_txfsm2txsos_reset_sos_cnt : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 txprbs - reset sos cnt */
    UINT32 lceg1_sos_cnt_reached_zero : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 sosgen - sos cnt reached zero */
    UINT32 lceg1_txfsm2txtrain_enable : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 train - send training data */
    UINT32 lceg1_txfsm2patbuf_run : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 patbuf - send patbuf data */
    UINT32 lceg1_txfsm2txsos_send_sos : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 sosgen - send sos data */
    UINT32 lceg1_txfsm2txprbs_send_data : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 prbs - send Data values */
    UINT32 lceg1_txfsm2txprbs_send_seed : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 prbs - send seed values */
    UINT32 lceg1_txfsm2txprbs_start_prbs : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* tx fsm 2 prbs - start signal */
    UINT32 lceg1_act_bit30 : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* act_data bit30 */
    UINT32 lceg1_act_bit31 : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* act_data bit31 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_ACT_DATA_6_SB_FBLP_STRUCT;

/* DFX_LCE_G1_ACT_DATA_7_SB_FBLP_REG supported on:                              */
/*      SPRA0 (0x2000123c)                                                      */
/*      SPRB0 (0x2000123c)                                                      */
/*      SPRHBM (0x2000123c)                                                     */
/*      SPRC0 (0x2000123c)                                                      */
/*      SPRMCC (0x2000123c)                                                     */
/*      SPRUCC (0x2000123c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_ACT_DATA_7
*/


#define DFX_LCE_G1_ACT_DATA_7_SB_FBLP_REG 0x2C02123C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg1_actual_data : 10;

                            /* Bits[9:0], Access Type=RO/V/P, default=0x00000000*/

                            /* CR to write Actual data to LCE */
    UINT32 lceg1_txfsm_cur_state : 3;

                            /* Bits[12:10], Access Type=RO/V/P, default=0x00000000*/

                            /* CR LCEg1 - tx fsm cur State */
    UINT32 lceg1_txfsm_done_state : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - DONE STATE */
    UINT32 lceg1_txfsm_patbuf_mode_state : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - PATBUF MODE */
    UINT32 lceg1_txfsm_sos_det_state : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - SOS DET STATE */
    UINT32 lceg1_txfsm_prbs_run_state : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - PRBS RUN STATE */
    UINT32 lceg1_txfsm_sync_state : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - SYNC STATE */
    UINT32 lceg1_txfsm_train_state : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - TRAIN STATE */
    UINT32 lceg1_txfsm_idle_state : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - IDLE state */
    UINT32 lceg1_lce_start_qual : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* lce start qual(after alignment) */
    UINT32 lceg1_txfsm2txprbs_loadseed : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 txprbs - Load seed */
    UINT32 lceg1_txfsm2txsos_reset_sos_cnt : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 txprbs - reset sos cnt */
    UINT32 lceg1_sos_cnt_reached_zero : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 sosgen - sos cnt reached zero */
    UINT32 lceg1_txfsm2txtrain_enable : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 train - send training data */
    UINT32 lceg1_txfsm2patbuf_run : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 patbuf - send patbuf data */
    UINT32 lceg1_txfsm2txsos_send_sos : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 sosgen - send sos data */
    UINT32 lceg1_txfsm2txprbs_send_data : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 prbs - send Data values */
    UINT32 lceg1_txfsm2txprbs_send_seed : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 prbs - send seed values */
    UINT32 lceg1_txfsm2txprbs_start_prbs : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* tx fsm 2 prbs - start signal */
    UINT32 lceg1_act_bit30 : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* act_data bit30 */
    UINT32 lceg1_act_bit31 : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* act_data bit31 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_ACT_DATA_7_SB_FBLP_STRUCT;

/* DFX_LCE_G1_ACT_DATA_8_SB_FBLP_REG supported on:                              */
/*      SPRA0 (0x20001240)                                                      */
/*      SPRB0 (0x20001240)                                                      */
/*      SPRHBM (0x20001240)                                                     */
/*      SPRC0 (0x20001240)                                                      */
/*      SPRMCC (0x20001240)                                                     */
/*      SPRUCC (0x20001240)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_ACT_DATA_8
*/


#define DFX_LCE_G1_ACT_DATA_8_SB_FBLP_REG 0x2C021240

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg1_actual_data : 10;

                            /* Bits[9:0], Access Type=RO/V/P, default=0x00000000*/

                            /* CR to write Actual data to LCE */
    UINT32 lceg1_txfsm_cur_state : 3;

                            /* Bits[12:10], Access Type=RO/V/P, default=0x00000000*/

                            /* CR LCEg1 - tx fsm cur State */
    UINT32 lceg1_txfsm_done_state : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - DONE STATE */
    UINT32 lceg1_txfsm_patbuf_mode_state : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - PATBUF MODE */
    UINT32 lceg1_txfsm_sos_det_state : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - SOS DET STATE */
    UINT32 lceg1_txfsm_prbs_run_state : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - PRBS RUN STATE */
    UINT32 lceg1_txfsm_sync_state : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - SYNC STATE */
    UINT32 lceg1_txfsm_train_state : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - TRAIN STATE */
    UINT32 lceg1_txfsm_idle_state : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - IDLE state */
    UINT32 lceg1_lce_start_qual : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* lce start qual(after alignment) */
    UINT32 lceg1_txfsm2txprbs_loadseed : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 txprbs - Load seed */
    UINT32 lceg1_txfsm2txsos_reset_sos_cnt : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 txprbs - reset sos cnt */
    UINT32 lceg1_sos_cnt_reached_zero : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 sosgen - sos cnt reached zero */
    UINT32 lceg1_txfsm2txtrain_enable : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 train - send training data */
    UINT32 lceg1_txfsm2patbuf_run : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 patbuf - send patbuf data */
    UINT32 lceg1_txfsm2txsos_send_sos : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 sosgen - send sos data */
    UINT32 lceg1_txfsm2txprbs_send_data : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 prbs - send Data values */
    UINT32 lceg1_txfsm2txprbs_send_seed : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 prbs - send seed values */
    UINT32 lceg1_txfsm2txprbs_start_prbs : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* tx fsm 2 prbs - start signal */
    UINT32 lceg1_act_bit30 : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* act_data bit30 */
    UINT32 lceg1_act_bit31 : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* act_data bit31 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_ACT_DATA_8_SB_FBLP_STRUCT;

/* DFX_LCE_G1_ACT_DATA_9_SB_FBLP_REG supported on:                              */
/*      SPRA0 (0x20001244)                                                      */
/*      SPRB0 (0x20001244)                                                      */
/*      SPRHBM (0x20001244)                                                     */
/*      SPRC0 (0x20001244)                                                      */
/*      SPRMCC (0x20001244)                                                     */
/*      SPRUCC (0x20001244)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_ACT_DATA_9
*/


#define DFX_LCE_G1_ACT_DATA_9_SB_FBLP_REG 0x2C021244

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg1_actual_data : 10;

                            /* Bits[9:0], Access Type=RO/V/P, default=0x00000000*/

                            /* CR to write Actual data to LCE */
    UINT32 lceg1_txfsm_cur_state : 3;

                            /* Bits[12:10], Access Type=RO/V/P, default=0x00000000*/

                            /* CR LCEg1 - tx fsm cur State */
    UINT32 lceg1_txfsm_done_state : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - DONE STATE */
    UINT32 lceg1_txfsm_patbuf_mode_state : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - PATBUF MODE */
    UINT32 lceg1_txfsm_sos_det_state : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - SOS DET STATE */
    UINT32 lceg1_txfsm_prbs_run_state : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - PRBS RUN STATE */
    UINT32 lceg1_txfsm_sync_state : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - SYNC STATE */
    UINT32 lceg1_txfsm_train_state : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - TRAIN STATE */
    UINT32 lceg1_txfsm_idle_state : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - IDLE state */
    UINT32 lceg1_lce_start_qual : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* lce start qual(after alignment) */
    UINT32 lceg1_txfsm2txprbs_loadseed : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 txprbs - Load seed */
    UINT32 lceg1_txfsm2txsos_reset_sos_cnt : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 txprbs - reset sos cnt */
    UINT32 lceg1_sos_cnt_reached_zero : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 sosgen - sos cnt reached zero */
    UINT32 lceg1_txfsm2txtrain_enable : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 train - send training data */
    UINT32 lceg1_txfsm2patbuf_run : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 patbuf - send patbuf data */
    UINT32 lceg1_txfsm2txsos_send_sos : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 sosgen - send sos data */
    UINT32 lceg1_txfsm2txprbs_send_data : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 prbs - send Data values */
    UINT32 lceg1_txfsm2txprbs_send_seed : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 prbs - send seed values */
    UINT32 lceg1_txfsm2txprbs_start_prbs : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* tx fsm 2 prbs - start signal */
    UINT32 lceg1_act_bit30 : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* act_data bit30 */
    UINT32 lceg1_act_bit31 : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* act_data bit31 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_ACT_DATA_9_SB_FBLP_STRUCT;

/* DFX_LCE_G1_ACT_DATA_10_SB_FBLP_REG supported on:                             */
/*      SPRA0 (0x20001248)                                                      */
/*      SPRB0 (0x20001248)                                                      */
/*      SPRHBM (0x20001248)                                                     */
/*      SPRC0 (0x20001248)                                                      */
/*      SPRMCC (0x20001248)                                                     */
/*      SPRUCC (0x20001248)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_ACT_DATA_10
*/


#define DFX_LCE_G1_ACT_DATA_10_SB_FBLP_REG 0x2C021248

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg1_actual_data : 10;

                            /* Bits[9:0], Access Type=RO/V/P, default=0x00000000*/

                            /* CR to write Actual data to LCE */
    UINT32 lceg1_txfsm_cur_state : 3;

                            /* Bits[12:10], Access Type=RO/V/P, default=0x00000000*/

                            /* CR LCEg1 - tx fsm cur State */
    UINT32 lceg1_txfsm_done_state : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - DONE STATE */
    UINT32 lceg1_txfsm_patbuf_mode_state : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - PATBUF MODE */
    UINT32 lceg1_txfsm_sos_det_state : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - SOS DET STATE */
    UINT32 lceg1_txfsm_prbs_run_state : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - PRBS RUN STATE */
    UINT32 lceg1_txfsm_sync_state : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - SYNC STATE */
    UINT32 lceg1_txfsm_train_state : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - TRAIN STATE */
    UINT32 lceg1_txfsm_idle_state : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - IDLE state */
    UINT32 lceg1_lce_start_qual : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* lce start qual(after alignment) */
    UINT32 lceg1_txfsm2txprbs_loadseed : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 txprbs - Load seed */
    UINT32 lceg1_txfsm2txsos_reset_sos_cnt : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 txprbs - reset sos cnt */
    UINT32 lceg1_sos_cnt_reached_zero : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 sosgen - sos cnt reached zero */
    UINT32 lceg1_txfsm2txtrain_enable : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 train - send training data */
    UINT32 lceg1_txfsm2patbuf_run : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 patbuf - send patbuf data */
    UINT32 lceg1_txfsm2txsos_send_sos : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 sosgen - send sos data */
    UINT32 lceg1_txfsm2txprbs_send_data : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 prbs - send Data values */
    UINT32 lceg1_txfsm2txprbs_send_seed : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 prbs - send seed values */
    UINT32 lceg1_txfsm2txprbs_start_prbs : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* tx fsm 2 prbs - start signal */
    UINT32 lceg1_act_bit30 : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* act_data bit30 */
    UINT32 lceg1_act_bit31 : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* act_data bit31 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_ACT_DATA_10_SB_FBLP_STRUCT;

/* DFX_LCE_G1_ACT_DATA_11_SB_FBLP_REG supported on:                             */
/*      SPRA0 (0x2000124c)                                                      */
/*      SPRB0 (0x2000124c)                                                      */
/*      SPRHBM (0x2000124c)                                                     */
/*      SPRC0 (0x2000124c)                                                      */
/*      SPRMCC (0x2000124c)                                                     */
/*      SPRUCC (0x2000124c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_ACT_DATA_11
*/


#define DFX_LCE_G1_ACT_DATA_11_SB_FBLP_REG 0x2C02124C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg1_actual_data : 10;

                            /* Bits[9:0], Access Type=RO/V/P, default=0x00000000*/

                            /* CR to write Actual data to LCE */
    UINT32 lceg1_txfsm_cur_state : 3;

                            /* Bits[12:10], Access Type=RO/V/P, default=0x00000000*/

                            /* CR LCEg1 - tx fsm cur State */
    UINT32 lceg1_txfsm_done_state : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - DONE STATE */
    UINT32 lceg1_txfsm_patbuf_mode_state : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - PATBUF MODE */
    UINT32 lceg1_txfsm_sos_det_state : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - SOS DET STATE */
    UINT32 lceg1_txfsm_prbs_run_state : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - PRBS RUN STATE */
    UINT32 lceg1_txfsm_sync_state : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - SYNC STATE */
    UINT32 lceg1_txfsm_train_state : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - TRAIN STATE */
    UINT32 lceg1_txfsm_idle_state : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - IDLE state */
    UINT32 lceg1_lce_start_qual : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* lce start qual(after alignment) */
    UINT32 lceg1_txfsm2txprbs_loadseed : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 txprbs - Load seed */
    UINT32 lceg1_txfsm2txsos_reset_sos_cnt : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 txprbs - reset sos cnt */
    UINT32 lceg1_sos_cnt_reached_zero : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 sosgen - sos cnt reached zero */
    UINT32 lceg1_txfsm2txtrain_enable : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 train - send training data */
    UINT32 lceg1_txfsm2patbuf_run : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 patbuf - send patbuf data */
    UINT32 lceg1_txfsm2txsos_send_sos : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 sosgen - send sos data */
    UINT32 lceg1_txfsm2txprbs_send_data : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 prbs - send Data values */
    UINT32 lceg1_txfsm2txprbs_send_seed : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 prbs - send seed values */
    UINT32 lceg1_txfsm2txprbs_start_prbs : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* tx fsm 2 prbs - start signal */
    UINT32 lceg1_act_bit30 : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* act_data bit30 */
    UINT32 lceg1_act_bit31 : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* act_data bit31 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_ACT_DATA_11_SB_FBLP_STRUCT;

/* DFX_LCE_G1_ACT_DATA_12_SB_FBLP_REG supported on:                             */
/*      SPRA0 (0x20001250)                                                      */
/*      SPRB0 (0x20001250)                                                      */
/*      SPRHBM (0x20001250)                                                     */
/*      SPRC0 (0x20001250)                                                      */
/*      SPRMCC (0x20001250)                                                     */
/*      SPRUCC (0x20001250)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_ACT_DATA_12
*/


#define DFX_LCE_G1_ACT_DATA_12_SB_FBLP_REG 0x2C021250

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg1_actual_data : 10;

                            /* Bits[9:0], Access Type=RO/V/P, default=0x00000000*/

                            /* CR to write Actual data to LCE */
    UINT32 lceg1_txfsm_cur_state : 3;

                            /* Bits[12:10], Access Type=RO/V/P, default=0x00000000*/

                            /* CR LCEg1 - tx fsm cur State */
    UINT32 lceg1_txfsm_done_state : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - DONE STATE */
    UINT32 lceg1_txfsm_patbuf_mode_state : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - PATBUF MODE */
    UINT32 lceg1_txfsm_sos_det_state : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - SOS DET STATE */
    UINT32 lceg1_txfsm_prbs_run_state : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - PRBS RUN STATE */
    UINT32 lceg1_txfsm_sync_state : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - SYNC STATE */
    UINT32 lceg1_txfsm_train_state : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - TRAIN STATE */
    UINT32 lceg1_txfsm_idle_state : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - IDLE state */
    UINT32 lceg1_lce_start_qual : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* lce start qual(after alignment) */
    UINT32 lceg1_txfsm2txprbs_loadseed : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 txprbs - Load seed */
    UINT32 lceg1_txfsm2txsos_reset_sos_cnt : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 txprbs - reset sos cnt */
    UINT32 lceg1_sos_cnt_reached_zero : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 sosgen - sos cnt reached zero */
    UINT32 lceg1_txfsm2txtrain_enable : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 train - send training data */
    UINT32 lceg1_txfsm2patbuf_run : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 patbuf - send patbuf data */
    UINT32 lceg1_txfsm2txsos_send_sos : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 sosgen - send sos data */
    UINT32 lceg1_txfsm2txprbs_send_data : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 prbs - send Data values */
    UINT32 lceg1_txfsm2txprbs_send_seed : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 prbs - send seed values */
    UINT32 lceg1_txfsm2txprbs_start_prbs : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* tx fsm 2 prbs - start signal */
    UINT32 lceg1_act_bit30 : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* act_data bit30 */
    UINT32 lceg1_act_bit31 : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* act_data bit31 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_ACT_DATA_12_SB_FBLP_STRUCT;

/* DFX_LCE_G1_ACT_DATA_13_SB_FBLP_REG supported on:                             */
/*      SPRA0 (0x20001254)                                                      */
/*      SPRB0 (0x20001254)                                                      */
/*      SPRHBM (0x20001254)                                                     */
/*      SPRC0 (0x20001254)                                                      */
/*      SPRMCC (0x20001254)                                                     */
/*      SPRUCC (0x20001254)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_ACT_DATA_13
*/


#define DFX_LCE_G1_ACT_DATA_13_SB_FBLP_REG 0x2C021254

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg1_actual_data : 10;

                            /* Bits[9:0], Access Type=RO/V/P, default=0x00000000*/

                            /* CR to write Actual data to LCE */
    UINT32 lceg1_txfsm_cur_state : 3;

                            /* Bits[12:10], Access Type=RO/V/P, default=0x00000000*/

                            /* CR LCEg1 - tx fsm cur State */
    UINT32 lceg1_txfsm_done_state : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - DONE STATE */
    UINT32 lceg1_txfsm_patbuf_mode_state : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - PATBUF MODE */
    UINT32 lceg1_txfsm_sos_det_state : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - SOS DET STATE */
    UINT32 lceg1_txfsm_prbs_run_state : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - PRBS RUN STATE */
    UINT32 lceg1_txfsm_sync_state : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - SYNC STATE */
    UINT32 lceg1_txfsm_train_state : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - TRAIN STATE */
    UINT32 lceg1_txfsm_idle_state : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - IDLE state */
    UINT32 lceg1_lce_start_qual : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* lce start qual(after alignment) */
    UINT32 lceg1_txfsm2txprbs_loadseed : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 txprbs - Load seed */
    UINT32 lceg1_txfsm2txsos_reset_sos_cnt : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 txprbs - reset sos cnt */
    UINT32 lceg1_sos_cnt_reached_zero : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 sosgen - sos cnt reached zero */
    UINT32 lceg1_txfsm2txtrain_enable : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 train - send training data */
    UINT32 lceg1_txfsm2patbuf_run : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 patbuf - send patbuf data */
    UINT32 lceg1_txfsm2txsos_send_sos : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 sosgen - send sos data */
    UINT32 lceg1_txfsm2txprbs_send_data : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 prbs - send Data values */
    UINT32 lceg1_txfsm2txprbs_send_seed : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 prbs - send seed values */
    UINT32 lceg1_txfsm2txprbs_start_prbs : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* tx fsm 2 prbs - start signal */
    UINT32 lceg1_act_bit30 : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* act_data bit30 */
    UINT32 lceg1_act_bit31 : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* act_data bit31 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_ACT_DATA_13_SB_FBLP_STRUCT;

/* DFX_LCE_G1_ACT_DATA_14_SB_FBLP_REG supported on:                             */
/*      SPRA0 (0x20001258)                                                      */
/*      SPRB0 (0x20001258)                                                      */
/*      SPRHBM (0x20001258)                                                     */
/*      SPRC0 (0x20001258)                                                      */
/*      SPRMCC (0x20001258)                                                     */
/*      SPRUCC (0x20001258)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_ACT_DATA_14
*/


#define DFX_LCE_G1_ACT_DATA_14_SB_FBLP_REG 0x2C021258

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg1_actual_data : 10;

                            /* Bits[9:0], Access Type=RO/V/P, default=0x00000000*/

                            /* CR to write Actual data to LCE */
    UINT32 lceg1_txfsm_cur_state : 3;

                            /* Bits[12:10], Access Type=RO/V/P, default=0x00000000*/

                            /* CR LCEg1 - tx fsm cur State */
    UINT32 lceg1_txfsm_done_state : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - DONE STATE */
    UINT32 lceg1_txfsm_patbuf_mode_state : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - PATBUF MODE */
    UINT32 lceg1_txfsm_sos_det_state : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - SOS DET STATE */
    UINT32 lceg1_txfsm_prbs_run_state : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - PRBS RUN STATE */
    UINT32 lceg1_txfsm_sync_state : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - SYNC STATE */
    UINT32 lceg1_txfsm_train_state : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - TRAIN STATE */
    UINT32 lceg1_txfsm_idle_state : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - IDLE state */
    UINT32 lceg1_lce_start_qual : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* lce start qual(after alignment) */
    UINT32 lceg1_txfsm2txprbs_loadseed : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 txprbs - Load seed */
    UINT32 lceg1_txfsm2txsos_reset_sos_cnt : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 txprbs - reset sos cnt */
    UINT32 lceg1_sos_cnt_reached_zero : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 sosgen - sos cnt reached zero */
    UINT32 lceg1_txfsm2txtrain_enable : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 train - send training data */
    UINT32 lceg1_txfsm2patbuf_run : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 patbuf - send patbuf data */
    UINT32 lceg1_txfsm2txsos_send_sos : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 sosgen - send sos data */
    UINT32 lceg1_txfsm2txprbs_send_data : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 prbs - send Data values */
    UINT32 lceg1_txfsm2txprbs_send_seed : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 prbs - send seed values */
    UINT32 lceg1_txfsm2txprbs_start_prbs : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* tx fsm 2 prbs - start signal */
    UINT32 lceg1_act_bit30 : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* act_data bit30 */
    UINT32 lceg1_act_bit31 : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* act_data bit31 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_ACT_DATA_14_SB_FBLP_STRUCT;

/* DFX_LCE_G1_ACT_DATA_15_SB_FBLP_REG supported on:                             */
/*      SPRA0 (0x2000125c)                                                      */
/*      SPRB0 (0x2000125c)                                                      */
/*      SPRHBM (0x2000125c)                                                     */
/*      SPRC0 (0x2000125c)                                                      */
/*      SPRMCC (0x2000125c)                                                     */
/*      SPRUCC (0x2000125c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_ACT_DATA_15
*/


#define DFX_LCE_G1_ACT_DATA_15_SB_FBLP_REG 0x2C02125C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg1_actual_data : 10;

                            /* Bits[9:0], Access Type=RO/V/P, default=0x00000000*/

                            /* CR to write Actual data to LCE */
    UINT32 lceg1_txfsm_cur_state : 3;

                            /* Bits[12:10], Access Type=RO/V/P, default=0x00000000*/

                            /* CR LCEg1 - tx fsm cur State */
    UINT32 lceg1_txfsm_done_state : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - DONE STATE */
    UINT32 lceg1_txfsm_patbuf_mode_state : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - PATBUF MODE */
    UINT32 lceg1_txfsm_sos_det_state : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - SOS DET STATE */
    UINT32 lceg1_txfsm_prbs_run_state : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - PRBS RUN STATE */
    UINT32 lceg1_txfsm_sync_state : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - SYNC STATE */
    UINT32 lceg1_txfsm_train_state : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - TRAIN STATE */
    UINT32 lceg1_txfsm_idle_state : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm - IDLE state */
    UINT32 lceg1_lce_start_qual : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* lce start qual(after alignment) */
    UINT32 lceg1_txfsm2txprbs_loadseed : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 txprbs - Load seed */
    UINT32 lceg1_txfsm2txsos_reset_sos_cnt : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 txprbs - reset sos cnt */
    UINT32 lceg1_sos_cnt_reached_zero : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 sosgen - sos cnt reached zero */
    UINT32 lceg1_txfsm2txtrain_enable : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 train - send training data */
    UINT32 lceg1_txfsm2patbuf_run : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 patbuf - send patbuf data */
    UINT32 lceg1_txfsm2txsos_send_sos : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 sosgen - send sos data */
    UINT32 lceg1_txfsm2txprbs_send_data : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 prbs - send Data values */
    UINT32 lceg1_txfsm2txprbs_send_seed : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* txfsm 2 prbs - send seed values */
    UINT32 lceg1_txfsm2txprbs_start_prbs : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* tx fsm 2 prbs - start signal */
    UINT32 lceg1_act_bit30 : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* act_data bit30 */
    UINT32 lceg1_act_bit31 : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* act_data bit31 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_ACT_DATA_15_SB_FBLP_STRUCT;

/* DFX_LCE_G1_ERR_CNT_0_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x20001260)                                                      */
/*      SPRB0 (0x20001260)                                                      */
/*      SPRHBM (0x20001260)                                                     */
/*      SPRC0 (0x20001260)                                                      */
/*      SPRMCC (0x20001260)                                                     */
/*      SPRUCC (0x20001260)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_ERR_CNT_0
*/


#define DFX_LCE_G1_ERR_CNT_0_SB_FBLP_REG 0x2C021260

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dfx_cri_errcnt : 16;

                            /* Bits[15:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Error Counter. Tracks how many bit errors the
                               Pattern Checker has detected. Can be cleared
                               using DFXCLRERRCNT or DFXLCERESET.
                            */
    UINT32 dfx_cri_errcnt_ext : 16;

                            /* Bits[31:16], Access Type=RO/V/P, default=0x00000000*/

                            /* Extended error counter */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_ERR_CNT_0_SB_FBLP_STRUCT;

/* DFX_LCE_G1_ERR_CNT_1_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x20001264)                                                      */
/*      SPRB0 (0x20001264)                                                      */
/*      SPRHBM (0x20001264)                                                     */
/*      SPRC0 (0x20001264)                                                      */
/*      SPRMCC (0x20001264)                                                     */
/*      SPRUCC (0x20001264)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_ERR_CNT_1
*/


#define DFX_LCE_G1_ERR_CNT_1_SB_FBLP_REG 0x2C021264

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dfx_cri_errcnt : 16;

                            /* Bits[15:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Error Counter. Tracks how many bit errors the
                               Pattern Checker has detected. Can be cleared
                               using DFXCLRERRCNT or DFXLCERESET.
                            */
    UINT32 dfx_cri_errcnt_ext : 16;

                            /* Bits[31:16], Access Type=RO/V/P, default=0x00000000*/

                            /* Extended error counter */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_ERR_CNT_1_SB_FBLP_STRUCT;

/* DFX_LCE_G1_ERR_CNT_2_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x20001268)                                                      */
/*      SPRB0 (0x20001268)                                                      */
/*      SPRHBM (0x20001268)                                                     */
/*      SPRC0 (0x20001268)                                                      */
/*      SPRMCC (0x20001268)                                                     */
/*      SPRUCC (0x20001268)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_ERR_CNT_2
*/


#define DFX_LCE_G1_ERR_CNT_2_SB_FBLP_REG 0x2C021268

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dfx_cri_errcnt : 16;

                            /* Bits[15:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Error Counter. Tracks how many bit errors the
                               Pattern Checker has detected. Can be cleared
                               using DFXCLRERRCNT or DFXLCERESET.
                            */
    UINT32 dfx_cri_errcnt_ext : 16;

                            /* Bits[31:16], Access Type=RO/V/P, default=0x00000000*/

                            /* Extended error counter */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_ERR_CNT_2_SB_FBLP_STRUCT;

/* DFX_LCE_G1_ERR_CNT_3_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x2000126c)                                                      */
/*      SPRB0 (0x2000126c)                                                      */
/*      SPRHBM (0x2000126c)                                                     */
/*      SPRC0 (0x2000126c)                                                      */
/*      SPRMCC (0x2000126c)                                                     */
/*      SPRUCC (0x2000126c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_ERR_CNT_3
*/


#define DFX_LCE_G1_ERR_CNT_3_SB_FBLP_REG 0x2C02126C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dfx_cri_errcnt : 16;

                            /* Bits[15:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Error Counter. Tracks how many bit errors the
                               Pattern Checker has detected. Can be cleared
                               using DFXCLRERRCNT or DFXLCERESET.
                            */
    UINT32 dfx_cri_errcnt_ext : 16;

                            /* Bits[31:16], Access Type=RO/V/P, default=0x00000000*/

                            /* Extended error counter */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_ERR_CNT_3_SB_FBLP_STRUCT;

/* DFX_LCE_G1_ERR_CNT_4_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x20001270)                                                      */
/*      SPRB0 (0x20001270)                                                      */
/*      SPRHBM (0x20001270)                                                     */
/*      SPRC0 (0x20001270)                                                      */
/*      SPRMCC (0x20001270)                                                     */
/*      SPRUCC (0x20001270)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_ERR_CNT_4
*/


#define DFX_LCE_G1_ERR_CNT_4_SB_FBLP_REG 0x2C021270

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dfx_cri_errcnt : 16;

                            /* Bits[15:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Error Counter. Tracks how many bit errors the
                               Pattern Checker has detected. Can be cleared
                               using DFXCLRERRCNT or DFXLCERESET.
                            */
    UINT32 dfx_cri_errcnt_ext : 16;

                            /* Bits[31:16], Access Type=RO/V/P, default=0x00000000*/

                            /* Extended error counter */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_ERR_CNT_4_SB_FBLP_STRUCT;

/* DFX_LCE_G1_ERR_CNT_5_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x20001274)                                                      */
/*      SPRB0 (0x20001274)                                                      */
/*      SPRHBM (0x20001274)                                                     */
/*      SPRC0 (0x20001274)                                                      */
/*      SPRMCC (0x20001274)                                                     */
/*      SPRUCC (0x20001274)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_ERR_CNT_5
*/


#define DFX_LCE_G1_ERR_CNT_5_SB_FBLP_REG 0x2C021274

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dfx_cri_errcnt : 16;

                            /* Bits[15:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Error Counter. Tracks how many bit errors the
                               Pattern Checker has detected. Can be cleared
                               using DFXCLRERRCNT or DFXLCERESET.
                            */
    UINT32 dfx_cri_errcnt_ext : 16;

                            /* Bits[31:16], Access Type=RO/V/P, default=0x00000000*/

                            /* Extended error counter */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_ERR_CNT_5_SB_FBLP_STRUCT;

/* DFX_LCE_G1_ERR_CNT_6_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x20001278)                                                      */
/*      SPRB0 (0x20001278)                                                      */
/*      SPRHBM (0x20001278)                                                     */
/*      SPRC0 (0x20001278)                                                      */
/*      SPRMCC (0x20001278)                                                     */
/*      SPRUCC (0x20001278)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_ERR_CNT_6
*/


#define DFX_LCE_G1_ERR_CNT_6_SB_FBLP_REG 0x2C021278

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dfx_cri_errcnt : 16;

                            /* Bits[15:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Error Counter. Tracks how many bit errors the
                               Pattern Checker has detected. Can be cleared
                               using DFXCLRERRCNT or DFXLCERESET.
                            */
    UINT32 dfx_cri_errcnt_ext : 16;

                            /* Bits[31:16], Access Type=RO/V/P, default=0x00000000*/

                            /* Extended error counter */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_ERR_CNT_6_SB_FBLP_STRUCT;

/* DFX_LCE_G1_ERR_CNT_7_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x2000127c)                                                      */
/*      SPRB0 (0x2000127c)                                                      */
/*      SPRHBM (0x2000127c)                                                     */
/*      SPRC0 (0x2000127c)                                                      */
/*      SPRMCC (0x2000127c)                                                     */
/*      SPRUCC (0x2000127c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_ERR_CNT_7
*/


#define DFX_LCE_G1_ERR_CNT_7_SB_FBLP_REG 0x2C02127C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dfx_cri_errcnt : 16;

                            /* Bits[15:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Error Counter. Tracks how many bit errors the
                               Pattern Checker has detected. Can be cleared
                               using DFXCLRERRCNT or DFXLCERESET.
                            */
    UINT32 dfx_cri_errcnt_ext : 16;

                            /* Bits[31:16], Access Type=RO/V/P, default=0x00000000*/

                            /* Extended error counter */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_ERR_CNT_7_SB_FBLP_STRUCT;

/* DFX_LCE_G1_ERR_CNT_8_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x20001280)                                                      */
/*      SPRB0 (0x20001280)                                                      */
/*      SPRHBM (0x20001280)                                                     */
/*      SPRC0 (0x20001280)                                                      */
/*      SPRMCC (0x20001280)                                                     */
/*      SPRUCC (0x20001280)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_ERR_CNT_8
*/


#define DFX_LCE_G1_ERR_CNT_8_SB_FBLP_REG 0x2C021280

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dfx_cri_errcnt : 16;

                            /* Bits[15:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Error Counter. Tracks how many bit errors the
                               Pattern Checker has detected. Can be cleared
                               using DFXCLRERRCNT or DFXLCERESET.
                            */
    UINT32 dfx_cri_errcnt_ext : 16;

                            /* Bits[31:16], Access Type=RO/V/P, default=0x00000000*/

                            /* Extended error counter */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_ERR_CNT_8_SB_FBLP_STRUCT;

/* DFX_LCE_G1_ERR_CNT_9_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x20001284)                                                      */
/*      SPRB0 (0x20001284)                                                      */
/*      SPRHBM (0x20001284)                                                     */
/*      SPRC0 (0x20001284)                                                      */
/*      SPRMCC (0x20001284)                                                     */
/*      SPRUCC (0x20001284)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_ERR_CNT_9
*/


#define DFX_LCE_G1_ERR_CNT_9_SB_FBLP_REG 0x2C021284

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dfx_cri_errcnt : 16;

                            /* Bits[15:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Error Counter. Tracks how many bit errors the
                               Pattern Checker has detected. Can be cleared
                               using DFXCLRERRCNT or DFXLCERESET.
                            */
    UINT32 dfx_cri_errcnt_ext : 16;

                            /* Bits[31:16], Access Type=RO/V/P, default=0x00000000*/

                            /* Extended error counter */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_ERR_CNT_9_SB_FBLP_STRUCT;

/* DFX_LCE_G1_ERR_CNT_10_SB_FBLP_REG supported on:                              */
/*      SPRA0 (0x20001288)                                                      */
/*      SPRB0 (0x20001288)                                                      */
/*      SPRHBM (0x20001288)                                                     */
/*      SPRC0 (0x20001288)                                                      */
/*      SPRMCC (0x20001288)                                                     */
/*      SPRUCC (0x20001288)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_ERR_CNT_10
*/


#define DFX_LCE_G1_ERR_CNT_10_SB_FBLP_REG 0x2C021288

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dfx_cri_errcnt : 16;

                            /* Bits[15:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Error Counter. Tracks how many bit errors the
                               Pattern Checker has detected. Can be cleared
                               using DFXCLRERRCNT or DFXLCERESET.
                            */
    UINT32 dfx_cri_errcnt_ext : 16;

                            /* Bits[31:16], Access Type=RO/V/P, default=0x00000000*/

                            /* Extended error counter */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_ERR_CNT_10_SB_FBLP_STRUCT;

/* DFX_LCE_G1_ERR_CNT_11_SB_FBLP_REG supported on:                              */
/*      SPRA0 (0x2000128c)                                                      */
/*      SPRB0 (0x2000128c)                                                      */
/*      SPRHBM (0x2000128c)                                                     */
/*      SPRC0 (0x2000128c)                                                      */
/*      SPRMCC (0x2000128c)                                                     */
/*      SPRUCC (0x2000128c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_ERR_CNT_11
*/


#define DFX_LCE_G1_ERR_CNT_11_SB_FBLP_REG 0x2C02128C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dfx_cri_errcnt : 16;

                            /* Bits[15:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Error Counter. Tracks how many bit errors the
                               Pattern Checker has detected. Can be cleared
                               using DFXCLRERRCNT or DFXLCERESET.
                            */
    UINT32 dfx_cri_errcnt_ext : 16;

                            /* Bits[31:16], Access Type=RO/V/P, default=0x00000000*/

                            /* Extended error counter */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_ERR_CNT_11_SB_FBLP_STRUCT;

/* DFX_LCE_G1_ERR_CNT_12_SB_FBLP_REG supported on:                              */
/*      SPRA0 (0x20001290)                                                      */
/*      SPRB0 (0x20001290)                                                      */
/*      SPRHBM (0x20001290)                                                     */
/*      SPRC0 (0x20001290)                                                      */
/*      SPRMCC (0x20001290)                                                     */
/*      SPRUCC (0x20001290)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_ERR_CNT_12
*/


#define DFX_LCE_G1_ERR_CNT_12_SB_FBLP_REG 0x2C021290

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dfx_cri_errcnt : 16;

                            /* Bits[15:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Error Counter. Tracks how many bit errors the
                               Pattern Checker has detected. Can be cleared
                               using DFXCLRERRCNT or DFXLCERESET.
                            */
    UINT32 dfx_cri_errcnt_ext : 16;

                            /* Bits[31:16], Access Type=RO/V/P, default=0x00000000*/

                            /* Extended error counter */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_ERR_CNT_12_SB_FBLP_STRUCT;

/* DFX_LCE_G1_ERR_CNT_13_SB_FBLP_REG supported on:                              */
/*      SPRA0 (0x20001294)                                                      */
/*      SPRB0 (0x20001294)                                                      */
/*      SPRHBM (0x20001294)                                                     */
/*      SPRC0 (0x20001294)                                                      */
/*      SPRMCC (0x20001294)                                                     */
/*      SPRUCC (0x20001294)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_ERR_CNT_13
*/


#define DFX_LCE_G1_ERR_CNT_13_SB_FBLP_REG 0x2C021294

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dfx_cri_errcnt : 16;

                            /* Bits[15:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Error Counter. Tracks how many bit errors the
                               Pattern Checker has detected. Can be cleared
                               using DFXCLRERRCNT or DFXLCERESET.
                            */
    UINT32 dfx_cri_errcnt_ext : 16;

                            /* Bits[31:16], Access Type=RO/V/P, default=0x00000000*/

                            /* Extended error counter */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_ERR_CNT_13_SB_FBLP_STRUCT;

/* DFX_LCE_G1_ERR_CNT_14_SB_FBLP_REG supported on:                              */
/*      SPRA0 (0x20001298)                                                      */
/*      SPRB0 (0x20001298)                                                      */
/*      SPRHBM (0x20001298)                                                     */
/*      SPRC0 (0x20001298)                                                      */
/*      SPRMCC (0x20001298)                                                     */
/*      SPRUCC (0x20001298)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_ERR_CNT_14
*/


#define DFX_LCE_G1_ERR_CNT_14_SB_FBLP_REG 0x2C021298

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dfx_cri_errcnt : 16;

                            /* Bits[15:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Error Counter. Tracks how many bit errors the
                               Pattern Checker has detected. Can be cleared
                               using DFXCLRERRCNT or DFXLCERESET.
                            */
    UINT32 dfx_cri_errcnt_ext : 16;

                            /* Bits[31:16], Access Type=RO/V/P, default=0x00000000*/

                            /* Extended error counter */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_ERR_CNT_14_SB_FBLP_STRUCT;

/* DFX_LCE_G1_ERR_CNT_15_SB_FBLP_REG supported on:                              */
/*      SPRA0 (0x2000129c)                                                      */
/*      SPRB0 (0x2000129c)                                                      */
/*      SPRHBM (0x2000129c)                                                     */
/*      SPRC0 (0x2000129c)                                                      */
/*      SPRMCC (0x2000129c)                                                     */
/*      SPRUCC (0x2000129c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_ERR_CNT_15
*/


#define DFX_LCE_G1_ERR_CNT_15_SB_FBLP_REG 0x2C02129C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dfx_cri_errcnt : 16;

                            /* Bits[15:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Error Counter. Tracks how many bit errors the
                               Pattern Checker has detected. Can be cleared
                               using DFXCLRERRCNT or DFXLCERESET.
                            */
    UINT32 dfx_cri_errcnt_ext : 16;

                            /* Bits[31:16], Access Type=RO/V/P, default=0x00000000*/

                            /* Extended error counter */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_ERR_CNT_15_SB_FBLP_STRUCT;

/* DFX_LCE_G1_EXP_DATA_0_SB_FBLP_REG supported on:                              */
/*      SPRA0 (0x200012a0)                                                      */
/*      SPRB0 (0x200012a0)                                                      */
/*      SPRHBM (0x200012a0)                                                     */
/*      SPRC0 (0x200012a0)                                                      */
/*      SPRMCC (0x200012a0)                                                     */
/*      SPRUCC (0x200012a0)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_EXP_DATA_0
*/


#define DFX_LCE_G1_EXP_DATA_0_SB_FBLP_REG 0x2C0212A0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg1_expected_data : 10;

                            /* Bits[9:0], Access Type=RO/V/P, default=0x00000000*/

                            /* CR to write Expected data to LCE */
    UINT32 lceg1_rxfsm_cur_state : 3;

                            /* Bits[12:10], Access Type=RO/V/P, default=0x00000000*/

                            /* CR LCEg1 - rx fsm cur State */
    UINT32 lceg1_rxfsm_marker_state : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PATBUF RUN */
    UINT32 lceg1_rxfsm_done_state : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - DONE STATE */
    UINT32 lceg1_rxfsm_patbuf_mode_state : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PATBUF MODE */
    UINT32 lceg1_rxfsm_sos_det_state : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - SOS DET STATE */
    UINT32 lceg1_rxfsm_prbs_run_state : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PRBS MODE */
    UINT32 lceg1_rxfsm_sync_state : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - SYNC STATE */
    UINT32 lceg1_rxfsm_train_state : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - TRAIN STATE */
    UINT32 lceg1_rxfsm_idle_state : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - IDLE STATE */
    UINT32 lceg1_rcvd_marker_det : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - MARKER DET */
    UINT32 lceg1_received_n_isi_pat : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - RECEIVED N ISI PATTERNS */
    UINT32 lceg1_received_n_lfsr_seeds : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - RECEIVED N LFSR SEEDS */
    UINT32 lceg1_error_seen : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* RX CHECKER - ERRORS OBSERVED */
    UINT32 lceg1_exp_bit25 : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit25 */
    UINT32 lceg1_exp_bit26 : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit26 */
    UINT32 lceg1_exp_bit27 : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit27 */
    UINT32 lceg1_exp_bit28 : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit28 */
    UINT32 lceg1_exp_bit29 : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit29 */
    UINT32 lceg1_exp_bit30 : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit30 */
    UINT32 lceg1_exp_bit31 : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit31 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_EXP_DATA_0_SB_FBLP_STRUCT;

/* DFX_LCE_G1_EXP_DATA_1_SB_FBLP_REG supported on:                              */
/*      SPRA0 (0x200012a4)                                                      */
/*      SPRB0 (0x200012a4)                                                      */
/*      SPRHBM (0x200012a4)                                                     */
/*      SPRC0 (0x200012a4)                                                      */
/*      SPRMCC (0x200012a4)                                                     */
/*      SPRUCC (0x200012a4)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_EXP_DATA_1
*/


#define DFX_LCE_G1_EXP_DATA_1_SB_FBLP_REG 0x2C0212A4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg1_expected_data : 10;

                            /* Bits[9:0], Access Type=RO/V/P, default=0x00000000*/

                            /* CR to write Expected data to LCE */
    UINT32 lceg1_rxfsm_cur_state : 3;

                            /* Bits[12:10], Access Type=RO/V/P, default=0x00000000*/

                            /* CR LCEg1 - rx fsm cur State */
    UINT32 lceg1_rxfsm_marker_state : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PATBUF RUN */
    UINT32 lceg1_rxfsm_done_state : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - DONE STATE */
    UINT32 lceg1_rxfsm_patbuf_mode_state : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PATBUF MODE */
    UINT32 lceg1_rxfsm_sos_det_state : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - SOS DET STATE */
    UINT32 lceg1_rxfsm_prbs_run_state : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PRBS MODE */
    UINT32 lceg1_rxfsm_sync_state : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - SYNC STATE */
    UINT32 lceg1_rxfsm_train_state : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - TRAIN STATE */
    UINT32 lceg1_rxfsm_idle_state : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - IDLE STATE */
    UINT32 lceg1_rcvd_marker_det : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - MARKER DET */
    UINT32 lceg1_received_n_isi_pat : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - RECEIVED N ISI PATTERNS */
    UINT32 lceg1_received_n_lfsr_seeds : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - RECEIVED N LFSR SEEDS */
    UINT32 lceg1_error_seen : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* RX CHECKER - ERRORS OBSERVED */
    UINT32 lceg1_exp_bit25 : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit25 */
    UINT32 lceg1_exp_bit26 : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit26 */
    UINT32 lceg1_exp_bit27 : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit27 */
    UINT32 lceg1_exp_bit28 : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit28 */
    UINT32 lceg1_exp_bit29 : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit29 */
    UINT32 lceg1_exp_bit30 : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit30 */
    UINT32 lceg1_exp_bit31 : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit31 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_EXP_DATA_1_SB_FBLP_STRUCT;

/* DFX_LCE_G1_EXP_DATA_2_SB_FBLP_REG supported on:                              */
/*      SPRA0 (0x200012a8)                                                      */
/*      SPRB0 (0x200012a8)                                                      */
/*      SPRHBM (0x200012a8)                                                     */
/*      SPRC0 (0x200012a8)                                                      */
/*      SPRMCC (0x200012a8)                                                     */
/*      SPRUCC (0x200012a8)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_EXP_DATA_2
*/


#define DFX_LCE_G1_EXP_DATA_2_SB_FBLP_REG 0x2C0212A8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg1_expected_data : 10;

                            /* Bits[9:0], Access Type=RO/V/P, default=0x00000000*/

                            /* CR to write Expected data to LCE */
    UINT32 lceg1_rxfsm_cur_state : 3;

                            /* Bits[12:10], Access Type=RO/V/P, default=0x00000000*/

                            /* CR LCEg1 - rx fsm cur State */
    UINT32 lceg1_rxfsm_marker_state : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PATBUF RUN */
    UINT32 lceg1_rxfsm_done_state : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - DONE STATE */
    UINT32 lceg1_rxfsm_patbuf_mode_state : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PATBUF MODE */
    UINT32 lceg1_rxfsm_sos_det_state : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - SOS DET STATE */
    UINT32 lceg1_rxfsm_prbs_run_state : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PRBS MODE */
    UINT32 lceg1_rxfsm_sync_state : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - SYNC STATE */
    UINT32 lceg1_rxfsm_train_state : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - TRAIN STATE */
    UINT32 lceg1_rxfsm_idle_state : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - IDLE STATE */
    UINT32 lceg1_rcvd_marker_det : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - MARKER DET */
    UINT32 lceg1_received_n_isi_pat : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - RECEIVED N ISI PATTERNS */
    UINT32 lceg1_received_n_lfsr_seeds : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - RECEIVED N LFSR SEEDS */
    UINT32 lceg1_error_seen : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* RX CHECKER - ERRORS OBSERVED */
    UINT32 lceg1_exp_bit25 : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit25 */
    UINT32 lceg1_exp_bit26 : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit26 */
    UINT32 lceg1_exp_bit27 : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit27 */
    UINT32 lceg1_exp_bit28 : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit28 */
    UINT32 lceg1_exp_bit29 : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit29 */
    UINT32 lceg1_exp_bit30 : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit30 */
    UINT32 lceg1_exp_bit31 : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit31 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_EXP_DATA_2_SB_FBLP_STRUCT;

/* DFX_LCE_G1_EXP_DATA_3_SB_FBLP_REG supported on:                              */
/*      SPRA0 (0x200012ac)                                                      */
/*      SPRB0 (0x200012ac)                                                      */
/*      SPRHBM (0x200012ac)                                                     */
/*      SPRC0 (0x200012ac)                                                      */
/*      SPRMCC (0x200012ac)                                                     */
/*      SPRUCC (0x200012ac)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_EXP_DATA_3
*/


#define DFX_LCE_G1_EXP_DATA_3_SB_FBLP_REG 0x2C0212AC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg1_expected_data : 10;

                            /* Bits[9:0], Access Type=RO/V/P, default=0x00000000*/

                            /* CR to write Expected data to LCE */
    UINT32 lceg1_rxfsm_cur_state : 3;

                            /* Bits[12:10], Access Type=RO/V/P, default=0x00000000*/

                            /* CR LCEg1 - rx fsm cur State */
    UINT32 lceg1_rxfsm_marker_state : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PATBUF RUN */
    UINT32 lceg1_rxfsm_done_state : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - DONE STATE */
    UINT32 lceg1_rxfsm_patbuf_mode_state : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PATBUF MODE */
    UINT32 lceg1_rxfsm_sos_det_state : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - SOS DET STATE */
    UINT32 lceg1_rxfsm_prbs_run_state : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PRBS MODE */
    UINT32 lceg1_rxfsm_sync_state : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - SYNC STATE */
    UINT32 lceg1_rxfsm_train_state : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - TRAIN STATE */
    UINT32 lceg1_rxfsm_idle_state : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - IDLE STATE */
    UINT32 lceg1_rcvd_marker_det : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - MARKER DET */
    UINT32 lceg1_received_n_isi_pat : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - RECEIVED N ISI PATTERNS */
    UINT32 lceg1_received_n_lfsr_seeds : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - RECEIVED N LFSR SEEDS */
    UINT32 lceg1_error_seen : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* RX CHECKER - ERRORS OBSERVED */
    UINT32 lceg1_exp_bit25 : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit25 */
    UINT32 lceg1_exp_bit26 : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit26 */
    UINT32 lceg1_exp_bit27 : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit27 */
    UINT32 lceg1_exp_bit28 : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit28 */
    UINT32 lceg1_exp_bit29 : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit29 */
    UINT32 lceg1_exp_bit30 : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit30 */
    UINT32 lceg1_exp_bit31 : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit31 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_EXP_DATA_3_SB_FBLP_STRUCT;

/* DFX_LCE_G1_EXP_DATA_4_SB_FBLP_REG supported on:                              */
/*      SPRA0 (0x200012b0)                                                      */
/*      SPRB0 (0x200012b0)                                                      */
/*      SPRHBM (0x200012b0)                                                     */
/*      SPRC0 (0x200012b0)                                                      */
/*      SPRMCC (0x200012b0)                                                     */
/*      SPRUCC (0x200012b0)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_EXP_DATA_4
*/


#define DFX_LCE_G1_EXP_DATA_4_SB_FBLP_REG 0x2C0212B0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg1_expected_data : 10;

                            /* Bits[9:0], Access Type=RO/V/P, default=0x00000000*/

                            /* CR to write Expected data to LCE */
    UINT32 lceg1_rxfsm_cur_state : 3;

                            /* Bits[12:10], Access Type=RO/V/P, default=0x00000000*/

                            /* CR LCEg1 - rx fsm cur State */
    UINT32 lceg1_rxfsm_marker_state : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PATBUF RUN */
    UINT32 lceg1_rxfsm_done_state : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - DONE STATE */
    UINT32 lceg1_rxfsm_patbuf_mode_state : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PATBUF MODE */
    UINT32 lceg1_rxfsm_sos_det_state : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - SOS DET STATE */
    UINT32 lceg1_rxfsm_prbs_run_state : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PRBS MODE */
    UINT32 lceg1_rxfsm_sync_state : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - SYNC STATE */
    UINT32 lceg1_rxfsm_train_state : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - TRAIN STATE */
    UINT32 lceg1_rxfsm_idle_state : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - IDLE STATE */
    UINT32 lceg1_rcvd_marker_det : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - MARKER DET */
    UINT32 lceg1_received_n_isi_pat : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - RECEIVED N ISI PATTERNS */
    UINT32 lceg1_received_n_lfsr_seeds : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - RECEIVED N LFSR SEEDS */
    UINT32 lceg1_error_seen : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* RX CHECKER - ERRORS OBSERVED */
    UINT32 lceg1_exp_bit25 : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit25 */
    UINT32 lceg1_exp_bit26 : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit26 */
    UINT32 lceg1_exp_bit27 : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit27 */
    UINT32 lceg1_exp_bit28 : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit28 */
    UINT32 lceg1_exp_bit29 : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit29 */
    UINT32 lceg1_exp_bit30 : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit30 */
    UINT32 lceg1_exp_bit31 : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit31 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_EXP_DATA_4_SB_FBLP_STRUCT;

/* DFX_LCE_G1_EXP_DATA_5_SB_FBLP_REG supported on:                              */
/*      SPRA0 (0x200012b4)                                                      */
/*      SPRB0 (0x200012b4)                                                      */
/*      SPRHBM (0x200012b4)                                                     */
/*      SPRC0 (0x200012b4)                                                      */
/*      SPRMCC (0x200012b4)                                                     */
/*      SPRUCC (0x200012b4)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_EXP_DATA_5
*/


#define DFX_LCE_G1_EXP_DATA_5_SB_FBLP_REG 0x2C0212B4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg1_expected_data : 10;

                            /* Bits[9:0], Access Type=RO/V/P, default=0x00000000*/

                            /* CR to write Expected data to LCE */
    UINT32 lceg1_rxfsm_cur_state : 3;

                            /* Bits[12:10], Access Type=RO/V/P, default=0x00000000*/

                            /* CR LCEg1 - rx fsm cur State */
    UINT32 lceg1_rxfsm_marker_state : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PATBUF RUN */
    UINT32 lceg1_rxfsm_done_state : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - DONE STATE */
    UINT32 lceg1_rxfsm_patbuf_mode_state : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PATBUF MODE */
    UINT32 lceg1_rxfsm_sos_det_state : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - SOS DET STATE */
    UINT32 lceg1_rxfsm_prbs_run_state : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PRBS MODE */
    UINT32 lceg1_rxfsm_sync_state : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - SYNC STATE */
    UINT32 lceg1_rxfsm_train_state : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - TRAIN STATE */
    UINT32 lceg1_rxfsm_idle_state : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - IDLE STATE */
    UINT32 lceg1_rcvd_marker_det : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - MARKER DET */
    UINT32 lceg1_received_n_isi_pat : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - RECEIVED N ISI PATTERNS */
    UINT32 lceg1_received_n_lfsr_seeds : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - RECEIVED N LFSR SEEDS */
    UINT32 lceg1_error_seen : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* RX CHECKER - ERRORS OBSERVED */
    UINT32 lceg1_exp_bit25 : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit25 */
    UINT32 lceg1_exp_bit26 : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit26 */
    UINT32 lceg1_exp_bit27 : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit27 */
    UINT32 lceg1_exp_bit28 : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit28 */
    UINT32 lceg1_exp_bit29 : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit29 */
    UINT32 lceg1_exp_bit30 : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit30 */
    UINT32 lceg1_exp_bit31 : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit31 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_EXP_DATA_5_SB_FBLP_STRUCT;

/* DFX_LCE_G1_EXP_DATA_6_SB_FBLP_REG supported on:                              */
/*      SPRA0 (0x200012b8)                                                      */
/*      SPRB0 (0x200012b8)                                                      */
/*      SPRHBM (0x200012b8)                                                     */
/*      SPRC0 (0x200012b8)                                                      */
/*      SPRMCC (0x200012b8)                                                     */
/*      SPRUCC (0x200012b8)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_EXP_DATA_6
*/


#define DFX_LCE_G1_EXP_DATA_6_SB_FBLP_REG 0x2C0212B8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg1_expected_data : 10;

                            /* Bits[9:0], Access Type=RO/V/P, default=0x00000000*/

                            /* CR to write Expected data to LCE */
    UINT32 lceg1_rxfsm_cur_state : 3;

                            /* Bits[12:10], Access Type=RO/V/P, default=0x00000000*/

                            /* CR LCEg1 - rx fsm cur State */
    UINT32 lceg1_rxfsm_marker_state : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PATBUF RUN */
    UINT32 lceg1_rxfsm_done_state : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - DONE STATE */
    UINT32 lceg1_rxfsm_patbuf_mode_state : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PATBUF MODE */
    UINT32 lceg1_rxfsm_sos_det_state : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - SOS DET STATE */
    UINT32 lceg1_rxfsm_prbs_run_state : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PRBS MODE */
    UINT32 lceg1_rxfsm_sync_state : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - SYNC STATE */
    UINT32 lceg1_rxfsm_train_state : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - TRAIN STATE */
    UINT32 lceg1_rxfsm_idle_state : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - IDLE STATE */
    UINT32 lceg1_rcvd_marker_det : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - MARKER DET */
    UINT32 lceg1_received_n_isi_pat : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - RECEIVED N ISI PATTERNS */
    UINT32 lceg1_received_n_lfsr_seeds : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - RECEIVED N LFSR SEEDS */
    UINT32 lceg1_error_seen : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* RX CHECKER - ERRORS OBSERVED */
    UINT32 lceg1_exp_bit25 : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit25 */
    UINT32 lceg1_exp_bit26 : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit26 */
    UINT32 lceg1_exp_bit27 : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit27 */
    UINT32 lceg1_exp_bit28 : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit28 */
    UINT32 lceg1_exp_bit29 : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit29 */
    UINT32 lceg1_exp_bit30 : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit30 */
    UINT32 lceg1_exp_bit31 : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit31 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_EXP_DATA_6_SB_FBLP_STRUCT;

/* DFX_LCE_G1_EXP_DATA_7_SB_FBLP_REG supported on:                              */
/*      SPRA0 (0x200012bc)                                                      */
/*      SPRB0 (0x200012bc)                                                      */
/*      SPRHBM (0x200012bc)                                                     */
/*      SPRC0 (0x200012bc)                                                      */
/*      SPRMCC (0x200012bc)                                                     */
/*      SPRUCC (0x200012bc)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_EXP_DATA_7
*/


#define DFX_LCE_G1_EXP_DATA_7_SB_FBLP_REG 0x2C0212BC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg1_expected_data : 10;

                            /* Bits[9:0], Access Type=RO/V/P, default=0x00000000*/

                            /* CR to write Expected data to LCE */
    UINT32 lceg1_rxfsm_cur_state : 3;

                            /* Bits[12:10], Access Type=RO/V/P, default=0x00000000*/

                            /* CR LCEg1 - rx fsm cur State */
    UINT32 lceg1_rxfsm_marker_state : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PATBUF RUN */
    UINT32 lceg1_rxfsm_done_state : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - DONE STATE */
    UINT32 lceg1_rxfsm_patbuf_mode_state : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PATBUF MODE */
    UINT32 lceg1_rxfsm_sos_det_state : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - SOS DET STATE */
    UINT32 lceg1_rxfsm_prbs_run_state : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PRBS MODE */
    UINT32 lceg1_rxfsm_sync_state : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - SYNC STATE */
    UINT32 lceg1_rxfsm_train_state : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - TRAIN STATE */
    UINT32 lceg1_rxfsm_idle_state : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - IDLE STATE */
    UINT32 lceg1_rcvd_marker_det : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - MARKER DET */
    UINT32 lceg1_received_n_isi_pat : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - RECEIVED N ISI PATTERNS */
    UINT32 lceg1_received_n_lfsr_seeds : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - RECEIVED N LFSR SEEDS */
    UINT32 lceg1_error_seen : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* RX CHECKER - ERRORS OBSERVED */
    UINT32 lceg1_exp_bit25 : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit25 */
    UINT32 lceg1_exp_bit26 : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit26 */
    UINT32 lceg1_exp_bit27 : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit27 */
    UINT32 lceg1_exp_bit28 : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit28 */
    UINT32 lceg1_exp_bit29 : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit29 */
    UINT32 lceg1_exp_bit30 : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit30 */
    UINT32 lceg1_exp_bit31 : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit31 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_EXP_DATA_7_SB_FBLP_STRUCT;

/* DFX_LCE_G1_EXP_DATA_8_SB_FBLP_REG supported on:                              */
/*      SPRA0 (0x200012c0)                                                      */
/*      SPRB0 (0x200012c0)                                                      */
/*      SPRHBM (0x200012c0)                                                     */
/*      SPRC0 (0x200012c0)                                                      */
/*      SPRMCC (0x200012c0)                                                     */
/*      SPRUCC (0x200012c0)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_EXP_DATA_8
*/


#define DFX_LCE_G1_EXP_DATA_8_SB_FBLP_REG 0x2C0212C0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg1_expected_data : 10;

                            /* Bits[9:0], Access Type=RO/V/P, default=0x00000000*/

                            /* CR to write Expected data to LCE */
    UINT32 lceg1_rxfsm_cur_state : 3;

                            /* Bits[12:10], Access Type=RO/V/P, default=0x00000000*/

                            /* CR LCEg1 - rx fsm cur State */
    UINT32 lceg1_rxfsm_marker_state : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PATBUF RUN */
    UINT32 lceg1_rxfsm_done_state : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - DONE STATE */
    UINT32 lceg1_rxfsm_patbuf_mode_state : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PATBUF MODE */
    UINT32 lceg1_rxfsm_sos_det_state : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - SOS DET STATE */
    UINT32 lceg1_rxfsm_prbs_run_state : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PRBS MODE */
    UINT32 lceg1_rxfsm_sync_state : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - SYNC STATE */
    UINT32 lceg1_rxfsm_train_state : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - TRAIN STATE */
    UINT32 lceg1_rxfsm_idle_state : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - IDLE STATE */
    UINT32 lceg1_rcvd_marker_det : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - MARKER DET */
    UINT32 lceg1_received_n_isi_pat : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - RECEIVED N ISI PATTERNS */
    UINT32 lceg1_received_n_lfsr_seeds : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - RECEIVED N LFSR SEEDS */
    UINT32 lceg1_error_seen : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* RX CHECKER - ERRORS OBSERVED */
    UINT32 lceg1_exp_bit25 : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit25 */
    UINT32 lceg1_exp_bit26 : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit26 */
    UINT32 lceg1_exp_bit27 : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit27 */
    UINT32 lceg1_exp_bit28 : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit28 */
    UINT32 lceg1_exp_bit29 : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit29 */
    UINT32 lceg1_exp_bit30 : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit30 */
    UINT32 lceg1_exp_bit31 : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit31 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_EXP_DATA_8_SB_FBLP_STRUCT;

/* DFX_LCE_G1_EXP_DATA_9_SB_FBLP_REG supported on:                              */
/*      SPRA0 (0x200012c4)                                                      */
/*      SPRB0 (0x200012c4)                                                      */
/*      SPRHBM (0x200012c4)                                                     */
/*      SPRC0 (0x200012c4)                                                      */
/*      SPRMCC (0x200012c4)                                                     */
/*      SPRUCC (0x200012c4)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_EXP_DATA_9
*/


#define DFX_LCE_G1_EXP_DATA_9_SB_FBLP_REG 0x2C0212C4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg1_expected_data : 10;

                            /* Bits[9:0], Access Type=RO/V/P, default=0x00000000*/

                            /* CR to write Expected data to LCE */
    UINT32 lceg1_rxfsm_cur_state : 3;

                            /* Bits[12:10], Access Type=RO/V/P, default=0x00000000*/

                            /* CR LCEg1 - rx fsm cur State */
    UINT32 lceg1_rxfsm_marker_state : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PATBUF RUN */
    UINT32 lceg1_rxfsm_done_state : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - DONE STATE */
    UINT32 lceg1_rxfsm_patbuf_mode_state : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PATBUF MODE */
    UINT32 lceg1_rxfsm_sos_det_state : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - SOS DET STATE */
    UINT32 lceg1_rxfsm_prbs_run_state : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PRBS MODE */
    UINT32 lceg1_rxfsm_sync_state : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - SYNC STATE */
    UINT32 lceg1_rxfsm_train_state : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - TRAIN STATE */
    UINT32 lceg1_rxfsm_idle_state : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - IDLE STATE */
    UINT32 lceg1_rcvd_marker_det : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - MARKER DET */
    UINT32 lceg1_received_n_isi_pat : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - RECEIVED N ISI PATTERNS */
    UINT32 lceg1_received_n_lfsr_seeds : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - RECEIVED N LFSR SEEDS */
    UINT32 lceg1_error_seen : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* RX CHECKER - ERRORS OBSERVED */
    UINT32 lceg1_exp_bit25 : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit25 */
    UINT32 lceg1_exp_bit26 : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit26 */
    UINT32 lceg1_exp_bit27 : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit27 */
    UINT32 lceg1_exp_bit28 : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit28 */
    UINT32 lceg1_exp_bit29 : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit29 */
    UINT32 lceg1_exp_bit30 : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit30 */
    UINT32 lceg1_exp_bit31 : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit31 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_EXP_DATA_9_SB_FBLP_STRUCT;

/* DFX_LCE_G1_EXP_DATA_10_SB_FBLP_REG supported on:                             */
/*      SPRA0 (0x200012c8)                                                      */
/*      SPRB0 (0x200012c8)                                                      */
/*      SPRHBM (0x200012c8)                                                     */
/*      SPRC0 (0x200012c8)                                                      */
/*      SPRMCC (0x200012c8)                                                     */
/*      SPRUCC (0x200012c8)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_EXP_DATA_10
*/


#define DFX_LCE_G1_EXP_DATA_10_SB_FBLP_REG 0x2C0212C8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg1_expected_data : 10;

                            /* Bits[9:0], Access Type=RO/V/P, default=0x00000000*/

                            /* CR to write Expected data to LCE */
    UINT32 lceg1_rxfsm_cur_state : 3;

                            /* Bits[12:10], Access Type=RO/V/P, default=0x00000000*/

                            /* CR LCEg1 - rx fsm cur State */
    UINT32 lceg1_rxfsm_marker_state : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PATBUF RUN */
    UINT32 lceg1_rxfsm_done_state : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - DONE STATE */
    UINT32 lceg1_rxfsm_patbuf_mode_state : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PATBUF MODE */
    UINT32 lceg1_rxfsm_sos_det_state : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - SOS DET STATE */
    UINT32 lceg1_rxfsm_prbs_run_state : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PRBS MODE */
    UINT32 lceg1_rxfsm_sync_state : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - SYNC STATE */
    UINT32 lceg1_rxfsm_train_state : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - TRAIN STATE */
    UINT32 lceg1_rxfsm_idle_state : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - IDLE STATE */
    UINT32 lceg1_rcvd_marker_det : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - MARKER DET */
    UINT32 lceg1_received_n_isi_pat : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - RECEIVED N ISI PATTERNS */
    UINT32 lceg1_received_n_lfsr_seeds : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - RECEIVED N LFSR SEEDS */
    UINT32 lceg1_error_seen : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* RX CHECKER - ERRORS OBSERVED */
    UINT32 lceg1_exp_bit25 : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit25 */
    UINT32 lceg1_exp_bit26 : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit26 */
    UINT32 lceg1_exp_bit27 : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit27 */
    UINT32 lceg1_exp_bit28 : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit28 */
    UINT32 lceg1_exp_bit29 : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit29 */
    UINT32 lceg1_exp_bit30 : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit30 */
    UINT32 lceg1_exp_bit31 : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit31 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_EXP_DATA_10_SB_FBLP_STRUCT;

/* DFX_LCE_G1_EXP_DATA_11_SB_FBLP_REG supported on:                             */
/*      SPRA0 (0x200012cc)                                                      */
/*      SPRB0 (0x200012cc)                                                      */
/*      SPRHBM (0x200012cc)                                                     */
/*      SPRC0 (0x200012cc)                                                      */
/*      SPRMCC (0x200012cc)                                                     */
/*      SPRUCC (0x200012cc)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_EXP_DATA_11
*/


#define DFX_LCE_G1_EXP_DATA_11_SB_FBLP_REG 0x2C0212CC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg1_expected_data : 10;

                            /* Bits[9:0], Access Type=RO/V/P, default=0x00000000*/

                            /* CR to write Expected data to LCE */
    UINT32 lceg1_rxfsm_cur_state : 3;

                            /* Bits[12:10], Access Type=RO/V/P, default=0x00000000*/

                            /* CR LCEg1 - rx fsm cur State */
    UINT32 lceg1_rxfsm_marker_state : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PATBUF RUN */
    UINT32 lceg1_rxfsm_done_state : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - DONE STATE */
    UINT32 lceg1_rxfsm_patbuf_mode_state : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PATBUF MODE */
    UINT32 lceg1_rxfsm_sos_det_state : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - SOS DET STATE */
    UINT32 lceg1_rxfsm_prbs_run_state : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PRBS MODE */
    UINT32 lceg1_rxfsm_sync_state : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - SYNC STATE */
    UINT32 lceg1_rxfsm_train_state : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - TRAIN STATE */
    UINT32 lceg1_rxfsm_idle_state : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - IDLE STATE */
    UINT32 lceg1_rcvd_marker_det : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - MARKER DET */
    UINT32 lceg1_received_n_isi_pat : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - RECEIVED N ISI PATTERNS */
    UINT32 lceg1_received_n_lfsr_seeds : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - RECEIVED N LFSR SEEDS */
    UINT32 lceg1_error_seen : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* RX CHECKER - ERRORS OBSERVED */
    UINT32 lceg1_exp_bit25 : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit25 */
    UINT32 lceg1_exp_bit26 : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit26 */
    UINT32 lceg1_exp_bit27 : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit27 */
    UINT32 lceg1_exp_bit28 : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit28 */
    UINT32 lceg1_exp_bit29 : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit29 */
    UINT32 lceg1_exp_bit30 : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit30 */
    UINT32 lceg1_exp_bit31 : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit31 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_EXP_DATA_11_SB_FBLP_STRUCT;

/* DFX_LCE_G1_EXP_DATA_12_SB_FBLP_REG supported on:                             */
/*      SPRA0 (0x200012d0)                                                      */
/*      SPRB0 (0x200012d0)                                                      */
/*      SPRHBM (0x200012d0)                                                     */
/*      SPRC0 (0x200012d0)                                                      */
/*      SPRMCC (0x200012d0)                                                     */
/*      SPRUCC (0x200012d0)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_EXP_DATA_12
*/


#define DFX_LCE_G1_EXP_DATA_12_SB_FBLP_REG 0x2C0212D0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg1_expected_data : 10;

                            /* Bits[9:0], Access Type=RO/V/P, default=0x00000000*/

                            /* CR to write Expected data to LCE */
    UINT32 lceg1_rxfsm_cur_state : 3;

                            /* Bits[12:10], Access Type=RO/V/P, default=0x00000000*/

                            /* CR LCEg1 - rx fsm cur State */
    UINT32 lceg1_rxfsm_marker_state : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PATBUF RUN */
    UINT32 lceg1_rxfsm_done_state : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - DONE STATE */
    UINT32 lceg1_rxfsm_patbuf_mode_state : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PATBUF MODE */
    UINT32 lceg1_rxfsm_sos_det_state : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - SOS DET STATE */
    UINT32 lceg1_rxfsm_prbs_run_state : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PRBS MODE */
    UINT32 lceg1_rxfsm_sync_state : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - SYNC STATE */
    UINT32 lceg1_rxfsm_train_state : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - TRAIN STATE */
    UINT32 lceg1_rxfsm_idle_state : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - IDLE STATE */
    UINT32 lceg1_rcvd_marker_det : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - MARKER DET */
    UINT32 lceg1_received_n_isi_pat : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - RECEIVED N ISI PATTERNS */
    UINT32 lceg1_received_n_lfsr_seeds : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - RECEIVED N LFSR SEEDS */
    UINT32 lceg1_error_seen : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* RX CHECKER - ERRORS OBSERVED */
    UINT32 lceg1_exp_bit25 : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit25 */
    UINT32 lceg1_exp_bit26 : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit26 */
    UINT32 lceg1_exp_bit27 : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit27 */
    UINT32 lceg1_exp_bit28 : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit28 */
    UINT32 lceg1_exp_bit29 : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit29 */
    UINT32 lceg1_exp_bit30 : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit30 */
    UINT32 lceg1_exp_bit31 : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit31 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_EXP_DATA_12_SB_FBLP_STRUCT;

/* DFX_LCE_G1_EXP_DATA_13_SB_FBLP_REG supported on:                             */
/*      SPRA0 (0x200012d4)                                                      */
/*      SPRB0 (0x200012d4)                                                      */
/*      SPRHBM (0x200012d4)                                                     */
/*      SPRC0 (0x200012d4)                                                      */
/*      SPRMCC (0x200012d4)                                                     */
/*      SPRUCC (0x200012d4)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_EXP_DATA_13
*/


#define DFX_LCE_G1_EXP_DATA_13_SB_FBLP_REG 0x2C0212D4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg1_expected_data : 10;

                            /* Bits[9:0], Access Type=RO/V/P, default=0x00000000*/

                            /* CR to write Expected data to LCE */
    UINT32 lceg1_rxfsm_cur_state : 3;

                            /* Bits[12:10], Access Type=RO/V/P, default=0x00000000*/

                            /* CR LCEg1 - rx fsm cur State */
    UINT32 lceg1_rxfsm_marker_state : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PATBUF RUN */
    UINT32 lceg1_rxfsm_done_state : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - DONE STATE */
    UINT32 lceg1_rxfsm_patbuf_mode_state : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PATBUF MODE */
    UINT32 lceg1_rxfsm_sos_det_state : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - SOS DET STATE */
    UINT32 lceg1_rxfsm_prbs_run_state : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PRBS MODE */
    UINT32 lceg1_rxfsm_sync_state : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - SYNC STATE */
    UINT32 lceg1_rxfsm_train_state : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - TRAIN STATE */
    UINT32 lceg1_rxfsm_idle_state : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - IDLE STATE */
    UINT32 lceg1_rcvd_marker_det : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - MARKER DET */
    UINT32 lceg1_received_n_isi_pat : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - RECEIVED N ISI PATTERNS */
    UINT32 lceg1_received_n_lfsr_seeds : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - RECEIVED N LFSR SEEDS */
    UINT32 lceg1_error_seen : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* RX CHECKER - ERRORS OBSERVED */
    UINT32 lceg1_exp_bit25 : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit25 */
    UINT32 lceg1_exp_bit26 : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit26 */
    UINT32 lceg1_exp_bit27 : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit27 */
    UINT32 lceg1_exp_bit28 : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit28 */
    UINT32 lceg1_exp_bit29 : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit29 */
    UINT32 lceg1_exp_bit30 : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit30 */
    UINT32 lceg1_exp_bit31 : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit31 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_EXP_DATA_13_SB_FBLP_STRUCT;

/* DFX_LCE_G1_EXP_DATA_14_SB_FBLP_REG supported on:                             */
/*      SPRA0 (0x200012d8)                                                      */
/*      SPRB0 (0x200012d8)                                                      */
/*      SPRHBM (0x200012d8)                                                     */
/*      SPRC0 (0x200012d8)                                                      */
/*      SPRMCC (0x200012d8)                                                     */
/*      SPRUCC (0x200012d8)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_EXP_DATA_14
*/


#define DFX_LCE_G1_EXP_DATA_14_SB_FBLP_REG 0x2C0212D8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg1_expected_data : 10;

                            /* Bits[9:0], Access Type=RO/V/P, default=0x00000000*/

                            /* CR to write Expected data to LCE */
    UINT32 lceg1_rxfsm_cur_state : 3;

                            /* Bits[12:10], Access Type=RO/V/P, default=0x00000000*/

                            /* CR LCEg1 - rx fsm cur State */
    UINT32 lceg1_rxfsm_marker_state : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PATBUF RUN */
    UINT32 lceg1_rxfsm_done_state : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - DONE STATE */
    UINT32 lceg1_rxfsm_patbuf_mode_state : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PATBUF MODE */
    UINT32 lceg1_rxfsm_sos_det_state : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - SOS DET STATE */
    UINT32 lceg1_rxfsm_prbs_run_state : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PRBS MODE */
    UINT32 lceg1_rxfsm_sync_state : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - SYNC STATE */
    UINT32 lceg1_rxfsm_train_state : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - TRAIN STATE */
    UINT32 lceg1_rxfsm_idle_state : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - IDLE STATE */
    UINT32 lceg1_rcvd_marker_det : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - MARKER DET */
    UINT32 lceg1_received_n_isi_pat : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - RECEIVED N ISI PATTERNS */
    UINT32 lceg1_received_n_lfsr_seeds : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - RECEIVED N LFSR SEEDS */
    UINT32 lceg1_error_seen : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* RX CHECKER - ERRORS OBSERVED */
    UINT32 lceg1_exp_bit25 : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit25 */
    UINT32 lceg1_exp_bit26 : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit26 */
    UINT32 lceg1_exp_bit27 : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit27 */
    UINT32 lceg1_exp_bit28 : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit28 */
    UINT32 lceg1_exp_bit29 : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit29 */
    UINT32 lceg1_exp_bit30 : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit30 */
    UINT32 lceg1_exp_bit31 : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit31 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_EXP_DATA_14_SB_FBLP_STRUCT;

/* DFX_LCE_G1_EXP_DATA_15_SB_FBLP_REG supported on:                             */
/*      SPRA0 (0x200012dc)                                                      */
/*      SPRB0 (0x200012dc)                                                      */
/*      SPRHBM (0x200012dc)                                                     */
/*      SPRC0 (0x200012dc)                                                      */
/*      SPRMCC (0x200012dc)                                                     */
/*      SPRUCC (0x200012dc)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_EXP_DATA_15
*/


#define DFX_LCE_G1_EXP_DATA_15_SB_FBLP_REG 0x2C0212DC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg1_expected_data : 10;

                            /* Bits[9:0], Access Type=RO/V/P, default=0x00000000*/

                            /* CR to write Expected data to LCE */
    UINT32 lceg1_rxfsm_cur_state : 3;

                            /* Bits[12:10], Access Type=RO/V/P, default=0x00000000*/

                            /* CR LCEg1 - rx fsm cur State */
    UINT32 lceg1_rxfsm_marker_state : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PATBUF RUN */
    UINT32 lceg1_rxfsm_done_state : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - DONE STATE */
    UINT32 lceg1_rxfsm_patbuf_mode_state : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PATBUF MODE */
    UINT32 lceg1_rxfsm_sos_det_state : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - SOS DET STATE */
    UINT32 lceg1_rxfsm_prbs_run_state : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - PRBS MODE */
    UINT32 lceg1_rxfsm_sync_state : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - SYNC STATE */
    UINT32 lceg1_rxfsm_train_state : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - TRAIN STATE */
    UINT32 lceg1_rxfsm_idle_state : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /* rxfsm - IDLE STATE */
    UINT32 lceg1_rcvd_marker_det : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - MARKER DET */
    UINT32 lceg1_received_n_isi_pat : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - RECEIVED N ISI PATTERNS */
    UINT32 lceg1_received_n_lfsr_seeds : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /* RX2TX - RECEIVED N LFSR SEEDS */
    UINT32 lceg1_error_seen : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /* RX CHECKER - ERRORS OBSERVED */
    UINT32 lceg1_exp_bit25 : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit25 */
    UINT32 lceg1_exp_bit26 : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit26 */
    UINT32 lceg1_exp_bit27 : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit27 */
    UINT32 lceg1_exp_bit28 : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit28 */
    UINT32 lceg1_exp_bit29 : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit29 */
    UINT32 lceg1_exp_bit30 : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit30 */
    UINT32 lceg1_exp_bit31 : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /* exp_data bit31 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_EXP_DATA_15_SB_FBLP_STRUCT;

/* DFX_LCE_G1_STATUS_0_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x200012e0)                                                      */
/*      SPRB0 (0x200012e0)                                                      */
/*      SPRHBM (0x200012e0)                                                     */
/*      SPRC0 (0x200012e0)                                                      */
/*      SPRMCC (0x200012e0)                                                     */
/*      SPRUCC (0x200012e0)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_STATUS_0
*/


#define DFX_LCE_G1_STATUS_0_SB_FBLP_REG 0x2C0212E0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dfx_cri_lcetrainactive : 1;

                            /* Bits[0:0], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE START QUAL */
    UINT32 dfx_cri_lcetraindone : 1;

                            /* Bits[1:1], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE TX in DONE PHASE */
    UINT32 dfx_cri_patgenactive : 1;

                            /* Bits[2:2], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE TX in PATBUF/PRBS MODE */
    UINT32 dfx_cri_patchkactive : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in PATBUF/PRBS MODE */
    UINT32 dfx_cri_lcerxtraincntdone : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in DONE PHASE */
    UINT32 cri_dfx_lcerxtrain : 1;

                            /* Bits[5:5], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in TRAIN PHASE */
    UINT32 lceg1_stat_bit6 : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT6 */
    UINT32 lceg1_stat_bit7 : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT7 */
    UINT32 lceg1_stat_field0 : 4;

                            /* Bits[11:8], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_FIELD0 */
    UINT32 lceg1_err_during_seed_lck : 1;

                            /* Bits[12:12], Access Type=RO/V/P, default=0x00000000*/

                            /* Atleast 1 err obs during seed lock/sync phase */
    UINT32 lceg1_last_seed_lck_success : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* RX/TX lfsr synchronized successfully */
    UINT32 lceg1_marker_seed_lck_success : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               RX/TX LSFR synched perfectly in marker2check
                               phase
                            */
    UINT32 lceg1_stat_bit15 : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT 15 */
    UINT32 lceg1_stat_field2_16b : 16;

                            /* Bits[31:16], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_FIELD2_16b */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_STATUS_0_SB_FBLP_STRUCT;

/* DFX_LCE_G1_STATUS_1_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x200012e4)                                                      */
/*      SPRB0 (0x200012e4)                                                      */
/*      SPRHBM (0x200012e4)                                                     */
/*      SPRC0 (0x200012e4)                                                      */
/*      SPRMCC (0x200012e4)                                                     */
/*      SPRUCC (0x200012e4)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_STATUS_1
*/


#define DFX_LCE_G1_STATUS_1_SB_FBLP_REG 0x2C0212E4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dfx_cri_lcetrainactive : 1;

                            /* Bits[0:0], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE START QUAL */
    UINT32 dfx_cri_lcetraindone : 1;

                            /* Bits[1:1], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE TX in DONE PHASE */
    UINT32 dfx_cri_patgenactive : 1;

                            /* Bits[2:2], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE TX in PATBUF/PRBS MODE */
    UINT32 dfx_cri_patchkactive : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in PATBUF/PRBS MODE */
    UINT32 dfx_cri_lcerxtraincntdone : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in DONE PHASE */
    UINT32 cri_dfx_lcerxtrain : 1;

                            /* Bits[5:5], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in TRAIN PHASE */
    UINT32 lceg1_stat_bit6 : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT6 */
    UINT32 lceg1_stat_bit7 : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT7 */
    UINT32 lceg1_stat_field0 : 4;

                            /* Bits[11:8], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_FIELD0 */
    UINT32 lceg1_err_during_seed_lck : 1;

                            /* Bits[12:12], Access Type=RO/V/P, default=0x00000000*/

                            /* Atleast 1 err obs during seed lock/sync phase */
    UINT32 lceg1_last_seed_lck_success : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* RX/TX lfsr synchronized successfully */
    UINT32 lceg1_marker_seed_lck_success : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               RX/TX LSFR synched perfectly in marker2check
                               phase
                            */
    UINT32 lceg1_stat_bit15 : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT 15 */
    UINT32 lceg1_stat_field2_16b : 16;

                            /* Bits[31:16], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_FIELD2_16b */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_STATUS_1_SB_FBLP_STRUCT;

/* DFX_LCE_G1_STATUS_2_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x200012e8)                                                      */
/*      SPRB0 (0x200012e8)                                                      */
/*      SPRHBM (0x200012e8)                                                     */
/*      SPRC0 (0x200012e8)                                                      */
/*      SPRMCC (0x200012e8)                                                     */
/*      SPRUCC (0x200012e8)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_STATUS_2
*/


#define DFX_LCE_G1_STATUS_2_SB_FBLP_REG 0x2C0212E8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dfx_cri_lcetrainactive : 1;

                            /* Bits[0:0], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE START QUAL */
    UINT32 dfx_cri_lcetraindone : 1;

                            /* Bits[1:1], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE TX in DONE PHASE */
    UINT32 dfx_cri_patgenactive : 1;

                            /* Bits[2:2], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE TX in PATBUF/PRBS MODE */
    UINT32 dfx_cri_patchkactive : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in PATBUF/PRBS MODE */
    UINT32 dfx_cri_lcerxtraincntdone : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in DONE PHASE */
    UINT32 cri_dfx_lcerxtrain : 1;

                            /* Bits[5:5], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in TRAIN PHASE */
    UINT32 lceg1_stat_bit6 : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT6 */
    UINT32 lceg1_stat_bit7 : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT7 */
    UINT32 lceg1_stat_field0 : 4;

                            /* Bits[11:8], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_FIELD0 */
    UINT32 lceg1_err_during_seed_lck : 1;

                            /* Bits[12:12], Access Type=RO/V/P, default=0x00000000*/

                            /* Atleast 1 err obs during seed lock/sync phase */
    UINT32 lceg1_last_seed_lck_success : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* RX/TX lfsr synchronized successfully */
    UINT32 lceg1_marker_seed_lck_success : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               RX/TX LSFR synched perfectly in marker2check
                               phase
                            */
    UINT32 lceg1_stat_bit15 : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT 15 */
    UINT32 lceg1_stat_field2_16b : 16;

                            /* Bits[31:16], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_FIELD2_16b */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_STATUS_2_SB_FBLP_STRUCT;

/* DFX_LCE_G1_STATUS_3_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x200012ec)                                                      */
/*      SPRB0 (0x200012ec)                                                      */
/*      SPRHBM (0x200012ec)                                                     */
/*      SPRC0 (0x200012ec)                                                      */
/*      SPRMCC (0x200012ec)                                                     */
/*      SPRUCC (0x200012ec)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_STATUS_3
*/


#define DFX_LCE_G1_STATUS_3_SB_FBLP_REG 0x2C0212EC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dfx_cri_lcetrainactive : 1;

                            /* Bits[0:0], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE START QUAL */
    UINT32 dfx_cri_lcetraindone : 1;

                            /* Bits[1:1], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE TX in DONE PHASE */
    UINT32 dfx_cri_patgenactive : 1;

                            /* Bits[2:2], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE TX in PATBUF/PRBS MODE */
    UINT32 dfx_cri_patchkactive : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in PATBUF/PRBS MODE */
    UINT32 dfx_cri_lcerxtraincntdone : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in DONE PHASE */
    UINT32 cri_dfx_lcerxtrain : 1;

                            /* Bits[5:5], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in TRAIN PHASE */
    UINT32 lceg1_stat_bit6 : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT6 */
    UINT32 lceg1_stat_bit7 : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT7 */
    UINT32 lceg1_stat_field0 : 4;

                            /* Bits[11:8], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_FIELD0 */
    UINT32 lceg1_err_during_seed_lck : 1;

                            /* Bits[12:12], Access Type=RO/V/P, default=0x00000000*/

                            /* Atleast 1 err obs during seed lock/sync phase */
    UINT32 lceg1_last_seed_lck_success : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* RX/TX lfsr synchronized successfully */
    UINT32 lceg1_marker_seed_lck_success : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               RX/TX LSFR synched perfectly in marker2check
                               phase
                            */
    UINT32 lceg1_stat_bit15 : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT 15 */
    UINT32 lceg1_stat_field2_16b : 16;

                            /* Bits[31:16], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_FIELD2_16b */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_STATUS_3_SB_FBLP_STRUCT;

/* DFX_LCE_G1_STATUS_4_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x200012f0)                                                      */
/*      SPRB0 (0x200012f0)                                                      */
/*      SPRHBM (0x200012f0)                                                     */
/*      SPRC0 (0x200012f0)                                                      */
/*      SPRMCC (0x200012f0)                                                     */
/*      SPRUCC (0x200012f0)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_STATUS_4
*/


#define DFX_LCE_G1_STATUS_4_SB_FBLP_REG 0x2C0212F0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dfx_cri_lcetrainactive : 1;

                            /* Bits[0:0], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE START QUAL */
    UINT32 dfx_cri_lcetraindone : 1;

                            /* Bits[1:1], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE TX in DONE PHASE */
    UINT32 dfx_cri_patgenactive : 1;

                            /* Bits[2:2], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE TX in PATBUF/PRBS MODE */
    UINT32 dfx_cri_patchkactive : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in PATBUF/PRBS MODE */
    UINT32 dfx_cri_lcerxtraincntdone : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in DONE PHASE */
    UINT32 cri_dfx_lcerxtrain : 1;

                            /* Bits[5:5], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in TRAIN PHASE */
    UINT32 lceg1_stat_bit6 : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT6 */
    UINT32 lceg1_stat_bit7 : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT7 */
    UINT32 lceg1_stat_field0 : 4;

                            /* Bits[11:8], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_FIELD0 */
    UINT32 lceg1_err_during_seed_lck : 1;

                            /* Bits[12:12], Access Type=RO/V/P, default=0x00000000*/

                            /* Atleast 1 err obs during seed lock/sync phase */
    UINT32 lceg1_last_seed_lck_success : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* RX/TX lfsr synchronized successfully */
    UINT32 lceg1_marker_seed_lck_success : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               RX/TX LSFR synched perfectly in marker2check
                               phase
                            */
    UINT32 lceg1_stat_bit15 : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT 15 */
    UINT32 lceg1_stat_field2_16b : 16;

                            /* Bits[31:16], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_FIELD2_16b */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_STATUS_4_SB_FBLP_STRUCT;

/* DFX_LCE_G1_STATUS_5_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x200012f4)                                                      */
/*      SPRB0 (0x200012f4)                                                      */
/*      SPRHBM (0x200012f4)                                                     */
/*      SPRC0 (0x200012f4)                                                      */
/*      SPRMCC (0x200012f4)                                                     */
/*      SPRUCC (0x200012f4)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_STATUS_5
*/


#define DFX_LCE_G1_STATUS_5_SB_FBLP_REG 0x2C0212F4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dfx_cri_lcetrainactive : 1;

                            /* Bits[0:0], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE START QUAL */
    UINT32 dfx_cri_lcetraindone : 1;

                            /* Bits[1:1], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE TX in DONE PHASE */
    UINT32 dfx_cri_patgenactive : 1;

                            /* Bits[2:2], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE TX in PATBUF/PRBS MODE */
    UINT32 dfx_cri_patchkactive : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in PATBUF/PRBS MODE */
    UINT32 dfx_cri_lcerxtraincntdone : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in DONE PHASE */
    UINT32 cri_dfx_lcerxtrain : 1;

                            /* Bits[5:5], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in TRAIN PHASE */
    UINT32 lceg1_stat_bit6 : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT6 */
    UINT32 lceg1_stat_bit7 : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT7 */
    UINT32 lceg1_stat_field0 : 4;

                            /* Bits[11:8], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_FIELD0 */
    UINT32 lceg1_err_during_seed_lck : 1;

                            /* Bits[12:12], Access Type=RO/V/P, default=0x00000000*/

                            /* Atleast 1 err obs during seed lock/sync phase */
    UINT32 lceg1_last_seed_lck_success : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* RX/TX lfsr synchronized successfully */
    UINT32 lceg1_marker_seed_lck_success : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               RX/TX LSFR synched perfectly in marker2check
                               phase
                            */
    UINT32 lceg1_stat_bit15 : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT 15 */
    UINT32 lceg1_stat_field2_16b : 16;

                            /* Bits[31:16], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_FIELD2_16b */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_STATUS_5_SB_FBLP_STRUCT;

/* DFX_LCE_G1_STATUS_6_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x200012f8)                                                      */
/*      SPRB0 (0x200012f8)                                                      */
/*      SPRHBM (0x200012f8)                                                     */
/*      SPRC0 (0x200012f8)                                                      */
/*      SPRMCC (0x200012f8)                                                     */
/*      SPRUCC (0x200012f8)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_STATUS_6
*/


#define DFX_LCE_G1_STATUS_6_SB_FBLP_REG 0x2C0212F8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dfx_cri_lcetrainactive : 1;

                            /* Bits[0:0], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE START QUAL */
    UINT32 dfx_cri_lcetraindone : 1;

                            /* Bits[1:1], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE TX in DONE PHASE */
    UINT32 dfx_cri_patgenactive : 1;

                            /* Bits[2:2], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE TX in PATBUF/PRBS MODE */
    UINT32 dfx_cri_patchkactive : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in PATBUF/PRBS MODE */
    UINT32 dfx_cri_lcerxtraincntdone : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in DONE PHASE */
    UINT32 cri_dfx_lcerxtrain : 1;

                            /* Bits[5:5], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in TRAIN PHASE */
    UINT32 lceg1_stat_bit6 : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT6 */
    UINT32 lceg1_stat_bit7 : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT7 */
    UINT32 lceg1_stat_field0 : 4;

                            /* Bits[11:8], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_FIELD0 */
    UINT32 lceg1_err_during_seed_lck : 1;

                            /* Bits[12:12], Access Type=RO/V/P, default=0x00000000*/

                            /* Atleast 1 err obs during seed lock/sync phase */
    UINT32 lceg1_last_seed_lck_success : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* RX/TX lfsr synchronized successfully */
    UINT32 lceg1_marker_seed_lck_success : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               RX/TX LSFR synched perfectly in marker2check
                               phase
                            */
    UINT32 lceg1_stat_bit15 : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT 15 */
    UINT32 lceg1_stat_field2_16b : 16;

                            /* Bits[31:16], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_FIELD2_16b */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_STATUS_6_SB_FBLP_STRUCT;

/* DFX_LCE_G1_STATUS_7_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x200012fc)                                                      */
/*      SPRB0 (0x200012fc)                                                      */
/*      SPRHBM (0x200012fc)                                                     */
/*      SPRC0 (0x200012fc)                                                      */
/*      SPRMCC (0x200012fc)                                                     */
/*      SPRUCC (0x200012fc)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_STATUS_7
*/


#define DFX_LCE_G1_STATUS_7_SB_FBLP_REG 0x2C0212FC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dfx_cri_lcetrainactive : 1;

                            /* Bits[0:0], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE START QUAL */
    UINT32 dfx_cri_lcetraindone : 1;

                            /* Bits[1:1], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE TX in DONE PHASE */
    UINT32 dfx_cri_patgenactive : 1;

                            /* Bits[2:2], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE TX in PATBUF/PRBS MODE */
    UINT32 dfx_cri_patchkactive : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in PATBUF/PRBS MODE */
    UINT32 dfx_cri_lcerxtraincntdone : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in DONE PHASE */
    UINT32 cri_dfx_lcerxtrain : 1;

                            /* Bits[5:5], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in TRAIN PHASE */
    UINT32 lceg1_stat_bit6 : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT6 */
    UINT32 lceg1_stat_bit7 : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT7 */
    UINT32 lceg1_stat_field0 : 4;

                            /* Bits[11:8], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_FIELD0 */
    UINT32 lceg1_err_during_seed_lck : 1;

                            /* Bits[12:12], Access Type=RO/V/P, default=0x00000000*/

                            /* Atleast 1 err obs during seed lock/sync phase */
    UINT32 lceg1_last_seed_lck_success : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* RX/TX lfsr synchronized successfully */
    UINT32 lceg1_marker_seed_lck_success : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               RX/TX LSFR synched perfectly in marker2check
                               phase
                            */
    UINT32 lceg1_stat_bit15 : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT 15 */
    UINT32 lceg1_stat_field2_16b : 16;

                            /* Bits[31:16], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_FIELD2_16b */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_STATUS_7_SB_FBLP_STRUCT;

/* DFX_LCE_G1_STATUS_8_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x20001300)                                                      */
/*      SPRB0 (0x20001300)                                                      */
/*      SPRHBM (0x20001300)                                                     */
/*      SPRC0 (0x20001300)                                                      */
/*      SPRMCC (0x20001300)                                                     */
/*      SPRUCC (0x20001300)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_STATUS_8
*/


#define DFX_LCE_G1_STATUS_8_SB_FBLP_REG 0x2C021300

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dfx_cri_lcetrainactive : 1;

                            /* Bits[0:0], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE START QUAL */
    UINT32 dfx_cri_lcetraindone : 1;

                            /* Bits[1:1], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE TX in DONE PHASE */
    UINT32 dfx_cri_patgenactive : 1;

                            /* Bits[2:2], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE TX in PATBUF/PRBS MODE */
    UINT32 dfx_cri_patchkactive : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in PATBUF/PRBS MODE */
    UINT32 dfx_cri_lcerxtraincntdone : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in DONE PHASE */
    UINT32 cri_dfx_lcerxtrain : 1;

                            /* Bits[5:5], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in TRAIN PHASE */
    UINT32 lceg1_stat_bit6 : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT6 */
    UINT32 lceg1_stat_bit7 : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT7 */
    UINT32 lceg1_stat_field0 : 4;

                            /* Bits[11:8], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_FIELD0 */
    UINT32 lceg1_err_during_seed_lck : 1;

                            /* Bits[12:12], Access Type=RO/V/P, default=0x00000000*/

                            /* Atleast 1 err obs during seed lock/sync phase */
    UINT32 lceg1_last_seed_lck_success : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* RX/TX lfsr synchronized successfully */
    UINT32 lceg1_marker_seed_lck_success : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               RX/TX LSFR synched perfectly in marker2check
                               phase
                            */
    UINT32 lceg1_stat_bit15 : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT 15 */
    UINT32 lceg1_stat_field2_16b : 16;

                            /* Bits[31:16], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_FIELD2_16b */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_STATUS_8_SB_FBLP_STRUCT;

/* DFX_LCE_G1_STATUS_9_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x20001304)                                                      */
/*      SPRB0 (0x20001304)                                                      */
/*      SPRHBM (0x20001304)                                                     */
/*      SPRC0 (0x20001304)                                                      */
/*      SPRMCC (0x20001304)                                                     */
/*      SPRUCC (0x20001304)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_STATUS_9
*/


#define DFX_LCE_G1_STATUS_9_SB_FBLP_REG 0x2C021304

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dfx_cri_lcetrainactive : 1;

                            /* Bits[0:0], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE START QUAL */
    UINT32 dfx_cri_lcetraindone : 1;

                            /* Bits[1:1], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE TX in DONE PHASE */
    UINT32 dfx_cri_patgenactive : 1;

                            /* Bits[2:2], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE TX in PATBUF/PRBS MODE */
    UINT32 dfx_cri_patchkactive : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in PATBUF/PRBS MODE */
    UINT32 dfx_cri_lcerxtraincntdone : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in DONE PHASE */
    UINT32 cri_dfx_lcerxtrain : 1;

                            /* Bits[5:5], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in TRAIN PHASE */
    UINT32 lceg1_stat_bit6 : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT6 */
    UINT32 lceg1_stat_bit7 : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT7 */
    UINT32 lceg1_stat_field0 : 4;

                            /* Bits[11:8], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_FIELD0 */
    UINT32 lceg1_err_during_seed_lck : 1;

                            /* Bits[12:12], Access Type=RO/V/P, default=0x00000000*/

                            /* Atleast 1 err obs during seed lock/sync phase */
    UINT32 lceg1_last_seed_lck_success : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* RX/TX lfsr synchronized successfully */
    UINT32 lceg1_marker_seed_lck_success : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               RX/TX LSFR synched perfectly in marker2check
                               phase
                            */
    UINT32 lceg1_stat_bit15 : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT 15 */
    UINT32 lceg1_stat_field2_16b : 16;

                            /* Bits[31:16], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_FIELD2_16b */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_STATUS_9_SB_FBLP_STRUCT;

/* DFX_LCE_G1_STATUS_10_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x20001308)                                                      */
/*      SPRB0 (0x20001308)                                                      */
/*      SPRHBM (0x20001308)                                                     */
/*      SPRC0 (0x20001308)                                                      */
/*      SPRMCC (0x20001308)                                                     */
/*      SPRUCC (0x20001308)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_STATUS_10
*/


#define DFX_LCE_G1_STATUS_10_SB_FBLP_REG 0x2C021308

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dfx_cri_lcetrainactive : 1;

                            /* Bits[0:0], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE START QUAL */
    UINT32 dfx_cri_lcetraindone : 1;

                            /* Bits[1:1], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE TX in DONE PHASE */
    UINT32 dfx_cri_patgenactive : 1;

                            /* Bits[2:2], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE TX in PATBUF/PRBS MODE */
    UINT32 dfx_cri_patchkactive : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in PATBUF/PRBS MODE */
    UINT32 dfx_cri_lcerxtraincntdone : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in DONE PHASE */
    UINT32 cri_dfx_lcerxtrain : 1;

                            /* Bits[5:5], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in TRAIN PHASE */
    UINT32 lceg1_stat_bit6 : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT6 */
    UINT32 lceg1_stat_bit7 : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT7 */
    UINT32 lceg1_stat_field0 : 4;

                            /* Bits[11:8], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_FIELD0 */
    UINT32 lceg1_err_during_seed_lck : 1;

                            /* Bits[12:12], Access Type=RO/V/P, default=0x00000000*/

                            /* Atleast 1 err obs during seed lock/sync phase */
    UINT32 lceg1_last_seed_lck_success : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* RX/TX lfsr synchronized successfully */
    UINT32 lceg1_marker_seed_lck_success : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               RX/TX LSFR synched perfectly in marker2check
                               phase
                            */
    UINT32 lceg1_stat_bit15 : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT 15 */
    UINT32 lceg1_stat_field2_16b : 16;

                            /* Bits[31:16], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_FIELD2_16b */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_STATUS_10_SB_FBLP_STRUCT;

/* DFX_LCE_G1_STATUS_11_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x2000130c)                                                      */
/*      SPRB0 (0x2000130c)                                                      */
/*      SPRHBM (0x2000130c)                                                     */
/*      SPRC0 (0x2000130c)                                                      */
/*      SPRMCC (0x2000130c)                                                     */
/*      SPRUCC (0x2000130c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_STATUS_11
*/


#define DFX_LCE_G1_STATUS_11_SB_FBLP_REG 0x2C02130C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dfx_cri_lcetrainactive : 1;

                            /* Bits[0:0], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE START QUAL */
    UINT32 dfx_cri_lcetraindone : 1;

                            /* Bits[1:1], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE TX in DONE PHASE */
    UINT32 dfx_cri_patgenactive : 1;

                            /* Bits[2:2], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE TX in PATBUF/PRBS MODE */
    UINT32 dfx_cri_patchkactive : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in PATBUF/PRBS MODE */
    UINT32 dfx_cri_lcerxtraincntdone : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in DONE PHASE */
    UINT32 cri_dfx_lcerxtrain : 1;

                            /* Bits[5:5], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in TRAIN PHASE */
    UINT32 lceg1_stat_bit6 : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT6 */
    UINT32 lceg1_stat_bit7 : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT7 */
    UINT32 lceg1_stat_field0 : 4;

                            /* Bits[11:8], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_FIELD0 */
    UINT32 lceg1_err_during_seed_lck : 1;

                            /* Bits[12:12], Access Type=RO/V/P, default=0x00000000*/

                            /* Atleast 1 err obs during seed lock/sync phase */
    UINT32 lceg1_last_seed_lck_success : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* RX/TX lfsr synchronized successfully */
    UINT32 lceg1_marker_seed_lck_success : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               RX/TX LSFR synched perfectly in marker2check
                               phase
                            */
    UINT32 lceg1_stat_bit15 : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT 15 */
    UINT32 lceg1_stat_field2_16b : 16;

                            /* Bits[31:16], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_FIELD2_16b */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_STATUS_11_SB_FBLP_STRUCT;

/* DFX_LCE_G1_STATUS_12_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x20001310)                                                      */
/*      SPRB0 (0x20001310)                                                      */
/*      SPRHBM (0x20001310)                                                     */
/*      SPRC0 (0x20001310)                                                      */
/*      SPRMCC (0x20001310)                                                     */
/*      SPRUCC (0x20001310)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_STATUS_12
*/


#define DFX_LCE_G1_STATUS_12_SB_FBLP_REG 0x2C021310

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dfx_cri_lcetrainactive : 1;

                            /* Bits[0:0], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE START QUAL */
    UINT32 dfx_cri_lcetraindone : 1;

                            /* Bits[1:1], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE TX in DONE PHASE */
    UINT32 dfx_cri_patgenactive : 1;

                            /* Bits[2:2], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE TX in PATBUF/PRBS MODE */
    UINT32 dfx_cri_patchkactive : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in PATBUF/PRBS MODE */
    UINT32 dfx_cri_lcerxtraincntdone : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in DONE PHASE */
    UINT32 cri_dfx_lcerxtrain : 1;

                            /* Bits[5:5], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in TRAIN PHASE */
    UINT32 lceg1_stat_bit6 : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT6 */
    UINT32 lceg1_stat_bit7 : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT7 */
    UINT32 lceg1_stat_field0 : 4;

                            /* Bits[11:8], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_FIELD0 */
    UINT32 lceg1_err_during_seed_lck : 1;

                            /* Bits[12:12], Access Type=RO/V/P, default=0x00000000*/

                            /* Atleast 1 err obs during seed lock/sync phase */
    UINT32 lceg1_last_seed_lck_success : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* RX/TX lfsr synchronized successfully */
    UINT32 lceg1_marker_seed_lck_success : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               RX/TX LSFR synched perfectly in marker2check
                               phase
                            */
    UINT32 lceg1_stat_bit15 : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT 15 */
    UINT32 lceg1_stat_field2_16b : 16;

                            /* Bits[31:16], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_FIELD2_16b */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_STATUS_12_SB_FBLP_STRUCT;

/* DFX_LCE_G1_STATUS_13_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x20001314)                                                      */
/*      SPRB0 (0x20001314)                                                      */
/*      SPRHBM (0x20001314)                                                     */
/*      SPRC0 (0x20001314)                                                      */
/*      SPRMCC (0x20001314)                                                     */
/*      SPRUCC (0x20001314)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_STATUS_13
*/


#define DFX_LCE_G1_STATUS_13_SB_FBLP_REG 0x2C021314

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dfx_cri_lcetrainactive : 1;

                            /* Bits[0:0], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE START QUAL */
    UINT32 dfx_cri_lcetraindone : 1;

                            /* Bits[1:1], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE TX in DONE PHASE */
    UINT32 dfx_cri_patgenactive : 1;

                            /* Bits[2:2], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE TX in PATBUF/PRBS MODE */
    UINT32 dfx_cri_patchkactive : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in PATBUF/PRBS MODE */
    UINT32 dfx_cri_lcerxtraincntdone : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in DONE PHASE */
    UINT32 cri_dfx_lcerxtrain : 1;

                            /* Bits[5:5], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in TRAIN PHASE */
    UINT32 lceg1_stat_bit6 : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT6 */
    UINT32 lceg1_stat_bit7 : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT7 */
    UINT32 lceg1_stat_field0 : 4;

                            /* Bits[11:8], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_FIELD0 */
    UINT32 lceg1_err_during_seed_lck : 1;

                            /* Bits[12:12], Access Type=RO/V/P, default=0x00000000*/

                            /* Atleast 1 err obs during seed lock/sync phase */
    UINT32 lceg1_last_seed_lck_success : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* RX/TX lfsr synchronized successfully */
    UINT32 lceg1_marker_seed_lck_success : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               RX/TX LSFR synched perfectly in marker2check
                               phase
                            */
    UINT32 lceg1_stat_bit15 : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT 15 */
    UINT32 lceg1_stat_field2_16b : 16;

                            /* Bits[31:16], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_FIELD2_16b */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_STATUS_13_SB_FBLP_STRUCT;

/* DFX_LCE_G1_STATUS_14_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x20001318)                                                      */
/*      SPRB0 (0x20001318)                                                      */
/*      SPRHBM (0x20001318)                                                     */
/*      SPRC0 (0x20001318)                                                      */
/*      SPRMCC (0x20001318)                                                     */
/*      SPRUCC (0x20001318)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_STATUS_14
*/


#define DFX_LCE_G1_STATUS_14_SB_FBLP_REG 0x2C021318

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dfx_cri_lcetrainactive : 1;

                            /* Bits[0:0], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE START QUAL */
    UINT32 dfx_cri_lcetraindone : 1;

                            /* Bits[1:1], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE TX in DONE PHASE */
    UINT32 dfx_cri_patgenactive : 1;

                            /* Bits[2:2], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE TX in PATBUF/PRBS MODE */
    UINT32 dfx_cri_patchkactive : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in PATBUF/PRBS MODE */
    UINT32 dfx_cri_lcerxtraincntdone : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in DONE PHASE */
    UINT32 cri_dfx_lcerxtrain : 1;

                            /* Bits[5:5], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in TRAIN PHASE */
    UINT32 lceg1_stat_bit6 : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT6 */
    UINT32 lceg1_stat_bit7 : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT7 */
    UINT32 lceg1_stat_field0 : 4;

                            /* Bits[11:8], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_FIELD0 */
    UINT32 lceg1_err_during_seed_lck : 1;

                            /* Bits[12:12], Access Type=RO/V/P, default=0x00000000*/

                            /* Atleast 1 err obs during seed lock/sync phase */
    UINT32 lceg1_last_seed_lck_success : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* RX/TX lfsr synchronized successfully */
    UINT32 lceg1_marker_seed_lck_success : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               RX/TX LSFR synched perfectly in marker2check
                               phase
                            */
    UINT32 lceg1_stat_bit15 : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT 15 */
    UINT32 lceg1_stat_field2_16b : 16;

                            /* Bits[31:16], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_FIELD2_16b */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_STATUS_14_SB_FBLP_STRUCT;

/* DFX_LCE_G1_STATUS_15_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x2000131c)                                                      */
/*      SPRB0 (0x2000131c)                                                      */
/*      SPRHBM (0x2000131c)                                                     */
/*      SPRC0 (0x2000131c)                                                      */
/*      SPRMCC (0x2000131c)                                                     */
/*      SPRUCC (0x2000131c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_STATUS_15
*/


#define DFX_LCE_G1_STATUS_15_SB_FBLP_REG 0x2C02131C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dfx_cri_lcetrainactive : 1;

                            /* Bits[0:0], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE START QUAL */
    UINT32 dfx_cri_lcetraindone : 1;

                            /* Bits[1:1], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE TX in DONE PHASE */
    UINT32 dfx_cri_patgenactive : 1;

                            /* Bits[2:2], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE TX in PATBUF/PRBS MODE */
    UINT32 dfx_cri_patchkactive : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in PATBUF/PRBS MODE */
    UINT32 dfx_cri_lcerxtraincntdone : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in DONE PHASE */
    UINT32 cri_dfx_lcerxtrain : 1;

                            /* Bits[5:5], Access Type=RO/V/P, default=0x00000000*/

                            /* LCE RX in TRAIN PHASE */
    UINT32 lceg1_stat_bit6 : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT6 */
    UINT32 lceg1_stat_bit7 : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT7 */
    UINT32 lceg1_stat_field0 : 4;

                            /* Bits[11:8], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_FIELD0 */
    UINT32 lceg1_err_during_seed_lck : 1;

                            /* Bits[12:12], Access Type=RO/V/P, default=0x00000000*/

                            /* Atleast 1 err obs during seed lock/sync phase */
    UINT32 lceg1_last_seed_lck_success : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* RX/TX lfsr synchronized successfully */
    UINT32 lceg1_marker_seed_lck_success : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               RX/TX LSFR synched perfectly in marker2check
                               phase
                            */
    UINT32 lceg1_stat_bit15 : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_BIT 15 */
    UINT32 lceg1_stat_field2_16b : 16;

                            /* Bits[31:16], Access Type=RO/V/P, default=0x00000000*/

                            /* LCEG1_STAT_FIELD2_16b */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_STATUS_15_SB_FBLP_STRUCT;

/* PCS_CSR0_SB_FBLP_REG supported on:                                           */
/*      SPRA0 (0x20001358)                                                      */
/*      SPRB0 (0x20001358)                                                      */
/*      SPRHBM (0x20001358)                                                     */
/*      SPRC0 (0x20001358)                                                      */
/*      SPRMCC (0x20001358)                                                     */
/*      SPRUCC (0x20001358)                                                     */
/* Register default value on SPRA0: 0x34000F06                                  */
/* Register default value on SPRB0: 0x34000F06                                  */
/* Register default value on SPRHBM: 0x34000F06                                 */
/* Register default value on SPRC0: 0x34000F06                                  */
/* Register default value on SPRMCC: 0x34000F06                                 */
/* Register default value on SPRUCC: 0x34000F06                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* PCS_CSR0
*/


#define PCS_CSR0_SB_FBLP_REG 0x2C021358

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 csr_bdx_eios_l1_fix : 1;

                            /* Bits[0:0], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_clear_data_to_eb_in_sq : 1;

                            /* Bits[1:1], Access Type=RW/P, default=0x00000001*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_debugbus_xor_en : 1;

                            /* Bits[2:2], Access Type=RW/P, default=0x00000001*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_dis_eb_wrptr_hold : 1;

                            /* Bits[3:3], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_disable_compensation : 1;

                            /* Bits[4:4], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_disable_rx_data : 1;

                            /* Bits[5:5], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_ebdis_lfclk_en_fix : 1;

                            /* Bits[6:6], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_ebfullthold : 4;

                            /* Bits[10:7], Access Type=RW/P, default=0x0000000E*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_flush_eb_when_rxclkoff : 1;

                            /* Bits[11:11], Access Type=RW/P, default=0x00000001*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_g12_alignmode : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_g12_eios_disable : 1;

                            /* Bits[13:13], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_g12_forcebankhit : 1;

                            /* Bits[14:14], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_g12_kalign_lock_cnt : 4;

                            /* Bits[18:15], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_g12_kalign_unlock_cnt : 3;

                            /* Bits[21:19], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_g12_kalignmode : 1;

                            /* Bits[22:22], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_g12_kalignrelock : 1;

                            /* Bits[23:23], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_g12_xsyncrx_cri_reset_kalignlck : 1;

                            /* Bits[24:24], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_hvm_mode_eb_db : 1;

                            /* Bits[25:25], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_lb_ebdiscardskp_threshold : 4;

                            /* Bits[29:26], Access Type=RW/P, default=0x0000000D*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_send_10bdata_on_err : 1;

                            /* Bits[30:30], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_use_only_skp_for_sos : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */

  } Bits;
  UINT32 Data;

} PCS_CSR0_SB_FBLP_STRUCT;

/* PCS_CSR1_SB_FBLP_REG supported on:                                           */
/*      SPRA0 (0x2000135c)                                                      */
/*      SPRB0 (0x2000135c)                                                      */
/*      SPRHBM (0x2000135c)                                                     */
/*      SPRC0 (0x2000135c)                                                      */
/*      SPRMCC (0x2000135c)                                                     */
/*      SPRUCC (0x2000135c)                                                     */
/* Register default value on SPRA0: 0x10000035                                  */
/* Register default value on SPRB0: 0x10000035                                  */
/* Register default value on SPRHBM: 0x10000035                                 */
/* Register default value on SPRC0: 0x10000035                                  */
/* Register default value on SPRMCC: 0x10000035                                 */
/* Register default value on SPRUCC: 0x10000035                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* PCS_CSR1
*/


#define PCS_CSR1_SB_FBLP_REG 0x2C02135C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 csr_lb_ebinit_seperation : 4;

                            /* Bits[3:0], Access Type=RW/P, default=0x00000005*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_psmi_ebinit_seperation : 4;

                            /* Bits[7:4], Access Type=RW/P, default=0x00000003*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_err_bit_pos : 10;

                            /* Bits[17:8], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_err_inject : 1;

                            /* Bits[18:18], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_err_lane : 1;

                            /* Bits[19:19], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_err_on_end : 1;

                            /* Bits[20:20], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_err_on_other : 1;

                            /* Bits[21:21], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_err_on_sdp : 1;

                            /* Bits[22:22], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_err_on_stp : 1;

                            /* Bits[23:23], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_lt_blkenc_bypass_g3 : 1;

                            /* Bits[24:24], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_sel_comp_pattern2_cmp : 1;

                            /* Bits[25:25], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_disable_blkcheck_fail : 1;

                            /* Bits[26:26], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_en_g3dvalid_beforeblk : 1;

                            /* Bits[27:27], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_enable_eiestrackfsm : 1;

                            /* Bits[28:28], Access Type=RW/P, default=0x00000001*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_gi_gp_reset_kalignlck : 1;

                            /* Bits[29:29], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_lt_blkenc_bypass : 1;

                            /* Bits[30:30], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_lt_enable_dyn_eies_check : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */

  } Bits;
  UINT32 Data;

} PCS_CSR1_SB_FBLP_STRUCT;

/* PCS_CSR2_SB_FBLP_REG supported on:                                           */
/*      SPRA0 (0x20001360)                                                      */
/*      SPRB0 (0x20001360)                                                      */
/*      SPRHBM (0x20001360)                                                     */
/*      SPRC0 (0x20001360)                                                      */
/*      SPRMCC (0x20001360)                                                     */
/*      SPRUCC (0x20001360)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* PCS_CSR2
*/


#define PCS_CSR2_SB_FBLP_REG 0x2C021360

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 csr_dl_active_ovr : 1;

                            /* Bits[0:0], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_dl_active_val : 1;

                            /* Bits[1:1], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_quiesce_ovr : 1;

                            /* Bits[2:2], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 csr_quiesce_val : 1;

                            /* Bits[3:3], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 rsvd : 28;

                            /* Bits[31:4], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} PCS_CSR2_SB_FBLP_STRUCT;

/* PCS_SPARE_CSR_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001364)                                                      */
/*      SPRB0 (0x20001364)                                                      */
/*      SPRHBM (0x20001364)                                                     */
/*      SPRC0 (0x20001364)                                                      */
/*      SPRMCC (0x20001364)                                                     */
/*      SPRUCC (0x20001364)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* PCS_SPARE_CSR
*/


#define PCS_SPARE_CSR_SB_FBLP_REG 0x2C021364

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 pcs_spare_csr_fld : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */

  } Bits;
  UINT32 Data;

} PCS_SPARE_CSR_SB_FBLP_STRUCT;

/* XPEINJ0_SB_FBLP_REG supported on:                                            */
/*      SPRA0 (0x10001370)                                                      */
/*      SPRB0 (0x10001370)                                                      */
/*      SPRHBM (0x10001370)                                                     */
/*      SPRC0 (0x10001370)                                                      */
/*      SPRMCC (0x10001370)                                                     */
/*      SPRUCC (0x10001370)                                                     */
/* Register default value on SPRA0: 0x000000CA                                  */
/* Register default value on SPRB0: 0x000000CA                                  */
/* Register default value on SPRHBM: 0x000000CA                                 */
/* Register default value on SPRC0: 0x000000CA                                  */
/* Register default value on SPRMCC: 0x000000CA                                 */
/* Register default value on SPRUCC: 0x000000CA                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* XPEINJ0
*/


#define XPEINJ0_SB_FBLP_REG 0x2C011370

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 start_sel : 4;

                            /* Bits[3:0], Access Type=RW/P, default=0x0000000A*/

                            /*
                               Response Function Start Select. Selects the
                               source which causes the activation of the
                               response in the cluster 0000: Global Event 0
                               (GE[0]) 0001: Global Event 1 (GE[1]) 0010:
                               Reserved 0011: Reserved 0100: Reserved 0101:
                               Reserved 0110: IP Cluster Trigger Out 0 (CTO0)
                               LOCAL TRIGGER 0111: IP Cluster Trigger Out 1
                               (CTO1) LOCAL TRIGGER 1000: Reserved 1001:
                               Reserved 1010: Response never occurs 1011:
                               Response occurs immediately 1100: Reserved 1101:
                               Reserved 1110: IP Cluster Trigger Out 2 (CTO2)
                               LOCAL TRIGGER 1111: IP Cluster Trigger Out 3
                               (CTO3) LOCAL TRIGGER
                            */
    UINT16 stop_sel : 4;

                            /* Bits[7:4], Access Type=RW/P, default=0x0000000C*/

                            /*
                               Response Function Stop Select. Selects the
                               source which causes the deactivation of the
                               response in the cluster. 0000: Global Event 0
                               (GE[0]) 0001: Global Event 1 (GE[1]) 0010:
                               Reserved 0011: Reserved 0100: Reserved 0101:
                               Reserved 0110: IP Cluster Trigger Out 0 (CTO0)
                               LOCAL TRIGGER 0111: IP Cluster Trigger Out 1
                               (CTO1) LOCAL TRIGGER 1000: Reserved 1001:
                               Reserved 1010: Deactivate one clock after
                               activation 1011: Response is never deactivated
                               1100: Deactivate the response when the
                               activating signal becomes false 1101: Reserved
                               1110: IP Cluster Trigger Out 2 (CTO2) LOCAL
                               TRIGGER 1111: IP Cluster Trigger Out 3 (CTO3)
                               LOCAL TRIGGER
                            */
    UINT16 rsvd : 8;

                            /* Bits[15:8], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT16 Data;

} XPEINJ0_SB_FBLP_STRUCT;

/* XPEINJ1_SB_FBLP_REG supported on:                                            */
/*      SPRA0 (0x10001372)                                                      */
/*      SPRB0 (0x10001372)                                                      */
/*      SPRHBM (0x10001372)                                                     */
/*      SPRC0 (0x10001372)                                                      */
/*      SPRMCC (0x10001372)                                                     */
/*      SPRUCC (0x10001372)                                                     */
/* Register default value on SPRA0: 0x000000CA                                  */
/* Register default value on SPRB0: 0x000000CA                                  */
/* Register default value on SPRHBM: 0x000000CA                                 */
/* Register default value on SPRC0: 0x000000CA                                  */
/* Register default value on SPRMCC: 0x000000CA                                 */
/* Register default value on SPRUCC: 0x000000CA                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* XPEINJ1
*/


#define XPEINJ1_SB_FBLP_REG 0x2C011372

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 start_sel : 4;

                            /* Bits[3:0], Access Type=RW/P, default=0x0000000A*/

                            /*
                               Response Function Start Select. Selects the
                               source which causes the activation of the
                               response in the cluster 0000: Global Event 0
                               (GE[0]) 0001: Global Event 1 (GE[1]) 0010:
                               Reserved 0011: Reserved 0100: Reserved 0101:
                               Reserved 0110: IP Cluster Trigger Out 0 (CTO0)
                               LOCAL TRIGGER 0111: IP Cluster Trigger Out 1
                               (CTO1) LOCAL TRIGGER 1000: Reserved 1001:
                               Reserved 1010: Response never occurs 1011:
                               Response occurs immediately 1100: Reserved 1101:
                               Reserved 1110: IP Cluster Trigger Out 2 (CTO2)
                               LOCAL TRIGGER 1111: IP Cluster Trigger Out 3
                               (CTO3) LOCAL TRIGGER
                            */
    UINT16 stop_sel : 4;

                            /* Bits[7:4], Access Type=RW/P, default=0x0000000C*/

                            /*
                               Response Function Stop Select. Selects the
                               source which causes the deactivation of the
                               response in the cluster. 0000: Global Event 0
                               (GE[0]) 0001: Global Event 1 (GE[1]) 0010:
                               Reserved 0011: Reserved 0100: Reserved 0101:
                               Reserved 0110: IP Cluster Trigger Out 0 (CTO0)
                               LOCAL TRIGGER 0111: IP Cluster Trigger Out 1
                               (CTO1) LOCAL TRIGGER 1000: Reserved 1001:
                               Reserved 1010: Deactivate one clock after
                               activation 1011: Response is never deactivated
                               1100: Deactivate the response when the
                               activating signal becomes false 1101: Reserved
                               1110: IP Cluster Trigger Out 2 (CTO2) LOCAL
                               TRIGGER 1111: IP Cluster Trigger Out 3 (CTO3)
                               LOCAL TRIGGER
                            */
    UINT16 rsvd : 8;

                            /* Bits[15:8], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT16 Data;

} XPEINJ1_SB_FBLP_STRUCT;

/* XPTRIGSEL_SB_FBLP_REG supported on:                                          */
/*      SPRA0 (0x10001374)                                                      */
/*      SPRB0 (0x10001374)                                                      */
/*      SPRHBM (0x10001374)                                                     */
/*      SPRC0 (0x10001374)                                                      */
/*      SPRMCC (0x10001374)                                                     */
/*      SPRUCC (0x10001374)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* XPTRIGSEL
*/


#define XPTRIGSEL_SB_FBLP_REG 0x2C011374

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 itp0sel : 4;

                            /* Bits[3:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               IP Trigger 0 Select Selects the trigger source
                               within the cluster 0000: Reserved 0001: Reserved
                               0010: Reserved 0011: Reserved 0100: LTSSM0
                               TrackerSel 0101: LTSSM1 TrackerSel 0110: LTSSM2
                               TrackerSel 0111: LTSSM3 TrackerSel 1000:
                               Reserved 1001: Reserved 1010-1111: Reserved
                            */
    UINT16 itp1sel : 4;

                            /* Bits[7:4], Access Type=RW/P, default=0x00000000*/

                            /*
                               IP Trigger 1 Select Selects the trigger source
                               within the cluster 0000: Reserved 0001: Reserved
                               0010: Reserved 0011: Reserved 0100: LTSSM0
                               TrackerSel 0101: LTSSM1 TrackerSel 0110: LTSSM2
                               TrackerSel 0111: LTSSM3 TrackerSel 1000:
                               Reserved 1001: Reserved 1010-1111: Reserved
                            */
    UINT16 itp2sel : 4;

                            /* Bits[11:8], Access Type=RW/P, default=0x00000000*/

                            /*
                               IP Trigger 2 Select Selects the trigger source
                               within the cluster 0000: Reserved 0001: Reserved
                               0010: Reserved 0011: Reserved 0100: LTSSM0
                               TrackerSel 0101: LTSSM1 TrackerSel 0110: LTSSM2
                               TrackerSel 0111: LTSSM3 TrackerSel 1000:
                               Reserved 1001: Reserved 1010-1111: Reserved
                            */
    UINT16 itp3sel : 4;

                            /* Bits[15:12], Access Type=RW/P, default=0x00000000*/

                            /*
                               IP Trigger 3 Select Selects the trigger source
                               within the cluster 0000: Reserved 0001: Reserved
                               0010: Reserved 0011: Reserved 0100: LTSSM0
                               TrackerSel 0101: LTSSM1 TrackerSel 0110: LTSSM2
                               TrackerSel 0111: LTSSM3 TrackerSel 1000:
                               Reserved 1001: Reserved 1010-1111: Reserved
                            */

  } Bits;
  UINT16 Data;

} XPTRIGSEL_SB_FBLP_STRUCT;

/* LTSSMTOSEL_SB_FBLP_REG supported on:                                         */
/*      SPRA0 (0x10001376)                                                      */
/*      SPRB0 (0x10001376)                                                      */
/*      SPRHBM (0x10001376)                                                     */
/*      SPRC0 (0x10001376)                                                      */
/*      SPRMCC (0x10001376)                                                     */
/*      SPRUCC (0x10001376)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSMTOSEL
*/


#define LTSSMTOSEL_SB_FBLP_REG 0x2C011376

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 ltto0sel : 4;

                            /* Bits[3:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               LTSSM Tracker Trigger Output 0 Select Selects
                               the trigger source within the cluster. Selects
                               the trigger type, but port determined by
                               IPTRIGSEL.IPT0Sel 0000: Start (Only available in
                               port 0, otherwise reserved) 0001: Stop (Only
                               available in port 0, otherwise reserved) 0010:
                               Match 1 0011: Match 2 0100: Time Match (Only
                               available in port 0, otherwise reserved)
                               0101-1111: Reserved
                            */
    UINT16 ltto1sel : 4;

                            /* Bits[7:4], Access Type=RW/P, default=0x00000000*/

                            /*
                               LTSSM Tracker Trigger Output 1 Select Selects
                               the trigger source within the cluster. Selects
                               the trigger type, but port determined by
                               IPTRIGSEL.IPT1Sel 0000: Start (Only available in
                               port 0, otherwise reserved) 0001: Stop (Only
                               available in port 0, otherwise reserved) 0010:
                               Match 1 0011: Match 2 0100: Time Match (Only
                               available in port 0, otherwise reserved)
                               0101-1111: Reserved
                            */
    UINT16 ltto2sel : 4;

                            /* Bits[11:8], Access Type=RW/P, default=0x00000000*/

                            /*
                               LTSSM Tracker Trigger Output 2 Select Selects
                               the trigger source within the cluster. Selects
                               the trigger type, but port determined by
                               IPTRIGSEL.IPT2Sel 0000: Start (Only available in
                               port 0, otherwise reserved) 0001: Stop (Only
                               available in port 0, otherwise reserved) 0010:
                               Match 1 0011: Match 2 0100: Time Match (Only
                               available in port 0, otherwise reserved)
                               0101-1111: Reserved
                            */
    UINT16 ltto3sel : 4;

                            /* Bits[15:12], Access Type=RW/P, default=0x00000000*/

                            /*
                               LTSSM Tracker Trigger Output 3 Select Selects
                               the trigger source within the cluster. Selects
                               the trigger type, but port determined by
                               IPTRIGSEL.IPT3Sel 0000: Start (Only available in
                               port 0, otherwise reserved) 0001: Stop (Only
                               available in port 0, otherwise reserved) 0010:
                               Match 1 0011: Match 2 0100: Time Match (Only
                               available in port 0, otherwise reserved)
                               0101-1111: Reserved
                            */

  } Bits;
  UINT16 Data;

} LTSSMTOSEL_SB_FBLP_STRUCT;

/* TRIGEVMSK_SB_FBLP_REG supported on:                                          */
/*      SPRA0 (0x20001378)                                                      */
/*      SPRB0 (0x20001378)                                                      */
/*      SPRHBM (0x20001378)                                                     */
/*      SPRC0 (0x20001378)                                                      */
/*      SPRMCC (0x20001378)                                                     */
/*      SPRUCC (0x20001378)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* TRIGEVMSK
*/


#define TRIGEVMSK_SB_FBLP_REG 0x2C021378

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 mask : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               This field masks in conjunction with debug
                               events, digital loopback enable, HVM short
                               training mode, and triggers from/to full-
                               chip/SoC Here is the bit mapping info: [31:16]
                               is reserved for future usage. [15:8] =
                               dbgev[7:0] [7] = reserved [6] = reserved [5:0] =
                               iptrig[5:0]
                            */

  } Bits;
  UINT32 Data;

} TRIGEVMSK_SB_FBLP_STRUCT;

/* ERR_INJ_LCK_DFX_SB_FBLP_REG supported on:                                    */
/*      SPRA0 (0x2000137c)                                                      */
/*      SPRB0 (0x2000137c)                                                      */
/*      SPRHBM (0x2000137c)                                                     */
/*      SPRC0 (0x2000137c)                                                      */
/*      SPRMCC (0x2000137c)                                                     */
/*      SPRUCC (0x2000137c)                                                     */
/* Register default value on SPRA0: 0x00000001                                  */
/* Register default value on SPRB0: 0x00000001                                  */
/* Register default value on SPRHBM: 0x00000001                                 */
/* Register default value on SPRC0: 0x00000001                                  */
/* Register default value on SPRMCC: 0x00000001                                 */
/* Register default value on SPRUCC: 0x00000001                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* ERR_INJ_LCK_DFX
*/


#define ERR_INJ_LCK_DFX_SB_FBLP_REG 0x2C02137C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 eil : 1;

                            /* Bits[0:0], Access Type=RW/P, default=0x00000001*/

                            /*
                               Error Injection Lock. When set to 1, Error
                               Injection is locked. When cleared to 0, error
                               injection via the error injection registers is
                               allowed
                            */
    UINT32 rsvd : 31;

                            /* Bits[31:1], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} ERR_INJ_LCK_DFX_SB_FBLP_STRUCT;

/* CSR_GLOBAL_ERR_SB_FBLP_REG supported on:                                     */
/*      SPRA0 (0x20001380)                                                      */
/*      SPRB0 (0x20001380)                                                      */
/*      SPRHBM (0x20001380)                                                     */
/*      SPRC0 (0x20001380)                                                      */
/*      SPRMCC (0x20001380)                                                     */
/*      SPRUCC (0x20001380)                                                     */
/* Register default value on SPRA0: 0x00000018                                  */
/* Register default value on SPRB0: 0x00000018                                  */
/* Register default value on SPRHBM: 0x00000018                                 */
/* Register default value on SPRC0: 0x00000018                                  */
/* Register default value on SPRMCC: 0x00000018                                 */
/* Register default value on SPRUCC: 0x00000018                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CSR_GLOBAL_ERR
*/


#define CSR_GLOBAL_ERR_SB_FBLP_REG 0x2C021380

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 csr_dis_skperr : 1;

                            /* Bits[0:0], Access Type=RW/P, default=0x00000000*/

                            /* ERROR SKP CSR */
    UINT32 csr_dis_sdserr : 1;

                            /* Bits[1:1], Access Type=RW/P, default=0x00000000*/

                            /* ERROR SDS CSR */
    UINT32 csr_invert_disparity : 1;

                            /* Bits[2:2], Access Type=RW/P, default=0x00000000*/

                            /* INVERT ERR */
    UINT32 csr_ial_ored : 4;

                            /* Bits[6:3], Access Type=RW/P, default=0x00000003*/

                            /* CSR_IAL_ORED */
    UINT32 spare_fld : 25;

                            /* Bits[31:7], Access Type=RW/P, default=0x00000000*/

                            /* Spare fields */

  } Bits;
  UINT32 Data;

} CSR_GLOBAL_ERR_SB_FBLP_STRUCT;

/* PCS_SPARE_CSR_IMPL_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x20001384)                                                      */
/*      SPRB0 (0x20001384)                                                      */
/*      SPRHBM (0x20001384)                                                     */
/*      SPRC0 (0x20001384)                                                      */
/*      SPRMCC (0x20001384)                                                     */
/*      SPRUCC (0x20001384)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* PCS_SPARE_CSR_IMPL
*/


#define PCS_SPARE_CSR_IMPL_SB_FBLP_REG 0x2C021384

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 spare_csr_fld : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x00000000*/

                            /* spare csr */

  } Bits;
  UINT32 Data;

} PCS_SPARE_CSR_IMPL_SB_FBLP_STRUCT;

/* PCS_SPARE_CSR_IMPL1_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x20001388)                                                      */
/*      SPRB0 (0x20001388)                                                      */
/*      SPRHBM (0x20001388)                                                     */
/*      SPRC0 (0x20001388)                                                      */
/*      SPRMCC (0x20001388)                                                     */
/*      SPRUCC (0x20001388)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* PCS_SPARE_CSR_IMPL1
*/


#define PCS_SPARE_CSR_IMPL1_SB_FBLP_REG 0x2C021388

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 spare_csr_fld_1 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x00000000*/

                            /* spare csr */

  } Bits;
  UINT32 Data;

} PCS_SPARE_CSR_IMPL1_SB_FBLP_STRUCT;

/* PCS_SPARE_CSR_IMPL2_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x2000138c)                                                      */
/*      SPRB0 (0x2000138c)                                                      */
/*      SPRHBM (0x2000138c)                                                     */
/*      SPRC0 (0x2000138c)                                                      */
/*      SPRMCC (0x2000138c)                                                     */
/*      SPRUCC (0x2000138c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* PCS_SPARE_CSR_IMPL2
*/


#define PCS_SPARE_CSR_IMPL2_SB_FBLP_REG 0x2C02138C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 spare_csr_fld_2 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x00000000*/

                            /* spare csr */

  } Bits;
  UINT32 Data;

} PCS_SPARE_CSR_IMPL2_SB_FBLP_STRUCT;

































































































































































































































































































































































































































/* FOMHINTTBL0_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20001c00)                                                      */
/*      SPRB0 (0x20001c00)                                                      */
/*      SPRHBM (0x20001c00)                                                     */
/*      SPRC0 (0x20001c00)                                                      */
/*      SPRMCC (0x20001c00)                                                     */
/*      SPRUCC (0x20001c00)                                                     */
/* Register default value on SPRA0: 0x0000DC20                                  */
/* Register default value on SPRB0: 0x0000DC20                                  */
/* Register default value on SPRHBM: 0x0000DC20                                 */
/* Register default value on SPRC0: 0x0000DC20                                  */
/* Register default value on SPRMCC: 0x0000DC20                                 */
/* Register default value on SPRUCC: 0x0000DC20                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* FOM Hint Table
*/


#define FOMHINTTBL0_SB_FBLP_REG 0x2C021C00

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 d1 : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000000*/

                            /* See Table 4.3 for definition */
    UINT32 d2 : 5;

                            /* Bits[9:5], Access Type=RW/P, default=0x00000001*/

                            /* See Table 4.3 for definition */
    UINT32 etm : 2;

                            /* Bits[11:10], Access Type=RW/P, default=0x00000003*/

                            /* Time multiplier to EQEVALCTL2.EVALTIME */
    UINT32 ctle : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000001*/

                            /* Enable CTLE Adaptation request */
    UINT32 ftype : 2;

                            /* Bits[14:13], Access Type=RW/P, default=0x00000002*/

                            /* Function type */
    UINT32 enable : 1;

                            /* Bits[15:15], Access Type=RW/P, default=0x00000001*/

                            /* Entry enable */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} FOMHINTTBL0_SB_FBLP_STRUCT;

/* FOMHINTTBL1_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20001c04)                                                      */
/*      SPRB0 (0x20001c04)                                                      */
/*      SPRHBM (0x20001c04)                                                     */
/*      SPRC0 (0x20001c04)                                                      */
/*      SPRMCC (0x20001c04)                                                     */
/*      SPRUCC (0x20001c04)                                                     */
/* Register default value on SPRA0: 0x0000DC80                                  */
/* Register default value on SPRB0: 0x0000DC80                                  */
/* Register default value on SPRHBM: 0x0000DC80                                 */
/* Register default value on SPRC0: 0x0000DC80                                  */
/* Register default value on SPRMCC: 0x0000DC80                                 */
/* Register default value on SPRUCC: 0x0000DC80                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* FOM Hint Table
*/


#define FOMHINTTBL1_SB_FBLP_REG 0x2C021C04

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 d1 : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000000*/

                            /* See Table 4.3 for definition */
    UINT32 d2 : 5;

                            /* Bits[9:5], Access Type=RW/P, default=0x00000004*/

                            /* See Table 4.3 for definition */
    UINT32 etm : 2;

                            /* Bits[11:10], Access Type=RW/P, default=0x00000003*/

                            /* Time multiplier to EQEVALCTL2.EVALTIME */
    UINT32 ctle : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000001*/

                            /* Enable CTLE Adaptation request */
    UINT32 ftype : 2;

                            /* Bits[14:13], Access Type=RW/P, default=0x00000002*/

                            /* Function type */
    UINT32 enable : 1;

                            /* Bits[15:15], Access Type=RW/P, default=0x00000001*/

                            /* Entry enable */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} FOMHINTTBL1_SB_FBLP_STRUCT;

/* FOMHINTTBL2_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20001c08)                                                      */
/*      SPRB0 (0x20001c08)                                                      */
/*      SPRHBM (0x20001c08)                                                     */
/*      SPRC0 (0x20001c08)                                                      */
/*      SPRMCC (0x20001c08)                                                     */
/*      SPRUCC (0x20001c08)                                                     */
/* Register default value on SPRA0: 0x0000DCE0                                  */
/* Register default value on SPRB0: 0x0000DCE0                                  */
/* Register default value on SPRHBM: 0x0000DCE0                                 */
/* Register default value on SPRC0: 0x0000DCE0                                  */
/* Register default value on SPRMCC: 0x0000DCE0                                 */
/* Register default value on SPRUCC: 0x0000DCE0                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* FOM Hint Table
*/


#define FOMHINTTBL2_SB_FBLP_REG 0x2C021C08

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 d1 : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000000*/

                            /* See Table 4.3 for definition */
    UINT32 d2 : 5;

                            /* Bits[9:5], Access Type=RW/P, default=0x00000007*/

                            /* See Table 4.3 for definition */
    UINT32 etm : 2;

                            /* Bits[11:10], Access Type=RW/P, default=0x00000003*/

                            /* Time multiplier to EQEVALCTL2.EVALTIME */
    UINT32 ctle : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000001*/

                            /* Enable CTLE Adaptation request */
    UINT32 ftype : 2;

                            /* Bits[14:13], Access Type=RW/P, default=0x00000002*/

                            /* Function type */
    UINT32 enable : 1;

                            /* Bits[15:15], Access Type=RW/P, default=0x00000001*/

                            /* Entry enable */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} FOMHINTTBL2_SB_FBLP_STRUCT;

/* FOMHINTTBL3_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20001c0c)                                                      */
/*      SPRB0 (0x20001c0c)                                                      */
/*      SPRHBM (0x20001c0c)                                                     */
/*      SPRC0 (0x20001c0c)                                                      */
/*      SPRMCC (0x20001c0c)                                                     */
/*      SPRUCC (0x20001c0c)                                                     */
/* Register default value on SPRA0: 0x0000DD40                                  */
/* Register default value on SPRB0: 0x0000DD40                                  */
/* Register default value on SPRHBM: 0x0000DD40                                 */
/* Register default value on SPRC0: 0x0000DD40                                  */
/* Register default value on SPRMCC: 0x0000DD40                                 */
/* Register default value on SPRUCC: 0x0000DD40                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* FOM Hint Table
*/


#define FOMHINTTBL3_SB_FBLP_REG 0x2C021C0C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 d1 : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000000*/

                            /* See Table 4.3 for definition */
    UINT32 d2 : 5;

                            /* Bits[9:5], Access Type=RW/P, default=0x0000000A*/

                            /* See Table 4.3 for definition */
    UINT32 etm : 2;

                            /* Bits[11:10], Access Type=RW/P, default=0x00000003*/

                            /* Time multiplier to EQEVALCTL2.EVALTIME */
    UINT32 ctle : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000001*/

                            /* Enable CTLE Adaptation request */
    UINT32 ftype : 2;

                            /* Bits[14:13], Access Type=RW/P, default=0x00000002*/

                            /* Function type */
    UINT32 enable : 1;

                            /* Bits[15:15], Access Type=RW/P, default=0x00000001*/

                            /* Entry enable */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} FOMHINTTBL3_SB_FBLP_STRUCT;

/* FOMHINTTBL4_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20001c10)                                                      */
/*      SPRB0 (0x20001c10)                                                      */
/*      SPRHBM (0x20001c10)                                                     */
/*      SPRC0 (0x20001c10)                                                      */
/*      SPRMCC (0x20001c10)                                                     */
/*      SPRUCC (0x20001c10)                                                     */
/* Register default value on SPRA0: 0x0000FC00                                  */
/* Register default value on SPRB0: 0x0000FC00                                  */
/* Register default value on SPRHBM: 0x0000FC00                                 */
/* Register default value on SPRC0: 0x0000FC00                                  */
/* Register default value on SPRMCC: 0x0000FC00                                 */
/* Register default value on SPRUCC: 0x0000FC00                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* FOM Hint Table
*/


#define FOMHINTTBL4_SB_FBLP_REG 0x2C021C10

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 d1 : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000000*/

                            /* See Table 4.3 for definition */
    UINT32 d2 : 5;

                            /* Bits[9:5], Access Type=RW/P, default=0x00000000*/

                            /* See Table 4.3 for definition */
    UINT32 etm : 2;

                            /* Bits[11:10], Access Type=RW/P, default=0x00000003*/

                            /* Time multiplier to EQEVALCTL2.EVALTIME */
    UINT32 ctle : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000001*/

                            /* Enable CTLE Adaptation request */
    UINT32 ftype : 2;

                            /* Bits[14:13], Access Type=RW/P, default=0x00000003*/

                            /* Function type */
    UINT32 enable : 1;

                            /* Bits[15:15], Access Type=RW/P, default=0x00000001*/

                            /* Entry enable */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} FOMHINTTBL4_SB_FBLP_STRUCT;

/* FOMHINTTBL5_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20001c14)                                                      */
/*      SPRB0 (0x20001c14)                                                      */
/*      SPRHBM (0x20001c14)                                                     */
/*      SPRC0 (0x20001c14)                                                      */
/*      SPRMCC (0x20001c14)                                                     */
/*      SPRUCC (0x20001c14)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* FOM Hint Table
*/


#define FOMHINTTBL5_SB_FBLP_REG 0x2C021C14

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 d1 : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000000*/

                            /* See Table 4.3 for definition */
    UINT32 d2 : 5;

                            /* Bits[9:5], Access Type=RW/P, default=0x00000000*/

                            /* See Table 4.3 for definition */
    UINT32 etm : 2;

                            /* Bits[11:10], Access Type=RW/P, default=0x00000000*/

                            /* Time multiplier to EQEVALCTL2.EVALTIME */
    UINT32 ctle : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000000*/

                            /* Enable CTLE Adaptation request */
    UINT32 ftype : 2;

                            /* Bits[14:13], Access Type=RW/P, default=0x00000000*/

                            /* Function type */
    UINT32 enable : 1;

                            /* Bits[15:15], Access Type=RW/P, default=0x00000000*/

                            /* Entry enable */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} FOMHINTTBL5_SB_FBLP_STRUCT;

/* FOMHINTTBL6_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20001c18)                                                      */
/*      SPRB0 (0x20001c18)                                                      */
/*      SPRHBM (0x20001c18)                                                     */
/*      SPRC0 (0x20001c18)                                                      */
/*      SPRMCC (0x20001c18)                                                     */
/*      SPRUCC (0x20001c18)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* FOM Hint Table
*/


#define FOMHINTTBL6_SB_FBLP_REG 0x2C021C18

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 d1 : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000000*/

                            /* See Table 4.3 for definition */
    UINT32 d2 : 5;

                            /* Bits[9:5], Access Type=RW/P, default=0x00000000*/

                            /* See Table 4.3 for definition */
    UINT32 etm : 2;

                            /* Bits[11:10], Access Type=RW/P, default=0x00000000*/

                            /* Time multiplier to EQEVALCTL2.EVALTIME */
    UINT32 ctle : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000000*/

                            /* Enable CTLE Adaptation request */
    UINT32 ftype : 2;

                            /* Bits[14:13], Access Type=RW/P, default=0x00000000*/

                            /* Function type */
    UINT32 enable : 1;

                            /* Bits[15:15], Access Type=RW/P, default=0x00000000*/

                            /* Entry enable */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} FOMHINTTBL6_SB_FBLP_STRUCT;

/* FOMHINTTBL7_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20001c1c)                                                      */
/*      SPRB0 (0x20001c1c)                                                      */
/*      SPRHBM (0x20001c1c)                                                     */
/*      SPRC0 (0x20001c1c)                                                      */
/*      SPRMCC (0x20001c1c)                                                     */
/*      SPRUCC (0x20001c1c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* FOM Hint Table
*/


#define FOMHINTTBL7_SB_FBLP_REG 0x2C021C1C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 d1 : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000000*/

                            /* See Table 4.3 for definition */
    UINT32 d2 : 5;

                            /* Bits[9:5], Access Type=RW/P, default=0x00000000*/

                            /* See Table 4.3 for definition */
    UINT32 etm : 2;

                            /* Bits[11:10], Access Type=RW/P, default=0x00000000*/

                            /* Time multiplier to EQEVALCTL2.EVALTIME */
    UINT32 ctle : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000000*/

                            /* Enable CTLE Adaptation request */
    UINT32 ftype : 2;

                            /* Bits[14:13], Access Type=RW/P, default=0x00000000*/

                            /* Function type */
    UINT32 enable : 1;

                            /* Bits[15:15], Access Type=RW/P, default=0x00000000*/

                            /* Entry enable */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} FOMHINTTBL7_SB_FBLP_STRUCT;

/* FOMHINTTBL8_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20001c20)                                                      */
/*      SPRB0 (0x20001c20)                                                      */
/*      SPRHBM (0x20001c20)                                                     */
/*      SPRC0 (0x20001c20)                                                      */
/*      SPRMCC (0x20001c20)                                                     */
/*      SPRUCC (0x20001c20)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* FOM Hint Table
*/


#define FOMHINTTBL8_SB_FBLP_REG 0x2C021C20

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 d1 : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000000*/

                            /* See Table 4.3 for definition */
    UINT32 d2 : 5;

                            /* Bits[9:5], Access Type=RW/P, default=0x00000000*/

                            /* See Table 4.3 for definition */
    UINT32 etm : 2;

                            /* Bits[11:10], Access Type=RW/P, default=0x00000000*/

                            /* Time multiplier to EQEVALCTL2.EVALTIME */
    UINT32 ctle : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000000*/

                            /* Enable CTLE Adaptation request */
    UINT32 ftype : 2;

                            /* Bits[14:13], Access Type=RW/P, default=0x00000000*/

                            /* Function type */
    UINT32 enable : 1;

                            /* Bits[15:15], Access Type=RW/P, default=0x00000000*/

                            /* Entry enable */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} FOMHINTTBL8_SB_FBLP_STRUCT;

/* FOMHINTTBL9_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20001c24)                                                      */
/*      SPRB0 (0x20001c24)                                                      */
/*      SPRHBM (0x20001c24)                                                     */
/*      SPRC0 (0x20001c24)                                                      */
/*      SPRMCC (0x20001c24)                                                     */
/*      SPRUCC (0x20001c24)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* FOM Hint Table
*/


#define FOMHINTTBL9_SB_FBLP_REG 0x2C021C24

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 d1 : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000000*/

                            /* See Table 4.3 for definition */
    UINT32 d2 : 5;

                            /* Bits[9:5], Access Type=RW/P, default=0x00000000*/

                            /* See Table 4.3 for definition */
    UINT32 etm : 2;

                            /* Bits[11:10], Access Type=RW/P, default=0x00000000*/

                            /* Time multiplier to EQEVALCTL2.EVALTIME */
    UINT32 ctle : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000000*/

                            /* Enable CTLE Adaptation request */
    UINT32 ftype : 2;

                            /* Bits[14:13], Access Type=RW/P, default=0x00000000*/

                            /* Function type */
    UINT32 enable : 1;

                            /* Bits[15:15], Access Type=RW/P, default=0x00000000*/

                            /* Entry enable */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} FOMHINTTBL9_SB_FBLP_STRUCT;

/* FOMHINTTBL10_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001c28)                                                      */
/*      SPRB0 (0x20001c28)                                                      */
/*      SPRHBM (0x20001c28)                                                     */
/*      SPRC0 (0x20001c28)                                                      */
/*      SPRMCC (0x20001c28)                                                     */
/*      SPRUCC (0x20001c28)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* FOM Hint Table
*/


#define FOMHINTTBL10_SB_FBLP_REG 0x2C021C28

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 d1 : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000000*/

                            /* See Table 4.3 for definition */
    UINT32 d2 : 5;

                            /* Bits[9:5], Access Type=RW/P, default=0x00000000*/

                            /* See Table 4.3 for definition */
    UINT32 etm : 2;

                            /* Bits[11:10], Access Type=RW/P, default=0x00000000*/

                            /* Time multiplier to EQEVALCTL2.EVALTIME */
    UINT32 ctle : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000000*/

                            /* Enable CTLE Adaptation request */
    UINT32 ftype : 2;

                            /* Bits[14:13], Access Type=RW/P, default=0x00000000*/

                            /* Function type */
    UINT32 enable : 1;

                            /* Bits[15:15], Access Type=RW/P, default=0x00000000*/

                            /* Entry enable */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} FOMHINTTBL10_SB_FBLP_STRUCT;

/* FOMHINTTBL11_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001c2c)                                                      */
/*      SPRB0 (0x20001c2c)                                                      */
/*      SPRHBM (0x20001c2c)                                                     */
/*      SPRC0 (0x20001c2c)                                                      */
/*      SPRMCC (0x20001c2c)                                                     */
/*      SPRUCC (0x20001c2c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* FOM Hint Table
*/


#define FOMHINTTBL11_SB_FBLP_REG 0x2C021C2C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 d1 : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000000*/

                            /* See Table 4.3 for definition */
    UINT32 d2 : 5;

                            /* Bits[9:5], Access Type=RW/P, default=0x00000000*/

                            /* See Table 4.3 for definition */
    UINT32 etm : 2;

                            /* Bits[11:10], Access Type=RW/P, default=0x00000000*/

                            /* Time multiplier to EQEVALCTL2.EVALTIME */
    UINT32 ctle : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000000*/

                            /* Enable CTLE Adaptation request */
    UINT32 ftype : 2;

                            /* Bits[14:13], Access Type=RW/P, default=0x00000000*/

                            /* Function type */
    UINT32 enable : 1;

                            /* Bits[15:15], Access Type=RW/P, default=0x00000000*/

                            /* Entry enable */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} FOMHINTTBL11_SB_FBLP_STRUCT;

/* G4FOMHINTTBL0_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001c30)                                                      */
/*      SPRB0 (0x20001c30)                                                      */
/*      SPRHBM (0x20001c30)                                                     */
/*      SPRC0 (0x20001c30)                                                      */
/*      SPRMCC (0x20001c30)                                                     */
/*      SPRUCC (0x20001c30)                                                     */
/* Register default value on SPRA0: 0x0000DC20                                  */
/* Register default value on SPRB0: 0x0000DC20                                  */
/* Register default value on SPRHBM: 0x0000DC20                                 */
/* Register default value on SPRC0: 0x0000DC20                                  */
/* Register default value on SPRMCC: 0x0000DC20                                 */
/* Register default value on SPRUCC: 0x0000DC20                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* 16.0 GT/s FOM Hint Table
*/


#define G4FOMHINTTBL0_SB_FBLP_REG 0x2C021C30

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 d1 : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 d2 : 5;

                            /* Bits[9:5], Access Type=RW/P, default=0x00000001*/

                            /* See Table 5.3 for definition */
    UINT32 etm : 2;

                            /* Bits[11:10], Access Type=RW/P, default=0x00000003*/

                            /* Time multiplier to EQEVALCTL2.EVALTIME */
    UINT32 ctle : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000001*/

                            /* Enable CTLE Adaptation request */
    UINT32 ftype : 2;

                            /* Bits[14:13], Access Type=RW/P, default=0x00000002*/

                            /* Function type */
    UINT32 enable : 1;

                            /* Bits[15:15], Access Type=RW/P, default=0x00000001*/

                            /* Entry enable */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G4FOMHINTTBL0_SB_FBLP_STRUCT;

/* G4FOMHINTTBL1_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001c34)                                                      */
/*      SPRB0 (0x20001c34)                                                      */
/*      SPRHBM (0x20001c34)                                                     */
/*      SPRC0 (0x20001c34)                                                      */
/*      SPRMCC (0x20001c34)                                                     */
/*      SPRUCC (0x20001c34)                                                     */
/* Register default value on SPRA0: 0x0000DC80                                  */
/* Register default value on SPRB0: 0x0000DC80                                  */
/* Register default value on SPRHBM: 0x0000DC80                                 */
/* Register default value on SPRC0: 0x0000DC80                                  */
/* Register default value on SPRMCC: 0x0000DC80                                 */
/* Register default value on SPRUCC: 0x0000DC80                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* 16.0 GT/s FOM Hint Table
*/


#define G4FOMHINTTBL1_SB_FBLP_REG 0x2C021C34

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 d1 : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 d2 : 5;

                            /* Bits[9:5], Access Type=RW/P, default=0x00000004*/

                            /* See Table 5.3 for definition */
    UINT32 etm : 2;

                            /* Bits[11:10], Access Type=RW/P, default=0x00000003*/

                            /* Time multiplier to EQEVALCTL2.EVALTIME */
    UINT32 ctle : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000001*/

                            /* Enable CTLE Adaptation request */
    UINT32 ftype : 2;

                            /* Bits[14:13], Access Type=RW/P, default=0x00000002*/

                            /* Function type */
    UINT32 enable : 1;

                            /* Bits[15:15], Access Type=RW/P, default=0x00000001*/

                            /* Entry enable */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G4FOMHINTTBL1_SB_FBLP_STRUCT;

/* G4FOMHINTTBL2_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001c38)                                                      */
/*      SPRB0 (0x20001c38)                                                      */
/*      SPRHBM (0x20001c38)                                                     */
/*      SPRC0 (0x20001c38)                                                      */
/*      SPRMCC (0x20001c38)                                                     */
/*      SPRUCC (0x20001c38)                                                     */
/* Register default value on SPRA0: 0x0000DCE0                                  */
/* Register default value on SPRB0: 0x0000DCE0                                  */
/* Register default value on SPRHBM: 0x0000DCE0                                 */
/* Register default value on SPRC0: 0x0000DCE0                                  */
/* Register default value on SPRMCC: 0x0000DCE0                                 */
/* Register default value on SPRUCC: 0x0000DCE0                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* 16.0 GT/s FOM Hint Table
*/


#define G4FOMHINTTBL2_SB_FBLP_REG 0x2C021C38

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 d1 : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 d2 : 5;

                            /* Bits[9:5], Access Type=RW/P, default=0x00000007*/

                            /* See Table 5.3 for definition */
    UINT32 etm : 2;

                            /* Bits[11:10], Access Type=RW/P, default=0x00000003*/

                            /* Time multiplier to EQEVALCTL2.EVALTIME */
    UINT32 ctle : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000001*/

                            /* Enable CTLE Adaptation request */
    UINT32 ftype : 2;

                            /* Bits[14:13], Access Type=RW/P, default=0x00000002*/

                            /* Function type */
    UINT32 enable : 1;

                            /* Bits[15:15], Access Type=RW/P, default=0x00000001*/

                            /* Entry enable */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G4FOMHINTTBL2_SB_FBLP_STRUCT;

/* G4FOMHINTTBL3_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001c3c)                                                      */
/*      SPRB0 (0x20001c3c)                                                      */
/*      SPRHBM (0x20001c3c)                                                     */
/*      SPRC0 (0x20001c3c)                                                      */
/*      SPRMCC (0x20001c3c)                                                     */
/*      SPRUCC (0x20001c3c)                                                     */
/* Register default value on SPRA0: 0x0000DD40                                  */
/* Register default value on SPRB0: 0x0000DD40                                  */
/* Register default value on SPRHBM: 0x0000DD40                                 */
/* Register default value on SPRC0: 0x0000DD40                                  */
/* Register default value on SPRMCC: 0x0000DD40                                 */
/* Register default value on SPRUCC: 0x0000DD40                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* 16.0 GT/s FOM Hint Table
*/


#define G4FOMHINTTBL3_SB_FBLP_REG 0x2C021C3C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 d1 : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 d2 : 5;

                            /* Bits[9:5], Access Type=RW/P, default=0x0000000A*/

                            /* See Table 5.3 for definition */
    UINT32 etm : 2;

                            /* Bits[11:10], Access Type=RW/P, default=0x00000003*/

                            /* Time multiplier to EQEVALCTL2.EVALTIME */
    UINT32 ctle : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000001*/

                            /* Enable CTLE Adaptation request */
    UINT32 ftype : 2;

                            /* Bits[14:13], Access Type=RW/P, default=0x00000002*/

                            /* Function type */
    UINT32 enable : 1;

                            /* Bits[15:15], Access Type=RW/P, default=0x00000001*/

                            /* Entry enable */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G4FOMHINTTBL3_SB_FBLP_STRUCT;

/* G4FOMHINTTBL4_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001c40)                                                      */
/*      SPRB0 (0x20001c40)                                                      */
/*      SPRHBM (0x20001c40)                                                     */
/*      SPRC0 (0x20001c40)                                                      */
/*      SPRMCC (0x20001c40)                                                     */
/*      SPRUCC (0x20001c40)                                                     */
/* Register default value on SPRA0: 0x0000FC00                                  */
/* Register default value on SPRB0: 0x0000FC00                                  */
/* Register default value on SPRHBM: 0x0000FC00                                 */
/* Register default value on SPRC0: 0x0000FC00                                  */
/* Register default value on SPRMCC: 0x0000FC00                                 */
/* Register default value on SPRUCC: 0x0000FC00                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* 16.0 GT/s FOM Hint Table
*/


#define G4FOMHINTTBL4_SB_FBLP_REG 0x2C021C40

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 d1 : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 d2 : 5;

                            /* Bits[9:5], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 etm : 2;

                            /* Bits[11:10], Access Type=RW/P, default=0x00000003*/

                            /* Time multiplier to EQEVALCTL2.EVALTIME */
    UINT32 ctle : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000001*/

                            /* Enable CTLE Adaptation request */
    UINT32 ftype : 2;

                            /* Bits[14:13], Access Type=RW/P, default=0x00000003*/

                            /* Function type */
    UINT32 enable : 1;

                            /* Bits[15:15], Access Type=RW/P, default=0x00000001*/

                            /* Entry enable */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G4FOMHINTTBL4_SB_FBLP_STRUCT;

/* G4FOMHINTTBL5_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001c44)                                                      */
/*      SPRB0 (0x20001c44)                                                      */
/*      SPRHBM (0x20001c44)                                                     */
/*      SPRC0 (0x20001c44)                                                      */
/*      SPRMCC (0x20001c44)                                                     */
/*      SPRUCC (0x20001c44)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* 16.0 GT/s FOM Hint Table
*/


#define G4FOMHINTTBL5_SB_FBLP_REG 0x2C021C44

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 d1 : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 d2 : 5;

                            /* Bits[9:5], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 etm : 2;

                            /* Bits[11:10], Access Type=RW/P, default=0x00000000*/

                            /* Time multiplier to EQEVALCTL2.EVALTIME */
    UINT32 ctle : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000000*/

                            /* Enable CTLE Adaptation request */
    UINT32 ftype : 2;

                            /* Bits[14:13], Access Type=RW/P, default=0x00000000*/

                            /* Function type */
    UINT32 enable : 1;

                            /* Bits[15:15], Access Type=RW/P, default=0x00000000*/

                            /* Entry enable */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G4FOMHINTTBL5_SB_FBLP_STRUCT;

/* G4FOMHINTTBL6_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001c48)                                                      */
/*      SPRB0 (0x20001c48)                                                      */
/*      SPRHBM (0x20001c48)                                                     */
/*      SPRC0 (0x20001c48)                                                      */
/*      SPRMCC (0x20001c48)                                                     */
/*      SPRUCC (0x20001c48)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* 16.0 GT/s FOM Hint Table
*/


#define G4FOMHINTTBL6_SB_FBLP_REG 0x2C021C48

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 d1 : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 d2 : 5;

                            /* Bits[9:5], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 etm : 2;

                            /* Bits[11:10], Access Type=RW/P, default=0x00000000*/

                            /* Time multiplier to EQEVALCTL2.EVALTIME */
    UINT32 ctle : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000000*/

                            /* Enable CTLE Adaptation request */
    UINT32 ftype : 2;

                            /* Bits[14:13], Access Type=RW/P, default=0x00000000*/

                            /* Function type */
    UINT32 enable : 1;

                            /* Bits[15:15], Access Type=RW/P, default=0x00000000*/

                            /* Entry enable */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G4FOMHINTTBL6_SB_FBLP_STRUCT;

/* G4FOMHINTTBL7_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001c4c)                                                      */
/*      SPRB0 (0x20001c4c)                                                      */
/*      SPRHBM (0x20001c4c)                                                     */
/*      SPRC0 (0x20001c4c)                                                      */
/*      SPRMCC (0x20001c4c)                                                     */
/*      SPRUCC (0x20001c4c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* 16.0 GT/s FOM Hint Table
*/


#define G4FOMHINTTBL7_SB_FBLP_REG 0x2C021C4C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 d1 : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 d2 : 5;

                            /* Bits[9:5], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 etm : 2;

                            /* Bits[11:10], Access Type=RW/P, default=0x00000000*/

                            /* Time multiplier to EQEVALCTL2.EVALTIME */
    UINT32 ctle : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000000*/

                            /* Enable CTLE Adaptation request */
    UINT32 ftype : 2;

                            /* Bits[14:13], Access Type=RW/P, default=0x00000000*/

                            /* Function type */
    UINT32 enable : 1;

                            /* Bits[15:15], Access Type=RW/P, default=0x00000000*/

                            /* Entry enable */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G4FOMHINTTBL7_SB_FBLP_STRUCT;

/* G4FOMHINTTBL8_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001c50)                                                      */
/*      SPRB0 (0x20001c50)                                                      */
/*      SPRHBM (0x20001c50)                                                     */
/*      SPRC0 (0x20001c50)                                                      */
/*      SPRMCC (0x20001c50)                                                     */
/*      SPRUCC (0x20001c50)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* 16.0 GT/s FOM Hint Table
*/


#define G4FOMHINTTBL8_SB_FBLP_REG 0x2C021C50

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 d1 : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 d2 : 5;

                            /* Bits[9:5], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 etm : 2;

                            /* Bits[11:10], Access Type=RW/P, default=0x00000000*/

                            /* Time multiplier to EQEVALCTL2.EVALTIME */
    UINT32 ctle : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000000*/

                            /* Enable CTLE Adaptation request */
    UINT32 ftype : 2;

                            /* Bits[14:13], Access Type=RW/P, default=0x00000000*/

                            /* Function type */
    UINT32 enable : 1;

                            /* Bits[15:15], Access Type=RW/P, default=0x00000000*/

                            /* Entry enable */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G4FOMHINTTBL8_SB_FBLP_STRUCT;

/* G4FOMHINTTBL9_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001c54)                                                      */
/*      SPRB0 (0x20001c54)                                                      */
/*      SPRHBM (0x20001c54)                                                     */
/*      SPRC0 (0x20001c54)                                                      */
/*      SPRMCC (0x20001c54)                                                     */
/*      SPRUCC (0x20001c54)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* 16.0 GT/s FOM Hint Table
*/


#define G4FOMHINTTBL9_SB_FBLP_REG 0x2C021C54

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 d1 : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 d2 : 5;

                            /* Bits[9:5], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 etm : 2;

                            /* Bits[11:10], Access Type=RW/P, default=0x00000000*/

                            /* Time multiplier to EQEVALCTL2.EVALTIME */
    UINT32 ctle : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000000*/

                            /* Enable CTLE Adaptation request */
    UINT32 ftype : 2;

                            /* Bits[14:13], Access Type=RW/P, default=0x00000000*/

                            /* Function type */
    UINT32 enable : 1;

                            /* Bits[15:15], Access Type=RW/P, default=0x00000000*/

                            /* Entry enable */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G4FOMHINTTBL9_SB_FBLP_STRUCT;

/* G4FOMHINTTBL10_SB_FBLP_REG supported on:                                     */
/*      SPRA0 (0x20001c58)                                                      */
/*      SPRB0 (0x20001c58)                                                      */
/*      SPRHBM (0x20001c58)                                                     */
/*      SPRC0 (0x20001c58)                                                      */
/*      SPRMCC (0x20001c58)                                                     */
/*      SPRUCC (0x20001c58)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* 16.0 GT/s FOM Hint Table
*/


#define G4FOMHINTTBL10_SB_FBLP_REG 0x2C021C58

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 d1 : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 d2 : 5;

                            /* Bits[9:5], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 etm : 2;

                            /* Bits[11:10], Access Type=RW/P, default=0x00000000*/

                            /* Time multiplier to EQEVALCTL2.EVALTIME */
    UINT32 ctle : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000000*/

                            /* Enable CTLE Adaptation request */
    UINT32 ftype : 2;

                            /* Bits[14:13], Access Type=RW/P, default=0x00000000*/

                            /* Function type */
    UINT32 enable : 1;

                            /* Bits[15:15], Access Type=RW/P, default=0x00000000*/

                            /* Entry enable */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G4FOMHINTTBL10_SB_FBLP_STRUCT;

/* G4FOMHINTTBL11_SB_FBLP_REG supported on:                                     */
/*      SPRA0 (0x20001c5c)                                                      */
/*      SPRB0 (0x20001c5c)                                                      */
/*      SPRHBM (0x20001c5c)                                                     */
/*      SPRC0 (0x20001c5c)                                                      */
/*      SPRMCC (0x20001c5c)                                                     */
/*      SPRUCC (0x20001c5c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* 16.0 GT/s FOM Hint Table
*/


#define G4FOMHINTTBL11_SB_FBLP_REG 0x2C021C5C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 d1 : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 d2 : 5;

                            /* Bits[9:5], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 etm : 2;

                            /* Bits[11:10], Access Type=RW/P, default=0x00000000*/

                            /* Time multiplier to EQEVALCTL2.EVALTIME */
    UINT32 ctle : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000000*/

                            /* Enable CTLE Adaptation request */
    UINT32 ftype : 2;

                            /* Bits[14:13], Access Type=RW/P, default=0x00000000*/

                            /* Function type */
    UINT32 enable : 1;

                            /* Bits[15:15], Access Type=RW/P, default=0x00000000*/

                            /* Entry enable */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G4FOMHINTTBL11_SB_FBLP_STRUCT;

/* G5FOMHINTTBL0_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001c60)                                                      */
/*      SPRB0 (0x20001c60)                                                      */
/*      SPRHBM (0x20001c60)                                                     */
/*      SPRC0 (0x20001c60)                                                      */
/*      SPRMCC (0x20001c60)                                                     */
/*      SPRUCC (0x20001c60)                                                     */
/* Register default value on SPRA0: 0x0000DC20                                  */
/* Register default value on SPRB0: 0x0000DC20                                  */
/* Register default value on SPRHBM: 0x0000DC20                                 */
/* Register default value on SPRC0: 0x0000DC20                                  */
/* Register default value on SPRMCC: 0x0000DC20                                 */
/* Register default value on SPRUCC: 0x0000DC20                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* 16.0 GT/s FOM Hint Table
*/


#define G5FOMHINTTBL0_SB_FBLP_REG 0x2C021C60

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 d1 : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 d2 : 5;

                            /* Bits[9:5], Access Type=RW/P, default=0x00000001*/

                            /* See Table 5.3 for definition */
    UINT32 etm : 2;

                            /* Bits[11:10], Access Type=RW/P, default=0x00000003*/

                            /* Time multiplier to EQEVALCTL2.EVALTIME */
    UINT32 ctle : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000001*/

                            /* Enable CTLE Adaptation request */
    UINT32 ftype : 2;

                            /* Bits[14:13], Access Type=RW/P, default=0x00000002*/

                            /* Function type */
    UINT32 enable : 1;

                            /* Bits[15:15], Access Type=RW/P, default=0x00000001*/

                            /* Entry enable */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G5FOMHINTTBL0_SB_FBLP_STRUCT;

/* G5FOMHINTTBL1_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001c64)                                                      */
/*      SPRB0 (0x20001c64)                                                      */
/*      SPRHBM (0x20001c64)                                                     */
/*      SPRC0 (0x20001c64)                                                      */
/*      SPRMCC (0x20001c64)                                                     */
/*      SPRUCC (0x20001c64)                                                     */
/* Register default value on SPRA0: 0x0000DC80                                  */
/* Register default value on SPRB0: 0x0000DC80                                  */
/* Register default value on SPRHBM: 0x0000DC80                                 */
/* Register default value on SPRC0: 0x0000DC80                                  */
/* Register default value on SPRMCC: 0x0000DC80                                 */
/* Register default value on SPRUCC: 0x0000DC80                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* 16.0 GT/s FOM Hint Table
*/


#define G5FOMHINTTBL1_SB_FBLP_REG 0x2C021C64

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 d1 : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 d2 : 5;

                            /* Bits[9:5], Access Type=RW/P, default=0x00000004*/

                            /* See Table 5.3 for definition */
    UINT32 etm : 2;

                            /* Bits[11:10], Access Type=RW/P, default=0x00000003*/

                            /* Time multiplier to EQEVALCTL2.EVALTIME */
    UINT32 ctle : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000001*/

                            /* Enable CTLE Adaptation request */
    UINT32 ftype : 2;

                            /* Bits[14:13], Access Type=RW/P, default=0x00000002*/

                            /* Function type */
    UINT32 enable : 1;

                            /* Bits[15:15], Access Type=RW/P, default=0x00000001*/

                            /* Entry enable */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G5FOMHINTTBL1_SB_FBLP_STRUCT;

/* G5FOMHINTTBL2_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001c68)                                                      */
/*      SPRB0 (0x20001c68)                                                      */
/*      SPRHBM (0x20001c68)                                                     */
/*      SPRC0 (0x20001c68)                                                      */
/*      SPRMCC (0x20001c68)                                                     */
/*      SPRUCC (0x20001c68)                                                     */
/* Register default value on SPRA0: 0x0000DCE0                                  */
/* Register default value on SPRB0: 0x0000DCE0                                  */
/* Register default value on SPRHBM: 0x0000DCE0                                 */
/* Register default value on SPRC0: 0x0000DCE0                                  */
/* Register default value on SPRMCC: 0x0000DCE0                                 */
/* Register default value on SPRUCC: 0x0000DCE0                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* 16.0 GT/s FOM Hint Table
*/


#define G5FOMHINTTBL2_SB_FBLP_REG 0x2C021C68

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 d1 : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 d2 : 5;

                            /* Bits[9:5], Access Type=RW/P, default=0x00000007*/

                            /* See Table 5.3 for definition */
    UINT32 etm : 2;

                            /* Bits[11:10], Access Type=RW/P, default=0x00000003*/

                            /* Time multiplier to EQEVALCTL2.EVALTIME */
    UINT32 ctle : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000001*/

                            /* Enable CTLE Adaptation request */
    UINT32 ftype : 2;

                            /* Bits[14:13], Access Type=RW/P, default=0x00000002*/

                            /* Function type */
    UINT32 enable : 1;

                            /* Bits[15:15], Access Type=RW/P, default=0x00000001*/

                            /* Entry enable */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G5FOMHINTTBL2_SB_FBLP_STRUCT;

/* G5FOMHINTTBL3_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001c6c)                                                      */
/*      SPRB0 (0x20001c6c)                                                      */
/*      SPRHBM (0x20001c6c)                                                     */
/*      SPRC0 (0x20001c6c)                                                      */
/*      SPRMCC (0x20001c6c)                                                     */
/*      SPRUCC (0x20001c6c)                                                     */
/* Register default value on SPRA0: 0x0000DD40                                  */
/* Register default value on SPRB0: 0x0000DD40                                  */
/* Register default value on SPRHBM: 0x0000DD40                                 */
/* Register default value on SPRC0: 0x0000DD40                                  */
/* Register default value on SPRMCC: 0x0000DD40                                 */
/* Register default value on SPRUCC: 0x0000DD40                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* 16.0 GT/s FOM Hint Table
*/


#define G5FOMHINTTBL3_SB_FBLP_REG 0x2C021C6C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 d1 : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 d2 : 5;

                            /* Bits[9:5], Access Type=RW/P, default=0x0000000A*/

                            /* See Table 5.3 for definition */
    UINT32 etm : 2;

                            /* Bits[11:10], Access Type=RW/P, default=0x00000003*/

                            /* Time multiplier to EQEVALCTL2.EVALTIME */
    UINT32 ctle : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000001*/

                            /* Enable CTLE Adaptation request */
    UINT32 ftype : 2;

                            /* Bits[14:13], Access Type=RW/P, default=0x00000002*/

                            /* Function type */
    UINT32 enable : 1;

                            /* Bits[15:15], Access Type=RW/P, default=0x00000001*/

                            /* Entry enable */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G5FOMHINTTBL3_SB_FBLP_STRUCT;

/* G5FOMHINTTBL4_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001c70)                                                      */
/*      SPRB0 (0x20001c70)                                                      */
/*      SPRHBM (0x20001c70)                                                     */
/*      SPRC0 (0x20001c70)                                                      */
/*      SPRMCC (0x20001c70)                                                     */
/*      SPRUCC (0x20001c70)                                                     */
/* Register default value on SPRA0: 0x0000FC00                                  */
/* Register default value on SPRB0: 0x0000FC00                                  */
/* Register default value on SPRHBM: 0x0000FC00                                 */
/* Register default value on SPRC0: 0x0000FC00                                  */
/* Register default value on SPRMCC: 0x0000FC00                                 */
/* Register default value on SPRUCC: 0x0000FC00                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* 16.0 GT/s FOM Hint Table
*/


#define G5FOMHINTTBL4_SB_FBLP_REG 0x2C021C70

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 d1 : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 d2 : 5;

                            /* Bits[9:5], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 etm : 2;

                            /* Bits[11:10], Access Type=RW/P, default=0x00000003*/

                            /* Time multiplier to EQEVALCTL2.EVALTIME */
    UINT32 ctle : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000001*/

                            /* Enable CTLE Adaptation request */
    UINT32 ftype : 2;

                            /* Bits[14:13], Access Type=RW/P, default=0x00000003*/

                            /* Function type */
    UINT32 enable : 1;

                            /* Bits[15:15], Access Type=RW/P, default=0x00000001*/

                            /* Entry enable */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G5FOMHINTTBL4_SB_FBLP_STRUCT;

/* G5FOMHINTTBL5_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001c74)                                                      */
/*      SPRB0 (0x20001c74)                                                      */
/*      SPRHBM (0x20001c74)                                                     */
/*      SPRC0 (0x20001c74)                                                      */
/*      SPRMCC (0x20001c74)                                                     */
/*      SPRUCC (0x20001c74)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* 16.0 GT/s FOM Hint Table
*/


#define G5FOMHINTTBL5_SB_FBLP_REG 0x2C021C74

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 d1 : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 d2 : 5;

                            /* Bits[9:5], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 etm : 2;

                            /* Bits[11:10], Access Type=RW/P, default=0x00000000*/

                            /* Time multiplier to EQEVALCTL2.EVALTIME */
    UINT32 ctle : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000000*/

                            /* Enable CTLE Adaptation request */
    UINT32 ftype : 2;

                            /* Bits[14:13], Access Type=RW/P, default=0x00000000*/

                            /* Function type */
    UINT32 enable : 1;

                            /* Bits[15:15], Access Type=RW/P, default=0x00000000*/

                            /* Entry enable */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G5FOMHINTTBL5_SB_FBLP_STRUCT;

/* G5FOMHINTTBL6_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001c78)                                                      */
/*      SPRB0 (0x20001c78)                                                      */
/*      SPRHBM (0x20001c78)                                                     */
/*      SPRC0 (0x20001c78)                                                      */
/*      SPRMCC (0x20001c78)                                                     */
/*      SPRUCC (0x20001c78)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* 16.0 GT/s FOM Hint Table
*/


#define G5FOMHINTTBL6_SB_FBLP_REG 0x2C021C78

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 d1 : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 d2 : 5;

                            /* Bits[9:5], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 etm : 2;

                            /* Bits[11:10], Access Type=RW/P, default=0x00000000*/

                            /* Time multiplier to EQEVALCTL2.EVALTIME */
    UINT32 ctle : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000000*/

                            /* Enable CTLE Adaptation request */
    UINT32 ftype : 2;

                            /* Bits[14:13], Access Type=RW/P, default=0x00000000*/

                            /* Function type */
    UINT32 enable : 1;

                            /* Bits[15:15], Access Type=RW/P, default=0x00000000*/

                            /* Entry enable */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G5FOMHINTTBL6_SB_FBLP_STRUCT;

/* G5FOMHINTTBL7_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001c7c)                                                      */
/*      SPRB0 (0x20001c7c)                                                      */
/*      SPRHBM (0x20001c7c)                                                     */
/*      SPRC0 (0x20001c7c)                                                      */
/*      SPRMCC (0x20001c7c)                                                     */
/*      SPRUCC (0x20001c7c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* 16.0 GT/s FOM Hint Table
*/


#define G5FOMHINTTBL7_SB_FBLP_REG 0x2C021C7C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 d1 : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 d2 : 5;

                            /* Bits[9:5], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 etm : 2;

                            /* Bits[11:10], Access Type=RW/P, default=0x00000000*/

                            /* Time multiplier to EQEVALCTL2.EVALTIME */
    UINT32 ctle : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000000*/

                            /* Enable CTLE Adaptation request */
    UINT32 ftype : 2;

                            /* Bits[14:13], Access Type=RW/P, default=0x00000000*/

                            /* Function type */
    UINT32 enable : 1;

                            /* Bits[15:15], Access Type=RW/P, default=0x00000000*/

                            /* Entry enable */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G5FOMHINTTBL7_SB_FBLP_STRUCT;

/* G5FOMHINTTBL8_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001c80)                                                      */
/*      SPRB0 (0x20001c80)                                                      */
/*      SPRHBM (0x20001c80)                                                     */
/*      SPRC0 (0x20001c80)                                                      */
/*      SPRMCC (0x20001c80)                                                     */
/*      SPRUCC (0x20001c80)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* 16.0 GT/s FOM Hint Table
*/


#define G5FOMHINTTBL8_SB_FBLP_REG 0x2C021C80

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 d1 : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 d2 : 5;

                            /* Bits[9:5], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 etm : 2;

                            /* Bits[11:10], Access Type=RW/P, default=0x00000000*/

                            /* Time multiplier to EQEVALCTL2.EVALTIME */
    UINT32 ctle : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000000*/

                            /* Enable CTLE Adaptation request */
    UINT32 ftype : 2;

                            /* Bits[14:13], Access Type=RW/P, default=0x00000000*/

                            /* Function type */
    UINT32 enable : 1;

                            /* Bits[15:15], Access Type=RW/P, default=0x00000000*/

                            /* Entry enable */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G5FOMHINTTBL8_SB_FBLP_STRUCT;

/* G5FOMHINTTBL9_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001c84)                                                      */
/*      SPRB0 (0x20001c84)                                                      */
/*      SPRHBM (0x20001c84)                                                     */
/*      SPRC0 (0x20001c84)                                                      */
/*      SPRMCC (0x20001c84)                                                     */
/*      SPRUCC (0x20001c84)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* 16.0 GT/s FOM Hint Table
*/


#define G5FOMHINTTBL9_SB_FBLP_REG 0x2C021C84

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 d1 : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 d2 : 5;

                            /* Bits[9:5], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 etm : 2;

                            /* Bits[11:10], Access Type=RW/P, default=0x00000000*/

                            /* Time multiplier to EQEVALCTL2.EVALTIME */
    UINT32 ctle : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000000*/

                            /* Enable CTLE Adaptation request */
    UINT32 ftype : 2;

                            /* Bits[14:13], Access Type=RW/P, default=0x00000000*/

                            /* Function type */
    UINT32 enable : 1;

                            /* Bits[15:15], Access Type=RW/P, default=0x00000000*/

                            /* Entry enable */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G5FOMHINTTBL9_SB_FBLP_STRUCT;

/* G5FOMHINTTBL10_SB_FBLP_REG supported on:                                     */
/*      SPRA0 (0x20001c88)                                                      */
/*      SPRB0 (0x20001c88)                                                      */
/*      SPRHBM (0x20001c88)                                                     */
/*      SPRC0 (0x20001c88)                                                      */
/*      SPRMCC (0x20001c88)                                                     */
/*      SPRUCC (0x20001c88)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* 16.0 GT/s FOM Hint Table
*/


#define G5FOMHINTTBL10_SB_FBLP_REG 0x2C021C88

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 d1 : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 d2 : 5;

                            /* Bits[9:5], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 etm : 2;

                            /* Bits[11:10], Access Type=RW/P, default=0x00000000*/

                            /* Time multiplier to EQEVALCTL2.EVALTIME */
    UINT32 ctle : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000000*/

                            /* Enable CTLE Adaptation request */
    UINT32 ftype : 2;

                            /* Bits[14:13], Access Type=RW/P, default=0x00000000*/

                            /* Function type */
    UINT32 enable : 1;

                            /* Bits[15:15], Access Type=RW/P, default=0x00000000*/

                            /* Entry enable */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G5FOMHINTTBL10_SB_FBLP_STRUCT;

/* G5FOMHINTTBL11_SB_FBLP_REG supported on:                                     */
/*      SPRA0 (0x20001c8c)                                                      */
/*      SPRB0 (0x20001c8c)                                                      */
/*      SPRHBM (0x20001c8c)                                                     */
/*      SPRC0 (0x20001c8c)                                                      */
/*      SPRMCC (0x20001c8c)                                                     */
/*      SPRUCC (0x20001c8c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* 16.0 GT/s FOM Hint Table
*/


#define G5FOMHINTTBL11_SB_FBLP_REG 0x2C021C8C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 d1 : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 d2 : 5;

                            /* Bits[9:5], Access Type=RW/P, default=0x00000000*/

                            /* See Table 5.3 for definition */
    UINT32 etm : 2;

                            /* Bits[11:10], Access Type=RW/P, default=0x00000000*/

                            /* Time multiplier to EQEVALCTL2.EVALTIME */
    UINT32 ctle : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000000*/

                            /* Enable CTLE Adaptation request */
    UINT32 ftype : 2;

                            /* Bits[14:13], Access Type=RW/P, default=0x00000000*/

                            /* Function type */
    UINT32 enable : 1;

                            /* Bits[15:15], Access Type=RW/P, default=0x00000000*/

                            /* Entry enable */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G5FOMHINTTBL11_SB_FBLP_STRUCT;

/* EQEVALCTL_SB_FBLP_REG supported on:                                          */
/*      SPRA0 (0x20001d00)                                                      */
/*      SPRB0 (0x20001d00)                                                      */
/*      SPRHBM (0x20001d00)                                                     */
/*      SPRC0 (0x20001d00)                                                      */
/*      SPRMCC (0x20001d00)                                                     */
/*      SPRUCC (0x20001d00)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* EQ EVAL Control
*/


#define EQEVALCTL_SB_FBLP_REG 0x2C021D00

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 rsvd : 24;

                            /* Bits[23:0], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 defpreset : 4;

                            /* Bits[27:24], Access Type=RW/P, default=0x00000000*/

                            /*
                               Preset that will be used if 8GT/s entered w/out
                               receiving EQTS2s. preset 0000 is -6dB de-
                               emphasis and 0dB preshoot.
                            */
    UINT32 bypasseqts2 : 1;

                            /* Bits[28:28], Access Type=RW/P, default=0x00000000*/

                            /*
                               For a downstream link, this allows entry to Gen3
                               w/out sending EQTS2 in 8b/10b mode prior to
                               transmitting at 8GT/s.
                            */
    UINT32 nodlinitblk : 1;

                            /* Bits[29:29], Access Type=RW/P, default=0x00000000*/

                            /*
                               Don't block the DL state machine from starting
                               DL Init once initial L0 reached.
                            */
    UINT32 bypasseq : 1;

                            /* Bits[30:30], Access Type=RW/P, default=0x00000000*/

                            /* Bypass all aspects of Adaptive EQ. */
    UINT32 rsvd_31 : 1;

                            /* Bits[31:31], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} EQEVALCTL_SB_FBLP_STRUCT;

/* EQEVALCTL2_SB_FBLP_REG supported on:                                         */
/*      SPRA0 (0x20001d04)                                                      */
/*      SPRB0 (0x20001d04)                                                      */
/*      SPRHBM (0x20001d04)                                                     */
/*      SPRC0 (0x20001d04)                                                      */
/*      SPRMCC (0x20001d04)                                                     */
/*      SPRUCC (0x20001d04)                                                     */
/* Register default value on SPRA0: 0x0000FF00                                  */
/* Register default value on SPRB0: 0x0000FF00                                  */
/* Register default value on SPRHBM: 0x0000FF00                                 */
/* Register default value on SPRC0: 0x0000FF00                                  */
/* Register default value on SPRMCC: 0x0000FF00                                 */
/* Register default value on SPRUCC: 0x0000FF00                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* EQ EVAL Control 2
*/


#define EQEVALCTL2_SB_FBLP_REG 0x2C021D04

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 evaltime : 8;

                            /* Bits[7:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               Field defined to do each coeff eval as
                               following. Evaltime[7:6] = unit Evaltime[5:0] =
                               value Unit: 11=>1ms 10=>128us 01=>16u 00=>1us
                               This field should not be programmed in value of
                               0 (unit=any, value=0) for devices connected to
                               WM design.
                            */
    UINT32 evalatt : 8;

                            /* Bits[15:8], Access Type=RW/V/P, default=0x000000FF*/

                            /*
                               Max number of coeff for a lane to eval before
                               quitting eval phase. Value of 0 means no limit.
                               The value is scaled by the link partners
                               advertised FS value (adj_val =
                               roundup(val*(FS+1)/64)). If FS is 63, the spec
                               max, the value would be unaltered, whereas for a
                               FS of 31, the value written to the config
                               register would be halved. One attempt will be
                               made if the programmed value is greater than 0
                               and the adjusted value would have resulted in a
                               value of 0. Any evaluation attempt following an
                               InvalidRequest indication on the PIPE interface
                               is not counted as an attempt.
                            */
    UINT32 rsvd : 7;

                            /* Bits[22:16], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 reeqspddegrade : 1;

                            /* Bits[23:23], Access Type=RW/P, default=0x00000000*/

                            /*
                               When set, a self detected need to re-equalize
                               will result in a down shift in speed and a
                               disabling of the current rate (8GT/s or higher)
                               and all rates above it.
                            */
    UINT32 skipevalph : 1;

                            /* Bits[24:24], Access Type=RW/P, default=0x00000000*/

                            /*
                               Skip execution of the master eval coeff phase
                               (up component phase 3, down component phase 2).
                               For downstream it skips phase2/3 completely per
                               PCIe Spec. For upstream it passes quickly
                               through phase2 doing no real eval.
                            */
    UINT32 ignoremd : 1;

                            /* Bits[25:25], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, along with a given lane's
                               GEN3TXCOEFF.LNOVRD register being set, any
                               requested coefficient or preset that would
                               normally be rejected is not and the request is
                               silently ignored. If the lane's
                               GEN3TXCOEFF.LNOVRD register is not set, then
                               this field has no effect on that lane.
                            */
    UINT32 exteieos : 1;

                            /* Bits[26:26], Access Type=RW/P, default=0x00000000*/

                            /*
                               Enable extended EIEOS request during master eval
                               stage (up component phase 3, down component
                               phase 2).
                            */
    UINT32 hwreeqen : 1;

                            /* Bits[27:27], Access Type=RW/P, default=0x00000000*/

                            /* Allow HW to initiate re-equalization. */
    UINT32 hwquiesce : 1;

                            /* Bits[28:28], Access Type=RW/P, default=0x00000000*/

                            /*
                               H/W will require quiescing of the link prior to
                               re-equalization
                            */
    UINT32 ignorequiesce : 1;

                            /* Bits[29:29], Access Type=RW/P, default=0x00000000*/

                            /*
                               H/W will ignore quiesce bit received from
                               downstream component
                            */
    UINT32 blkupspeed : 1;

                            /* Bits[30:30], Access Type=RW/P, default=0x00000000*/

                            /*
                               H/W will not initiate an up step in speed to
                               8GT/s in order to advertise or re-do
                               equalization
                            */
    UINT32 blkupeqreq : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               When this bit is set to 1, the following two
                               events will NOT set the request eq bit in TS2s
                               during Rec.RcvrCfg following Rec.Equalization. -
                               Equalization engine deems link usable but not
                               optimal (this would normally trigger an
                               immediate eq request in TS2s) - Coeff received
                               in Rec.RcvrLck follow Rec.Eq don't match
                               negotiated coeff during Eq.
                            */

  } Bits;
  UINT32 Data;

} EQEVALCTL2_SB_FBLP_STRUCT;

/* EQEVALCTL3_SB_FBLP_REG supported on:                                         */
/*      SPRA0 (0x20001d08)                                                      */
/*      SPRB0 (0x20001d08)                                                      */
/*      SPRHBM (0x20001d08)                                                     */
/*      SPRC0 (0x20001d08)                                                      */
/*      SPRMCC (0x20001d08)                                                     */
/*      SPRUCC (0x20001d08)                                                     */
/* Register default value on SPRA0: 0x00030802                                  */
/* Register default value on SPRB0: 0x00030802                                  */
/* Register default value on SPRHBM: 0x00030802                                 */
/* Register default value on SPRC0: 0x00030802                                  */
/* Register default value on SPRMCC: 0x00030802                                 */
/* Register default value on SPRUCC: 0x00030802                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* EQ EVAL Control 3
*/


#define EQEVALCTL3_SB_FBLP_REG 0x2C021D08

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 errthresh1 : 8;

                            /* Bits[7:0], Access Type=RW/P, default=0x00000002*/

                            /*
                               Block error count limit considered optimal.
                               Setting of 0 disables block error check.
                            */
    UINT32 errthresh2 : 8;

                            /* Bits[15:8], Access Type=RW/P, default=0x00000008*/

                            /*
                               Block error count limit considered usable, but
                               may spawn a redo of Equalization if enabled.
                               Setting of 0 causes all checks to at least pass
                               the Threshold 2 check.
                            */
    UINT32 overt2spdfail : 1;

                            /* Bits[16:16], Access Type=RW/P, default=0x00000001*/

                            /*
                               If block error count measured over Threshold 2,
                               force link to fail down to lower speed
                            */
    UINT32 undert2redo : 1;

                            /* Bits[17:17], Access Type=RW/P, default=0x00000001*/

                            /*
                               If block error count under Threshold 2 but equal
                               to or over Threshold 1, request a redo of
                               equalization
                            */
    UINT32 rsvd : 14;

                            /* Bits[31:18], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} EQEVALCTL3_SB_FBLP_STRUCT;

/* EQEVALCTL4_SB_FBLP_REG supported on:                                         */
/*      SPRA0 (0x20001d0c)                                                      */
/*      SPRB0 (0x20001d0c)                                                      */
/*      SPRHBM (0x20001d0c)                                                     */
/*      SPRC0 (0x20001d0c)                                                      */
/*      SPRMCC (0x20001d0c)                                                     */
/*      SPRUCC (0x20001d0c)                                                     */
/* Register default value on SPRA0: 0x64020000                                  */
/* Register default value on SPRB0: 0x64020000                                  */
/* Register default value on SPRHBM: 0x64020000                                 */
/* Register default value on SPRC0: 0x64020000                                  */
/* Register default value on SPRMCC: 0x64020000                                 */
/* Register default value on SPRUCC: 0x64020000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* EQ EVAL Control 4
*/


#define EQEVALCTL4_SB_FBLP_REG 0x2C021D0C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 rsvd : 17;

                            /* Bits[16:0], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 fomsearch_en : 1;

                            /* Bits[17:17], Access Type=RW/V/P, default=0x00000001*/

                            /* Figure of Merit search enable for WMP. */
    UINT32 rsvd_18 : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 rxhint7ovr_en : 1;

                            /* Bits[19:19], Access Type=RW/V/P, default=0x00000000*/

                            /*
                               When set to 1, the starting coeff to evaluate
                               (phase2 upstream, phase3 downstream) will be
                               derived from Rx Hint Table entry DBXX (7). This
                               overrides the preferred preset mode and the
                               normal Rx Hint table mode.
                            */
    UINT32 rsvd_20 : 3;

                            /* Bits[22:20], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 qchktmunit : 1;

                            /* Bits[23:23], Access Type=RW/P, default=0x00000000*/

                            /*
                               0 = time limit is QCHKTMVAL * 1us, 1 = time
                               limit is QCHKTMVAL * 128us
                            */
    UINT32 qchktmval : 7;

                            /* Bits[30:24], Access Type=RW/P, default=0x00000064*/

                            /*
                               Final evaluation loop time. This loop will not
                               ask the IOs to enabled any adaptive eq logic and
                               is used as a quick sanity check of link errors.
                            */
    UINT32 reverseeqts2 : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               Allows EQTS2s to be sent by upstream port or
                               decoded by downstream port to override the
                               LinkEqCtl.DownStreamPortTxPreset value. For an
                               upstream port, the PREFPRESET1 value will be
                               sent in the EQTS2s it sends to the upstream
                               component. For a downstream port, this will
                               enable it to accept EQTS2s from the upstream
                               port and override the
                               LinkEqCtl.DownstreamTxPreset value.
                            */

  } Bits;
  UINT32 Data;

} EQEVALCTL4_SB_FBLP_STRUCT;

/* EQEVALCTL5_SB_FBLP_REG supported on:                                         */
/*      SPRA0 (0x20001d10)                                                      */
/*      SPRB0 (0x20001d10)                                                      */
/*      SPRHBM (0x20001d10)                                                     */
/*      SPRC0 (0x20001d10)                                                      */
/*      SPRMCC (0x20001d10)                                                     */
/*      SPRUCC (0x20001d10)                                                     */
/* Register default value on SPRA0: 0x3A87F003                                  */
/* Register default value on SPRB0: 0x3A87F003                                  */
/* Register default value on SPRHBM: 0x3A87F003                                 */
/* Register default value on SPRC0: 0x3A87F003                                  */
/* Register default value on SPRMCC: 0x3A87F003                                 */
/* Register default value on SPRUCC: 0x3A87F003                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* EQ EVAL Control 5
*/


#define EQEVALCTL5_SB_FBLP_REG 0x2C021D10

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 locktime : 4;

                            /* Bits[3:0], Access Type=RW/P, default=0x00000003*/

                            /*
                               Max time to allow block lock on new coeff
                               request. Time is value*4us. When this field is
                               set to 0, it will remain in Lock state until
                               lock is achieved or the primary timer for
                               Phase2/3 expires (thus an EQ failure).
                            */
    UINT32 coeffevalwait : 8;

                            /* Bits[11:4], Access Type=RW/P, default=0x00000000*/

                            /*
                               Time to wait after lock (or lock timeout) before
                               enabling the IOs to evaluate the new coeff
                               settings. This allows the circuits some extra
                               time to setup their evaluation logic. Time is
                               value*4us.
                            */
    UINT32 usepreevalwait : 8;

                            /* Bits[19:12], Access Type=RW/P, default=0x0000007F*/

                            /*
                               Time to wait after lock (or lock timeout) before
                               enabling the IOs to evaluate the new tx preset
                               settings. This allows the circuits some extra
                               time to setup their evaluation logic. Time is
                               value*4us.
                            */
    UINT32 phasetodis : 3;

                            /* Bits[22:20], Access Type=RW/P, default=0x00000000*/

                            /*
                               Disable phase 1/2/3 timeouts bit 0 - phase 1 bit
                               1 - phase 2 bit 3 - phase 3
                            */
    UINT32 phmtimerval : 4;

                            /* Bits[26:23], Access Type=RW/P, default=0x00000005*/

                            /*
                               Master phase (UP=Phase2, DP=Phase3) timeout.
                               time limit is (val+1)*4ms.
                            */
    UINT32 phstimerval : 4;

                            /* Bits[30:27], Access Type=RW/P, default=0x00000007*/

                            /*
                               Slave phase (UP=Phase3, DP=Phase2) timeout. time
                               limit is (val+1)*4ms.
                            */
    UINT32 rsvd : 1;

                            /* Bits[31:31], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} EQEVALCTL5_SB_FBLP_STRUCT;

/* EQEVALCTL6_SB_FBLP_REG supported on:                                         */
/*      SPRA0 (0x20001d14)                                                      */
/*      SPRB0 (0x20001d14)                                                      */
/*      SPRHBM (0x20001d14)                                                     */
/*      SPRC0 (0x20001d14)                                                      */
/*      SPRMCC (0x20001d14)                                                     */
/*      SPRUCC (0x20001d14)                                                     */
/* Register default value on SPRA0: 0x00000623                                  */
/* Register default value on SPRB0: 0x00000623                                  */
/* Register default value on SPRHBM: 0x00000623                                 */
/* Register default value on SPRC0: 0x00000623                                  */
/* Register default value on SPRMCC: 0x00000623                                 */
/* Register default value on SPRUCC: 0x00000623                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* EQ EVAL Control 6
*/


#define EQEVALCTL6_SB_FBLP_REG 0x2C021D14

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 backofftime : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000003*/

                            /*
                               Time in EQ before starting CTLE Adapt and then
                               TS lock val< 16 => val[3:0],6'h0, CXLT_TOU_4NS
                               0-3.84us +0/-4ns val*256ns val>=16 =>
                               val[4:0],5'h0, CXLT_TOU_128NS 0-126.98us
                               +0/-128ns val*4us
                            */
    UINT32 reeqctleadpten : 1;

                            /* Bits[5:5], Access Type=RW/P, default=0x00000001*/

                            /*
                               Enable CTLE Adaption on entry to phase1/0 not
                               from speed change w/EQTS2
                            */
    UINT32 reeqctleadptwt : 3;

                            /* Bits[8:6], Access Type=RW/P, default=0x00000000*/

                            /*
                               Time before starting CTLE after entry to
                               DP.PH1/UP.PH0. 000 = 512ns, 001 = 1us, 010 =
                               1.5us, 011 = 2us, 100 = 4us, 101 = 8us, 110 =
                               12us, 111 = 16us
                            */
    UINT32 lbctleadpten : 1;

                            /* Bits[9:9], Access Type=RW/P, default=0x00000001*/

                            /*
                               Enable CTLE Adaption on entry to Loopback.Master
                               @Gen3.
                            */
    UINT32 lbctleadptwt : 3;

                            /* Bits[12:10], Access Type=RW/P, default=0x00000001*/

                            /*
                               Time before starting CTLE after EI exit detect.
                               000 = 512ns, 001 = 1us, 010 = 1.5us, 011 = 2us,
                               100 = 4us, 101 = 8us, 110 = 12us, 111 = 16us
                            */
    UINT32 spdchgctleadpten : 1;

                            /* Bits[13:13], Access Type=RW/P, default=0x00000000*/

                            /*
                               Backup to the IOs doing CTLE for speed change to
                               G3. Control will initiate a CTLE adapt after
                               speed changed and Rx EI Exit.
                            */
    UINT32 locbusfetchen : 1;

                            /* Bits[14:14], Access Type=RO, default=0x00000000*/

                            /* Enable Local bus fetch of coeff table. */
    UINT32 locbusfetchinit : 1;

                            /* Bits[15:15], Access Type=RO, default=0x00000000*/

                            /*
                               Initiate a manual fetch self clears when
                               complete.
                            */
    UINT32 rsvd : 12;

                            /* Bits[27:16], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 reqlbmstrcoeff : 1;

                            /* Bits[28:28], Access Type=RW/P, default=0x00000000*/

                            /*
                               When intending to master loopback at Gen3
                               speeds, this bit can be used to enable the
                               dictation of what far end Tx EQ settings to use.
                               The per lane settings are defined in the
                               GEN3FARTXCOEFF#.D1/2/FTYPE fields. The LNOVRD
                               field is not required to be set. Valid values
                               must also be captured or programmed into the
                               EQFARFSLF register.
                            */
    UINT32 rsvd_29 : 3;

                            /* Bits[31:29], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} EQEVALCTL6_SB_FBLP_STRUCT;

/* EQEVALCTL7_SB_FBLP_REG supported on:                                         */
/*      SPRA0 (0x20001d18)                                                      */
/*      SPRB0 (0x20001d18)                                                      */
/*      SPRHBM (0x20001d18)                                                     */
/*      SPRC0 (0x20001d18)                                                      */
/*      SPRMCC (0x20001d18)                                                     */
/*      SPRUCC (0x20001d18)                                                     */
/* Register default value on SPRA0: 0x000000FF                                  */
/* Register default value on SPRB0: 0x000000FF                                  */
/* Register default value on SPRHBM: 0x000000FF                                 */
/* Register default value on SPRC0: 0x000000FF                                  */
/* Register default value on SPRMCC: 0x000000FF                                 */
/* Register default value on SPRUCC: 0x000000FF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* EQ EVAL Control 7
*/


#define EQEVALCTL7_SB_FBLP_REG 0x2C021D18

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 fomstplim : 8;

                            /* Bits[7:0], Access Type=RW/P, default=0x000000FF*/

                            /*
                               Max FOM value, if FOM>=FOMSTPLIM, exit
                               evaluation.
                            */
    UINT32 rsvd : 24;

                            /* Bits[31:8], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} EQEVALCTL7_SB_FBLP_STRUCT;

/* EQEVALSTS_SB_FBLP_REG supported on:                                          */
/*      SPRA0 (0x20001d24)                                                      */
/*      SPRB0 (0x20001d24)                                                      */
/*      SPRHBM (0x20001d24)                                                     */
/*      SPRC0 (0x20001d24)                                                      */
/*      SPRMCC (0x20001d24)                                                     */
/*      SPRUCC (0x20001d24)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* EQ EVAL Status
*/


#define EQEVALSTS_SB_FBLP_REG 0x2C021D24

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lnopt0 : 1;

                            /* Bits[0:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting */
    UINT32 lnopt1 : 1;

                            /* Bits[1:1], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting */
    UINT32 lnopt2 : 1;

                            /* Bits[2:2], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting */
    UINT32 lnopt3 : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting */
    UINT32 lnopt4 : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting */
    UINT32 lnopt5 : 1;

                            /* Bits[5:5], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting */
    UINT32 lnopt6 : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting */
    UINT32 lnopt7 : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting */
    UINT32 lnopt8 : 1;

                            /* Bits[8:8], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting */
    UINT32 lnopt9 : 1;

                            /* Bits[9:9], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting */
    UINT32 lnopt10 : 1;

                            /* Bits[10:10], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting */
    UINT32 lnopt11 : 1;

                            /* Bits[11:11], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting */
    UINT32 lnopt12 : 1;

                            /* Bits[12:12], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting */
    UINT32 lnopt13 : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting */
    UINT32 lnopt14 : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting */
    UINT32 lnopt15 : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting */
    UINT32 lnloop0 : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE
                            */
    UINT32 lnloop1 : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE
                            */
    UINT32 lnloop2 : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE
                            */
    UINT32 lnloop3 : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE
                            */
    UINT32 lnloop4 : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE
                            */
    UINT32 lnloop5 : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE
                            */
    UINT32 lnloop6 : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE
                            */
    UINT32 lnloop7 : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE
                            */
    UINT32 lnloop8 : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE
                            */
    UINT32 lnloop9 : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE
                            */
    UINT32 lnloop10 : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE
                            */
    UINT32 lnloop11 : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE
                            */
    UINT32 lnloop12 : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE
                            */
    UINT32 lnloop13 : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE
                            */
    UINT32 lnloop14 : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE
                            */
    UINT32 lnloop15 : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE
                            */

  } Bits;
  UINT32 Data;

} EQEVALSTS_SB_FBLP_STRUCT;

/* EQEVALSTS2_SB_FBLP_REG supported on:                                         */
/*      SPRA0 (0x20001d28)                                                      */
/*      SPRB0 (0x20001d28)                                                      */
/*      SPRHBM (0x20001d28)                                                     */
/*      SPRC0 (0x20001d28)                                                      */
/*      SPRMCC (0x20001d28)                                                     */
/*      SPRUCC (0x20001d28)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* EQ EVAL Status 2
*/


#define EQEVALSTS2_SB_FBLP_REG 0x2C021D28

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 evalatts : 8;

                            /* Bits[7:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Number of eval attempts to get all lanes
                               optimal.
                            */
    UINT32 reeqspddisg3 : 1;

                            /* Bits[8:8], Access Type=RW/1C/V, default=0x00000000*/

                            /*
                               When set, hardware has disabled 8GT/s and above
                               data rates due to a need to re-equalize.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} EQEVALSTS2_SB_FBLP_STRUCT;

/* EQEVALSTS3_SB_FBLP_REG supported on:                                         */
/*      SPRA0 (0x20001d2c)                                                      */
/*      SPRB0 (0x20001d2c)                                                      */
/*      SPRHBM (0x20001d2c)                                                     */
/*      SPRC0 (0x20001d2c)                                                      */
/*      SPRMCC (0x20001d2c)                                                     */
/*      SPRUCC (0x20001d2c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* EQ EVAL Status 3
*/


#define EQEVALSTS3_SB_FBLP_REG 0x2C021D2C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lnerrth2met0 : 1;

                            /* Bits[0:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2
                            */
    UINT32 lnerrth2met1 : 1;

                            /* Bits[1:1], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2
                            */
    UINT32 lnerrth2met2 : 1;

                            /* Bits[2:2], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2
                            */
    UINT32 lnerrth2met3 : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2
                            */
    UINT32 lnerrth2met4 : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2
                            */
    UINT32 lnerrth2met5 : 1;

                            /* Bits[5:5], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2
                            */
    UINT32 lnerrth2met6 : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2
                            */
    UINT32 lnerrth2met7 : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2
                            */
    UINT32 lnerrth2met8 : 1;

                            /* Bits[8:8], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2
                            */
    UINT32 lnerrth2met9 : 1;

                            /* Bits[9:9], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2
                            */
    UINT32 lnerrth2met10 : 1;

                            /* Bits[10:10], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2
                            */
    UINT32 lnerrth2met11 : 1;

                            /* Bits[11:11], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2
                            */
    UINT32 lnerrth2met12 : 1;

                            /* Bits[12:12], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2
                            */
    UINT32 lnerrth2met13 : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2
                            */
    UINT32 lnerrth2met14 : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2
                            */
    UINT32 lnerrth2met15 : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2
                            */
    UINT32 lnrulelim0 : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Hit invalid request too many times: Lane
                               evaluation stopped due to coeff rule boundary
                               (IO tap update would result in rule violation)
                               FOM = Search complete: Complete gets set when
                               lane SM goes to OPTIMAL or NON_OPTIMAL and the
                               full search has completed (so cases of non-
                               optimal w/out complete being set are possible).
                            */
    UINT32 lnrulelim1 : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Hit invalid request too many times: Lane
                               evaluation stopped due to coeff rule boundary
                               (IO tap update would result in rule violation)
                               FOM = Search complete: Complete gets set when
                               lane SM goes to OPTIMAL or NON_OPTIMAL and the
                               full search has completed (so cases of non-
                               optimal w/out complete being set are possible).
                            */
    UINT32 lnrulelim2 : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Hit invalid request too many times: Lane
                               evaluation stopped due to coeff rule boundary
                               (IO tap update would result in rule violation)
                               FOM = Search complete: Complete gets set when
                               lane SM goes to OPTIMAL or NON_OPTIMAL and the
                               full search has completed (so cases of non-
                               optimal w/out complete being set are possible).
                            */
    UINT32 lnrulelim3 : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Hit invalid request too many times: Lane
                               evaluation stopped due to coeff rule boundary
                               (IO tap update would result in rule violation)
                               FOM = Search complete: Complete gets set when
                               lane SM goes to OPTIMAL or NON_OPTIMAL and the
                               full search has completed (so cases of non-
                               optimal w/out complete being set are possible).
                            */
    UINT32 lnrulelim4 : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Hit invalid request too many times: Lane
                               evaluation stopped due to coeff rule boundary
                               (IO tap update would result in rule violation)
                               FOM = Search complete: Complete gets set when
                               lane SM goes to OPTIMAL or NON_OPTIMAL and the
                               full search has completed (so cases of non-
                               optimal w/out complete being set are possible).
                            */
    UINT32 lnrulelim5 : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Hit invalid request too many times: Lane
                               evaluation stopped due to coeff rule boundary
                               (IO tap update would result in rule violation)
                               FOM = Search complete: Complete gets set when
                               lane SM goes to OPTIMAL or NON_OPTIMAL and the
                               full search has completed (so cases of non-
                               optimal w/out complete being set are possible).
                            */
    UINT32 lnrulelim6 : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Hit invalid request too many times: Lane
                               evaluation stopped due to coeff rule boundary
                               (IO tap update would result in rule violation)
                               FOM = Search complete: Complete gets set when
                               lane SM goes to OPTIMAL or NON_OPTIMAL and the
                               full search has completed (so cases of non-
                               optimal w/out complete being set are possible).
                            */
    UINT32 lnrulelim7 : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Hit invalid request too many times: Lane
                               evaluation stopped due to coeff rule boundary
                               (IO tap update would result in rule violation)
                               FOM = Search complete: Complete gets set when
                               lane SM goes to OPTIMAL or NON_OPTIMAL and the
                               full search has completed (so cases of non-
                               optimal w/out complete being set are possible).
                            */
    UINT32 lnrulelim8 : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Hit invalid request too many times: Lane
                               evaluation stopped due to coeff rule boundary
                               (IO tap update would result in rule violation)
                               FOM = Search complete: Complete gets set when
                               lane SM goes to OPTIMAL or NON_OPTIMAL and the
                               full search has completed (so cases of non-
                               optimal w/out complete being set are possible).
                            */
    UINT32 lnrulelim9 : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Hit invalid request too many times: Lane
                               evaluation stopped due to coeff rule boundary
                               (IO tap update would result in rule violation)
                               FOM = Search complete: Complete gets set when
                               lane SM goes to OPTIMAL or NON_OPTIMAL and the
                               full search has completed (so cases of non-
                               optimal w/out complete being set are possible).
                            */
    UINT32 lnrulelim10 : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Hit invalid request too many times: Lane
                               evaluation stopped due to coeff rule boundary
                               (IO tap update would result in rule violation)
                               FOM = Search complete: Complete gets set when
                               lane SM goes to OPTIMAL or NON_OPTIMAL and the
                               full search has completed (so cases of non-
                               optimal w/out complete being set are possible).
                            */
    UINT32 lnrulelim11 : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Hit invalid request too many times: Lane
                               evaluation stopped due to coeff rule boundary
                               (IO tap update would result in rule violation)
                               FOM = Search complete: Complete gets set when
                               lane SM goes to OPTIMAL or NON_OPTIMAL and the
                               full search has completed (so cases of non-
                               optimal w/out complete being set are possible).
                            */
    UINT32 lnrulelim12 : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Hit invalid request too many times: Lane
                               evaluation stopped due to coeff rule boundary
                               (IO tap update would result in rule violation)
                               FOM = Search complete: Complete gets set when
                               lane SM goes to OPTIMAL or NON_OPTIMAL and the
                               full search has completed (so cases of non-
                               optimal w/out complete being set are possible).
                            */
    UINT32 lnrulelim13 : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Hit invalid request too many times: Lane
                               evaluation stopped due to coeff rule boundary
                               (IO tap update would result in rule violation)
                               FOM = Search complete: Complete gets set when
                               lane SM goes to OPTIMAL or NON_OPTIMAL and the
                               full search has completed (so cases of non-
                               optimal w/out complete being set are possible).
                            */
    UINT32 lnrulelim14 : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Hit invalid request too many times: Lane
                               evaluation stopped due to coeff rule boundary
                               (IO tap update would result in rule violation)
                               FOM = Search complete: Complete gets set when
                               lane SM goes to OPTIMAL or NON_OPTIMAL and the
                               full search has completed (so cases of non-
                               optimal w/out complete being set are possible).
                            */
    UINT32 lnrulelim15 : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Hit invalid request too many times: Lane
                               evaluation stopped due to coeff rule boundary
                               (IO tap update would result in rule violation)
                               FOM = Search complete: Complete gets set when
                               lane SM goes to OPTIMAL or NON_OPTIMAL and the
                               full search has completed (so cases of non-
                               optimal w/out complete being set are possible).
                            */

  } Bits;
  UINT32 Data;

} EQEVALSTS3_SB_FBLP_STRUCT;

/* GEN3FARTXCOEFF0_SB_FBLP_REG supported on:                                    */
/*      SPRA0 (0x20001d38)                                                      */
/*      SPRB0 (0x20001d38)                                                      */
/*      SPRHBM (0x20001d38)                                                     */
/*      SPRC0 (0x20001d38)                                                      */
/*      SPRMCC (0x20001d38)                                                     */
/*      SPRUCC (0x20001d38)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Gen3 Other End's TX Coefficient
*/


#define GEN3FARTXCOEFF0_SB_FBLP_REG 0x2C021D38

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g3negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g3negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g3negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN3FARTXCOEFF0_SB_FBLP_STRUCT;

/* GEN3FARTXCOEFF1_SB_FBLP_REG supported on:                                    */
/*      SPRA0 (0x20001d3c)                                                      */
/*      SPRB0 (0x20001d3c)                                                      */
/*      SPRHBM (0x20001d3c)                                                     */
/*      SPRC0 (0x20001d3c)                                                      */
/*      SPRMCC (0x20001d3c)                                                     */
/*      SPRUCC (0x20001d3c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Gen3 Other End's TX Coefficient
*/


#define GEN3FARTXCOEFF1_SB_FBLP_REG 0x2C021D3C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g3negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g3negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g3negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN3FARTXCOEFF1_SB_FBLP_STRUCT;

/* GEN3FARTXCOEFF2_SB_FBLP_REG supported on:                                    */
/*      SPRA0 (0x20001d40)                                                      */
/*      SPRB0 (0x20001d40)                                                      */
/*      SPRHBM (0x20001d40)                                                     */
/*      SPRC0 (0x20001d40)                                                      */
/*      SPRMCC (0x20001d40)                                                     */
/*      SPRUCC (0x20001d40)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Gen3 Other End's TX Coefficient
*/


#define GEN3FARTXCOEFF2_SB_FBLP_REG 0x2C021D40

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g3negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g3negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g3negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN3FARTXCOEFF2_SB_FBLP_STRUCT;

/* GEN3FARTXCOEFF3_SB_FBLP_REG supported on:                                    */
/*      SPRA0 (0x20001d44)                                                      */
/*      SPRB0 (0x20001d44)                                                      */
/*      SPRHBM (0x20001d44)                                                     */
/*      SPRC0 (0x20001d44)                                                      */
/*      SPRMCC (0x20001d44)                                                     */
/*      SPRUCC (0x20001d44)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Gen3 Other End's TX Coefficient
*/


#define GEN3FARTXCOEFF3_SB_FBLP_REG 0x2C021D44

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g3negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g3negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g3negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN3FARTXCOEFF3_SB_FBLP_STRUCT;

/* GEN3FARTXCOEFF4_SB_FBLP_REG supported on:                                    */
/*      SPRA0 (0x20001d48)                                                      */
/*      SPRB0 (0x20001d48)                                                      */
/*      SPRHBM (0x20001d48)                                                     */
/*      SPRC0 (0x20001d48)                                                      */
/*      SPRMCC (0x20001d48)                                                     */
/*      SPRUCC (0x20001d48)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Gen3 Other End's TX Coefficient
*/


#define GEN3FARTXCOEFF4_SB_FBLP_REG 0x2C021D48

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g3negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g3negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g3negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN3FARTXCOEFF4_SB_FBLP_STRUCT;

/* GEN3FARTXCOEFF5_SB_FBLP_REG supported on:                                    */
/*      SPRA0 (0x20001d4c)                                                      */
/*      SPRB0 (0x20001d4c)                                                      */
/*      SPRHBM (0x20001d4c)                                                     */
/*      SPRC0 (0x20001d4c)                                                      */
/*      SPRMCC (0x20001d4c)                                                     */
/*      SPRUCC (0x20001d4c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Gen3 Other End's TX Coefficient
*/


#define GEN3FARTXCOEFF5_SB_FBLP_REG 0x2C021D4C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g3negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g3negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g3negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN3FARTXCOEFF5_SB_FBLP_STRUCT;

/* GEN3FARTXCOEFF6_SB_FBLP_REG supported on:                                    */
/*      SPRA0 (0x20001d50)                                                      */
/*      SPRB0 (0x20001d50)                                                      */
/*      SPRHBM (0x20001d50)                                                     */
/*      SPRC0 (0x20001d50)                                                      */
/*      SPRMCC (0x20001d50)                                                     */
/*      SPRUCC (0x20001d50)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Gen3 Other End's TX Coefficient
*/


#define GEN3FARTXCOEFF6_SB_FBLP_REG 0x2C021D50

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g3negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g3negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g3negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN3FARTXCOEFF6_SB_FBLP_STRUCT;

/* GEN3FARTXCOEFF7_SB_FBLP_REG supported on:                                    */
/*      SPRA0 (0x20001d54)                                                      */
/*      SPRB0 (0x20001d54)                                                      */
/*      SPRHBM (0x20001d54)                                                     */
/*      SPRC0 (0x20001d54)                                                      */
/*      SPRMCC (0x20001d54)                                                     */
/*      SPRUCC (0x20001d54)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Gen3 Other End's TX Coefficient
*/


#define GEN3FARTXCOEFF7_SB_FBLP_REG 0x2C021D54

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g3negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g3negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g3negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN3FARTXCOEFF7_SB_FBLP_STRUCT;

/* GEN3FARTXCOEFF8_SB_FBLP_REG supported on:                                    */
/*      SPRA0 (0x20001d58)                                                      */
/*      SPRB0 (0x20001d58)                                                      */
/*      SPRHBM (0x20001d58)                                                     */
/*      SPRC0 (0x20001d58)                                                      */
/*      SPRMCC (0x20001d58)                                                     */
/*      SPRUCC (0x20001d58)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Gen3 Other End's TX Coefficient
*/


#define GEN3FARTXCOEFF8_SB_FBLP_REG 0x2C021D58

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g3negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g3negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g3negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN3FARTXCOEFF8_SB_FBLP_STRUCT;

/* GEN3FARTXCOEFF9_SB_FBLP_REG supported on:                                    */
/*      SPRA0 (0x20001d5c)                                                      */
/*      SPRB0 (0x20001d5c)                                                      */
/*      SPRHBM (0x20001d5c)                                                     */
/*      SPRC0 (0x20001d5c)                                                      */
/*      SPRMCC (0x20001d5c)                                                     */
/*      SPRUCC (0x20001d5c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Gen3 Other End's TX Coefficient
*/


#define GEN3FARTXCOEFF9_SB_FBLP_REG 0x2C021D5C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g3negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g3negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g3negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN3FARTXCOEFF9_SB_FBLP_STRUCT;

/* GEN3FARTXCOEFF10_SB_FBLP_REG supported on:                                   */
/*      SPRA0 (0x20001d60)                                                      */
/*      SPRB0 (0x20001d60)                                                      */
/*      SPRHBM (0x20001d60)                                                     */
/*      SPRC0 (0x20001d60)                                                      */
/*      SPRMCC (0x20001d60)                                                     */
/*      SPRUCC (0x20001d60)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Gen3 Other End's TX Coefficient
*/


#define GEN3FARTXCOEFF10_SB_FBLP_REG 0x2C021D60

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g3negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g3negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g3negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN3FARTXCOEFF10_SB_FBLP_STRUCT;

/* GEN3FARTXCOEFF11_SB_FBLP_REG supported on:                                   */
/*      SPRA0 (0x20001d64)                                                      */
/*      SPRB0 (0x20001d64)                                                      */
/*      SPRHBM (0x20001d64)                                                     */
/*      SPRC0 (0x20001d64)                                                      */
/*      SPRMCC (0x20001d64)                                                     */
/*      SPRUCC (0x20001d64)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Gen3 Other End's TX Coefficient
*/


#define GEN3FARTXCOEFF11_SB_FBLP_REG 0x2C021D64

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g3negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g3negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g3negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN3FARTXCOEFF11_SB_FBLP_STRUCT;

/* GEN3FARTXCOEFF12_SB_FBLP_REG supported on:                                   */
/*      SPRA0 (0x20001d68)                                                      */
/*      SPRB0 (0x20001d68)                                                      */
/*      SPRHBM (0x20001d68)                                                     */
/*      SPRC0 (0x20001d68)                                                      */
/*      SPRMCC (0x20001d68)                                                     */
/*      SPRUCC (0x20001d68)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Gen3 Other End's TX Coefficient
*/


#define GEN3FARTXCOEFF12_SB_FBLP_REG 0x2C021D68

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g3negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g3negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g3negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN3FARTXCOEFF12_SB_FBLP_STRUCT;

/* GEN3FARTXCOEFF13_SB_FBLP_REG supported on:                                   */
/*      SPRA0 (0x20001d6c)                                                      */
/*      SPRB0 (0x20001d6c)                                                      */
/*      SPRHBM (0x20001d6c)                                                     */
/*      SPRC0 (0x20001d6c)                                                      */
/*      SPRMCC (0x20001d6c)                                                     */
/*      SPRUCC (0x20001d6c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Gen3 Other End's TX Coefficient
*/


#define GEN3FARTXCOEFF13_SB_FBLP_REG 0x2C021D6C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g3negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g3negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g3negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN3FARTXCOEFF13_SB_FBLP_STRUCT;

/* GEN3FARTXCOEFF14_SB_FBLP_REG supported on:                                   */
/*      SPRA0 (0x20001d70)                                                      */
/*      SPRB0 (0x20001d70)                                                      */
/*      SPRHBM (0x20001d70)                                                     */
/*      SPRC0 (0x20001d70)                                                      */
/*      SPRMCC (0x20001d70)                                                     */
/*      SPRUCC (0x20001d70)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Gen3 Other End's TX Coefficient
*/


#define GEN3FARTXCOEFF14_SB_FBLP_REG 0x2C021D70

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g3negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g3negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g3negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN3FARTXCOEFF14_SB_FBLP_STRUCT;

/* GEN3FARTXCOEFF15_SB_FBLP_REG supported on:                                   */
/*      SPRA0 (0x20001d74)                                                      */
/*      SPRB0 (0x20001d74)                                                      */
/*      SPRHBM (0x20001d74)                                                     */
/*      SPRC0 (0x20001d74)                                                      */
/*      SPRMCC (0x20001d74)                                                     */
/*      SPRUCC (0x20001d74)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Gen3 Other End's TX Coefficient
*/


#define GEN3FARTXCOEFF15_SB_FBLP_REG 0x2C021D74

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g3negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g3negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g3negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen3 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN3FARTXCOEFF15_SB_FBLP_STRUCT;

/* GEN3TXCOEFF0_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001d78)                                                      */
/*      SPRB0 (0x20001d78)                                                      */
/*      SPRHBM (0x20001d78)                                                     */
/*      SPRC0 (0x20001d78)                                                      */
/*      SPRMCC (0x20001d78)                                                     */
/*      SPRUCC (0x20001d78)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Gen3 TX Coefficient
*/


#define GEN3TXCOEFF0_SB_FBLP_REG 0x2C021D78

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g3negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g3negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g3negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN3TXCOEFF0_SB_FBLP_STRUCT;

/* GEN3TXCOEFF1_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001d7c)                                                      */
/*      SPRB0 (0x20001d7c)                                                      */
/*      SPRHBM (0x20001d7c)                                                     */
/*      SPRC0 (0x20001d7c)                                                      */
/*      SPRMCC (0x20001d7c)                                                     */
/*      SPRUCC (0x20001d7c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Gen3 TX Coefficient
*/


#define GEN3TXCOEFF1_SB_FBLP_REG 0x2C021D7C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g3negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g3negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g3negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN3TXCOEFF1_SB_FBLP_STRUCT;

/* GEN3TXCOEFF2_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001d80)                                                      */
/*      SPRB0 (0x20001d80)                                                      */
/*      SPRHBM (0x20001d80)                                                     */
/*      SPRC0 (0x20001d80)                                                      */
/*      SPRMCC (0x20001d80)                                                     */
/*      SPRUCC (0x20001d80)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Gen3 TX Coefficient
*/


#define GEN3TXCOEFF2_SB_FBLP_REG 0x2C021D80

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g3negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g3negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g3negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN3TXCOEFF2_SB_FBLP_STRUCT;

/* GEN3TXCOEFF3_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001d84)                                                      */
/*      SPRB0 (0x20001d84)                                                      */
/*      SPRHBM (0x20001d84)                                                     */
/*      SPRC0 (0x20001d84)                                                      */
/*      SPRMCC (0x20001d84)                                                     */
/*      SPRUCC (0x20001d84)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Gen3 TX Coefficient
*/


#define GEN3TXCOEFF3_SB_FBLP_REG 0x2C021D84

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g3negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g3negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g3negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN3TXCOEFF3_SB_FBLP_STRUCT;

/* GEN3TXCOEFF4_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001d88)                                                      */
/*      SPRB0 (0x20001d88)                                                      */
/*      SPRHBM (0x20001d88)                                                     */
/*      SPRC0 (0x20001d88)                                                      */
/*      SPRMCC (0x20001d88)                                                     */
/*      SPRUCC (0x20001d88)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Gen3 TX Coefficient
*/


#define GEN3TXCOEFF4_SB_FBLP_REG 0x2C021D88

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g3negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g3negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g3negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN3TXCOEFF4_SB_FBLP_STRUCT;

/* GEN3TXCOEFF5_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001d8c)                                                      */
/*      SPRB0 (0x20001d8c)                                                      */
/*      SPRHBM (0x20001d8c)                                                     */
/*      SPRC0 (0x20001d8c)                                                      */
/*      SPRMCC (0x20001d8c)                                                     */
/*      SPRUCC (0x20001d8c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Gen3 TX Coefficient
*/


#define GEN3TXCOEFF5_SB_FBLP_REG 0x2C021D8C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g3negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g3negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g3negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN3TXCOEFF5_SB_FBLP_STRUCT;

/* GEN3TXCOEFF6_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001d90)                                                      */
/*      SPRB0 (0x20001d90)                                                      */
/*      SPRHBM (0x20001d90)                                                     */
/*      SPRC0 (0x20001d90)                                                      */
/*      SPRMCC (0x20001d90)                                                     */
/*      SPRUCC (0x20001d90)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Gen3 TX Coefficient
*/


#define GEN3TXCOEFF6_SB_FBLP_REG 0x2C021D90

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g3negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g3negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g3negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN3TXCOEFF6_SB_FBLP_STRUCT;

/* GEN3TXCOEFF7_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001d94)                                                      */
/*      SPRB0 (0x20001d94)                                                      */
/*      SPRHBM (0x20001d94)                                                     */
/*      SPRC0 (0x20001d94)                                                      */
/*      SPRMCC (0x20001d94)                                                     */
/*      SPRUCC (0x20001d94)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Gen3 TX Coefficient
*/


#define GEN3TXCOEFF7_SB_FBLP_REG 0x2C021D94

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g3negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g3negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g3negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN3TXCOEFF7_SB_FBLP_STRUCT;

/* GEN3TXCOEFF8_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001d98)                                                      */
/*      SPRB0 (0x20001d98)                                                      */
/*      SPRHBM (0x20001d98)                                                     */
/*      SPRC0 (0x20001d98)                                                      */
/*      SPRMCC (0x20001d98)                                                     */
/*      SPRUCC (0x20001d98)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Gen3 TX Coefficient
*/


#define GEN3TXCOEFF8_SB_FBLP_REG 0x2C021D98

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g3negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g3negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g3negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN3TXCOEFF8_SB_FBLP_STRUCT;

/* GEN3TXCOEFF9_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001d9c)                                                      */
/*      SPRB0 (0x20001d9c)                                                      */
/*      SPRHBM (0x20001d9c)                                                     */
/*      SPRC0 (0x20001d9c)                                                      */
/*      SPRMCC (0x20001d9c)                                                     */
/*      SPRUCC (0x20001d9c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Gen3 TX Coefficient
*/


#define GEN3TXCOEFF9_SB_FBLP_REG 0x2C021D9C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g3negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g3negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g3negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN3TXCOEFF9_SB_FBLP_STRUCT;

/* GEN3TXCOEFF10_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001da0)                                                      */
/*      SPRB0 (0x20001da0)                                                      */
/*      SPRHBM (0x20001da0)                                                     */
/*      SPRC0 (0x20001da0)                                                      */
/*      SPRMCC (0x20001da0)                                                     */
/*      SPRUCC (0x20001da0)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Gen3 TX Coefficient
*/


#define GEN3TXCOEFF10_SB_FBLP_REG 0x2C021DA0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g3negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g3negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g3negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN3TXCOEFF10_SB_FBLP_STRUCT;

/* GEN3TXCOEFF11_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001da4)                                                      */
/*      SPRB0 (0x20001da4)                                                      */
/*      SPRHBM (0x20001da4)                                                     */
/*      SPRC0 (0x20001da4)                                                      */
/*      SPRMCC (0x20001da4)                                                     */
/*      SPRUCC (0x20001da4)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Gen3 TX Coefficient
*/


#define GEN3TXCOEFF11_SB_FBLP_REG 0x2C021DA4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g3negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g3negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g3negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN3TXCOEFF11_SB_FBLP_STRUCT;

/* GEN3TXCOEFF12_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001da8)                                                      */
/*      SPRB0 (0x20001da8)                                                      */
/*      SPRHBM (0x20001da8)                                                     */
/*      SPRC0 (0x20001da8)                                                      */
/*      SPRMCC (0x20001da8)                                                     */
/*      SPRUCC (0x20001da8)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Gen3 TX Coefficient
*/


#define GEN3TXCOEFF12_SB_FBLP_REG 0x2C021DA8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g3negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g3negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g3negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN3TXCOEFF12_SB_FBLP_STRUCT;

/* GEN3TXCOEFF13_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001dac)                                                      */
/*      SPRB0 (0x20001dac)                                                      */
/*      SPRHBM (0x20001dac)                                                     */
/*      SPRC0 (0x20001dac)                                                      */
/*      SPRMCC (0x20001dac)                                                     */
/*      SPRUCC (0x20001dac)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Gen3 TX Coefficient
*/


#define GEN3TXCOEFF13_SB_FBLP_REG 0x2C021DAC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g3negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g3negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g3negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN3TXCOEFF13_SB_FBLP_STRUCT;

/* GEN3TXCOEFF14_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001db0)                                                      */
/*      SPRB0 (0x20001db0)                                                      */
/*      SPRHBM (0x20001db0)                                                     */
/*      SPRC0 (0x20001db0)                                                      */
/*      SPRMCC (0x20001db0)                                                     */
/*      SPRUCC (0x20001db0)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Gen3 TX Coefficient
*/


#define GEN3TXCOEFF14_SB_FBLP_REG 0x2C021DB0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g3negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g3negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g3negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN3TXCOEFF14_SB_FBLP_STRUCT;

/* GEN3TXCOEFF15_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001db4)                                                      */
/*      SPRB0 (0x20001db4)                                                      */
/*      SPRHBM (0x20001db4)                                                     */
/*      SPRC0 (0x20001db4)                                                      */
/*      SPRMCC (0x20001db4)                                                     */
/*      SPRUCC (0x20001db4)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Gen3 TX Coefficient
*/


#define GEN3TXCOEFF15_SB_FBLP_REG 0x2C021DB4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g3negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g3negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g3negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen3 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN3TXCOEFF15_SB_FBLP_STRUCT;

/* G4EQEVALCTL_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20001dc0)                                                      */
/*      SPRB0 (0x20001dc0)                                                      */
/*      SPRHBM (0x20001dc0)                                                     */
/*      SPRC0 (0x20001dc0)                                                      */
/*      SPRMCC (0x20001dc0)                                                     */
/*      SPRUCC (0x20001dc0)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s EQ EVAL Control
*/


#define G4EQEVALCTL_SB_FBLP_REG 0x2C021DC0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 rsvd : 24;

                            /* Bits[23:0], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 defpreset : 4;

                            /* Bits[27:24], Access Type=RW/P, default=0x00000000*/

                            /*
                               Preset that will be used if 8GT/s entered w/out
                               receiving EQTS2s. preset 0000 is -6dB de-
                               emphasis and 0dB preshoot.
                            */
    UINT32 bypasseqts2 : 1;

                            /* Bits[28:28], Access Type=RW/P, default=0x00000000*/

                            /*
                               For a downstream link, this allows entry to Gen4
                               w/out sending EQTS2 in 8b/10b mode prior to
                               transmitting at 8GT/s.
                            */
    UINT32 nodlinitblk : 1;

                            /* Bits[29:29], Access Type=RW/P, default=0x00000000*/

                            /*
                               Don't block the DL state machine from starting
                               DL Init once initial L0 reached.
                            */
    UINT32 bypasseq : 1;

                            /* Bits[30:30], Access Type=RW/P, default=0x00000000*/

                            /* Bypass all aspects of Adaptive EQ. */
    UINT32 rsvd_31 : 1;

                            /* Bits[31:31], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G4EQEVALCTL_SB_FBLP_STRUCT;

/* G4EQEVALCTL2_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001dc4)                                                      */
/*      SPRB0 (0x20001dc4)                                                      */
/*      SPRHBM (0x20001dc4)                                                     */
/*      SPRC0 (0x20001dc4)                                                      */
/*      SPRMCC (0x20001dc4)                                                     */
/*      SPRUCC (0x20001dc4)                                                     */
/* Register default value on SPRA0: 0x0000FF00                                  */
/* Register default value on SPRB0: 0x0000FF00                                  */
/* Register default value on SPRHBM: 0x0000FF00                                 */
/* Register default value on SPRC0: 0x0000FF00                                  */
/* Register default value on SPRMCC: 0x0000FF00                                 */
/* Register default value on SPRUCC: 0x0000FF00                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s EQ EVAL Control 2
*/


#define G4EQEVALCTL2_SB_FBLP_REG 0x2C021DC4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 evaltime : 8;

                            /* Bits[7:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               Field defined to do each coeff eval as
                               following. Evaltime[7:6] = unit Evaltime[5:0] =
                               value Unit: 11=\>1ms 10=\>128us 01=\>16u
                               00=\>1us This field should not be programmed in
                               value of 0 (unit=any, value=0) for devices
                               connected to WM design.
                            */
    UINT32 evalatt : 8;

                            /* Bits[15:8], Access Type=RW/V/P, default=0x000000FF*/

                            /*
                               Max number of coeff for a lane to eval before
                               quitting eval phase. Value of 0 means no limit.
                               The value is scaled by the link partners
                               advertised FS value (adj_val =
                               roundup(val*(FS+1)/64)). If FS is 63, the spec
                               max, the value would be unaltered, whereas for a
                               FS of 31, the value written to the config
                               register would be halved. One attempt will be
                               made if the programmed value is greater than 0
                               and the adjusted value would have resulted in a
                               value of 0. Any evaluation attempt following an
                               InvalidRequest indication on the PIPE interface
                               is not counted as an attempt.
                            */
    UINT32 rsvd : 7;

                            /* Bits[22:16], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 reeqspddegrade : 1;

                            /* Bits[23:23], Access Type=RW/P, default=0x00000000*/

                            /*
                               When set, a self detected need to re-equalize
                               will result in a down shift in speed and a
                               disabling of the current rate (8GT/s or higher)
                               and all rates above it.
                            */
    UINT32 skipevalph : 1;

                            /* Bits[24:24], Access Type=RW/P, default=0x00000000*/

                            /*
                               Skip execution of the master eval coeff phase
                               (up component phase 3, down component phase 2).
                               For downstream it skips phase2/3 completely per
                               PCIe Spec. For upstream it passes quickly
                               through phase2 doing no real eval.
                            */
    UINT32 ignoremd : 1;

                            /* Bits[25:25], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, along with a given lane's
                               GEN4TXCOEFF.LNOVRD register being set, any
                               requested coefficient or preset that would
                               normally be rejected is not and the request is
                               silently ignored. If the lane's
                               GEN4TXCOEFF.LNOVRD register is not set, then
                               this field has no effect on that lane.
                            */
    UINT32 exteieos : 1;

                            /* Bits[26:26], Access Type=RW/P, default=0x00000000*/

                            /*
                               Enable extended EIEOS request during master eval
                               stage (up component phase 3, down component
                               phase 2)..
                            */
    UINT32 hwreeqen : 1;

                            /* Bits[27:27], Access Type=RW/P, default=0x00000000*/

                            /* Allow HW to initiate re-equalization. */
    UINT32 hwquiesce : 1;

                            /* Bits[28:28], Access Type=RW/P, default=0x00000000*/

                            /*
                               H/W will require quiescing of the link prior to
                               re-equalization.
                            */
    UINT32 ignorequiesce : 1;

                            /* Bits[29:29], Access Type=RW/P, default=0x00000000*/

                            /*
                               H/W will ignore quiesce bit received from
                               downstream component.
                            */
    UINT32 blkupspeed : 1;

                            /* Bits[30:30], Access Type=RW/P, default=0x00000000*/

                            /*
                               H/W will not initiate an up step in speed to
                               8GT/s in order to advertise or re-do
                               equalization.
                            */
    UINT32 blkupeqreq : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               When this bit is set to 1, the following two
                               events will NOT set the request eq bit in TS2s
                               during Rec.RcvrCfg following Rec.Equalization. -
                               Equalization engine deems link usable but not
                               optimal (this would normally trigger an
                               immediate eq request in TS2s) - Coeff received
                               in Rec.RcvrLck follow Rec.Eq don't match
                               negotiated coeff during Eq.
                            */

  } Bits;
  UINT32 Data;

} G4EQEVALCTL2_SB_FBLP_STRUCT;

/* G4EQEVALCTL3_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001dc8)                                                      */
/*      SPRB0 (0x20001dc8)                                                      */
/*      SPRHBM (0x20001dc8)                                                     */
/*      SPRC0 (0x20001dc8)                                                      */
/*      SPRMCC (0x20001dc8)                                                     */
/*      SPRUCC (0x20001dc8)                                                     */
/* Register default value on SPRA0: 0x00030802                                  */
/* Register default value on SPRB0: 0x00030802                                  */
/* Register default value on SPRHBM: 0x00030802                                 */
/* Register default value on SPRC0: 0x00030802                                  */
/* Register default value on SPRMCC: 0x00030802                                 */
/* Register default value on SPRUCC: 0x00030802                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s EQ EVAL Control 3
*/


#define G4EQEVALCTL3_SB_FBLP_REG 0x2C021DC8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 errthresh1 : 8;

                            /* Bits[7:0], Access Type=RW/P, default=0x00000002*/

                            /*
                               Block error count limit considered optimal.
                               Setting of 0 disables block error check.
                            */
    UINT32 errthresh2 : 8;

                            /* Bits[15:8], Access Type=RW/P, default=0x00000008*/

                            /*
                               Block error count limit considered usable, but
                               may spawn a redo of Equalization if enabled.
                               Setting of 0 causes all checks to at least pass
                               the Threshold 2 check.
                            */
    UINT32 overt2spdfail : 1;

                            /* Bits[16:16], Access Type=RW/P, default=0x00000001*/

                            /*
                               If block error count measured over Threshold 2,
                               force link to fail down to lower speed.
                            */
    UINT32 undert2redo : 1;

                            /* Bits[17:17], Access Type=RW/P, default=0x00000001*/

                            /*
                               If block error count under Threshold 2 but equal
                               to or over Threshold 1, request a redo of
                               equalization.
                            */
    UINT32 rsvd : 14;

                            /* Bits[31:18], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G4EQEVALCTL3_SB_FBLP_STRUCT;

/* G4EQEVALCTL4_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001dcc)                                                      */
/*      SPRB0 (0x20001dcc)                                                      */
/*      SPRHBM (0x20001dcc)                                                     */
/*      SPRC0 (0x20001dcc)                                                      */
/*      SPRMCC (0x20001dcc)                                                     */
/*      SPRUCC (0x20001dcc)                                                     */
/* Register default value on SPRA0: 0x64020000                                  */
/* Register default value on SPRB0: 0x64020000                                  */
/* Register default value on SPRHBM: 0x64020000                                 */
/* Register default value on SPRC0: 0x64020000                                  */
/* Register default value on SPRMCC: 0x64020000                                 */
/* Register default value on SPRUCC: 0x64020000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s EQ EVAL Control 4
*/


#define G4EQEVALCTL4_SB_FBLP_REG 0x2C021DCC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 rsvd : 16;

                            /* Bits[15:0], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 prefpreset_en : 1;

                            /* Bits[16:16], Access Type=RO, default=0x00000000*/

                            /*
                               Enables each preferred tx preset to be checked
                               against the BIOS requested preset used by
                               downstream port in phase1. If the phase1 tx
                               preset of the link partner does not match any of
                               the enabled presets, use PREFPRESET1 as phase2's
                               starting position. This means the first
                               evaluation will be a use tx preset evaluation
                               starting with preferred tx preset 1. Attr. is
                               'RO' for Non DIRFB and 'RWS' for DIRFB
                            */
    UINT32 fomsearch_en : 1;

                            /* Bits[17:17], Access Type=RW/V/P, default=0x00000001*/

                            /* Figure of Merit search enable for WMP. */
    UINT32 rsvd_18 : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 rxhint7ovr_en : 1;

                            /* Bits[19:19], Access Type=RW/V/P, default=0x00000000*/

                            /*
                               When set to 1, the starting coeff to evaluate
                               (phase2 upstream, phase3 downstream) will be
                               derived from Rx Hint Table entry DBXX (7). This
                               overrides the preferred preset mode and the
                               normal Rx Hint table mode.
                            */
    UINT32 rsvd_20 : 3;

                            /* Bits[22:20], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 qchktmunit : 1;

                            /* Bits[23:23], Access Type=RW/P, default=0x00000000*/

                            /*
                               0 = time limit is QCHKTMVAL * 1us, 1 = time
                               limit is QCHKTMVAL * 128us
                            */
    UINT32 qchktmval : 7;

                            /* Bits[30:24], Access Type=RW/P, default=0x00000064*/

                            /*
                               Final evaluation loop time. This loop will not
                               ask the IOs to enabled any adaptive eq logic and
                               is used as a quick sanity check of link errors
                            */
    UINT32 reverseeqts2 : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               Allows EQTS2s to be sent by upstream port or
                               decoded by downstream port to override the
                               LinkEqCtl.DownStreamPortTxPreset value. For an
                               upstream port, the PREFPRESET1 value will be
                               sent in the EQTS2s it sends to the upstream
                               component. For a downstream port, this will
                               enable it to accept EQTS2s from the upstream
                               port and override the
                               LinkEqCtl.DownstreamTxPreset value.
                            */

  } Bits;
  UINT32 Data;

} G4EQEVALCTL4_SB_FBLP_STRUCT;

/* G4EQEVALCTL5_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001dd0)                                                      */
/*      SPRB0 (0x20001dd0)                                                      */
/*      SPRHBM (0x20001dd0)                                                     */
/*      SPRC0 (0x20001dd0)                                                      */
/*      SPRMCC (0x20001dd0)                                                     */
/*      SPRUCC (0x20001dd0)                                                     */
/* Register default value on SPRA0: 0x3A87F003                                  */
/* Register default value on SPRB0: 0x3A87F003                                  */
/* Register default value on SPRHBM: 0x3A87F003                                 */
/* Register default value on SPRC0: 0x3A87F003                                  */
/* Register default value on SPRMCC: 0x3A87F003                                 */
/* Register default value on SPRUCC: 0x3A87F003                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s EQ EVAL Control 5
*/


#define G4EQEVALCTL5_SB_FBLP_REG 0x2C021DD0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 locktime : 4;

                            /* Bits[3:0], Access Type=RW/P, default=0x00000003*/

                            /*
                               Max time to allow block lock on new coeff
                               request. Time is value*4us. When this field is
                               set to 0, it will remain in Lock state until
                               lock is achieved or the primary timer for
                               Phase2/3 expires (thus an EQ failure).
                            */
    UINT32 coeffevalwait : 8;

                            /* Bits[11:4], Access Type=RW/P, default=0x00000000*/

                            /*
                               Time to wait after lock (or lock timeout) before
                               enabling the IOs to evaluate the new coeff
                               settings. This allows the circuits some extra
                               time to setup their evaluation logic. Time is
                               value*4us.
                            */
    UINT32 usepreevalwait : 8;

                            /* Bits[19:12], Access Type=RW/P, default=0x0000007F*/

                            /*
                               Time to wait after lock (or lock timeout) before
                               enabling the IOs to evaluate the new tx preset
                               settings. This allows the circuits some extra
                               time to setup their evaluation logic. Time is
                               value*4us.
                            */
    UINT32 phasetodis : 3;

                            /* Bits[22:20], Access Type=RW/P, default=0x00000000*/

                            /*
                               Disable phase 1/2/3 timeouts bit 0 - phase 1 bit
                               1 - phase 2 bit 3 - phase 3
                            */
    UINT32 phmtimerval : 4;

                            /* Bits[26:23], Access Type=RW/P, default=0x00000005*/

                            /*
                               Master phase (UP=Phase2, DP=Phase3) timeout.
                               time limit is (val+1)*4ms
                            */
    UINT32 phstimerval : 4;

                            /* Bits[30:27], Access Type=RW/P, default=0x00000007*/

                            /*
                               Slave phase (UP=Phase3, DP=Phase2) timeout. time
                               limit is (val+1)*4ms
                            */
    UINT32 rsvd : 1;

                            /* Bits[31:31], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G4EQEVALCTL5_SB_FBLP_STRUCT;

/* G4EQEVALCTL6_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001dd4)                                                      */
/*      SPRB0 (0x20001dd4)                                                      */
/*      SPRHBM (0x20001dd4)                                                     */
/*      SPRC0 (0x20001dd4)                                                      */
/*      SPRMCC (0x20001dd4)                                                     */
/*      SPRUCC (0x20001dd4)                                                     */
/* Register default value on SPRA0: 0x00000623                                  */
/* Register default value on SPRB0: 0x00000623                                  */
/* Register default value on SPRHBM: 0x00000623                                 */
/* Register default value on SPRC0: 0x00000623                                  */
/* Register default value on SPRMCC: 0x00000623                                 */
/* Register default value on SPRUCC: 0x00000623                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s EQ EVAL Control 6
*/


#define G4EQEVALCTL6_SB_FBLP_REG 0x2C021DD4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 backofftime : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000003*/

                            /*
                               Time in EQ before starting CTLE Adapt and then
                               TS lock val< 16 =\> val[3:0],6'h0, CXLT_TOU_4NS
                               0-3.84us +0/-4ns val*256ns val\>=16 =\>
                               val[4:0],5'h0, CXLT_TOU_128NS 0-126.98us
                               +0/-128ns val*4us.
                            */
    UINT32 reeqctleadpten : 1;

                            /* Bits[5:5], Access Type=RW/P, default=0x00000001*/

                            /*
                               Enable CTLE Adaption on entry to phase1/0 not
                               from speed change w/EQTS2.
                            */
    UINT32 reeqctleadptwt : 3;

                            /* Bits[8:6], Access Type=RW/P, default=0x00000000*/

                            /*
                               Time before starting CTLE after entry to
                               DP.PH1/UP.PH0. 000 = 512ns, 001 = 1us, 010 =
                               1.5us, 011 = 2us, 100 = 4us, 101 = 8us, 110 =
                               12us, 111 = 16us.
                            */
    UINT32 lbctleadpten : 1;

                            /* Bits[9:9], Access Type=RW/P, default=0x00000001*/

                            /*
                               Enable CTLE Adaption on entry to Loopback.Master
                               @Gen4.
                            */
    UINT32 lbctleadptwt : 3;

                            /* Bits[12:10], Access Type=RW/P, default=0x00000001*/

                            /*
                               Time before starting CTLE after EI exit detect.
                               000 = 512ns, 001 = 1us, 010 = 1.5us, 011 = 2us,
                               100 = 4us, 101 = 8us, 110 = 12us, 111 = 16us.
                            */
    UINT32 spdchgctleadpten : 1;

                            /* Bits[13:13], Access Type=RW/P, default=0x00000000*/

                            /*
                               Backup to the IOs doing CTLE for speed change to
                               G3. Control will initiate a CTLE adapt after
                               speed changed and Rx EI Exit.
                            */
    UINT32 locbusfetchen : 1;

                            /* Bits[14:14], Access Type=RO, default=0x00000000*/

                            /* Enable Local bus fetch of coeff table. */
    UINT32 locbusfetchinit : 1;

                            /* Bits[15:15], Access Type=RO, default=0x00000000*/

                            /*
                               Initiate a manual fetch self clears when
                               complete.
                            */
    UINT32 rsvd : 12;

                            /* Bits[27:16], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 reqlbmstrcoeff : 1;

                            /* Bits[28:28], Access Type=RW/P, default=0x00000000*/

                            /*
                               When intending to master loopback at Gen4
                               speeds, this bit can be used to enable the
                               dictation of what far end Tx EQ settings to use.
                               The per lane settings are defined in the
                               GEN4FARTXCOEFF#.D1/2/FTYPE fields. The LNOVRD
                               field is not required to be set. Valid values
                               must also be captured or programmed into the
                               EQFARFSLF register.
                            */
    UINT32 rsvd_29 : 3;

                            /* Bits[31:29], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G4EQEVALCTL6_SB_FBLP_STRUCT;

/* G4EQEVALCTL7_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001dd8)                                                      */
/*      SPRB0 (0x20001dd8)                                                      */
/*      SPRHBM (0x20001dd8)                                                     */
/*      SPRC0 (0x20001dd8)                                                      */
/*      SPRMCC (0x20001dd8)                                                     */
/*      SPRUCC (0x20001dd8)                                                     */
/* Register default value on SPRA0: 0x000000FF                                  */
/* Register default value on SPRB0: 0x000000FF                                  */
/* Register default value on SPRHBM: 0x000000FF                                 */
/* Register default value on SPRC0: 0x000000FF                                  */
/* Register default value on SPRMCC: 0x000000FF                                 */
/* Register default value on SPRUCC: 0x000000FF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s EQ EVAL Control 7
*/


#define G4EQEVALCTL7_SB_FBLP_REG 0x2C021DD8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 fomstplim : 8;

                            /* Bits[7:0], Access Type=RW/P, default=0x000000FF*/

                            /*
                               Max FOM value, if FOM\>=FOMSTPLIM, exit
                               evaluation.
                            */
    UINT32 rsvd : 24;

                            /* Bits[31:8], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G4EQEVALCTL7_SB_FBLP_STRUCT;

/* G4EQEVALSTS_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20001de4)                                                      */
/*      SPRB0 (0x20001de4)                                                      */
/*      SPRHBM (0x20001de4)                                                     */
/*      SPRC0 (0x20001de4)                                                      */
/*      SPRMCC (0x20001de4)                                                     */
/*      SPRUCC (0x20001de4)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s EQ EVAL Status
*/


#define G4EQEVALSTS_SB_FBLP_REG 0x2C021DE4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lnopt0 : 1;

                            /* Bits[0:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting. */
    UINT32 lnopt1 : 1;

                            /* Bits[1:1], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting. */
    UINT32 lnopt2 : 1;

                            /* Bits[2:2], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting. */
    UINT32 lnopt3 : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting. */
    UINT32 lnopt4 : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting. */
    UINT32 lnopt5 : 1;

                            /* Bits[5:5], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting. */
    UINT32 lnopt6 : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting. */
    UINT32 lnopt7 : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting. */
    UINT32 lnopt8 : 1;

                            /* Bits[8:8], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting. */
    UINT32 lnopt9 : 1;

                            /* Bits[9:9], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting. */
    UINT32 lnopt10 : 1;

                            /* Bits[10:10], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting. */
    UINT32 lnopt11 : 1;

                            /* Bits[11:11], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting. */
    UINT32 lnopt12 : 1;

                            /* Bits[12:12], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting. */
    UINT32 lnopt13 : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting. */
    UINT32 lnopt14 : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting. */
    UINT32 lnopt15 : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting. */
    UINT32 lnloop0 : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnloop1 : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnloop2 : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnloop3 : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnloop4 : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnloop5 : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnloop6 : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnloop7 : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnloop8 : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnloop9 : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnloop10 : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnloop11 : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnloop12 : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnloop13 : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnloop14 : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnloop15 : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */

  } Bits;
  UINT32 Data;

} G4EQEVALSTS_SB_FBLP_STRUCT;

/* G4EQEVALSTS2_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001de8)                                                      */
/*      SPRB0 (0x20001de8)                                                      */
/*      SPRHBM (0x20001de8)                                                     */
/*      SPRC0 (0x20001de8)                                                      */
/*      SPRMCC (0x20001de8)                                                     */
/*      SPRUCC (0x20001de8)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s EQ EVAL Status 2
*/


#define G4EQEVALSTS2_SB_FBLP_REG 0x2C021DE8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 evalatts : 8;

                            /* Bits[7:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Number of eval attempts to get all lanes
                               optimal.
                            */
    UINT32 reeqspddisg4 : 1;

                            /* Bits[8:8], Access Type=RW/1C/V, default=0x00000000*/

                            /*
                               When set, hardware has disabled 8GT/s and above
                               data rates due to a need to re-equalize.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G4EQEVALSTS2_SB_FBLP_STRUCT;

/* G4EQEVALSTS3_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001dec)                                                      */
/*      SPRB0 (0x20001dec)                                                      */
/*      SPRHBM (0x20001dec)                                                     */
/*      SPRC0 (0x20001dec)                                                      */
/*      SPRMCC (0x20001dec)                                                     */
/*      SPRUCC (0x20001dec)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s EQ EVAL Status 3
*/


#define G4EQEVALSTS3_SB_FBLP_REG 0x2C021DEC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lnerrth2met0 : 1;

                            /* Bits[0:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2.
                            */
    UINT32 lnerrth2met1 : 1;

                            /* Bits[1:1], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2.
                            */
    UINT32 lnerrth2met2 : 1;

                            /* Bits[2:2], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2.
                            */
    UINT32 lnerrth2met3 : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2.
                            */
    UINT32 lnerrth2met4 : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2.
                            */
    UINT32 lnerrth2met5 : 1;

                            /* Bits[5:5], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2.
                            */
    UINT32 lnerrth2met6 : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2.
                            */
    UINT32 lnerrth2met7 : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2.
                            */
    UINT32 lnerrth2met8 : 1;

                            /* Bits[8:8], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2.
                            */
    UINT32 lnerrth2met9 : 1;

                            /* Bits[9:9], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2.
                            */
    UINT32 lnerrth2met10 : 1;

                            /* Bits[10:10], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2.
                            */
    UINT32 lnerrth2met11 : 1;

                            /* Bits[11:11], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2.
                            */
    UINT32 lnerrth2met12 : 1;

                            /* Bits[12:12], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2.
                            */
    UINT32 lnerrth2met13 : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2.
                            */
    UINT32 lnerrth2met14 : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2.
                            */
    UINT32 lnerrth2met15 : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2.
                            */
    UINT32 lnrulelim0 : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Hit invalid request too many times: Lane
                               evaluation stopped due to coeff rule boundary
                               (IO tap update would result in rule violation)
                               FOM = Search complete: Complete gets set when
                               lane SM goes to OPTIMAL or NON_OPTIMAL and the
                               full search has completed (so cases of non-
                               optimal w/out complete being set are possible).
                            */
    UINT32 lnrulelim1 : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnrulelim2 : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnrulelim3 : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnrulelim4 : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnrulelim5 : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnrulelim6 : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Hit invalid request too many times: Lane
                               evaluation stopped due to coeff rule boundary
                               (IO tap update would result in rule violation)
                               FOM = Search complete: Complete gets set when
                               lane SM goes to OPTIMAL or NON_OPTIMAL and the
                               full search has completed (so cases of non-
                               optimal w/out complete being set are possible).
                            */
    UINT32 lnrulelim7 : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Hit invalid request too many times: Lane
                               evaluation stopped due to coeff rule boundary
                               (IO tap update would result in rule violation)
                               FOM = Search complete: Complete gets set when
                               lane SM goes to OPTIMAL or NON_OPTIMAL and the
                               full search has completed (so cases of non-
                               optimal w/out complete being set are possible).
                            */
    UINT32 lnrulelim8 : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Hit invalid request too many times: Lane
                               evaluation stopped due to coeff rule boundary
                               (IO tap update would result in rule violation)
                               FOM = Search complete: Complete gets set when
                               lane SM goes to OPTIMAL or NON_OPTIMAL and the
                               full search has completed (so cases of non-
                               optimal w/out complete being set are possible).
                            */
    UINT32 lnrulelim9 : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Hit invalid request too many times: Lane
                               evaluation stopped due to coeff rule boundary
                               (IO tap update would result in rule violation)
                               FOM = Search complete: Complete gets set when
                               lane SM goes to OPTIMAL or NON_OPTIMAL and the
                               full search has completed (so cases of non-
                               optimal w/out complete being set are possible).
                            */
    UINT32 lnrulelim10 : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Hit invalid request too many times: Lane
                               evaluation stopped due to coeff rule boundary
                               (IO tap update would result in rule violation)
                               FOM = Search complete: Complete gets set when
                               lane SM goes to OPTIMAL or NON_OPTIMAL and the
                               full search has completed (so cases of non-
                               optimal w/out complete being set are possible).
                            */
    UINT32 lnrulelim11 : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Hit invalid request too many times: Lane
                               evaluation stopped due to coeff rule boundary
                               (IO tap update would result in rule violation)
                               FOM = Search complete: Complete gets set when
                               lane SM goes to OPTIMAL or NON_OPTIMAL and the
                               full search has completed (so cases of non-
                               optimal w/out complete being set are possible).
                            */
    UINT32 lnrulelim12 : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Hit invalid request too many times: Lane
                               evaluation stopped due to coeff rule boundary
                               (IO tap update would result in rule violation)
                               FOM = Search complete: Complete gets set when
                               lane SM goes to OPTIMAL or NON_OPTIMAL and the
                               full search has completed (so cases of non-
                               optimal w/out complete being set are possible).
                            */
    UINT32 lnrulelim13 : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Hit invalid request too many times: Lane
                               evaluation stopped due to coeff rule boundary
                               (IO tap update would result in rule violation)
                               FOM = Search complete: Complete gets set when
                               lane SM goes to OPTIMAL or NON_OPTIMAL and the
                               full search has completed (so cases of non-
                               optimal w/out complete being set are possible).
                            */
    UINT32 lnrulelim14 : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Hit invalid request too many times: Lane
                               evaluation stopped due to coeff rule boundary
                               (IO tap update would result in rule violation)
                               FOM = Search complete: Complete gets set when
                               lane SM goes to OPTIMAL or NON_OPTIMAL and the
                               full search has completed (so cases of non-
                               optimal w/out complete being set are possible).
                            */
    UINT32 lnrulelim15 : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Hit invalid request too many times: Lane
                               evaluation stopped due to coeff rule boundary
                               (IO tap update would result in rule violation)
                               FOM = Search complete: Complete gets set when
                               lane SM goes to OPTIMAL or NON_OPTIMAL and the
                               full search has completed (so cases of non-
                               optimal w/out complete being set are possible).
                            */

  } Bits;
  UINT32 Data;

} G4EQEVALSTS3_SB_FBLP_STRUCT;

/* GEN4FARTXCOEFF0_SB_FBLP_REG supported on:                                    */
/*      SPRA0 (0x20001df8)                                                      */
/*      SPRB0 (0x20001df8)                                                      */
/*      SPRHBM (0x20001df8)                                                     */
/*      SPRC0 (0x20001df8)                                                      */
/*      SPRMCC (0x20001df8)                                                     */
/*      SPRUCC (0x20001df8)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s Other End's TX Coefficient
*/


#define GEN4FARTXCOEFF0_SB_FBLP_REG 0x2C021DF8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g4negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g4negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g4negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN4FARTXCOEFF0_SB_FBLP_STRUCT;

/* GEN4FARTXCOEFF1_SB_FBLP_REG supported on:                                    */
/*      SPRA0 (0x20001dfc)                                                      */
/*      SPRB0 (0x20001dfc)                                                      */
/*      SPRHBM (0x20001dfc)                                                     */
/*      SPRC0 (0x20001dfc)                                                      */
/*      SPRMCC (0x20001dfc)                                                     */
/*      SPRUCC (0x20001dfc)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s Other End's TX Coefficient
*/


#define GEN4FARTXCOEFF1_SB_FBLP_REG 0x2C021DFC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g4negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g4negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g4negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN4FARTXCOEFF1_SB_FBLP_STRUCT;

/* GEN4FARTXCOEFF2_SB_FBLP_REG supported on:                                    */
/*      SPRA0 (0x20001e00)                                                      */
/*      SPRB0 (0x20001e00)                                                      */
/*      SPRHBM (0x20001e00)                                                     */
/*      SPRC0 (0x20001e00)                                                      */
/*      SPRMCC (0x20001e00)                                                     */
/*      SPRUCC (0x20001e00)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s Other End's TX Coefficient
*/


#define GEN4FARTXCOEFF2_SB_FBLP_REG 0x2C021E00

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g4negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g4negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g4negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN4FARTXCOEFF2_SB_FBLP_STRUCT;

/* GEN4FARTXCOEFF3_SB_FBLP_REG supported on:                                    */
/*      SPRA0 (0x20001e04)                                                      */
/*      SPRB0 (0x20001e04)                                                      */
/*      SPRHBM (0x20001e04)                                                     */
/*      SPRC0 (0x20001e04)                                                      */
/*      SPRMCC (0x20001e04)                                                     */
/*      SPRUCC (0x20001e04)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s Other End's TX Coefficient
*/


#define GEN4FARTXCOEFF3_SB_FBLP_REG 0x2C021E04

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g4negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g4negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g4negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN4FARTXCOEFF3_SB_FBLP_STRUCT;

/* GEN4FARTXCOEFF4_SB_FBLP_REG supported on:                                    */
/*      SPRA0 (0x20001e08)                                                      */
/*      SPRB0 (0x20001e08)                                                      */
/*      SPRHBM (0x20001e08)                                                     */
/*      SPRC0 (0x20001e08)                                                      */
/*      SPRMCC (0x20001e08)                                                     */
/*      SPRUCC (0x20001e08)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s Other End's TX Coefficient
*/


#define GEN4FARTXCOEFF4_SB_FBLP_REG 0x2C021E08

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g4negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g4negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g4negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN4FARTXCOEFF4_SB_FBLP_STRUCT;

/* GEN4FARTXCOEFF5_SB_FBLP_REG supported on:                                    */
/*      SPRA0 (0x20001e0c)                                                      */
/*      SPRB0 (0x20001e0c)                                                      */
/*      SPRHBM (0x20001e0c)                                                     */
/*      SPRC0 (0x20001e0c)                                                      */
/*      SPRMCC (0x20001e0c)                                                     */
/*      SPRUCC (0x20001e0c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s Other End's TX Coefficient
*/


#define GEN4FARTXCOEFF5_SB_FBLP_REG 0x2C021E0C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g4negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g4negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g4negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN4FARTXCOEFF5_SB_FBLP_STRUCT;

/* GEN4FARTXCOEFF6_SB_FBLP_REG supported on:                                    */
/*      SPRA0 (0x20001e10)                                                      */
/*      SPRB0 (0x20001e10)                                                      */
/*      SPRHBM (0x20001e10)                                                     */
/*      SPRC0 (0x20001e10)                                                      */
/*      SPRMCC (0x20001e10)                                                     */
/*      SPRUCC (0x20001e10)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s Other End's TX Coefficient
*/


#define GEN4FARTXCOEFF6_SB_FBLP_REG 0x2C021E10

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g4negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g4negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g4negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN4FARTXCOEFF6_SB_FBLP_STRUCT;

/* GEN4FARTXCOEFF7_SB_FBLP_REG supported on:                                    */
/*      SPRA0 (0x20001e14)                                                      */
/*      SPRB0 (0x20001e14)                                                      */
/*      SPRHBM (0x20001e14)                                                     */
/*      SPRC0 (0x20001e14)                                                      */
/*      SPRMCC (0x20001e14)                                                     */
/*      SPRUCC (0x20001e14)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s Other End's TX Coefficient
*/


#define GEN4FARTXCOEFF7_SB_FBLP_REG 0x2C021E14

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g4negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g4negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g4negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN4FARTXCOEFF7_SB_FBLP_STRUCT;

/* GEN4FARTXCOEFF8_SB_FBLP_REG supported on:                                    */
/*      SPRA0 (0x20001e18)                                                      */
/*      SPRB0 (0x20001e18)                                                      */
/*      SPRHBM (0x20001e18)                                                     */
/*      SPRC0 (0x20001e18)                                                      */
/*      SPRMCC (0x20001e18)                                                     */
/*      SPRUCC (0x20001e18)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s Other End's TX Coefficient
*/


#define GEN4FARTXCOEFF8_SB_FBLP_REG 0x2C021E18

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g4negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g4negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g4negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN4FARTXCOEFF8_SB_FBLP_STRUCT;

/* GEN4FARTXCOEFF9_SB_FBLP_REG supported on:                                    */
/*      SPRA0 (0x20001e1c)                                                      */
/*      SPRB0 (0x20001e1c)                                                      */
/*      SPRHBM (0x20001e1c)                                                     */
/*      SPRC0 (0x20001e1c)                                                      */
/*      SPRMCC (0x20001e1c)                                                     */
/*      SPRUCC (0x20001e1c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s Other End's TX Coefficient
*/


#define GEN4FARTXCOEFF9_SB_FBLP_REG 0x2C021E1C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g4negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g4negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g4negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN4FARTXCOEFF9_SB_FBLP_STRUCT;

/* GEN4FARTXCOEFF10_SB_FBLP_REG supported on:                                   */
/*      SPRA0 (0x20001e20)                                                      */
/*      SPRB0 (0x20001e20)                                                      */
/*      SPRHBM (0x20001e20)                                                     */
/*      SPRC0 (0x20001e20)                                                      */
/*      SPRMCC (0x20001e20)                                                     */
/*      SPRUCC (0x20001e20)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s Other End's TX Coefficient
*/


#define GEN4FARTXCOEFF10_SB_FBLP_REG 0x2C021E20

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g4negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g4negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g4negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN4FARTXCOEFF10_SB_FBLP_STRUCT;

/* GEN4FARTXCOEFF11_SB_FBLP_REG supported on:                                   */
/*      SPRA0 (0x20001e24)                                                      */
/*      SPRB0 (0x20001e24)                                                      */
/*      SPRHBM (0x20001e24)                                                     */
/*      SPRC0 (0x20001e24)                                                      */
/*      SPRMCC (0x20001e24)                                                     */
/*      SPRUCC (0x20001e24)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s Other End's TX Coefficient
*/


#define GEN4FARTXCOEFF11_SB_FBLP_REG 0x2C021E24

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g4negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g4negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g4negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN4FARTXCOEFF11_SB_FBLP_STRUCT;

/* GEN4FARTXCOEFF12_SB_FBLP_REG supported on:                                   */
/*      SPRA0 (0x20001e28)                                                      */
/*      SPRB0 (0x20001e28)                                                      */
/*      SPRHBM (0x20001e28)                                                     */
/*      SPRC0 (0x20001e28)                                                      */
/*      SPRMCC (0x20001e28)                                                     */
/*      SPRUCC (0x20001e28)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s Other End's TX Coefficient
*/


#define GEN4FARTXCOEFF12_SB_FBLP_REG 0x2C021E28

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g4negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g4negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g4negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN4FARTXCOEFF12_SB_FBLP_STRUCT;

/* GEN4FARTXCOEFF13_SB_FBLP_REG supported on:                                   */
/*      SPRA0 (0x20001e2c)                                                      */
/*      SPRB0 (0x20001e2c)                                                      */
/*      SPRHBM (0x20001e2c)                                                     */
/*      SPRC0 (0x20001e2c)                                                      */
/*      SPRMCC (0x20001e2c)                                                     */
/*      SPRUCC (0x20001e2c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s Other End's TX Coefficient
*/


#define GEN4FARTXCOEFF13_SB_FBLP_REG 0x2C021E2C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g4negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g4negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g4negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN4FARTXCOEFF13_SB_FBLP_STRUCT;

/* GEN4FARTXCOEFF14_SB_FBLP_REG supported on:                                   */
/*      SPRA0 (0x20001e30)                                                      */
/*      SPRB0 (0x20001e30)                                                      */
/*      SPRHBM (0x20001e30)                                                     */
/*      SPRC0 (0x20001e30)                                                      */
/*      SPRMCC (0x20001e30)                                                     */
/*      SPRUCC (0x20001e30)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s Other End's TX Coefficient
*/


#define GEN4FARTXCOEFF14_SB_FBLP_REG 0x2C021E30

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g4negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g4negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g4negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN4FARTXCOEFF14_SB_FBLP_STRUCT;

/* GEN4FARTXCOEFF15_SB_FBLP_REG supported on:                                   */
/*      SPRA0 (0x20001e34)                                                      */
/*      SPRB0 (0x20001e34)                                                      */
/*      SPRHBM (0x20001e34)                                                     */
/*      SPRC0 (0x20001e34)                                                      */
/*      SPRMCC (0x20001e34)                                                     */
/*      SPRUCC (0x20001e34)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s Other End's TX Coefficient
*/


#define GEN4FARTXCOEFF15_SB_FBLP_REG 0x2C021E34

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g4negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g4negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g4negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN4FARTXCOEFF15_SB_FBLP_STRUCT;

/* GEN4TXCOEFF0_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001e38)                                                      */
/*      SPRB0 (0x20001e38)                                                      */
/*      SPRHBM (0x20001e38)                                                     */
/*      SPRC0 (0x20001e38)                                                      */
/*      SPRMCC (0x20001e38)                                                     */
/*      SPRUCC (0x20001e38)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s TX Coefficient
*/


#define GEN4TXCOEFF0_SB_FBLP_REG 0x2C021E38

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g4negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g4negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g4negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN4TXCOEFF0_SB_FBLP_STRUCT;

/* GEN4TXCOEFF1_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001e3c)                                                      */
/*      SPRB0 (0x20001e3c)                                                      */
/*      SPRHBM (0x20001e3c)                                                     */
/*      SPRC0 (0x20001e3c)                                                      */
/*      SPRMCC (0x20001e3c)                                                     */
/*      SPRUCC (0x20001e3c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s TX Coefficient
*/


#define GEN4TXCOEFF1_SB_FBLP_REG 0x2C021E3C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g4negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g4negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g4negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN4TXCOEFF1_SB_FBLP_STRUCT;

/* GEN4TXCOEFF2_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001e40)                                                      */
/*      SPRB0 (0x20001e40)                                                      */
/*      SPRHBM (0x20001e40)                                                     */
/*      SPRC0 (0x20001e40)                                                      */
/*      SPRMCC (0x20001e40)                                                     */
/*      SPRUCC (0x20001e40)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s TX Coefficient
*/


#define GEN4TXCOEFF2_SB_FBLP_REG 0x2C021E40

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g4negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g4negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g4negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN4TXCOEFF2_SB_FBLP_STRUCT;

/* GEN4TXCOEFF3_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001e44)                                                      */
/*      SPRB0 (0x20001e44)                                                      */
/*      SPRHBM (0x20001e44)                                                     */
/*      SPRC0 (0x20001e44)                                                      */
/*      SPRMCC (0x20001e44)                                                     */
/*      SPRUCC (0x20001e44)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s TX Coefficient
*/


#define GEN4TXCOEFF3_SB_FBLP_REG 0x2C021E44

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g4negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g4negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g4negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN4TXCOEFF3_SB_FBLP_STRUCT;

/* GEN4TXCOEFF4_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001e48)                                                      */
/*      SPRB0 (0x20001e48)                                                      */
/*      SPRHBM (0x20001e48)                                                     */
/*      SPRC0 (0x20001e48)                                                      */
/*      SPRMCC (0x20001e48)                                                     */
/*      SPRUCC (0x20001e48)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s TX Coefficient
*/


#define GEN4TXCOEFF4_SB_FBLP_REG 0x2C021E48

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g4negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g4negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g4negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN4TXCOEFF4_SB_FBLP_STRUCT;

/* GEN4TXCOEFF5_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001e4c)                                                      */
/*      SPRB0 (0x20001e4c)                                                      */
/*      SPRHBM (0x20001e4c)                                                     */
/*      SPRC0 (0x20001e4c)                                                      */
/*      SPRMCC (0x20001e4c)                                                     */
/*      SPRUCC (0x20001e4c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s TX Coefficient
*/


#define GEN4TXCOEFF5_SB_FBLP_REG 0x2C021E4C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g4negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g4negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g4negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN4TXCOEFF5_SB_FBLP_STRUCT;

/* GEN4TXCOEFF6_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001e50)                                                      */
/*      SPRB0 (0x20001e50)                                                      */
/*      SPRHBM (0x20001e50)                                                     */
/*      SPRC0 (0x20001e50)                                                      */
/*      SPRMCC (0x20001e50)                                                     */
/*      SPRUCC (0x20001e50)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s TX Coefficient
*/


#define GEN4TXCOEFF6_SB_FBLP_REG 0x2C021E50

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g4negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g4negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g4negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN4TXCOEFF6_SB_FBLP_STRUCT;

/* GEN4TXCOEFF7_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001e54)                                                      */
/*      SPRB0 (0x20001e54)                                                      */
/*      SPRHBM (0x20001e54)                                                     */
/*      SPRC0 (0x20001e54)                                                      */
/*      SPRMCC (0x20001e54)                                                     */
/*      SPRUCC (0x20001e54)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s TX Coefficient
*/


#define GEN4TXCOEFF7_SB_FBLP_REG 0x2C021E54

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g4negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g4negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g4negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN4TXCOEFF7_SB_FBLP_STRUCT;

/* GEN4TXCOEFF8_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001e58)                                                      */
/*      SPRB0 (0x20001e58)                                                      */
/*      SPRHBM (0x20001e58)                                                     */
/*      SPRC0 (0x20001e58)                                                      */
/*      SPRMCC (0x20001e58)                                                     */
/*      SPRUCC (0x20001e58)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s TX Coefficient
*/


#define GEN4TXCOEFF8_SB_FBLP_REG 0x2C021E58

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g4negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g4negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g4negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN4TXCOEFF8_SB_FBLP_STRUCT;

/* GEN4TXCOEFF9_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001e5c)                                                      */
/*      SPRB0 (0x20001e5c)                                                      */
/*      SPRHBM (0x20001e5c)                                                     */
/*      SPRC0 (0x20001e5c)                                                      */
/*      SPRMCC (0x20001e5c)                                                     */
/*      SPRUCC (0x20001e5c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s TX Coefficient
*/


#define GEN4TXCOEFF9_SB_FBLP_REG 0x2C021E5C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g4negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g4negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g4negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN4TXCOEFF9_SB_FBLP_STRUCT;

/* GEN4TXCOEFF10_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001e60)                                                      */
/*      SPRB0 (0x20001e60)                                                      */
/*      SPRHBM (0x20001e60)                                                     */
/*      SPRC0 (0x20001e60)                                                      */
/*      SPRMCC (0x20001e60)                                                     */
/*      SPRUCC (0x20001e60)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s TX Coefficient
*/


#define GEN4TXCOEFF10_SB_FBLP_REG 0x2C021E60

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g4negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g4negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g4negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN4TXCOEFF10_SB_FBLP_STRUCT;

/* GEN4TXCOEFF11_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001e64)                                                      */
/*      SPRB0 (0x20001e64)                                                      */
/*      SPRHBM (0x20001e64)                                                     */
/*      SPRC0 (0x20001e64)                                                      */
/*      SPRMCC (0x20001e64)                                                     */
/*      SPRUCC (0x20001e64)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s TX Coefficient
*/


#define GEN4TXCOEFF11_SB_FBLP_REG 0x2C021E64

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g4negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g4negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g4negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN4TXCOEFF11_SB_FBLP_STRUCT;

/* GEN4TXCOEFF12_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001e68)                                                      */
/*      SPRB0 (0x20001e68)                                                      */
/*      SPRHBM (0x20001e68)                                                     */
/*      SPRC0 (0x20001e68)                                                      */
/*      SPRMCC (0x20001e68)                                                     */
/*      SPRUCC (0x20001e68)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s TX Coefficient
*/


#define GEN4TXCOEFF12_SB_FBLP_REG 0x2C021E68

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g4negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g4negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g4negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN4TXCOEFF12_SB_FBLP_STRUCT;

/* GEN4TXCOEFF13_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001e6c)                                                      */
/*      SPRB0 (0x20001e6c)                                                      */
/*      SPRHBM (0x20001e6c)                                                     */
/*      SPRC0 (0x20001e6c)                                                      */
/*      SPRMCC (0x20001e6c)                                                     */
/*      SPRUCC (0x20001e6c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s TX Coefficient
*/


#define GEN4TXCOEFF13_SB_FBLP_REG 0x2C021E6C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g4negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g4negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g4negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN4TXCOEFF13_SB_FBLP_STRUCT;

/* GEN4TXCOEFF14_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001e70)                                                      */
/*      SPRB0 (0x20001e70)                                                      */
/*      SPRHBM (0x20001e70)                                                     */
/*      SPRC0 (0x20001e70)                                                      */
/*      SPRMCC (0x20001e70)                                                     */
/*      SPRUCC (0x20001e70)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s TX Coefficient
*/


#define GEN4TXCOEFF14_SB_FBLP_REG 0x2C021E70

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g4negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g4negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g4negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN4TXCOEFF14_SB_FBLP_STRUCT;

/* GEN4TXCOEFF15_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001e74)                                                      */
/*      SPRB0 (0x20001e74)                                                      */
/*      SPRHBM (0x20001e74)                                                     */
/*      SPRC0 (0x20001e74)                                                      */
/*      SPRMCC (0x20001e74)                                                     */
/*      SPRUCC (0x20001e74)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s TX Coefficient
*/


#define GEN4TXCOEFF15_SB_FBLP_REG 0x2C021E74

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g4negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g4negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g4negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN4TXCOEFF15_SB_FBLP_STRUCT;

/* G5EQEVALCTL_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20001e80)                                                      */
/*      SPRB0 (0x20001e80)                                                      */
/*      SPRHBM (0x20001e80)                                                     */
/*      SPRC0 (0x20001e80)                                                      */
/*      SPRMCC (0x20001e80)                                                     */
/*      SPRUCC (0x20001e80)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s EQ EVAL Control
*/


#define G5EQEVALCTL_SB_FBLP_REG 0x2C021E80

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 rsvd : 24;

                            /* Bits[23:0], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 defpreset : 4;

                            /* Bits[27:24], Access Type=RW/P, default=0x00000000*/

                            /*
                               Preset that will be used if 8GT/s entered w/out
                               receiving EQTS2s. preset 0000 is -6dB de-
                               emphasis and 0dB preshoot.
                            */
    UINT32 bypasseqts2 : 1;

                            /* Bits[28:28], Access Type=RW/P, default=0x00000000*/

                            /*
                               For a downstream link, this allows entry to Gen4
                               w/out sending EQTS2 in 8b/10b mode prior to
                               transmitting at 8GT/s.
                            */
    UINT32 nodlinitblk : 1;

                            /* Bits[29:29], Access Type=RW/P, default=0x00000000*/

                            /*
                               Don't block the DL state machine from starting
                               DL Init once initial L0 reached.
                            */
    UINT32 bypasseq : 1;

                            /* Bits[30:30], Access Type=RW/P, default=0x00000000*/

                            /* Bypass all aspects of Adaptive EQ. */
    UINT32 rsvd_31 : 1;

                            /* Bits[31:31], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G5EQEVALCTL_SB_FBLP_STRUCT;

/* G5EQEVALCTL2_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001e84)                                                      */
/*      SPRB0 (0x20001e84)                                                      */
/*      SPRHBM (0x20001e84)                                                     */
/*      SPRC0 (0x20001e84)                                                      */
/*      SPRMCC (0x20001e84)                                                     */
/*      SPRUCC (0x20001e84)                                                     */
/* Register default value on SPRA0: 0x0000FF00                                  */
/* Register default value on SPRB0: 0x0000FF00                                  */
/* Register default value on SPRHBM: 0x0000FF00                                 */
/* Register default value on SPRC0: 0x0000FF00                                  */
/* Register default value on SPRMCC: 0x0000FF00                                 */
/* Register default value on SPRUCC: 0x0000FF00                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s EQ EVAL Control 2
*/


#define G5EQEVALCTL2_SB_FBLP_REG 0x2C021E84

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 evaltime : 8;

                            /* Bits[7:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               Field defined to do each coeff eval as
                               following. Evaltime[7:6] = unit Evaltime[5:0] =
                               value Unit: 11=\>1ms 10=\>128us 01=\>16u
                               00=\>1us This field should not be programmed in
                               value of 0 (unit=any, value=0) for devices
                               connected to WM design.
                            */
    UINT32 evalatt : 8;

                            /* Bits[15:8], Access Type=RW/V/P, default=0x000000FF*/

                            /*
                               Max number of coeff for a lane to eval before
                               quitting eval phase. Value of 0 means no limit.
                               The value is scaled by the link partners
                               advertised FS value (adj_val =
                               roundup(val*(FS+1)/64)). If FS is 63, the spec
                               max, the value would be unaltered, whereas for a
                               FS of 31, the value written to the config
                               register would be halved. One attempt will be
                               made if the programmed value is greater than 0
                               and the adjusted value would have resulted in a
                               value of 0. Any evaluation attempt following an
                               InvalidRequest indication on the PIPE interface
                               is not counted as an attempt.
                            */
    UINT32 rsvd : 7;

                            /* Bits[22:16], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 reeqspddegrade : 1;

                            /* Bits[23:23], Access Type=RW/P, default=0x00000000*/

                            /*
                               When set, a self detected need to re-equalize
                               will result in a down shift in speed and a
                               disabling of the current rate (8GT/s or higher)
                               and all rates above it.
                            */
    UINT32 skipevalph : 1;

                            /* Bits[24:24], Access Type=RW/P, default=0x00000000*/

                            /*
                               Skip execution of the master eval coeff phase
                               (up component phase 3, down component phase 2).
                               For downstream it skips phase2/3 completely per
                               PCIe Spec. For upstream it passes quickly
                               through phase2 doing no real eval.
                            */
    UINT32 ignoremd : 1;

                            /* Bits[25:25], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, along with a given lane's
                               GEN4TXCOEFF.LNOVRD register being set, any
                               requested coefficient or preset that would
                               normally be rejected is not and the request is
                               silently ignored. If the lane's
                               GEN4TXCOEFF.LNOVRD register is not set, then
                               this field has no effect on that lane.
                            */
    UINT32 exteieos : 1;

                            /* Bits[26:26], Access Type=RW/P, default=0x00000000*/

                            /*
                               Enable extended EIEOS request during master eval
                               stage (up component phase 3, down component
                               phase 2)..
                            */
    UINT32 hwreeqen : 1;

                            /* Bits[27:27], Access Type=RW/P, default=0x00000000*/

                            /* Allow HW to initiate re-equalization. */
    UINT32 hwquiesce : 1;

                            /* Bits[28:28], Access Type=RW/P, default=0x00000000*/

                            /*
                               H/W will require quiescing of the link prior to
                               re-equalization.
                            */
    UINT32 ignorequiesce : 1;

                            /* Bits[29:29], Access Type=RW/P, default=0x00000000*/

                            /*
                               H/W will ignore quiesce bit received from
                               downstream component.
                            */
    UINT32 blkupspeed : 1;

                            /* Bits[30:30], Access Type=RW/P, default=0x00000000*/

                            /*
                               H/W will not initiate an up step in speed to
                               8GT/s in order to advertise or re-do
                               equalization.
                            */
    UINT32 blkupeqreq : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               When this bit is set to 1, the following two
                               events will NOT set the request eq bit in TS2s
                               during Rec.RcvrCfg following Rec.Equalization. -
                               Equalization engine deems link usable but not
                               optimal (this would normally trigger an
                               immediate eq request in TS2s) - Coeff received
                               in Rec.RcvrLck follow Rec.Eq don't match
                               negotiated coeff during Eq.
                            */

  } Bits;
  UINT32 Data;

} G5EQEVALCTL2_SB_FBLP_STRUCT;

/* G5EQEVALCTL3_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001e88)                                                      */
/*      SPRB0 (0x20001e88)                                                      */
/*      SPRHBM (0x20001e88)                                                     */
/*      SPRC0 (0x20001e88)                                                      */
/*      SPRMCC (0x20001e88)                                                     */
/*      SPRUCC (0x20001e88)                                                     */
/* Register default value on SPRA0: 0x00030802                                  */
/* Register default value on SPRB0: 0x00030802                                  */
/* Register default value on SPRHBM: 0x00030802                                 */
/* Register default value on SPRC0: 0x00030802                                  */
/* Register default value on SPRMCC: 0x00030802                                 */
/* Register default value on SPRUCC: 0x00030802                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s EQ EVAL Control 3
*/


#define G5EQEVALCTL3_SB_FBLP_REG 0x2C021E88

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 errthresh1 : 8;

                            /* Bits[7:0], Access Type=RW/P, default=0x00000002*/

                            /*
                               Block error count limit considered optimal.
                               Setting of 0 disables block error check.
                            */
    UINT32 errthresh2 : 8;

                            /* Bits[15:8], Access Type=RW/P, default=0x00000008*/

                            /*
                               Block error count limit considered usable, but
                               may spawn a redo of Equalization if enabled.
                               Setting of 0 causes all checks to at least pass
                               the Threshold 2 check.
                            */
    UINT32 overt2spdfail : 1;

                            /* Bits[16:16], Access Type=RW/P, default=0x00000001*/

                            /*
                               If block error count measured over Threshold 2,
                               force link to fail down to lower speed.
                            */
    UINT32 undert2redo : 1;

                            /* Bits[17:17], Access Type=RW/P, default=0x00000001*/

                            /*
                               If block error count under Threshold 2 but equal
                               to or over Threshold 1, request a redo of
                               equalization.
                            */
    UINT32 rsvd : 14;

                            /* Bits[31:18], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G5EQEVALCTL3_SB_FBLP_STRUCT;

/* G5EQEVALCTL4_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001e8c)                                                      */
/*      SPRB0 (0x20001e8c)                                                      */
/*      SPRHBM (0x20001e8c)                                                     */
/*      SPRC0 (0x20001e8c)                                                      */
/*      SPRMCC (0x20001e8c)                                                     */
/*      SPRUCC (0x20001e8c)                                                     */
/* Register default value on SPRA0: 0x64020000                                  */
/* Register default value on SPRB0: 0x64020000                                  */
/* Register default value on SPRHBM: 0x64020000                                 */
/* Register default value on SPRC0: 0x64020000                                  */
/* Register default value on SPRMCC: 0x64020000                                 */
/* Register default value on SPRUCC: 0x64020000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s EQ EVAL Control 4
*/


#define G5EQEVALCTL4_SB_FBLP_REG 0x2C021E8C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 rsvd : 16;

                            /* Bits[15:0], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 prefpreset_en : 1;

                            /* Bits[16:16], Access Type=RO, default=0x00000000*/

                            /*
                               Enables each preferred tx preset to be checked
                               against the BIOS requested preset used by
                               downstream port in phase1. If the phase1 tx
                               preset of the link partner does not match any of
                               the enabled presets, use PREFPRESET1 as phase2's
                               starting position. This means the first
                               evaluation will be a use tx preset evaluation
                               starting with preferred tx preset 1. Attr. is
                               'RO' for Non DIRFB and 'RWS' for DIRFB
                            */
    UINT32 fomsearch_en : 1;

                            /* Bits[17:17], Access Type=RW/V/P, default=0x00000001*/

                            /* Figure of Merit search enable for WMP. */
    UINT32 rxhintcoeff_en : 1;

                            /* Bits[18:18], Access Type=RW/V/P, default=0x00000000*/

                            /*
                               If this field is set and FOMSEARH_EN=1 and port
                               is an Upstream port, use HINTIDXMODE and
                               UPHISELFOMTBL to select FOM Stage1 points. -OR-
                               FOMSEARCH_EN=1 and port is a Downstream port,
                               field is unused (except if
                               EQEVALCTL2.EVALATT==1). -OR- FOMSEARCH_EN=0, use
                               HINTIDXMODE result to index into FOMHINTTBL for
                               single coefficient evaluation.
                            */
    UINT32 rxhint7ovr_en : 1;

                            /* Bits[19:19], Access Type=RW/V/P, default=0x00000000*/

                            /*
                               When set to 1, the starting coeff to evaluate
                               (phase2 upstream, phase3 downstream) will be
                               derived from Rx Hint Table entry DBXX (7). This
                               overrides the preferred preset mode and the
                               normal Rx Hint table mode.
                            */
    UINT32 hintidxmode : 3;

                            /* Bits[22:20], Access Type=RW/V/P, default=0x00000000*/

                            /*
                               Hint mode index lookup FarTxWeight (FTW) = Using
                               TxPreset captured in Phase1, apply mapping from
                               UPHINTMAP0/1 register LocTxWeight (LTW) = Using
                               TxPreset captured in EQTS2s (LaneEqCtl.UPTP),
                               apply mapping from UPHINTMAP0/1 register
                               RxHintWeight (RHW) = Using Rx Hint captured in
                               EQTS2s (LaneEqCtl.UPRPH), apply mapping from
                               UPHINTMAP2 register Register Value : Hint Index
                               Result 000 : (LTW+FTW)/2 001 : FTW 010 : LTW 100
                               : RHW 011 : (LTW+FTW)/2 101 : (RHW+FTW)/2 110 :
                               (RHW+LTW)/2 111 : (RHW+LTW+FTW)/3 The resultant
                               index is used in the comparison of
                               UPHISELFOMTBL. UPHISELFOMTBL.MST If the value
                               calculated according to EQEVALCTL4.HINTIDXMODE
                               is less than the programmed value, treat channel
                               as short and use FOM stage1 entries from the FOM
                               Hint Table. UPHISELFOMTBL.MLT If the value
                               calculated according to EQEVALCTL4.HINTIDXMODE
                               is less than the programmed value and greater or
                               equal to MST, treat the channel as medium-short
                               and use UPHIFOMTBLM0-7.MSD1,D2,FT for FOM Stage1
                               entries. UPHISELFOMTBL.MLT If the value
                               calculated according to EQEVALCTL4.HINTIDXMODE
                               is less than the programmed value and greater or
                               equal to MST, treat the channel as medium-short
                               and use UPHIFOMTBLM0-7.MSD1,D2,FT for FOM Stage1
                               entries. UPHISELFOMTBL.LT If the value
                               calculated according to EQEVALCTL4.HINTIDXMODE
                               is less than the programmed value and greater or
                               equal to MLT, treat the channel as medium-long
                               and use UPHIFOMTBLM0-7.MLD1,D2,FT for FOM Stage1
                               entries. If the value calculated according to
                               EQEVALCTL4.HINTIDXMODE is greater or equal to
                               the programmed value, treat the channel as long
                               and use UPHIFOMTBLL0-7.LD1,D2,FT for FOM Stage1
                               entries.
                            */
    UINT32 qchktmunit : 1;

                            /* Bits[23:23], Access Type=RW/P, default=0x00000000*/

                            /*
                               0 = time limit is QCHKTMVAL * 1us, 1 = time
                               limit is QCHKTMVAL * 128us
                            */
    UINT32 qchktmval : 7;

                            /* Bits[30:24], Access Type=RW/P, default=0x00000064*/

                            /*
                               Final evaluation loop time. This loop will not
                               ask the IOs to enabled any adaptive eq logic and
                               is used as a quick sanity check of link errors
                            */
    UINT32 reverseeqts2 : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               Allows EQTS2s to be sent by upstream port or
                               decoded by downstream port to override the
                               LinkEqCtl.DownStreamPortTxPreset value. For an
                               upstream port, the PREFPRESET1 value will be
                               sent in the EQTS2s it sends to the upstream
                               component. For a downstream port, this will
                               enable it to accept EQTS2s from the upstream
                               port and override the
                               LinkEqCtl.DownstreamTxPreset value.
                            */

  } Bits;
  UINT32 Data;

} G5EQEVALCTL4_SB_FBLP_STRUCT;

/* G5EQEVALCTL5_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001e90)                                                      */
/*      SPRB0 (0x20001e90)                                                      */
/*      SPRHBM (0x20001e90)                                                     */
/*      SPRC0 (0x20001e90)                                                      */
/*      SPRMCC (0x20001e90)                                                     */
/*      SPRUCC (0x20001e90)                                                     */
/* Register default value on SPRA0: 0x3A87F003                                  */
/* Register default value on SPRB0: 0x3A87F003                                  */
/* Register default value on SPRHBM: 0x3A87F003                                 */
/* Register default value on SPRC0: 0x3A87F003                                  */
/* Register default value on SPRMCC: 0x3A87F003                                 */
/* Register default value on SPRUCC: 0x3A87F003                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s EQ EVAL Control 5
*/


#define G5EQEVALCTL5_SB_FBLP_REG 0x2C021E90

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 locktime : 4;

                            /* Bits[3:0], Access Type=RW/P, default=0x00000003*/

                            /*
                               Max time to allow block lock on new coeff
                               request. Time is value*4us. When this field is
                               set to 0, it will remain in Lock state until
                               lock is achieved or the primary timer for
                               Phase2/3 expires (thus an EQ failure).
                            */
    UINT32 coeffevalwait : 8;

                            /* Bits[11:4], Access Type=RW/P, default=0x00000000*/

                            /*
                               Time to wait after lock (or lock timeout) before
                               enabling the IOs to evaluate the new coeff
                               settings. This allows the circuits some extra
                               time to setup their evaluation logic. Time is
                               value*4us.
                            */
    UINT32 usepreevalwait : 8;

                            /* Bits[19:12], Access Type=RW/P, default=0x0000007F*/

                            /*
                               Time to wait after lock (or lock timeout) before
                               enabling the IOs to evaluate the new tx preset
                               settings. This allows the circuits some extra
                               time to setup their evaluation logic. Time is
                               value*4us.
                            */
    UINT32 phasetodis : 3;

                            /* Bits[22:20], Access Type=RW/P, default=0x00000000*/

                            /*
                               Disable phase 1/2/3 timeouts bit 0 - phase 1 bit
                               1 - phase 2 bit 3 - phase 3
                            */
    UINT32 phmtimerval : 4;

                            /* Bits[26:23], Access Type=RW/P, default=0x00000005*/

                            /*
                               Master phase (UP=Phase2, DP=Phase3) timeout.
                               time limit is (val+1)*4ms
                            */
    UINT32 phstimerval : 4;

                            /* Bits[30:27], Access Type=RW/P, default=0x00000007*/

                            /*
                               Slave phase (UP=Phase3, DP=Phase2) timeout. time
                               limit is (val+1)*4ms
                            */
    UINT32 rsvd : 1;

                            /* Bits[31:31], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G5EQEVALCTL5_SB_FBLP_STRUCT;

/* G5EQEVALCTL6_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001e94)                                                      */
/*      SPRB0 (0x20001e94)                                                      */
/*      SPRHBM (0x20001e94)                                                     */
/*      SPRC0 (0x20001e94)                                                      */
/*      SPRMCC (0x20001e94)                                                     */
/*      SPRUCC (0x20001e94)                                                     */
/* Register default value on SPRA0: 0x00000623                                  */
/* Register default value on SPRB0: 0x00000623                                  */
/* Register default value on SPRHBM: 0x00000623                                 */
/* Register default value on SPRC0: 0x00000623                                  */
/* Register default value on SPRMCC: 0x00000623                                 */
/* Register default value on SPRUCC: 0x00000623                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s EQ EVAL Control 6
*/


#define G5EQEVALCTL6_SB_FBLP_REG 0x2C021E94

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 backofftime : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000003*/

                            /*
                               Time in EQ before starting CTLE Adapt and then
                               TS lock val< 16 =\> val[3:0],6'h0, CXLT_TOU_4NS
                               0-3.84us +0/-4ns val*256ns val\>=16 =\>
                               val[4:0],5'h0, CXLT_TOU_128NS 0-126.98us
                               +0/-128ns val*4us.
                            */
    UINT32 reeqctleadpten : 1;

                            /* Bits[5:5], Access Type=RW/P, default=0x00000001*/

                            /*
                               Enable CTLE Adaption on entry to phase1/0 not
                               from speed change w/EQTS2.
                            */
    UINT32 reeqctleadptwt : 3;

                            /* Bits[8:6], Access Type=RW/P, default=0x00000000*/

                            /*
                               Time before starting CTLE after entry to
                               DP.PH1/UP.PH0. 000 = 512ns, 001 = 1us, 010 =
                               1.5us, 011 = 2us, 100 = 4us, 101 = 8us, 110 =
                               12us, 111 = 16us.
                            */
    UINT32 lbctleadpten : 1;

                            /* Bits[9:9], Access Type=RW/P, default=0x00000001*/

                            /*
                               Enable CTLE Adaption on entry to Loopback.Master
                               @Gen4.
                            */
    UINT32 lbctleadptwt : 3;

                            /* Bits[12:10], Access Type=RW/P, default=0x00000001*/

                            /*
                               Time before starting CTLE after EI exit detect.
                               000 = 512ns, 001 = 1us, 010 = 1.5us, 011 = 2us,
                               100 = 4us, 101 = 8us, 110 = 12us, 111 = 16us.
                            */
    UINT32 spdchgctleadpten : 1;

                            /* Bits[13:13], Access Type=RW/P, default=0x00000000*/

                            /*
                               Backup to the IOs doing CTLE for speed change to
                               G3. Control will initiate a CTLE adapt after
                               speed changed and Rx EI Exit.
                            */
    UINT32 locbusfetchen : 1;

                            /* Bits[14:14], Access Type=RO, default=0x00000000*/

                            /* Enable Local bus fetch of coeff table. */
    UINT32 locbusfetchinit : 1;

                            /* Bits[15:15], Access Type=RO, default=0x00000000*/

                            /*
                               Initiate a manual fetch self clears when
                               complete.
                            */
    UINT32 rsvd : 12;

                            /* Bits[27:16], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 reqlbmstrcoeff : 1;

                            /* Bits[28:28], Access Type=RW/P, default=0x00000000*/

                            /*
                               When intending to master loopback at Gen4
                               speeds, this bit can be used to enable the
                               dictation of what far end Tx EQ settings to use.
                               The per lane settings are defined in the
                               GEN4FARTXCOEFF#.D1/2/FTYPE fields. The LNOVRD
                               field is not required to be set. Valid values
                               must also be captured or programmed into the
                               EQFARFSLF register.
                            */
    UINT32 rsvd_29 : 3;

                            /* Bits[31:29], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G5EQEVALCTL6_SB_FBLP_STRUCT;

/* G5EQEVALCTL7_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001e98)                                                      */
/*      SPRB0 (0x20001e98)                                                      */
/*      SPRHBM (0x20001e98)                                                     */
/*      SPRC0 (0x20001e98)                                                      */
/*      SPRMCC (0x20001e98)                                                     */
/*      SPRUCC (0x20001e98)                                                     */
/* Register default value on SPRA0: 0x000000FF                                  */
/* Register default value on SPRB0: 0x000000FF                                  */
/* Register default value on SPRHBM: 0x000000FF                                 */
/* Register default value on SPRC0: 0x000000FF                                  */
/* Register default value on SPRMCC: 0x000000FF                                 */
/* Register default value on SPRUCC: 0x000000FF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s EQ EVAL Control 7
*/


#define G5EQEVALCTL7_SB_FBLP_REG 0x2C021E98

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 fomstplim : 8;

                            /* Bits[7:0], Access Type=RW/P, default=0x000000FF*/

                            /*
                               Max FOM value, if FOM\>=FOMSTPLIM, exit
                               evaluation.
                            */
    UINT32 rsvd : 8;

                            /* Bits[15:8], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 saveeqmd : 1;

                            /* Bits[16:16], Access Type=RW/P, default=0x00000000*/

                            /*
                               If NOEQEN is set and G5CAP/G5CTL have enabled No
                               EQ mode, this qualifies enabling No EQ train
                               mode by having done at least one full EQ train
                               at all rates upto 32GT/s since last sticky
                               reset. This successful full train since last
                               sticky reset is represented in
                               EQEVALSTS4.SAVEEQ4NOEQ. Coefficient values in
                               G3,4,5TXCOEFF will be preserved and act as if
                               thier LNOVD field is set as long as
                               EQEVALSTS4.SAVEEQ4NOEQ is set
                            */
    UINT32 eqbypen : 1;

                            /* Bits[17:17], Access Type=RW/P, default=0x00000000*/

                            /*
                               if cleared, the values of G5CAP.EQBYPSUP and
                               G5CTL.EQBYPDIS are ignored and EQ Bypass mode is
                               not initiated
                            */
    UINT32 noeqen : 1;

                            /* Bits[18:18], Access Type=RW/P, default=0x00000000*/

                            /*
                               if cleared, the values of G5CAP.NOEQSUP and
                               G5CTL.NOEQDIS are ignore and No EQ mode is not
                               initiated
                            */
    UINT32 noeq_txprecode : 1;

                            /* Bits[19:19], Access Type=RW/V/P, default=0x00000000*/

                            /*
                               This is the use Tx precode state that will be
                               used if No-Eq training is successful. The HW
                               side will load a value into this field if
                               SAVEEQMD is enabled, else SW must program with
                               an appropriate value.
                            */
    UINT32 rsvd_20 : 12;

                            /* Bits[31:20], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G5EQEVALCTL7_SB_FBLP_STRUCT;

/* G5EQEVALSTS_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20001ea4)                                                      */
/*      SPRB0 (0x20001ea4)                                                      */
/*      SPRHBM (0x20001ea4)                                                     */
/*      SPRC0 (0x20001ea4)                                                      */
/*      SPRMCC (0x20001ea4)                                                     */
/*      SPRUCC (0x20001ea4)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s EQ EVAL Status
*/


#define G5EQEVALSTS_SB_FBLP_REG 0x2C021EA4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lnopt0 : 1;

                            /* Bits[0:0], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting. */
    UINT32 lnopt1 : 1;

                            /* Bits[1:1], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting. */
    UINT32 lnopt2 : 1;

                            /* Bits[2:2], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting. */
    UINT32 lnopt3 : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting. */
    UINT32 lnopt4 : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting. */
    UINT32 lnopt5 : 1;

                            /* Bits[5:5], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting. */
    UINT32 lnopt6 : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting. */
    UINT32 lnopt7 : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting. */
    UINT32 lnopt8 : 1;

                            /* Bits[8:8], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting. */
    UINT32 lnopt9 : 1;

                            /* Bits[9:9], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting. */
    UINT32 lnopt10 : 1;

                            /* Bits[10:10], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting. */
    UINT32 lnopt11 : 1;

                            /* Bits[11:11], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting. */
    UINT32 lnopt12 : 1;

                            /* Bits[12:12], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting. */
    UINT32 lnopt13 : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting. */
    UINT32 lnopt14 : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting. */
    UINT32 lnopt15 : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /* Lane is running at optimal EQ setting. */
    UINT32 lnloop0 : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnloop1 : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnloop2 : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnloop3 : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnloop4 : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnloop5 : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnloop6 : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnloop7 : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnloop8 : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnloop9 : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnloop10 : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnloop11 : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnloop12 : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnloop13 : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnloop14 : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnloop15 : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */

  } Bits;
  UINT32 Data;

} G5EQEVALSTS_SB_FBLP_STRUCT;

/* G5EQEVALSTS2_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001ea8)                                                      */
/*      SPRB0 (0x20001ea8)                                                      */
/*      SPRHBM (0x20001ea8)                                                     */
/*      SPRC0 (0x20001ea8)                                                      */
/*      SPRMCC (0x20001ea8)                                                     */
/*      SPRUCC (0x20001ea8)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s EQ EVAL Status 2
*/


#define G5EQEVALSTS2_SB_FBLP_REG 0x2C021EA8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 evalatts : 8;

                            /* Bits[7:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Number of eval attempts to get all lanes
                               optimal.
                            */
    UINT32 reeqspddisg5 : 1;

                            /* Bits[8:8], Access Type=RW/1C/V, default=0x00000000*/

                            /*
                               When set, hardware has disabled 8GT/s and above
                               data rates due to a need to re-equalize.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G5EQEVALSTS2_SB_FBLP_STRUCT;

/* G5EQEVALSTS3_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001eac)                                                      */
/*      SPRB0 (0x20001eac)                                                      */
/*      SPRHBM (0x20001eac)                                                     */
/*      SPRC0 (0x20001eac)                                                      */
/*      SPRMCC (0x20001eac)                                                     */
/*      SPRUCC (0x20001eac)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 16.0 GT/s EQ EVAL Status 3
*/


#define G5EQEVALSTS3_SB_FBLP_REG 0x2C021EAC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lnerrth2met0 : 1;

                            /* Bits[0:0], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2.
                            */
    UINT32 lnerrth2met1 : 1;

                            /* Bits[1:1], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2.
                            */
    UINT32 lnerrth2met2 : 1;

                            /* Bits[2:2], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2.
                            */
    UINT32 lnerrth2met3 : 1;

                            /* Bits[3:3], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2.
                            */
    UINT32 lnerrth2met4 : 1;

                            /* Bits[4:4], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2.
                            */
    UINT32 lnerrth2met5 : 1;

                            /* Bits[5:5], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2.
                            */
    UINT32 lnerrth2met6 : 1;

                            /* Bits[6:6], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2.
                            */
    UINT32 lnerrth2met7 : 1;

                            /* Bits[7:7], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2.
                            */
    UINT32 lnerrth2met8 : 1;

                            /* Bits[8:8], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2.
                            */
    UINT32 lnerrth2met9 : 1;

                            /* Bits[9:9], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2.
                            */
    UINT32 lnerrth2met10 : 1;

                            /* Bits[10:10], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2.
                            */
    UINT32 lnerrth2met11 : 1;

                            /* Bits[11:11], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2.
                            */
    UINT32 lnerrth2met12 : 1;

                            /* Bits[12:12], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2.
                            */
    UINT32 lnerrth2met13 : 1;

                            /* Bits[13:13], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2.
                            */
    UINT32 lnerrth2met14 : 1;

                            /* Bits[14:14], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2.
                            */
    UINT32 lnerrth2met15 : 1;

                            /* Bits[15:15], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               Non-optimal lane met error threshold 2
                               requirements from EQEVALCTL3.ERRTHRESH2.
                            */
    UINT32 lnrulelim0 : 1;

                            /* Bits[16:16], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Hit invalid request too many times: Lane
                               evaluation stopped due to coeff rule boundary
                               (IO tap update would result in rule violation)
                               FOM = Search complete: Complete gets set when
                               lane SM goes to OPTIMAL or NON_OPTIMAL and the
                               full search has completed (so cases of non-
                               optimal w/out complete being set are possible).
                            */
    UINT32 lnrulelim1 : 1;

                            /* Bits[17:17], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnrulelim2 : 1;

                            /* Bits[18:18], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnrulelim3 : 1;

                            /* Bits[19:19], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnrulelim4 : 1;

                            /* Bits[20:20], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnrulelim5 : 1;

                            /* Bits[21:21], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Lane hit Loop Limit: Lane evaluation
                               stopped due to repeated coeff (IO tap update
                               resulted in a loop) FOM = Lane in Paused state:
                               PAUSE gets set when lane SM goes to PAUSE.
                            */
    UINT32 lnrulelim6 : 1;

                            /* Bits[22:22], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Hit invalid request too many times: Lane
                               evaluation stopped due to coeff rule boundary
                               (IO tap update would result in rule violation)
                               FOM = Search complete: Complete gets set when
                               lane SM goes to OPTIMAL or NON_OPTIMAL and the
                               full search has completed (so cases of non-
                               optimal w/out complete being set are possible).
                            */
    UINT32 lnrulelim7 : 1;

                            /* Bits[23:23], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Hit invalid request too many times: Lane
                               evaluation stopped due to coeff rule boundary
                               (IO tap update would result in rule violation)
                               FOM = Search complete: Complete gets set when
                               lane SM goes to OPTIMAL or NON_OPTIMAL and the
                               full search has completed (so cases of non-
                               optimal w/out complete being set are possible).
                            */
    UINT32 lnrulelim8 : 1;

                            /* Bits[24:24], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Hit invalid request too many times: Lane
                               evaluation stopped due to coeff rule boundary
                               (IO tap update would result in rule violation)
                               FOM = Search complete: Complete gets set when
                               lane SM goes to OPTIMAL or NON_OPTIMAL and the
                               full search has completed (so cases of non-
                               optimal w/out complete being set are possible).
                            */
    UINT32 lnrulelim9 : 1;

                            /* Bits[25:25], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Hit invalid request too many times: Lane
                               evaluation stopped due to coeff rule boundary
                               (IO tap update would result in rule violation)
                               FOM = Search complete: Complete gets set when
                               lane SM goes to OPTIMAL or NON_OPTIMAL and the
                               full search has completed (so cases of non-
                               optimal w/out complete being set are possible).
                            */
    UINT32 lnrulelim10 : 1;

                            /* Bits[26:26], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Hit invalid request too many times: Lane
                               evaluation stopped due to coeff rule boundary
                               (IO tap update would result in rule violation)
                               FOM = Search complete: Complete gets set when
                               lane SM goes to OPTIMAL or NON_OPTIMAL and the
                               full search has completed (so cases of non-
                               optimal w/out complete being set are possible).
                            */
    UINT32 lnrulelim11 : 1;

                            /* Bits[27:27], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Hit invalid request too many times: Lane
                               evaluation stopped due to coeff rule boundary
                               (IO tap update would result in rule violation)
                               FOM = Search complete: Complete gets set when
                               lane SM goes to OPTIMAL or NON_OPTIMAL and the
                               full search has completed (so cases of non-
                               optimal w/out complete being set are possible).
                            */
    UINT32 lnrulelim12 : 1;

                            /* Bits[28:28], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Hit invalid request too many times: Lane
                               evaluation stopped due to coeff rule boundary
                               (IO tap update would result in rule violation)
                               FOM = Search complete: Complete gets set when
                               lane SM goes to OPTIMAL or NON_OPTIMAL and the
                               full search has completed (so cases of non-
                               optimal w/out complete being set are possible).
                            */
    UINT32 lnrulelim13 : 1;

                            /* Bits[29:29], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Hit invalid request too many times: Lane
                               evaluation stopped due to coeff rule boundary
                               (IO tap update would result in rule violation)
                               FOM = Search complete: Complete gets set when
                               lane SM goes to OPTIMAL or NON_OPTIMAL and the
                               full search has completed (so cases of non-
                               optimal w/out complete being set are possible).
                            */
    UINT32 lnrulelim14 : 1;

                            /* Bits[30:30], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Hit invalid request too many times: Lane
                               evaluation stopped due to coeff rule boundary
                               (IO tap update would result in rule violation)
                               FOM = Search complete: Complete gets set when
                               lane SM goes to OPTIMAL or NON_OPTIMAL and the
                               full search has completed (so cases of non-
                               optimal w/out complete being set are possible).
                            */
    UINT32 lnrulelim15 : 1;

                            /* Bits[31:31], Access Type=RO/V/P, default=0x00000000*/

                            /*
                               FBDIR = Hit invalid request too many times: Lane
                               evaluation stopped due to coeff rule boundary
                               (IO tap update would result in rule violation)
                               FOM = Search complete: Complete gets set when
                               lane SM goes to OPTIMAL or NON_OPTIMAL and the
                               full search has completed (so cases of non-
                               optimal w/out complete being set are possible).
                            */

  } Bits;
  UINT32 Data;

} G5EQEVALSTS3_SB_FBLP_STRUCT;

/* GEN5FARTXCOEFF0_SB_FBLP_REG supported on:                                    */
/*      SPRA0 (0x20001eb8)                                                      */
/*      SPRB0 (0x20001eb8)                                                      */
/*      SPRHBM (0x20001eb8)                                                     */
/*      SPRC0 (0x20001eb8)                                                      */
/*      SPRMCC (0x20001eb8)                                                     */
/*      SPRUCC (0x20001eb8)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 32.0 GT/s Other End's TX Coefficient
*/


#define GEN5FARTXCOEFF0_SB_FBLP_REG 0x2C021EB8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g5negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g5negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g5negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN5FARTXCOEFF0_SB_FBLP_STRUCT;

/* GEN5FARTXCOEFF1_SB_FBLP_REG supported on:                                    */
/*      SPRA0 (0x20001ebc)                                                      */
/*      SPRB0 (0x20001ebc)                                                      */
/*      SPRHBM (0x20001ebc)                                                     */
/*      SPRC0 (0x20001ebc)                                                      */
/*      SPRMCC (0x20001ebc)                                                     */
/*      SPRUCC (0x20001ebc)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 32.0 GT/s Other End's TX Coefficient
*/


#define GEN5FARTXCOEFF1_SB_FBLP_REG 0x2C021EBC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g5negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g5negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g5negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN5FARTXCOEFF1_SB_FBLP_STRUCT;

/* GEN5FARTXCOEFF2_SB_FBLP_REG supported on:                                    */
/*      SPRA0 (0x20001ec0)                                                      */
/*      SPRB0 (0x20001ec0)                                                      */
/*      SPRHBM (0x20001ec0)                                                     */
/*      SPRC0 (0x20001ec0)                                                      */
/*      SPRMCC (0x20001ec0)                                                     */
/*      SPRUCC (0x20001ec0)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 32.0 GT/s Other End's TX Coefficient
*/


#define GEN5FARTXCOEFF2_SB_FBLP_REG 0x2C021EC0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g5negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g5negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g5negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN5FARTXCOEFF2_SB_FBLP_STRUCT;

/* GEN5FARTXCOEFF3_SB_FBLP_REG supported on:                                    */
/*      SPRA0 (0x20001ec4)                                                      */
/*      SPRB0 (0x20001ec4)                                                      */
/*      SPRHBM (0x20001ec4)                                                     */
/*      SPRC0 (0x20001ec4)                                                      */
/*      SPRMCC (0x20001ec4)                                                     */
/*      SPRUCC (0x20001ec4)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 32.0 GT/s Other End's TX Coefficient
*/


#define GEN5FARTXCOEFF3_SB_FBLP_REG 0x2C021EC4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g5negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g5negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g5negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN5FARTXCOEFF3_SB_FBLP_STRUCT;

/* GEN5FARTXCOEFF4_SB_FBLP_REG supported on:                                    */
/*      SPRA0 (0x20001ec8)                                                      */
/*      SPRB0 (0x20001ec8)                                                      */
/*      SPRHBM (0x20001ec8)                                                     */
/*      SPRC0 (0x20001ec8)                                                      */
/*      SPRMCC (0x20001ec8)                                                     */
/*      SPRUCC (0x20001ec8)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 32.0 GT/s Other End's TX Coefficient
*/


#define GEN5FARTXCOEFF4_SB_FBLP_REG 0x2C021EC8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g5negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g5negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g5negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN5FARTXCOEFF4_SB_FBLP_STRUCT;

/* GEN5FARTXCOEFF5_SB_FBLP_REG supported on:                                    */
/*      SPRA0 (0x20001ecc)                                                      */
/*      SPRB0 (0x20001ecc)                                                      */
/*      SPRHBM (0x20001ecc)                                                     */
/*      SPRC0 (0x20001ecc)                                                      */
/*      SPRMCC (0x20001ecc)                                                     */
/*      SPRUCC (0x20001ecc)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 32.0 GT/s Other End's TX Coefficient
*/


#define GEN5FARTXCOEFF5_SB_FBLP_REG 0x2C021ECC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g5negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g5negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g5negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN5FARTXCOEFF5_SB_FBLP_STRUCT;

/* GEN5FARTXCOEFF6_SB_FBLP_REG supported on:                                    */
/*      SPRA0 (0x20001ed0)                                                      */
/*      SPRB0 (0x20001ed0)                                                      */
/*      SPRHBM (0x20001ed0)                                                     */
/*      SPRC0 (0x20001ed0)                                                      */
/*      SPRMCC (0x20001ed0)                                                     */
/*      SPRUCC (0x20001ed0)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 32.0 GT/s Other End's TX Coefficient
*/


#define GEN5FARTXCOEFF6_SB_FBLP_REG 0x2C021ED0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g5negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g5negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g5negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN5FARTXCOEFF6_SB_FBLP_STRUCT;

/* GEN5FARTXCOEFF7_SB_FBLP_REG supported on:                                    */
/*      SPRA0 (0x20001ed4)                                                      */
/*      SPRB0 (0x20001ed4)                                                      */
/*      SPRHBM (0x20001ed4)                                                     */
/*      SPRC0 (0x20001ed4)                                                      */
/*      SPRMCC (0x20001ed4)                                                     */
/*      SPRUCC (0x20001ed4)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 32.0 GT/s Other End's TX Coefficient
*/


#define GEN5FARTXCOEFF7_SB_FBLP_REG 0x2C021ED4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g5negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g5negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g5negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN5FARTXCOEFF7_SB_FBLP_STRUCT;

/* GEN5FARTXCOEFF8_SB_FBLP_REG supported on:                                    */
/*      SPRA0 (0x20001ed8)                                                      */
/*      SPRB0 (0x20001ed8)                                                      */
/*      SPRHBM (0x20001ed8)                                                     */
/*      SPRC0 (0x20001ed8)                                                      */
/*      SPRMCC (0x20001ed8)                                                     */
/*      SPRUCC (0x20001ed8)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 32.0 GT/s Other End's TX Coefficient
*/


#define GEN5FARTXCOEFF8_SB_FBLP_REG 0x2C021ED8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g5negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g5negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g5negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN5FARTXCOEFF8_SB_FBLP_STRUCT;

/* GEN5FARTXCOEFF9_SB_FBLP_REG supported on:                                    */
/*      SPRA0 (0x20001edc)                                                      */
/*      SPRB0 (0x20001edc)                                                      */
/*      SPRHBM (0x20001edc)                                                     */
/*      SPRC0 (0x20001edc)                                                      */
/*      SPRMCC (0x20001edc)                                                     */
/*      SPRUCC (0x20001edc)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 32.0 GT/s Other End's TX Coefficient
*/


#define GEN5FARTXCOEFF9_SB_FBLP_REG 0x2C021EDC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g5negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g5negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g5negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN5FARTXCOEFF9_SB_FBLP_STRUCT;

/* GEN5FARTXCOEFF10_SB_FBLP_REG supported on:                                   */
/*      SPRA0 (0x20001ee0)                                                      */
/*      SPRB0 (0x20001ee0)                                                      */
/*      SPRHBM (0x20001ee0)                                                     */
/*      SPRC0 (0x20001ee0)                                                      */
/*      SPRMCC (0x20001ee0)                                                     */
/*      SPRUCC (0x20001ee0)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 32.0 GT/s Other End's TX Coefficient
*/


#define GEN5FARTXCOEFF10_SB_FBLP_REG 0x2C021EE0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g5negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g5negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g5negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN5FARTXCOEFF10_SB_FBLP_STRUCT;

/* GEN5FARTXCOEFF11_SB_FBLP_REG supported on:                                   */
/*      SPRA0 (0x20001ee4)                                                      */
/*      SPRB0 (0x20001ee4)                                                      */
/*      SPRHBM (0x20001ee4)                                                     */
/*      SPRC0 (0x20001ee4)                                                      */
/*      SPRMCC (0x20001ee4)                                                     */
/*      SPRUCC (0x20001ee4)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 32.0 GT/s Other End's TX Coefficient
*/


#define GEN5FARTXCOEFF11_SB_FBLP_REG 0x2C021EE4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g5negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g5negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g5negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN5FARTXCOEFF11_SB_FBLP_STRUCT;

/* GEN5FARTXCOEFF12_SB_FBLP_REG supported on:                                   */
/*      SPRA0 (0x20001ee8)                                                      */
/*      SPRB0 (0x20001ee8)                                                      */
/*      SPRHBM (0x20001ee8)                                                     */
/*      SPRC0 (0x20001ee8)                                                      */
/*      SPRMCC (0x20001ee8)                                                     */
/*      SPRUCC (0x20001ee8)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 32.0 GT/s Other End's TX Coefficient
*/


#define GEN5FARTXCOEFF12_SB_FBLP_REG 0x2C021EE8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g5negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g5negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g5negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN5FARTXCOEFF12_SB_FBLP_STRUCT;

/* GEN5FARTXCOEFF13_SB_FBLP_REG supported on:                                   */
/*      SPRA0 (0x20001eec)                                                      */
/*      SPRB0 (0x20001eec)                                                      */
/*      SPRHBM (0x20001eec)                                                     */
/*      SPRC0 (0x20001eec)                                                      */
/*      SPRMCC (0x20001eec)                                                     */
/*      SPRUCC (0x20001eec)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 32.0 GT/s Other End's TX Coefficient
*/


#define GEN5FARTXCOEFF13_SB_FBLP_REG 0x2C021EEC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g5negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g5negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g5negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN5FARTXCOEFF13_SB_FBLP_STRUCT;

/* GEN5FARTXCOEFF14_SB_FBLP_REG supported on:                                   */
/*      SPRA0 (0x20001ef0)                                                      */
/*      SPRB0 (0x20001ef0)                                                      */
/*      SPRHBM (0x20001ef0)                                                     */
/*      SPRC0 (0x20001ef0)                                                      */
/*      SPRMCC (0x20001ef0)                                                     */
/*      SPRUCC (0x20001ef0)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 32.0 GT/s Other End's TX Coefficient
*/


#define GEN5FARTXCOEFF14_SB_FBLP_REG 0x2C021EF0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g5negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g5negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g5negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN5FARTXCOEFF14_SB_FBLP_STRUCT;

/* GEN5FARTXCOEFF15_SB_FBLP_REG supported on:                                   */
/*      SPRA0 (0x20001ef4)                                                      */
/*      SPRB0 (0x20001ef4)                                                      */
/*      SPRHBM (0x20001ef4)                                                     */
/*      SPRC0 (0x20001ef4)                                                      */
/*      SPRMCC (0x20001ef4)                                                     */
/*      SPRUCC (0x20001ef4)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 32.0 GT/s Other End's TX Coefficient
*/


#define GEN5FARTXCOEFF15_SB_FBLP_REG 0x2C021EF4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g5negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Post-Cursor
                               Coefficient value
                            */
    UINT32 g5negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Main-Cursor
                               Coefficient value
                            */
    UINT32 g5negtxprecf : 6;

                            /* Bits[17:12], Access Type=RO/V, default=0x00000000*/

                            /*
                               Other end's Gen4 Negotiated Tx Pre-Cursor
                               Coefficient value
                            */
    UINT32 rsvd : 1;

                            /* Bits[18:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ftype : 2;

                            /* Bits[20:19], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. value 11 is reserved */
    UINT32 d1 : 5;

                            /* Bits[25:21], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 d2 : 5;

                            /* Bits[30:26], Access Type=RW/P, default=0x00000000*/

                            /* See FOM table. */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, this lane will use only the values
                               defined in FTYPE/D1/D2 fields during
                               UP.Phase/DP.Phase3.
                            */

  } Bits;
  UINT32 Data;

} GEN5FARTXCOEFF15_SB_FBLP_STRUCT;

/* GEN5TXCOEFF0_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001ef8)                                                      */
/*      SPRB0 (0x20001ef8)                                                      */
/*      SPRHBM (0x20001ef8)                                                     */
/*      SPRC0 (0x20001ef8)                                                      */
/*      SPRMCC (0x20001ef8)                                                     */
/*      SPRUCC (0x20001ef8)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 32.0 GT/s TX Coefficient
*/


#define GEN5TXCOEFF0_SB_FBLP_REG 0x2C021EF8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g5negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g5negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g5negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN5TXCOEFF0_SB_FBLP_STRUCT;

/* GEN5TXCOEFF1_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001efc)                                                      */
/*      SPRB0 (0x20001efc)                                                      */
/*      SPRHBM (0x20001efc)                                                     */
/*      SPRC0 (0x20001efc)                                                      */
/*      SPRMCC (0x20001efc)                                                     */
/*      SPRUCC (0x20001efc)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 32.0 GT/s TX Coefficient
*/


#define GEN5TXCOEFF1_SB_FBLP_REG 0x2C021EFC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g5negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g5negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g5negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN5TXCOEFF1_SB_FBLP_STRUCT;

/* GEN5TXCOEFF2_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001f00)                                                      */
/*      SPRB0 (0x20001f00)                                                      */
/*      SPRHBM (0x20001f00)                                                     */
/*      SPRC0 (0x20001f00)                                                      */
/*      SPRMCC (0x20001f00)                                                     */
/*      SPRUCC (0x20001f00)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 32.0 GT/s TX Coefficient
*/


#define GEN5TXCOEFF2_SB_FBLP_REG 0x2C021F00

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g5negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g5negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g5negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN5TXCOEFF2_SB_FBLP_STRUCT;

/* GEN5TXCOEFF3_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001f04)                                                      */
/*      SPRB0 (0x20001f04)                                                      */
/*      SPRHBM (0x20001f04)                                                     */
/*      SPRC0 (0x20001f04)                                                      */
/*      SPRMCC (0x20001f04)                                                     */
/*      SPRUCC (0x20001f04)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 32.0 GT/s TX Coefficient
*/


#define GEN5TXCOEFF3_SB_FBLP_REG 0x2C021F04

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g5negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g5negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g5negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN5TXCOEFF3_SB_FBLP_STRUCT;

/* GEN5TXCOEFF4_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001f08)                                                      */
/*      SPRB0 (0x20001f08)                                                      */
/*      SPRHBM (0x20001f08)                                                     */
/*      SPRC0 (0x20001f08)                                                      */
/*      SPRMCC (0x20001f08)                                                     */
/*      SPRUCC (0x20001f08)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 32.0 GT/s TX Coefficient
*/


#define GEN5TXCOEFF4_SB_FBLP_REG 0x2C021F08

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g5negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g5negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g5negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN5TXCOEFF4_SB_FBLP_STRUCT;

/* GEN5TXCOEFF5_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001f0c)                                                      */
/*      SPRB0 (0x20001f0c)                                                      */
/*      SPRHBM (0x20001f0c)                                                     */
/*      SPRC0 (0x20001f0c)                                                      */
/*      SPRMCC (0x20001f0c)                                                     */
/*      SPRUCC (0x20001f0c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 32.0 GT/s TX Coefficient
*/


#define GEN5TXCOEFF5_SB_FBLP_REG 0x2C021F0C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g5negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g5negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g5negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN5TXCOEFF5_SB_FBLP_STRUCT;

/* GEN5TXCOEFF6_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001f10)                                                      */
/*      SPRB0 (0x20001f10)                                                      */
/*      SPRHBM (0x20001f10)                                                     */
/*      SPRC0 (0x20001f10)                                                      */
/*      SPRMCC (0x20001f10)                                                     */
/*      SPRUCC (0x20001f10)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 32.0 GT/s TX Coefficient
*/


#define GEN5TXCOEFF6_SB_FBLP_REG 0x2C021F10

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g5negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g5negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g5negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN5TXCOEFF6_SB_FBLP_STRUCT;

/* GEN5TXCOEFF7_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001f14)                                                      */
/*      SPRB0 (0x20001f14)                                                      */
/*      SPRHBM (0x20001f14)                                                     */
/*      SPRC0 (0x20001f14)                                                      */
/*      SPRMCC (0x20001f14)                                                     */
/*      SPRUCC (0x20001f14)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 32.0 GT/s TX Coefficient
*/


#define GEN5TXCOEFF7_SB_FBLP_REG 0x2C021F14

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g5negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g5negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g5negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN5TXCOEFF7_SB_FBLP_STRUCT;

/* GEN5TXCOEFF8_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001f18)                                                      */
/*      SPRB0 (0x20001f18)                                                      */
/*      SPRHBM (0x20001f18)                                                     */
/*      SPRC0 (0x20001f18)                                                      */
/*      SPRMCC (0x20001f18)                                                     */
/*      SPRUCC (0x20001f18)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 32.0 GT/s TX Coefficient
*/


#define GEN5TXCOEFF8_SB_FBLP_REG 0x2C021F18

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g5negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g5negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g5negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN5TXCOEFF8_SB_FBLP_STRUCT;

/* GEN5TXCOEFF9_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001f1c)                                                      */
/*      SPRB0 (0x20001f1c)                                                      */
/*      SPRHBM (0x20001f1c)                                                     */
/*      SPRC0 (0x20001f1c)                                                      */
/*      SPRMCC (0x20001f1c)                                                     */
/*      SPRUCC (0x20001f1c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 32.0 GT/s TX Coefficient
*/


#define GEN5TXCOEFF9_SB_FBLP_REG 0x2C021F1C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g5negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g5negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g5negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN5TXCOEFF9_SB_FBLP_STRUCT;

/* GEN5TXCOEFF10_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001f20)                                                      */
/*      SPRB0 (0x20001f20)                                                      */
/*      SPRHBM (0x20001f20)                                                     */
/*      SPRC0 (0x20001f20)                                                      */
/*      SPRMCC (0x20001f20)                                                     */
/*      SPRUCC (0x20001f20)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 32.0 GT/s TX Coefficient
*/


#define GEN5TXCOEFF10_SB_FBLP_REG 0x2C021F20

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g5negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g5negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g5negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN5TXCOEFF10_SB_FBLP_STRUCT;

/* GEN5TXCOEFF11_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001f24)                                                      */
/*      SPRB0 (0x20001f24)                                                      */
/*      SPRHBM (0x20001f24)                                                     */
/*      SPRC0 (0x20001f24)                                                      */
/*      SPRMCC (0x20001f24)                                                     */
/*      SPRUCC (0x20001f24)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 32.0 GT/s TX Coefficient
*/


#define GEN5TXCOEFF11_SB_FBLP_REG 0x2C021F24

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g5negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g5negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g5negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN5TXCOEFF11_SB_FBLP_STRUCT;

/* GEN5TXCOEFF12_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001f28)                                                      */
/*      SPRB0 (0x20001f28)                                                      */
/*      SPRHBM (0x20001f28)                                                     */
/*      SPRC0 (0x20001f28)                                                      */
/*      SPRMCC (0x20001f28)                                                     */
/*      SPRUCC (0x20001f28)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 32.0 GT/s TX Coefficient
*/


#define GEN5TXCOEFF12_SB_FBLP_REG 0x2C021F28

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g5negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g5negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g5negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN5TXCOEFF12_SB_FBLP_STRUCT;

/* GEN5TXCOEFF13_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001f2c)                                                      */
/*      SPRB0 (0x20001f2c)                                                      */
/*      SPRHBM (0x20001f2c)                                                     */
/*      SPRC0 (0x20001f2c)                                                      */
/*      SPRMCC (0x20001f2c)                                                     */
/*      SPRUCC (0x20001f2c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 32.0 GT/s TX Coefficient
*/


#define GEN5TXCOEFF13_SB_FBLP_REG 0x2C021F2C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g5negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g5negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g5negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN5TXCOEFF13_SB_FBLP_STRUCT;

/* GEN5TXCOEFF14_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001f30)                                                      */
/*      SPRB0 (0x20001f30)                                                      */
/*      SPRHBM (0x20001f30)                                                     */
/*      SPRC0 (0x20001f30)                                                      */
/*      SPRMCC (0x20001f30)                                                     */
/*      SPRUCC (0x20001f30)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 32.0 GT/s TX Coefficient
*/


#define GEN5TXCOEFF14_SB_FBLP_REG 0x2C021F30

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g5negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g5negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g5negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN5TXCOEFF14_SB_FBLP_STRUCT;

/* GEN5TXCOEFF15_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20001f34)                                                      */
/*      SPRB0 (0x20001f34)                                                      */
/*      SPRHBM (0x20001f34)                                                     */
/*      SPRC0 (0x20001f34)                                                      */
/*      SPRMCC (0x20001f34)                                                     */
/*      SPRUCC (0x20001f34)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* 32.0 GT/s TX Coefficient
*/


#define GEN5TXCOEFF15_SB_FBLP_REG 0x2C021F34

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 g5negtxpostcf : 6;

                            /* Bits[5:0], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx post-Cursor Coefficient value */
    UINT32 g5negtxmaincf : 6;

                            /* Bits[11:6], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Main-Cursor Coefficient value */
    UINT32 g5negtxprecf : 6;

                            /* Bits[17:12], Access Type=RW/V/P, default=0x00000000*/

                            /* Gen4 Negotiated Tx Pre-Cursor Coefficient value */
    UINT32 rsvd : 13;

                            /* Bits[30:18], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 lnovrd : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the fields of this register become
                               overrides to the local PHY transmitter's
                               coefficients. The phase2/3 handshake protocols
                               are unaffected (protocol faked while not
                               changing tx coeff). If not set, this register's
                               fields remain status only.
                            */

  } Bits;
  UINT32 Data;

} GEN5TXCOEFF15_SB_FBLP_STRUCT;

/* G4MARGPARAM_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20001f40)                                                      */
/*      SPRB0 (0x20001f40)                                                      */
/*      SPRHBM (0x20001f40)                                                     */
/*      SPRC0 (0x20001f40)                                                      */
/*      SPRMCC (0x20001f40)                                                     */
/*      SPRUCC (0x20001f40)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Margining Parameter
*/


#define G4MARGPARAM_SB_FBLP_REG 0x2C021F40

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 minderrsampler : 1;

                            /* Bits[0:0], Access Type=RW/L, default=None*/

                            /*
                               1b Margining will not produce errors (change in
                               the error rate) in dati.e.stream (i.e. error
                               sampler is independent) 0b Margining may produce
                               errors in the data stream Note: Lock Key bit is
                               located in the Personality Lock Key Control
                               Register .
                            */
    UINT32 msamplereportingmethod : 1;

                            /* Bits[1:1], Access Type=RW/L, default=None*/

                            /*
                               Indicates whether sampling rates
                               (MSamplingRateVoltage and MSamplingRateTiming)
                               are supported (1) or a sample count is supported
                               (0). One of the two methods is supported by each
                               device. Note: Lock Key bit is located in the
                               Personality Lock Key Control Register .
                            */
    UINT32 mindleftrighttiming : 1;

                            /* Bits[2:2], Access Type=RW/L, default=None*/

                            /*
                               1b indicates independent left/right timing
                               margin supported Note: Lock Key bit is located
                               in the Personality Lock Key Control Register .
                            */
    UINT32 mindupdownvoltage : 1;

                            /* Bits[3:3], Access Type=RW/L, default=None*/

                            /*
                               1b independent up and down voltage margining
                               supported Note: Lock Key bit is located in the
                               Personality Lock Key Control Register .
                            */
    UINT32 mvoltagesupported : 1;

                            /* Bits[4:4], Access Type=RW/L, default=None*/

                            /*
                               1b indicates that voltage margining is supported
                               Note: Lock Key bit is located in the Personality
                               Lock Key Control Register .
                            */
    UINT32 mnumvoltagesteps : 7;

                            /* Bits[11:5], Access Type=RW/L, default=None*/

                            /*
                               Number of voltage steps from default (either up
                               or down), minimum range +/-50mV as measured by
                               16.0 GT/s reference equalizer Voltage offset
                               must increase monotonically The number of steps
                               in both positive and negative direction from the
                               default sample location must be identical This
                               value is undefined if MVoltageSupported is 0b
                               Note: Lock Key bit is located in the Personality
                               Lock Key Control Register .
                            */
    UINT32 mnumtimingsteps : 6;

                            /* Bits[17:12], Access Type=RW/L, default=None*/

                            /*
                               Number of time steps from default (to either
                               left or right), range must be at least +/-0.2UI
                               Timing offset must increase monotonically The
                               number of steps in both positive (toward the end
                               of the unit interval) and negative (toward the
                               beginning of the unit interval) must be
                               identical Note: Lock Key bit is located in the
                               Personality Lock Key Control Register .
                            */
    UINT32 mmaxtimingoffset : 7;

                            /* Bits[24:18], Access Type=RW/L, default=None*/

                            /*
                               Offset from default at maximum step value as
                               percentage of a nominal UI at 16.0 GT/s A 0
                               value may be reported if the vendor chooses not
                               to report the offset Note: Lock Key bit is
                               located in the Personality Lock Key Control
                               Register .
                            */
    UINT32 mmaxvoltageoffset : 7;

                            /* Bits[31:25], Access Type=RW/L, default=None*/

                            /*
                               Offset from default at maximum step value as
                               percentage of one volt A 0 value may be reported
                               if the vendor chooses not to report the offset
                               when MVoltageSupported is 1b This value is
                               undefined if MVoltageSupported is 0b Note: Lock
                               Key bit is located in the Personality Lock Key
                               Control Register .
                            */

  } Bits;
  UINT32 Data;

} G4MARGPARAM_SB_FBLP_STRUCT;

/* G4MARGPARAM2_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001f44)                                                      */
/*      SPRB0 (0x20001f44)                                                      */
/*      SPRHBM (0x20001f44)                                                     */
/*      SPRC0 (0x20001f44)                                                      */
/*      SPRMCC (0x20001f44)                                                     */
/*      SPRUCC (0x20001f44)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Margining Parameter 2
*/


#define G4MARGPARAM2_SB_FBLP_REG 0x2C021F44

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 msamplingratevoltage : 6;

                            /* Bits[5:0], Access Type=RW/L, default=None*/

                            /*
                               The ratio of bits tested to bits received during
                               voltage margining. A value of 0 is a ratio of
                               1:64 (1 bit of every 64 bits received), and a
                               value of 63 is a ratio of 64:64 (all bits
                               received). Note: Lock Key bit is located in the
                               Personality Lock Key Control Register .
                            */
    UINT32 msamplingratetiming : 6;

                            /* Bits[11:6], Access Type=RW/L, default=None*/

                            /*
                               The ratio of bits tested to bits received during
                               timing margining. A value of 0 is a ratio of
                               1:64 (1 bit of every 64 bits received), and a
                               value of 63 is a ratio of 64:64 (all bits
                               received). Note: Lock Key bit is located in the
                               Personality Lock Key Control Register .
                            */
    UINT32 mmaxlanes : 5;

                            /* Bits[16:12], Access Type=RW/L, default=None*/

                            /*
                               Maximum number of Lanes that can be margined at
                               the same time. Recommended that this value is
                               equal to the number of Lanes in the Link Note:
                               This value shall not exceed the number of Lanes
                               in the Link Note: Lock Key bit is located in the
                               Personality Lock Key Control Register .
                            */
    UINT32 rsvd : 15;

                            /* Bits[31:17], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G4MARGPARAM2_SB_FBLP_STRUCT;

/* G4MARGPARAM3_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001f48)                                                      */
/*      SPRB0 (0x20001f48)                                                      */
/*      SPRHBM (0x20001f48)                                                     */
/*      SPRC0 (0x20001f48)                                                      */
/*      SPRMCC (0x20001f48)                                                     */
/*      SPRUCC (0x20001f48)                                                     */
/* Register default value on SPRA0: 0x00020000                                  */
/* Register default value on SPRB0: 0x00020000                                  */
/* Register default value on SPRHBM: 0x00020000                                 */
/* Register default value on SPRC0: 0x00020000                                  */
/* Register default value on SPRMCC: 0x00020000                                 */
/* Register default value on SPRUCC: 0x00020000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Margining Parameter 3
*/


#define G4MARGPARAM3_SB_FBLP_REG 0x2C021F48

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 pmmaxtstep : 7;

                            /* Bits[6:0], Access Type=RW/L, default=None*/

                            /*
                               Maximum allowed timing step offset change per
                               PIPE margin offset command. A value of 0 means
                               no limit. See G4MARGPARAM.MNumTimingSteps for
                               number of steps allowed. Note: Lock Key bit is
                               located in the Personality Lock Key Control
                               Register .
                            */
    UINT32 pmmacvstep : 7;

                            /* Bits[13:7], Access Type=RW/L, default=None*/

                            /*
                               Maximum allowed voltage step offset change per
                               PIPE margin offset command. A value of 0 means
                               no limit. See G4MARGPARAM.MNumVoltageSteps for
                               number of steps allowed. Note: Lock Key bit is
                               located in the Personality Lock Key Control
                               Register .
                            */
    UINT32 pmrxeqtrain : 1;

                            /* Bits[14:14], Access Type=RW/L, default=None*/

                            /*
                               Request a Rx Eq re-train on de-assertion of
                               pm2p_marg_start. Note: Lock Key bit is located
                               in the Personality Lock Key Control Register .
                            */
    UINT32 rsvd : 1;

                            /* Bits[15:15], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 margswrdy : 1;

                            /* Bits[16:16], Access Type=RW, default=0x00000000*/

                            /*
                               If software driver support is required for
                               margining, this bit is software's method of
                               updating MARGPTSTS.MARGSWRDY. The value of this
                               register is reflected in MARGPTSTS.MARGSWRDY.
                            */
    UINT32 pmsettimeout : 2;

                            /* Bits[18:17], Access Type=RW/P, default=0x00000001*/

                            /*
                               This field controls the timeout value used when
                               making an offset change request across PIPE. A
                               timeout would result in either a NAK or
                               ErrorLimit responce. 00: disabled 01: 256ns
                               -0/+32ns 10: 2us -0/+256ns 11: 128us -0/+16us
                            */
    UINT32 rsvd_19 : 13;

                            /* Bits[31:19], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G4MARGPARAM3_SB_FBLP_STRUCT;

/* G5MARGPARAM_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20001f50)                                                      */
/*      SPRB0 (0x20001f50)                                                      */
/*      SPRHBM (0x20001f50)                                                     */
/*      SPRC0 (0x20001f50)                                                      */
/*      SPRMCC (0x20001f50)                                                     */
/*      SPRUCC (0x20001f50)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Margining Parameter
*/


#define G5MARGPARAM_SB_FBLP_REG 0x2C021F50

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 minderrsampler : 1;

                            /* Bits[0:0], Access Type=RW/L, default=None*/

                            /*
                               1b Margining will not produce errors (change in
                               the error rate) in dati.e.stream (i.e. error
                               sampler is independent) 0b Margining may produce
                               errors in the data stream Note: Lock Key bit is
                               located in the Personality Lock Key Control
                               Register .
                            */
    UINT32 msamplereportingmethod : 1;

                            /* Bits[1:1], Access Type=RW/L, default=None*/

                            /*
                               Indicates whether sampling rates
                               (MSamplingRateVoltage and MSamplingRateTiming)
                               are supported (1) or a sample count is supported
                               (0). One of the two methods is supported by each
                               device. Note: Lock Key bit is located in the
                               Personality Lock Key Control Register .
                            */
    UINT32 mindleftrighttiming : 1;

                            /* Bits[2:2], Access Type=RW/L, default=None*/

                            /*
                               1b indicates independent left/right timing
                               margin supported Note: Lock Key bit is located
                               in the Personality Lock Key Control Register .
                            */
    UINT32 mindupdownvoltage : 1;

                            /* Bits[3:3], Access Type=RW/L, default=None*/

                            /*
                               1b independent up and down voltage margining
                               supported Note: Lock Key bit is located in the
                               Personality Lock Key Control Register .
                            */
    UINT32 mvoltagesupported : 1;

                            /* Bits[4:4], Access Type=RW/L, default=None*/

                            /*
                               1b indicates that voltage margining is supported
                               Note: Lock Key bit is located in the Personality
                               Lock Key Control Register .
                            */
    UINT32 mnumvoltagesteps : 7;

                            /* Bits[11:5], Access Type=RW/L, default=None*/

                            /*
                               Number of voltage steps from default (either up
                               or down), minimum range +/-50mV as measured by
                               16.0 GT/s reference equalizer Voltage offset
                               must increase monotonically The number of steps
                               in both positive and negative direction from the
                               default sample location must be identical This
                               value is undefined if MVoltageSupported is 0b
                               Note: Lock Key bit is located in the Personality
                               Lock Key Control Register .
                            */
    UINT32 mnumtimingsteps : 6;

                            /* Bits[17:12], Access Type=RW/L, default=None*/

                            /*
                               Number of time steps from default (to either
                               left or right), range must be at least +/-0.2UI
                               Timing offset must increase monotonically The
                               number of steps in both positive (toward the end
                               of the unit interval) and negative (toward the
                               beginning of the unit interval) must be
                               identical Note: Lock Key bit is located in the
                               Personality Lock Key Control Register .
                            */
    UINT32 mmaxtimingoffset : 7;

                            /* Bits[24:18], Access Type=RW/L, default=None*/

                            /*
                               Offset from default at maximum step value as
                               percentage of a nominal UI at 16.0 GT/s A 0
                               value may be reported if the vendor chooses not
                               to report the offset Note: Lock Key bit is
                               located in the Personality Lock Key Control
                               Register .
                            */
    UINT32 mmaxvoltageoffset : 7;

                            /* Bits[31:25], Access Type=RW/L, default=None*/

                            /*
                               Offset from default at maximum step value as
                               percentage of one volt A 0 value may be reported
                               if the vendor chooses not to report the offset
                               when MVoltageSupported is 1b This value is
                               undefined if MVoltageSupported is 0b Note: Lock
                               Key bit is located in the Personality Lock Key
                               Control Register .
                            */

  } Bits;
  UINT32 Data;

} G5MARGPARAM_SB_FBLP_STRUCT;

/* G5MARGPARAM2_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001f54)                                                      */
/*      SPRB0 (0x20001f54)                                                      */
/*      SPRHBM (0x20001f54)                                                     */
/*      SPRC0 (0x20001f54)                                                      */
/*      SPRMCC (0x20001f54)                                                     */
/*      SPRUCC (0x20001f54)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Margining Parameter 2
*/


#define G5MARGPARAM2_SB_FBLP_REG 0x2C021F54

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 msamplingratevoltage : 6;

                            /* Bits[5:0], Access Type=RW/L, default=None*/

                            /*
                               The ratio of bits tested to bits received during
                               voltage margining. A value of 0 is a ratio of
                               1:64 (1 bit of every 64 bits received), and a
                               value of 63 is a ratio of 64:64 (all bits
                               received). Note: Lock Key bit is located in the
                               Personality Lock Key Control Register .
                            */
    UINT32 msamplingratetiming : 6;

                            /* Bits[11:6], Access Type=RW/L, default=None*/

                            /*
                               The ratio of bits tested to bits received during
                               timing margining. A value of 0 is a ratio of
                               1:64 (1 bit of every 64 bits received), and a
                               value of 63 is a ratio of 64:64 (all bits
                               received). Note: Lock Key bit is located in the
                               Personality Lock Key Control Register .
                            */
    UINT32 mmaxlanes : 5;

                            /* Bits[16:12], Access Type=RW/L, default=None*/

                            /*
                               Maximum number of Lanes that can be margined at
                               the same time. Recommended that this value is
                               equal to the number of Lanes in the Link Note:
                               This value shall not exceed the number of Lanes
                               in the Link Note: Lock Key bit is located in the
                               Personality Lock Key Control Register .
                            */
    UINT32 rsvd : 15;

                            /* Bits[31:17], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G5MARGPARAM2_SB_FBLP_STRUCT;

/* G5MARGPARAM3_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20001f58)                                                      */
/*      SPRB0 (0x20001f58)                                                      */
/*      SPRHBM (0x20001f58)                                                     */
/*      SPRC0 (0x20001f58)                                                      */
/*      SPRMCC (0x20001f58)                                                     */
/*      SPRUCC (0x20001f58)                                                     */
/* Register default value on SPRA0: 0x00020000                                  */
/* Register default value on SPRB0: 0x00020000                                  */
/* Register default value on SPRHBM: 0x00020000                                 */
/* Register default value on SPRC0: 0x00020000                                  */
/* Register default value on SPRMCC: 0x00020000                                 */
/* Register default value on SPRUCC: 0x00020000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Margining Parameter 3
*/


#define G5MARGPARAM3_SB_FBLP_REG 0x2C021F58

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 pmmaxtstep : 7;

                            /* Bits[6:0], Access Type=RW/L, default=None*/

                            /*
                               Maximum allowed timing step offset change per
                               PIPE margin offset command. A value of 0 means
                               no limit. See G4MARGPARAM.MNumTimingSteps for
                               number of steps allowed. Note: Lock Key bit is
                               located in the Personality Lock Key Control
                               Register .
                            */
    UINT32 pmmacvstep : 7;

                            /* Bits[13:7], Access Type=RW/L, default=None*/

                            /*
                               Maximum allowed voltage step offset change per
                               PIPE margin offset command. A value of 0 means
                               no limit. See G4MARGPARAM.MNumVoltageSteps for
                               number of steps allowed. Note: Lock Key bit is
                               located in the Personality Lock Key Control
                               Register .
                            */
    UINT32 pmrxeqtrain : 1;

                            /* Bits[14:14], Access Type=RW/L, default=None*/

                            /*
                               Request a Rx Eq re-train on de-assertion of
                               pm2p_marg_start. Note: Lock Key bit is located
                               in the Personality Lock Key Control Register .
                            */
    UINT32 rsvd : 1;

                            /* Bits[15:15], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 margswrdy : 1;

                            /* Bits[16:16], Access Type=RW, default=0x00000000*/

                            /*
                               If software driver support is required for
                               margining, this bit is software's method of
                               updating MARGPTSTS.MARGSWRDY. The value of this
                               register is reflected in MARGPTSTS.MARGSWRDY.
                            */
    UINT32 pmsettimeout : 2;

                            /* Bits[18:17], Access Type=RW/P, default=0x00000001*/

                            /*
                               This field controls the timeout value used when
                               making an offset change request across PIPE. A
                               timeout would result in either a NAK or
                               ErrorLimit responce. 00: disabled 01: 256ns
                               -0/+32ns 10: 2us -0/+256ns 11: 128us -0/+16us
                            */
    UINT32 rsvd_19 : 13;

                            /* Bits[31:19], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} G5MARGPARAM3_SB_FBLP_STRUCT;

/* IMI_PMONUNITCTRL_SB_FBLP_REG supported on:                                   */
/*      SPRA0 (0x20002000)                                                      */
/*      SPRB0 (0x20002000)                                                      */
/*      SPRHBM (0x20002000)                                                     */
/*      SPRC0 (0x20002000)                                                      */
/*      SPRMCC (0x20002000)                                                     */
/*      SPRUCC (0x20002000)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a perfmon unit control.  Software can both read it and write it.
*/


#define IMI_PMONUNITCTRL_SB_FBLP_REG 0x2C022000

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 resetcounterconfigs : 1;

                            /* Bits[0:0], Access Type=RW/V/P, default=0x00000000*/

                            /*
                               When this bit is written to, the counter
                               configuration registers will be reset. This does
                               not effect the values in the counters
                            */
    UINT32 resetcounters : 1;

                            /* Bits[1:1], Access Type=RW/V/P, default=0x00000000*/

                            /*
                               When this bit is written to, the counters data
                               fields will be reset. The configuration values
                               will not be reset
                            */
    UINT32 rsvd : 6;

                            /* Bits[7:2], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 freezecounters : 1;

                            /* Bits[8:8], Access Type=RW/P, default=0x00000000*/

                            /*
                               This bit is written to when the counters should
                               be frozen. If this bit is written to and freeze
                               is enabled, the counters in the unit will stop
                               counting
                            */
    UINT32 rsvd_9 : 7;

                            /* Bits[15:9], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 freezeenable : 1;

                            /* Bits[16:16], Access Type=RW/P, default=0x00000000*/

                            /*
                               This bit controls what the counters in the unit
                               will do when they receive a freeze signal. When
                               set, the counters will be allowed to freeze.
                               When not set, the counters will ignore the
                               freeze signal
                            */
    UINT32 overflowenable : 1;

                            /* Bits[17:17], Access Type=RW/P, default=0x00000000*/

                            /*
                               This bit controls the behavior of counters when
                               they overflow. When set, the system will trigger
                               the overflow handling process throughout the
                               rest of the uncore, potentially triggering a PMI
                               and freezing counters. When it is not set, the
                               counters will simply wrap around and continue to
                               count
                            */
    UINT32 rsvd_18 : 14;

                            /* Bits[31:18], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} IMI_PMONUNITCTRL_SB_FBLP_STRUCT;

/* IMI_PMONUNITSTATUS_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x20002004)                                                      */
/*      SPRB0 (0x20002004)                                                      */
/*      SPRHBM (0x20002004)                                                     */
/*      SPRC0 (0x20002004)                                                      */
/*      SPRMCC (0x20002004)                                                     */
/*      SPRUCC (0x20002004)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Performance Monitor Unit Status
*/


#define IMI_PMONUNITSTATUS_SB_FBLP_REG 0x2C022004

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 counteroverflowbitmask : 7;

                            /* Bits[6:0], Access Type=RW/1C/V/P, default=0x00000000*/

                            /*
                               This is a bitmask that specifies which counter
                               (or counters) have overflowed. If the unit has a
                               fixed counter, its corresponding bitmask will be
                               stored at position 0
                            */
    UINT32 globalpmonfreeze : 1;

                            /* Bits[7:7], Access Type=RW/P, default=0x00000000*/

                            /* Global Pmon freeze */
    UINT32 pmon_misc : 8;

                            /* Bits[15:8], Access Type=RW/P, default=0x00000000*/

                            /* Mic pmon connections */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} IMI_PMONUNITSTATUS_SB_FBLP_STRUCT;

/* IMI_PMONCNTR_0_N0_SB_FBLP_REG supported on:                                  */
/*      SPRA0 (0x20002008)                                                      */
/*      SPRB0 (0x20002008)                                                      */
/*      SPRHBM (0x20002008)                                                     */
/*      SPRC0 (0x20002008)                                                      */
/*      SPRMCC (0x20002008)                                                     */
/*      SPRUCC (0x20002008)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a perfmon counter.  Software can both read it and write it
*/


#define IMI_PMONCNTR_0_N0_SB_FBLP_REG 0x2C022008

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 countervalue : 32;

                            /* Bits[31:0], Access Type=RW/V/P, default=0x00000000*/

                            /* This is the current value of the counter */

  } Bits;
  UINT32 Data;

} IMI_PMONCNTR_0_N0_SB_FBLP_STRUCT;

/* IMI_PMONCNTR_0_N1_SB_FBLP_REG supported on:                                  */
/*      SPRA0 (0x2000200c)                                                      */
/*      SPRB0 (0x2000200c)                                                      */
/*      SPRHBM (0x2000200c)                                                     */
/*      SPRC0 (0x2000200c)                                                      */
/*      SPRMCC (0x2000200c)                                                     */
/*      SPRUCC (0x2000200c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a perfmon counter.  Software can both read it and write it
*/


#define IMI_PMONCNTR_0_N1_SB_FBLP_REG 0x2C02200C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 countervalue : 16;

                            /* Bits[15:0], Access Type=RW/V/P, default=0x00000000*/

                            /* This is the current value of the counter */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} IMI_PMONCNTR_0_N1_SB_FBLP_STRUCT;

/* IMI_PMONCNTR_1_N0_SB_FBLP_REG supported on:                                  */
/*      SPRA0 (0x20002010)                                                      */
/*      SPRB0 (0x20002010)                                                      */
/*      SPRHBM (0x20002010)                                                     */
/*      SPRC0 (0x20002010)                                                      */
/*      SPRMCC (0x20002010)                                                     */
/*      SPRUCC (0x20002010)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a perfmon counter.  Software can both read it and write it
*/


#define IMI_PMONCNTR_1_N0_SB_FBLP_REG 0x2C022010

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 countervalue : 32;

                            /* Bits[31:0], Access Type=RW/V/P, default=0x00000000*/

                            /* This is the current value of the counter */

  } Bits;
  UINT32 Data;

} IMI_PMONCNTR_1_N0_SB_FBLP_STRUCT;

/* IMI_PMONCNTR_1_N1_SB_FBLP_REG supported on:                                  */
/*      SPRA0 (0x20002014)                                                      */
/*      SPRB0 (0x20002014)                                                      */
/*      SPRHBM (0x20002014)                                                     */
/*      SPRC0 (0x20002014)                                                      */
/*      SPRMCC (0x20002014)                                                     */
/*      SPRUCC (0x20002014)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a perfmon counter.  Software can both read it and write it
*/


#define IMI_PMONCNTR_1_N1_SB_FBLP_REG 0x2C022014

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 countervalue : 16;

                            /* Bits[15:0], Access Type=RW/V/P, default=0x00000000*/

                            /* This is the current value of the counter */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} IMI_PMONCNTR_1_N1_SB_FBLP_STRUCT;

/* IMI_PMONCNTR_2_N0_SB_FBLP_REG supported on:                                  */
/*      SPRA0 (0x20002018)                                                      */
/*      SPRB0 (0x20002018)                                                      */
/*      SPRHBM (0x20002018)                                                     */
/*      SPRC0 (0x20002018)                                                      */
/*      SPRMCC (0x20002018)                                                     */
/*      SPRUCC (0x20002018)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a perfmon counter.  Software can both read it and write it
*/


#define IMI_PMONCNTR_2_N0_SB_FBLP_REG 0x2C022018

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 countervalue : 32;

                            /* Bits[31:0], Access Type=RW/V/P, default=0x00000000*/

                            /* This is the current value of the counter */

  } Bits;
  UINT32 Data;

} IMI_PMONCNTR_2_N0_SB_FBLP_STRUCT;

/* IMI_PMONCNTR_2_N1_SB_FBLP_REG supported on:                                  */
/*      SPRA0 (0x2000201c)                                                      */
/*      SPRB0 (0x2000201c)                                                      */
/*      SPRHBM (0x2000201c)                                                     */
/*      SPRC0 (0x2000201c)                                                      */
/*      SPRMCC (0x2000201c)                                                     */
/*      SPRUCC (0x2000201c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a perfmon counter.  Software can both read it and write it
*/


#define IMI_PMONCNTR_2_N1_SB_FBLP_REG 0x2C02201C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 countervalue : 16;

                            /* Bits[15:0], Access Type=RW/V/P, default=0x00000000*/

                            /* This is the current value of the counter */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} IMI_PMONCNTR_2_N1_SB_FBLP_STRUCT;

/* IMI_PMONCNTR_3_N0_SB_FBLP_REG supported on:                                  */
/*      SPRA0 (0x20002020)                                                      */
/*      SPRB0 (0x20002020)                                                      */
/*      SPRHBM (0x20002020)                                                     */
/*      SPRC0 (0x20002020)                                                      */
/*      SPRMCC (0x20002020)                                                     */
/*      SPRUCC (0x20002020)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a perfmon counter.  Software can both read it and write it
*/


#define IMI_PMONCNTR_3_N0_SB_FBLP_REG 0x2C022020

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 countervalue : 32;

                            /* Bits[31:0], Access Type=RW/V/P, default=0x00000000*/

                            /* This is the current value of the counter */

  } Bits;
  UINT32 Data;

} IMI_PMONCNTR_3_N0_SB_FBLP_STRUCT;

/* IMI_PMONCNTR_3_N1_SB_FBLP_REG supported on:                                  */
/*      SPRA0 (0x20002024)                                                      */
/*      SPRB0 (0x20002024)                                                      */
/*      SPRHBM (0x20002024)                                                     */
/*      SPRC0 (0x20002024)                                                      */
/*      SPRMCC (0x20002024)                                                     */
/*      SPRUCC (0x20002024)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a perfmon counter.  Software can both read it and write it
*/


#define IMI_PMONCNTR_3_N1_SB_FBLP_REG 0x2C022024

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 countervalue : 16;

                            /* Bits[15:0], Access Type=RW/V/P, default=0x00000000*/

                            /* This is the current value of the counter */
    UINT32 rsvd : 16;

                            /* Bits[31:16], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} IMI_PMONCNTR_3_N1_SB_FBLP_STRUCT;

/* IMI_PMONMASK_00_N0_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x20002028)                                                      */
/*      SPRB0 (0x20002028)                                                      */
/*      SPRHBM (0x20002028)                                                     */
/*      SPRC0 (0x20002028)                                                      */
/*      SPRMCC (0x20002028)                                                     */
/*      SPRUCC (0x20002028)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a mask register for the debug bus to count the PMON events. Software can both read it and write it
*/


#define IMI_PMONMASK_00_N0_SB_FBLP_REG 0x2C022028

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 mask_63_0 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               This specified the mask to be used for the
                               debug_bus from PCIE
                            */

  } Bits;
  UINT32 Data;

} IMI_PMONMASK_00_N0_SB_FBLP_STRUCT;

/* IMI_PMONMASK_00_N1_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x2000202c)                                                      */
/*      SPRB0 (0x2000202c)                                                      */
/*      SPRHBM (0x2000202c)                                                     */
/*      SPRC0 (0x2000202c)                                                      */
/*      SPRMCC (0x2000202c)                                                     */
/*      SPRUCC (0x2000202c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a mask register for the debug bus to count the PMON events. Software can both read it and write it
*/


#define IMI_PMONMASK_00_N1_SB_FBLP_REG 0x2C02202C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 mask_63_0 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               This specified the mask to be used for the
                               debug_bus from PCIE
                            */

  } Bits;
  UINT32 Data;

} IMI_PMONMASK_00_N1_SB_FBLP_STRUCT;

/* IMI_PMONMASK_01_SB_FBLP_REG supported on:                                    */
/*      SPRA0 (0x20002030)                                                      */
/*      SPRB0 (0x20002030)                                                      */
/*      SPRHBM (0x20002030)                                                     */
/*      SPRC0 (0x20002030)                                                      */
/*      SPRMCC (0x20002030)                                                     */
/*      SPRUCC (0x20002030)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a mask register for the debug bus to count the PMON events. Software can both read it and write it
*/


#define IMI_PMONMASK_01_SB_FBLP_REG 0x2C022030

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 mask_71_64 : 8;

                            /* Bits[7:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               This specified the mask to be used for the
                               debug_bus from PCIE
                            */
    UINT32 rsvd : 24;

                            /* Bits[31:8], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} IMI_PMONMASK_01_SB_FBLP_STRUCT;

/* IMI_PMONMASK_11_SB_FBLP_REG supported on:                                    */
/*      SPRA0 (0x20002034)                                                      */
/*      SPRB0 (0x20002034)                                                      */
/*      SPRHBM (0x20002034)                                                     */
/*      SPRC0 (0x20002034)                                                      */
/*      SPRMCC (0x20002034)                                                     */
/*      SPRUCC (0x20002034)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a mask register for the debug bus to count the PMON events. Software can both read it and write it
*/


#define IMI_PMONMASK_11_SB_FBLP_REG 0x2C022034

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 mask_71_64 : 8;

                            /* Bits[7:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               This specified the mask to be used for the
                               debug_bus from PCIE
                            */
    UINT32 rsvd : 24;

                            /* Bits[31:8], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} IMI_PMONMASK_11_SB_FBLP_STRUCT;

/* IMI_PMONMASK_10_N0_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x20002038)                                                      */
/*      SPRB0 (0x20002038)                                                      */
/*      SPRHBM (0x20002038)                                                     */
/*      SPRC0 (0x20002038)                                                      */
/*      SPRMCC (0x20002038)                                                     */
/*      SPRUCC (0x20002038)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a mask register for the debug bus to count the PMON events. Software can both read it and write it
*/


#define IMI_PMONMASK_10_N0_SB_FBLP_REG 0x2C022038

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 mask_63_0 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               This specified the mask to be used for the
                               debug_bus from PCIE
                            */

  } Bits;
  UINT32 Data;

} IMI_PMONMASK_10_N0_SB_FBLP_STRUCT;

/* IMI_PMONMASK_10_N1_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x2000203c)                                                      */
/*      SPRB0 (0x2000203c)                                                      */
/*      SPRHBM (0x2000203c)                                                     */
/*      SPRC0 (0x2000203c)                                                      */
/*      SPRMCC (0x2000203c)                                                     */
/*      SPRUCC (0x2000203c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a mask register for the debug bus to count the PMON events. Software can both read it and write it
*/


#define IMI_PMONMASK_10_N1_SB_FBLP_REG 0x2C02203C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 mask_63_0 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               This specified the mask to be used for the
                               debug_bus from PCIE
                            */

  } Bits;
  UINT32 Data;

} IMI_PMONMASK_10_N1_SB_FBLP_STRUCT;

/* IMI_PMONMATCH_00_N0_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x20002040)                                                      */
/*      SPRB0 (0x20002040)                                                      */
/*      SPRHBM (0x20002040)                                                     */
/*      SPRC0 (0x20002040)                                                      */
/*      SPRMCC (0x20002040)                                                     */
/*      SPRUCC (0x20002040)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a match register for the debug bus to count the PMON events. Software can both read it and write it
*/


#define IMI_PMONMATCH_00_N0_SB_FBLP_REG 0x2C022040

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 mask_63_0 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               This specified the match to be used for the
                               debug_bus from PCIE
                            */

  } Bits;
  UINT32 Data;

} IMI_PMONMATCH_00_N0_SB_FBLP_STRUCT;

/* IMI_PMONMATCH_00_N1_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x20002044)                                                      */
/*      SPRB0 (0x20002044)                                                      */
/*      SPRHBM (0x20002044)                                                     */
/*      SPRC0 (0x20002044)                                                      */
/*      SPRMCC (0x20002044)                                                     */
/*      SPRUCC (0x20002044)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a match register for the debug bus to count the PMON events. Software can both read it and write it
*/


#define IMI_PMONMATCH_00_N1_SB_FBLP_REG 0x2C022044

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 mask_63_0 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               This specified the match to be used for the
                               debug_bus from PCIE
                            */

  } Bits;
  UINT32 Data;

} IMI_PMONMATCH_00_N1_SB_FBLP_STRUCT;

/* IMI_PMONMATCH_01_SB_FBLP_REG supported on:                                   */
/*      SPRA0 (0x20002048)                                                      */
/*      SPRB0 (0x20002048)                                                      */
/*      SPRHBM (0x20002048)                                                     */
/*      SPRC0 (0x20002048)                                                      */
/*      SPRMCC (0x20002048)                                                     */
/*      SPRUCC (0x20002048)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a match register for the debug bus to count the PMON events. Software can both read it and write it
*/


#define IMI_PMONMATCH_01_SB_FBLP_REG 0x2C022048

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 mask_71_64 : 8;

                            /* Bits[7:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               This specified the match to be used for the
                               debug_bus from PCIE
                            */
    UINT32 rsvd : 24;

                            /* Bits[31:8], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} IMI_PMONMATCH_01_SB_FBLP_STRUCT;

/* IMI_PMONMATCH_11_SB_FBLP_REG supported on:                                   */
/*      SPRA0 (0x2000204c)                                                      */
/*      SPRB0 (0x2000204c)                                                      */
/*      SPRHBM (0x2000204c)                                                     */
/*      SPRC0 (0x2000204c)                                                      */
/*      SPRMCC (0x2000204c)                                                     */
/*      SPRUCC (0x2000204c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a match register for the debug bus to count the PMON events. Software can both read it and write it
*/


#define IMI_PMONMATCH_11_SB_FBLP_REG 0x2C02204C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 mask_71_64 : 8;

                            /* Bits[7:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               This specified the match to be used for the
                               debug_bus from PCIE
                            */
    UINT32 rsvd : 24;

                            /* Bits[31:8], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} IMI_PMONMATCH_11_SB_FBLP_STRUCT;

/* IMI_PMONMATCH_10_N0_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x20002050)                                                      */
/*      SPRB0 (0x20002050)                                                      */
/*      SPRHBM (0x20002050)                                                     */
/*      SPRC0 (0x20002050)                                                      */
/*      SPRMCC (0x20002050)                                                     */
/*      SPRUCC (0x20002050)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a match register for the debug bus to count the PMON events. Software can both read it and write it
*/


#define IMI_PMONMATCH_10_N0_SB_FBLP_REG 0x2C022050

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 mask_63_0 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               This specified the match to be used for the
                               debug_bus from PCIE
                            */

  } Bits;
  UINT32 Data;

} IMI_PMONMATCH_10_N0_SB_FBLP_STRUCT;

/* IMI_PMONMATCH_10_N1_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x20002054)                                                      */
/*      SPRB0 (0x20002054)                                                      */
/*      SPRHBM (0x20002054)                                                     */
/*      SPRC0 (0x20002054)                                                      */
/*      SPRMCC (0x20002054)                                                     */
/*      SPRUCC (0x20002054)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a match register for the debug bus to count the PMON events. Software can both read it and write it
*/


#define IMI_PMONMATCH_10_N1_SB_FBLP_REG 0x2C022054

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 mask_63_0 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               This specified the match to be used for the
                               debug_bus from PCIE
                            */

  } Bits;
  UINT32 Data;

} IMI_PMONMATCH_10_N1_SB_FBLP_STRUCT;

/* IMI_PMONFRCNTRCLK_N0_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x20002058)                                                      */
/*      SPRB0 (0x20002058)                                                      */
/*      SPRHBM (0x20002058)                                                     */
/*      SPRC0 (0x20002058)                                                      */
/*      SPRMCC (0x20002058)                                                     */
/*      SPRUCC (0x20002058)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a perfmon counter.  Software can both read it and write it
*/


#define IMI_PMONFRCNTRCLK_N0_SB_FBLP_REG 0x2C022058

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 countervalue : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* This is the current value of the counter */

  } Bits;
  UINT32 Data;

} IMI_PMONFRCNTRCLK_N0_SB_FBLP_STRUCT;

/* IMI_PMONFRCNTRCLK_N1_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x2000205c)                                                      */
/*      SPRB0 (0x2000205c)                                                      */
/*      SPRHBM (0x2000205c)                                                     */
/*      SPRC0 (0x2000205c)                                                      */
/*      SPRMCC (0x2000205c)                                                     */
/*      SPRUCC (0x2000205c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a perfmon counter.  Software can both read it and write it
*/


#define IMI_PMONFRCNTRCLK_N1_SB_FBLP_REG 0x2C02205C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 countervalue : 4;

                            /* Bits[3:0], Access Type=RO/V/P, default=0x00000000*/

                            /* This is the current value of the counter */
    UINT32 rsvd : 28;

                            /* Bits[31:4], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} IMI_PMONFRCNTRCLK_N1_SB_FBLP_STRUCT;

/* IMI_PMONFRCNTR_8_N0_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x20002060)                                                      */
/*      SPRB0 (0x20002060)                                                      */
/*      SPRHBM (0x20002060)                                                     */
/*      SPRC0 (0x20002060)                                                      */
/*      SPRMCC (0x20002060)                                                     */
/*      SPRUCC (0x20002060)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a perfmon counter.  Software can both read it and write it
*/


#define IMI_PMONFRCNTR_8_N0_SB_FBLP_REG 0x2C022060

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 countervalue : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* This is the current value of the counter */

  } Bits;
  UINT32 Data;

} IMI_PMONFRCNTR_8_N0_SB_FBLP_STRUCT;

/* IMI_PMONFRCNTR_8_N1_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x20002064)                                                      */
/*      SPRB0 (0x20002064)                                                      */
/*      SPRHBM (0x20002064)                                                     */
/*      SPRC0 (0x20002064)                                                      */
/*      SPRMCC (0x20002064)                                                     */
/*      SPRUCC (0x20002064)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a perfmon counter.  Software can both read it and write it
*/


#define IMI_PMONFRCNTR_8_N1_SB_FBLP_REG 0x2C022064

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 countervalue : 4;

                            /* Bits[3:0], Access Type=RO/V/P, default=0x00000000*/

                            /* This is the current value of the counter */
    UINT32 rsvd : 28;

                            /* Bits[31:4], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} IMI_PMONFRCNTR_8_N1_SB_FBLP_STRUCT;

/* IMI_PMONFRCNTR_9_N0_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x20002068)                                                      */
/*      SPRB0 (0x20002068)                                                      */
/*      SPRHBM (0x20002068)                                                     */
/*      SPRC0 (0x20002068)                                                      */
/*      SPRMCC (0x20002068)                                                     */
/*      SPRUCC (0x20002068)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a perfmon counter.  Software can both read it and write it
*/


#define IMI_PMONFRCNTR_9_N0_SB_FBLP_REG 0x2C022068

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 countervalue : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* This is the current value of the counter */

  } Bits;
  UINT32 Data;

} IMI_PMONFRCNTR_9_N0_SB_FBLP_STRUCT;

/* IMI_PMONFRCNTR_9_N1_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x2000206c)                                                      */
/*      SPRB0 (0x2000206c)                                                      */
/*      SPRHBM (0x2000206c)                                                     */
/*      SPRC0 (0x2000206c)                                                      */
/*      SPRMCC (0x2000206c)                                                     */
/*      SPRUCC (0x2000206c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a perfmon counter.  Software can both read it and write it
*/


#define IMI_PMONFRCNTR_9_N1_SB_FBLP_REG 0x2C02206C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 countervalue : 4;

                            /* Bits[3:0], Access Type=RO/V/P, default=0x00000000*/

                            /* This is the current value of the counter */
    UINT32 rsvd : 28;

                            /* Bits[31:4], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} IMI_PMONFRCNTR_9_N1_SB_FBLP_STRUCT;

/* IMI_PMONFRCNTR_10_N0_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x20002070)                                                      */
/*      SPRB0 (0x20002070)                                                      */
/*      SPRHBM (0x20002070)                                                     */
/*      SPRC0 (0x20002070)                                                      */
/*      SPRMCC (0x20002070)                                                     */
/*      SPRUCC (0x20002070)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a perfmon counter.  Software can both read it and write it
*/


#define IMI_PMONFRCNTR_10_N0_SB_FBLP_REG 0x2C022070

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 countervalue : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* This is the current value of the counter */

  } Bits;
  UINT32 Data;

} IMI_PMONFRCNTR_10_N0_SB_FBLP_STRUCT;

/* IMI_PMONFRCNTR_10_N1_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x20002074)                                                      */
/*      SPRB0 (0x20002074)                                                      */
/*      SPRHBM (0x20002074)                                                     */
/*      SPRC0 (0x20002074)                                                      */
/*      SPRMCC (0x20002074)                                                     */
/*      SPRUCC (0x20002074)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a perfmon counter.  Software can both read it and write it
*/


#define IMI_PMONFRCNTR_10_N1_SB_FBLP_REG 0x2C022074

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 countervalue : 4;

                            /* Bits[3:0], Access Type=RO/V/P, default=0x00000000*/

                            /* This is the current value of the counter */
    UINT32 rsvd : 28;

                            /* Bits[31:4], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} IMI_PMONFRCNTR_10_N1_SB_FBLP_STRUCT;

/* IMI_PMONFRCNTR_11_N0_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x20002078)                                                      */
/*      SPRB0 (0x20002078)                                                      */
/*      SPRHBM (0x20002078)                                                     */
/*      SPRC0 (0x20002078)                                                      */
/*      SPRMCC (0x20002078)                                                     */
/*      SPRUCC (0x20002078)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a perfmon counter.  Software can both read it and write it
*/


#define IMI_PMONFRCNTR_11_N0_SB_FBLP_REG 0x2C022078

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 countervalue : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* This is the current value of the counter */

  } Bits;
  UINT32 Data;

} IMI_PMONFRCNTR_11_N0_SB_FBLP_STRUCT;

/* IMI_PMONFRCNTR_11_N1_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x2000207c)                                                      */
/*      SPRB0 (0x2000207c)                                                      */
/*      SPRHBM (0x2000207c)                                                     */
/*      SPRC0 (0x2000207c)                                                      */
/*      SPRMCC (0x2000207c)                                                     */
/*      SPRUCC (0x2000207c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a perfmon counter.  Software can both read it and write it
*/


#define IMI_PMONFRCNTR_11_N1_SB_FBLP_REG 0x2C02207C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 countervalue : 4;

                            /* Bits[3:0], Access Type=RO/V/P, default=0x00000000*/

                            /* This is the current value of the counter */
    UINT32 rsvd : 28;

                            /* Bits[31:4], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} IMI_PMONFRCNTR_11_N1_SB_FBLP_STRUCT;

/* IMI_PMONFRCNTR_12_N0_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x20002080)                                                      */
/*      SPRB0 (0x20002080)                                                      */
/*      SPRHBM (0x20002080)                                                     */
/*      SPRC0 (0x20002080)                                                      */
/*      SPRMCC (0x20002080)                                                     */
/*      SPRUCC (0x20002080)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a perfmon counter.  Software can both read it and write it
*/


#define IMI_PMONFRCNTR_12_N0_SB_FBLP_REG 0x2C022080

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 countervalue : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* This is the current value of the counter */

  } Bits;
  UINT32 Data;

} IMI_PMONFRCNTR_12_N0_SB_FBLP_STRUCT;

/* IMI_PMONFRCNTR_12_N1_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x20002084)                                                      */
/*      SPRB0 (0x20002084)                                                      */
/*      SPRHBM (0x20002084)                                                     */
/*      SPRC0 (0x20002084)                                                      */
/*      SPRMCC (0x20002084)                                                     */
/*      SPRUCC (0x20002084)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a perfmon counter.  Software can both read it and write it
*/


#define IMI_PMONFRCNTR_12_N1_SB_FBLP_REG 0x2C022084

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 countervalue : 4;

                            /* Bits[3:0], Access Type=RO/V/P, default=0x00000000*/

                            /* This is the current value of the counter */
    UINT32 rsvd : 28;

                            /* Bits[31:4], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} IMI_PMONFRCNTR_12_N1_SB_FBLP_STRUCT;

/* IMI_PMONFRCNTR_13_N0_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x20002088)                                                      */
/*      SPRB0 (0x20002088)                                                      */
/*      SPRHBM (0x20002088)                                                     */
/*      SPRC0 (0x20002088)                                                      */
/*      SPRMCC (0x20002088)                                                     */
/*      SPRUCC (0x20002088)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a perfmon counter.  Software can both read it and write it
*/


#define IMI_PMONFRCNTR_13_N0_SB_FBLP_REG 0x2C022088

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 countervalue : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* This is the current value of the counter */

  } Bits;
  UINT32 Data;

} IMI_PMONFRCNTR_13_N0_SB_FBLP_STRUCT;

/* IMI_PMONFRCNTR_13_N1_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x2000208c)                                                      */
/*      SPRB0 (0x2000208c)                                                      */
/*      SPRHBM (0x2000208c)                                                     */
/*      SPRC0 (0x2000208c)                                                      */
/*      SPRMCC (0x2000208c)                                                     */
/*      SPRUCC (0x2000208c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a perfmon counter.  Software can both read it and write it
*/


#define IMI_PMONFRCNTR_13_N1_SB_FBLP_REG 0x2C02208C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 countervalue : 4;

                            /* Bits[3:0], Access Type=RO/V/P, default=0x00000000*/

                            /* This is the current value of the counter */
    UINT32 rsvd : 28;

                            /* Bits[31:4], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} IMI_PMONFRCNTR_13_N1_SB_FBLP_STRUCT;

/* IMI_PMONFRCNTR_14_N0_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x20002090)                                                      */
/*      SPRB0 (0x20002090)                                                      */
/*      SPRHBM (0x20002090)                                                     */
/*      SPRC0 (0x20002090)                                                      */
/*      SPRMCC (0x20002090)                                                     */
/*      SPRUCC (0x20002090)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a perfmon counter.  Software can both read it and write it
*/


#define IMI_PMONFRCNTR_14_N0_SB_FBLP_REG 0x2C022090

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 countervalue : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* This is the current value of the counter */

  } Bits;
  UINT32 Data;

} IMI_PMONFRCNTR_14_N0_SB_FBLP_STRUCT;

/* IMI_PMONFRCNTR_14_N1_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x20002094)                                                      */
/*      SPRB0 (0x20002094)                                                      */
/*      SPRHBM (0x20002094)                                                     */
/*      SPRC0 (0x20002094)                                                      */
/*      SPRMCC (0x20002094)                                                     */
/*      SPRUCC (0x20002094)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a perfmon counter.  Software can both read it and write it
*/


#define IMI_PMONFRCNTR_14_N1_SB_FBLP_REG 0x2C022094

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 countervalue : 4;

                            /* Bits[3:0], Access Type=RO/V/P, default=0x00000000*/

                            /* This is the current value of the counter */
    UINT32 rsvd : 28;

                            /* Bits[31:4], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} IMI_PMONFRCNTR_14_N1_SB_FBLP_STRUCT;

/* IMI_PMONFRCNTR_15_N0_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x20002098)                                                      */
/*      SPRB0 (0x20002098)                                                      */
/*      SPRHBM (0x20002098)                                                     */
/*      SPRC0 (0x20002098)                                                      */
/*      SPRMCC (0x20002098)                                                     */
/*      SPRUCC (0x20002098)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a perfmon counter.  Software can both read it and write it
*/


#define IMI_PMONFRCNTR_15_N0_SB_FBLP_REG 0x2C022098

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 countervalue : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0x00000000*/

                            /* This is the current value of the counter */

  } Bits;
  UINT32 Data;

} IMI_PMONFRCNTR_15_N0_SB_FBLP_STRUCT;

/* IMI_PMONFRCNTR_15_N1_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x2000209c)                                                      */
/*      SPRB0 (0x2000209c)                                                      */
/*      SPRHBM (0x2000209c)                                                     */
/*      SPRC0 (0x2000209c)                                                      */
/*      SPRMCC (0x2000209c)                                                     */
/*      SPRUCC (0x2000209c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a perfmon counter.  Software can both read it and write it
*/


#define IMI_PMONFRCNTR_15_N1_SB_FBLP_REG 0x2C02209C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 countervalue : 4;

                            /* Bits[3:0], Access Type=RO/V/P, default=0x00000000*/

                            /* This is the current value of the counter */
    UINT32 rsvd : 28;

                            /* Bits[31:4], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} IMI_PMONFRCNTR_15_N1_SB_FBLP_STRUCT;

/* IMI_DBGPMON_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x200020a0)                                                      */
/*      SPRB0 (0x200020a0)                                                      */
/*      SPRHBM (0x200020a0)                                                     */
/*      SPRC0 (0x200020a0)                                                      */
/*      SPRMCC (0x200020a0)                                                     */
/*      SPRUCC (0x200020a0)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Enable special PMON debug modes for IIMI PMON counters
*/


#define IMI_DBGPMON_SB_FBLP_REG 0x2C0220A0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 pto_source : 4;

                            /* Bits[3:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               1 bit per PMON counter: 0 - PTO signalled on a
                               counter increment, 1 - PTO signalled on a
                               counter overflow
                            */
    UINT32 clr_en : 4;

                            /* Bits[7:4], Access Type=RW/P, default=0x00000000*/

                            /*
                               1 bit per PMON counter. When set, the
                               corresponding PMON counter is cleared whenever
                               the counter selected by clr_source increments
                            */
    UINT32 clr_source : 8;

                            /* Bits[15:8], Access Type=RW/P, default=0x00000000*/

                            /*
                               2 bits per PMON counter. Selects which PMON
                               counter to use for triggering the clearing of
                               this counter.For example, if clr_source[3:2] =
                               3, then PMON counter 1 will be cleared whenever
                               PMON counter 3 increments
                            */
    UINT32 count_en : 4;

                            /* Bits[19:16], Access Type=RW/P, default=0x00000000*/

                            /*
                               1 bit per PMON counter. When set, the
                               corresponding PMON counter is enabled only if
                               the counter selected by count_source is non-zero
                            */
    UINT32 count_source : 8;

                            /* Bits[27:20], Access Type=RW/P, default=0x00000000*/

                            /*
                               2 bits per PMON counter. Selects which PMON
                               counter to use for enabling this counter. For
                               example, if count_source[3:2] = 3, then PMON
                               counter 1 will be enabled only if PMON counter 3
                               is non-zero.
                            */
    UINT32 rsvd : 4;

                            /* Bits[31:28], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} IMI_DBGPMON_SB_FBLP_STRUCT;

/* PMON_BLOCK_ID_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x100020a4)                                                      */
/*      SPRB0 (0x100020a4)                                                      */
/*      SPRHBM (0x100020a4)                                                     */
/*      SPRC0 (0x100020a4)                                                      */
/*      SPRMCC (0x100020a4)                                                     */
/*      SPRUCC (0x100020a4)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a perfmon counter.  Software can both read it and write it
*/


#define PMON_BLOCK_ID_SB_FBLP_REG 0x2C0120A4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 pmon_block_id : 16;

                            /* Bits[15:0], Access Type=RW/P, default=0x00000000*/

                            /* Performance Monitor Block ID */

  } Bits;
  UINT16 Data;

} PMON_BLOCK_ID_SB_FBLP_STRUCT;

/* PMON_DISC_STATE_N0_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x200020a8)                                                      */
/*      SPRB0 (0x200020a8)                                                      */
/*      SPRHBM (0x200020a8)                                                     */
/*      SPRC0 (0x200020a8)                                                      */
/*      SPRMCC (0x200020a8)                                                     */
/*      SPRUCC (0x200020a8)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a perfmon counter.  Software can both read it and write it
*/


#define PMON_DISC_STATE_N0_SB_FBLP_REG 0x2C0220A8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 unit_disc_state : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x00000000*/

                            /* Performance Monitor State */

  } Bits;
  UINT32 Data;

} PMON_DISC_STATE_N0_SB_FBLP_STRUCT;

/* PMON_DISC_STATE_N1_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x200020ac)                                                      */
/*      SPRB0 (0x200020ac)                                                      */
/*      SPRHBM (0x200020ac)                                                     */
/*      SPRC0 (0x200020ac)                                                      */
/*      SPRMCC (0x200020ac)                                                     */
/*      SPRUCC (0x200020ac)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* This register is a perfmon counter.  Software can both read it and write it
*/


#define PMON_DISC_STATE_N1_SB_FBLP_REG 0x2C0220AC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 unit_disc_state : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x00000000*/

                            /* Performance Monitor State */

  } Bits;
  UINT32 Data;

} PMON_DISC_STATE_N1_SB_FBLP_STRUCT;

/* IMI_PMONCNTRCFG_0_N0_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x200020b0)                                                      */
/*      SPRB0 (0x200020c0)                                                      */
/*      SPRHBM (0x200020c0)                                                     */
/*      SPRC0 (0x200020c0)                                                      */
/*      SPRMCC (0x200020c0)                                                     */
/*      SPRUCC (0x200020c0)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Perfmon Counter Control Register
*/


#define IMI_PMONCNTRCFG_0_N0_SB_FBLP_REG 0x2C0A0000

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 eventselect : 8;

                            /* Bits[7:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               This field is used to decode the PerfMon event
                               which is selected. The encodings for each of the
                               valid UnCore PerfMon events can be found in the
                               respective individual unit performance
                               monitoring documentation
                            */
    UINT32 unitmask : 8;

                            /* Bits[15:8], Access Type=RW/P, default=0x00000000*/

                            /*
                               This mask selects the sub-events to be selected
                               for creation of the event. The selected sub-
                               events are bitwise OR-ed together to create
                               event. At least one sub-event must be selected
                               otherwise the PerfMon event signals will not
                               ever get asserted. Events with no sub-events
                               listed effectively have only one sub-event
                               =event -1 bit 8 must be set to 1 in this case
                            */
    UINT32 rsvd : 1;

                            /* Bits[16:16], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 counterreset : 1;

                            /* Bits[17:17], Access Type=RW/P, default=0x00000000*/

                            /*
                               When this bit is set, the corresponding counter
                               will be reset to 0. This allows for a quick
                               reset of the counter when changing event
                               encodings
                            */
    UINT32 edgedetect : 1;

                            /* Bits[18:18], Access Type=RW/P, default=0x00000000*/

                            /*
                               Edge Detect allows one to count either 0 to 1 or
                               1 to 0 transitions of a given event. For
                               example, we have an event that counts the number
                               of cycles in L1 mode in Intel QPI. By using edge
                               detect, one can count the number of times that
                               we entered L1 mode (by detecting the rising
                               edge).ect only works in conjunction with
                               threshholding. This is true even for events that
                               can only increment by 1 in a given cycle (like
                               the L1 example above). In this case, one should
                               set a threshhold of 1. One can also use Edge
                               Detect with queue occupancy events. For example,
                               if one wanted to count the number of times when
                               the TOR occupancy was larger than 5, one would
                               selet the TOR occupancy event with a threshold
                               of 5 and set the Edge Detect bit.ect can also be
                               used with the invert. This is generally not
                               particularly useful, as the count of falling
                               edges compared to rising edges will always on
                               differ by 1
                            */
    UINT32 rsvd_19 : 1;

                            /* Bits[19:19], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 overflowenable : 1;

                            /* Bits[20:20], Access Type=RW/P, default=0x00000000*/

                            /*
                               Setting this bit will enable the counter to send
                               an overflow signal. If this bit is not set, the
                               counter will wrap around when it overflows
                               without triggering anything. If this bit is set
                               and the Units configuration register has
                               Overflow enabled, then a signal will be
                               transmitted to the Ubox
                            */
    UINT32 rsvd_21 : 1;

                            /* Bits[21:21], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 counterenable : 1;

                            /* Bits[22:22], Access Type=RW/V/P, default=0x00000000*/

                            /*
                               This field is the local enable for the PerfMon
                               Counter. This bit must be asserted in order for
                               the PerfMon counter to begin counting the events
                               selected by the event select, unit mask, and
                               internal bits (see the fields below). There is
                               one bit per PerfMon Counter. Note that if this
                               bit is set to 1 but the Unit Control Registers
                               have determined that counting is disabled, then
                               the counter will not count
                            */
    UINT32 invert : 1;

                            /* Bits[23:23], Access Type=RW/P, default=0x00000000*/

                            /*
                               This bit indicates how the threshold field will
                               be compared to the incoming event. When 0, the
                               comparison that will be done is threshold >=
                               event. When set to 1, the comparison that will
                               be done is inverted from the case where this bit
                               is set to 0, i.e., threshold < event. The invert
                               bit only works when Threshhold != 0. So, if one
                               would like to invert a non-occupancy event (like
                               LLC Hit), one needs to set the threshhold to 1
                            */
    UINT32 res_threshold : 8;

                            /* Bits[31:24], Access Type=RW/P, default=0x00000000*/

                            /*
                               This field is compared directly against an
                               incoming event value for events that can
                               increment by 1 or more in a given cycle. Since
                               the widest event from the ITC/OTC is 10 bits
                               (queue occupancy), but the counters are running
                               at half the speed of the TC, the increment is
                               sent to the counter once every two cycles and so
                               the threshold is 12 bit wide. The result of the
                               comparison is effectively a 1 bit wide event,
                               i.e., the counter will be incremented by 1 when
                               the comparison is true (the type of comparison
                               depends on the setting of the invert bit - see
                               bit 23 below) no matter how wide the original
                               event was. When this field is zero, threshold
                               comparison is disabled and the event is passed
                               without modification
                            */

  } Bits;
  UINT32 Data;

} IMI_PMONCNTRCFG_0_N0_SB_FBLP_STRUCT;

#if defined(SPRB0_HOST) || defined(SPRHBM_HOST) || defined(SPRC0_HOST) || defined(SPRMCC_HOST) || defined(SPRUCC_HOST)
/* PCIE_PMON_UDS1_N0_SB_FBLP_REG supported on:                                  */
/*      SPRB0 (0x200020b0)                                                      */
/*      SPRHBM (0x200020b0)                                                     */
/*      SPRC0 (0x200020b0)                                                      */
/*      SPRMCC (0x200020b0)                                                     */
/*      SPRUCC (0x200020b0)                                                     */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRB0 BDF: 0_0_0                                       */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* PMON Disc state 1
*/


#define PCIE_PMON_UDS1_N0_SB_FBLP_REG 0x2C0220B0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 unit_disc_state : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x00000000*/

                            /* Performance Monitor State. */

  } Bits;
  UINT32 Data;

} PCIE_PMON_UDS1_N0_SB_FBLP_STRUCT;
#endif /* (SPRB0_HOST) || defined(SPRHBM_HOST) || defined(SPRC0_HOST) || defined(SPRMCC_HOST) || defined(SPRUCC_HOST) */

/* IMI_PMONCNTRCFG_0_N1_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x200020b4)                                                      */
/*      SPRB0 (0x200020c4)                                                      */
/*      SPRHBM (0x200020c4)                                                     */
/*      SPRC0 (0x200020c4)                                                      */
/*      SPRMCC (0x200020c4)                                                     */
/*      SPRUCC (0x200020c4)                                                     */
/* Register default value on SPRA0: 0x00007FF0                                  */
/* Register default value on SPRB0: 0x00007FF0                                  */
/* Register default value on SPRHBM: 0x00007FF0                                 */
/* Register default value on SPRC0: 0x00007FF0                                  */
/* Register default value on SPRMCC: 0x00007FF0                                 */
/* Register default value on SPRUCC: 0x00007FF0                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Perfmon Counter Control Register
*/


#define IMI_PMONCNTRCFG_0_N1_SB_FBLP_REG 0x2C0A0001

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 res_threshold : 4;

                            /* Bits[3:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               This field is compared directly against an
                               incoming event value for events that can
                               increment by 1 or more in a given cycle. Since
                               the widest event from the ITC/OTC is 10 bits
                               (queue occupancy), but the counters are running
                               at half the speed of the TC, the increment is
                               sent to the counter once every two cycles and so
                               the threshold is 12 bit wide. The result of the
                               comparison is effectively a 1 bit wide event,
                               i.e., the counter will be incremented by 1 when
                               the comparison is true (the type of comparison
                               depends on the setting of the invert bit - see
                               bit 23 below) no matter how wide the original
                               event was. When this field is zero, threshold
                               comparison is disabled and the event is passed
                               without modification
                            */
    UINT32 chnlmask : 8;

                            /* Bits[11:4], Access Type=RW/P, default=0x000000FF*/

                            /*
                               This one-hot field specifies which PCIE links
                               should be considered when counting PerfMon
                               events. For example, if only bit 1 is set, then
                               only events corresponding to PCIE link 1 will be
                               counted
                            */
    UINT32 fcmask : 3;

                            /* Bits[14:12], Access Type=RW/P, default=0x00000007*/

                            /*
                               This one-hot field specifies which FCs should be
                               considered when counting PerfMon events: Bit 0 -
                               Posted requests Bit 1 - Non-posted requests Bit
                               2 - Completions
                            */
    UINT32 rsvd : 17;

                            /* Bits[31:15], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} IMI_PMONCNTRCFG_0_N1_SB_FBLP_STRUCT;

#if defined(SPRB0_HOST) || defined(SPRHBM_HOST) || defined(SPRC0_HOST) || defined(SPRMCC_HOST) || defined(SPRUCC_HOST)
/* PCIE_PMON_UDS1_N1_SB_FBLP_REG supported on:                                  */
/*      SPRB0 (0x200020b4)                                                      */
/*      SPRHBM (0x200020b4)                                                     */
/*      SPRC0 (0x200020b4)                                                      */
/*      SPRMCC (0x200020b4)                                                     */
/*      SPRUCC (0x200020b4)                                                     */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRB0 BDF: 0_0_0                                       */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* PMON Disc state 1
*/


#define PCIE_PMON_UDS1_N1_SB_FBLP_REG 0x2C0220B4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 unit_disc_state : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x00000000*/

                            /* Performance Monitor State. */

  } Bits;
  UINT32 Data;

} PCIE_PMON_UDS1_N1_SB_FBLP_STRUCT;
#endif /* (SPRB0_HOST) || defined(SPRHBM_HOST) || defined(SPRC0_HOST) || defined(SPRMCC_HOST) || defined(SPRUCC_HOST) */

/* IMI_PMONCNTRCFG_1_N0_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x200020b8)                                                      */
/*      SPRB0 (0x200020c8)                                                      */
/*      SPRHBM (0x200020c8)                                                     */
/*      SPRC0 (0x200020c8)                                                      */
/*      SPRMCC (0x200020c8)                                                     */
/*      SPRUCC (0x200020c8)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Perfmon Counter Control Register
*/


#define IMI_PMONCNTRCFG_1_N0_SB_FBLP_REG 0x2C0A0002

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 eventselect : 8;

                            /* Bits[7:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               This field is used to decode the PerfMon event
                               which is selected. The encodings for each of the
                               valid UnCore PerfMon events can be found in the
                               respective individual unit performance
                               monitoring documentation
                            */
    UINT32 unitmask : 8;

                            /* Bits[15:8], Access Type=RW/P, default=0x00000000*/

                            /*
                               This mask selects the sub-events to be selected
                               for creation of the event. The selected sub-
                               events are bitwise OR-ed together to create
                               event. At least one sub-event must be selected
                               otherwise the PerfMon event signals will not
                               ever get asserted. Events with no sub-events
                               listed effectively have only one sub-event
                               =event -1 bit 8 must be set to 1 in this case
                            */
    UINT32 rsvd : 1;

                            /* Bits[16:16], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 counterreset : 1;

                            /* Bits[17:17], Access Type=RW/P, default=0x00000000*/

                            /*
                               When this bit is set, the corresponding counter
                               will be reset to 0. This allows for a quick
                               reset of the counter when changing event
                               encodings
                            */
    UINT32 edgedetect : 1;

                            /* Bits[18:18], Access Type=RW/P, default=0x00000000*/

                            /*
                               Edge Detect allows one to count either 0 to 1 or
                               1 to 0 transitions of a given event. For
                               example, we have an event that counts the number
                               of cycles in L1 mode in Intel QPI. By using edge
                               detect, one can count the number of times that
                               we entered L1 mode (by detecting the rising
                               edge).ect only works in conjunction with
                               threshholding. This is true even for events that
                               can only increment by 1 in a given cycle (like
                               the L1 example above). In this case, one should
                               set a threshhold of 1. One can also use Edge
                               Detect with queue occupancy events. For example,
                               if one wanted to count the number of times when
                               the TOR occupancy was larger than 5, one would
                               selet the TOR occupancy event with a threshold
                               of 5 and set the Edge Detect bit.ect can also be
                               used with the invert. This is generally not
                               particularly useful, as the count of falling
                               edges compared to rising edges will always on
                               differ by 1
                            */
    UINT32 rsvd_19 : 1;

                            /* Bits[19:19], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 overflowenable : 1;

                            /* Bits[20:20], Access Type=RW/P, default=0x00000000*/

                            /*
                               Setting this bit will enable the counter to send
                               an overflow signal. If this bit is not set, the
                               counter will wrap around when it overflows
                               without triggering anything. If this bit is set
                               and the Units configuration register has
                               Overflow enabled, then a signal will be
                               transmitted to the Ubox
                            */
    UINT32 rsvd_21 : 1;

                            /* Bits[21:21], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 counterenable : 1;

                            /* Bits[22:22], Access Type=RW/V/P, default=0x00000000*/

                            /*
                               This field is the local enable for the PerfMon
                               Counter. This bit must be asserted in order for
                               the PerfMon counter to begin counting the events
                               selected by the event select, unit mask, and
                               internal bits (see the fields below). There is
                               one bit per PerfMon Counter. Note that if this
                               bit is set to 1 but the Unit Control Registers
                               have determined that counting is disabled, then
                               the counter will not count
                            */
    UINT32 invert : 1;

                            /* Bits[23:23], Access Type=RW/P, default=0x00000000*/

                            /*
                               This bit indicates how the threshold field will
                               be compared to the incoming event. When 0, the
                               comparison that will be done is threshold >=
                               event. When set to 1, the comparison that will
                               be done is inverted from the case where this bit
                               is set to 0, i.e., threshold < event. The invert
                               bit only works when Threshhold != 0. So, if one
                               would like to invert a non-occupancy event (like
                               LLC Hit), one needs to set the threshhold to 1
                            */
    UINT32 res_threshold : 8;

                            /* Bits[31:24], Access Type=RW/P, default=0x00000000*/

                            /*
                               This field is compared directly against an
                               incoming event value for events that can
                               increment by 1 or more in a given cycle. Since
                               the widest event from the ITC/OTC is 10 bits
                               (queue occupancy), but the counters are running
                               at half the speed of the TC, the increment is
                               sent to the counter once every two cycles and so
                               the threshold is 12 bit wide. The result of the
                               comparison is effectively a 1 bit wide event,
                               i.e., the counter will be incremented by 1 when
                               the comparison is true (the type of comparison
                               depends on the setting of the invert bit - see
                               bit 23 below) no matter how wide the original
                               event was. When this field is zero, threshold
                               comparison is disabled and the event is passed
                               without modification
                            */

  } Bits;
  UINT32 Data;

} IMI_PMONCNTRCFG_1_N0_SB_FBLP_STRUCT;

#if defined(SPRB0_HOST) || defined(SPRHBM_HOST) || defined(SPRC0_HOST) || defined(SPRMCC_HOST) || defined(SPRUCC_HOST)
/* PCIE_PMON_UDS2_N0_SB_FBLP_REG supported on:                                  */
/*      SPRB0 (0x200020b8)                                                      */
/*      SPRHBM (0x200020b8)                                                     */
/*      SPRC0 (0x200020b8)                                                      */
/*      SPRMCC (0x200020b8)                                                     */
/*      SPRUCC (0x200020b8)                                                     */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRB0 BDF: 0_0_0                                       */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* PMON Disc state 2
*/


#define PCIE_PMON_UDS2_N0_SB_FBLP_REG 0x2C0220B8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 unit_disc_state : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x00000000*/

                            /* Performance Monitor State. */

  } Bits;
  UINT32 Data;

} PCIE_PMON_UDS2_N0_SB_FBLP_STRUCT;
#endif /* (SPRB0_HOST) || defined(SPRHBM_HOST) || defined(SPRC0_HOST) || defined(SPRMCC_HOST) || defined(SPRUCC_HOST) */

/* IMI_PMONCNTRCFG_1_N1_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x200020bc)                                                      */
/*      SPRB0 (0x200020cc)                                                      */
/*      SPRHBM (0x200020cc)                                                     */
/*      SPRC0 (0x200020cc)                                                      */
/*      SPRMCC (0x200020cc)                                                     */
/*      SPRUCC (0x200020cc)                                                     */
/* Register default value on SPRA0: 0x00007FF0                                  */
/* Register default value on SPRB0: 0x00007FF0                                  */
/* Register default value on SPRHBM: 0x00007FF0                                 */
/* Register default value on SPRC0: 0x00007FF0                                  */
/* Register default value on SPRMCC: 0x00007FF0                                 */
/* Register default value on SPRUCC: 0x00007FF0                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Perfmon Counter Control Register
*/


#define IMI_PMONCNTRCFG_1_N1_SB_FBLP_REG 0x2C0A0003

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 res_threshold : 4;

                            /* Bits[3:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               This field is compared directly against an
                               incoming event value for events that can
                               increment by 1 or more in a given cycle. Since
                               the widest event from the ITC/OTC is 10 bits
                               (queue occupancy), but the counters are running
                               at half the speed of the TC, the increment is
                               sent to the counter once every two cycles and so
                               the threshold is 12 bit wide. The result of the
                               comparison is effectively a 1 bit wide event,
                               i.e., the counter will be incremented by 1 when
                               the comparison is true (the type of comparison
                               depends on the setting of the invert bit - see
                               bit 23 below) no matter how wide the original
                               event was. When this field is zero, threshold
                               comparison is disabled and the event is passed
                               without modification
                            */
    UINT32 chnlmask : 8;

                            /* Bits[11:4], Access Type=RW/P, default=0x000000FF*/

                            /*
                               This one-hot field specifies which PCIE links
                               should be considered when counting PerfMon
                               events. For example, if only bit 1 is set, then
                               only events corresponding to PCIE link 1 will be
                               counted
                            */
    UINT32 fcmask : 3;

                            /* Bits[14:12], Access Type=RW/P, default=0x00000007*/

                            /*
                               This one-hot field specifies which FCs should be
                               considered when counting PerfMon events: Bit 0 -
                               Posted requests Bit 1 - Non-posted requests Bit
                               2 - Completions
                            */
    UINT32 rsvd : 17;

                            /* Bits[31:15], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} IMI_PMONCNTRCFG_1_N1_SB_FBLP_STRUCT;

#if defined(SPRB0_HOST) || defined(SPRHBM_HOST) || defined(SPRC0_HOST) || defined(SPRMCC_HOST) || defined(SPRUCC_HOST)
/* PCIE_PMON_UDS2_N1_SB_FBLP_REG supported on:                                  */
/*      SPRB0 (0x200020bc)                                                      */
/*      SPRHBM (0x200020bc)                                                     */
/*      SPRC0 (0x200020bc)                                                      */
/*      SPRMCC (0x200020bc)                                                     */
/*      SPRUCC (0x200020bc)                                                     */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRB0 BDF: 0_0_0                                       */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* PMON Disc state 2
*/


#define PCIE_PMON_UDS2_N1_SB_FBLP_REG 0x2C0220BC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 unit_disc_state : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x00000000*/

                            /* Performance Monitor State. */

  } Bits;
  UINT32 Data;

} PCIE_PMON_UDS2_N1_SB_FBLP_STRUCT;
#endif /* (SPRB0_HOST) || defined(SPRHBM_HOST) || defined(SPRC0_HOST) || defined(SPRMCC_HOST) || defined(SPRUCC_HOST) */

/* IMI_PMONCNTRCFG_2_N0_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x200020c0)                                                      */
/*      SPRB0 (0x200020d0)                                                      */
/*      SPRHBM (0x200020d0)                                                     */
/*      SPRC0 (0x200020d0)                                                      */
/*      SPRMCC (0x200020d0)                                                     */
/*      SPRUCC (0x200020d0)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Perfmon Counter Control Register
*/


#define IMI_PMONCNTRCFG_2_N0_SB_FBLP_REG 0x2C0A0004

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 eventselect : 8;

                            /* Bits[7:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               This field is used to decode the PerfMon event
                               which is selected. The encodings for each of the
                               valid UnCore PerfMon events can be found in the
                               respective individual unit performance
                               monitoring documentation
                            */
    UINT32 unitmask : 8;

                            /* Bits[15:8], Access Type=RW/P, default=0x00000000*/

                            /*
                               This mask selects the sub-events to be selected
                               for creation of the event. The selected sub-
                               events are bitwise OR-ed together to create
                               event. At least one sub-event must be selected
                               otherwise the PerfMon event signals will not
                               ever get asserted. Events with no sub-events
                               listed effectively have only one sub-event
                               =event -1 bit 8 must be set to 1 in this case
                            */
    UINT32 rsvd : 1;

                            /* Bits[16:16], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 counterreset : 1;

                            /* Bits[17:17], Access Type=RW/P, default=0x00000000*/

                            /*
                               When this bit is set, the corresponding counter
                               will be reset to 0. This allows for a quick
                               reset of the counter when changing event
                               encodings
                            */
    UINT32 edgedetect : 1;

                            /* Bits[18:18], Access Type=RW/P, default=0x00000000*/

                            /*
                               Edge Detect allows one to count either 0 to 1 or
                               1 to 0 transitions of a given event. For
                               example, we have an event that counts the number
                               of cycles in L1 mode in Intel QPI. By using edge
                               detect, one can count the number of times that
                               we entered L1 mode (by detecting the rising
                               edge).ect only works in conjunction with
                               threshholding. This is true even for events that
                               can only increment by 1 in a given cycle (like
                               the L1 example above). In this case, one should
                               set a threshhold of 1. One can also use Edge
                               Detect with queue occupancy events. For example,
                               if one wanted to count the number of times when
                               the TOR occupancy was larger than 5, one would
                               selet the TOR occupancy event with a threshold
                               of 5 and set the Edge Detect bit.ect can also be
                               used with the invert. This is generally not
                               particularly useful, as the count of falling
                               edges compared to rising edges will always on
                               differ by 1
                            */
    UINT32 rsvd_19 : 1;

                            /* Bits[19:19], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 overflowenable : 1;

                            /* Bits[20:20], Access Type=RW/P, default=0x00000000*/

                            /*
                               Setting this bit will enable the counter to send
                               an overflow signal. If this bit is not set, the
                               counter will wrap around when it overflows
                               without triggering anything. If this bit is set
                               and the Units configuration register has
                               Overflow enabled, then a signal will be
                               transmitted to the Ubox
                            */
    UINT32 rsvd_21 : 1;

                            /* Bits[21:21], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 counterenable : 1;

                            /* Bits[22:22], Access Type=RW/V/P, default=0x00000000*/

                            /*
                               This field is the local enable for the PerfMon
                               Counter. This bit must be asserted in order for
                               the PerfMon counter to begin counting the events
                               selected by the event select, unit mask, and
                               internal bits (see the fields below). There is
                               one bit per PerfMon Counter. Note that if this
                               bit is set to 1 but the Unit Control Registers
                               have determined that counting is disabled, then
                               the counter will not count
                            */
    UINT32 invert : 1;

                            /* Bits[23:23], Access Type=RW/P, default=0x00000000*/

                            /*
                               This bit indicates how the threshold field will
                               be compared to the incoming event. When 0, the
                               comparison that will be done is threshold >=
                               event. When set to 1, the comparison that will
                               be done is inverted from the case where this bit
                               is set to 0, i.e., threshold < event. The invert
                               bit only works when Threshhold != 0. So, if one
                               would like to invert a non-occupancy event (like
                               LLC Hit), one needs to set the threshhold to 1
                            */
    UINT32 res_threshold : 8;

                            /* Bits[31:24], Access Type=RW/P, default=0x00000000*/

                            /*
                               This field is compared directly against an
                               incoming event value for events that can
                               increment by 1 or more in a given cycle. Since
                               the widest event from the ITC/OTC is 10 bits
                               (queue occupancy), but the counters are running
                               at half the speed of the TC, the increment is
                               sent to the counter once every two cycles and so
                               the threshold is 12 bit wide. The result of the
                               comparison is effectively a 1 bit wide event,
                               i.e., the counter will be incremented by 1 when
                               the comparison is true (the type of comparison
                               depends on the setting of the invert bit - see
                               bit 23 below) no matter how wide the original
                               event was. When this field is zero, threshold
                               comparison is disabled and the event is passed
                               without modification
                            */

  } Bits;
  UINT32 Data;

} IMI_PMONCNTRCFG_2_N0_SB_FBLP_STRUCT;

/* IMI_PMONCNTRCFG_2_N1_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x200020c4)                                                      */
/*      SPRB0 (0x200020d4)                                                      */
/*      SPRHBM (0x200020d4)                                                     */
/*      SPRC0 (0x200020d4)                                                      */
/*      SPRMCC (0x200020d4)                                                     */
/*      SPRUCC (0x200020d4)                                                     */
/* Register default value on SPRA0: 0x00007FF0                                  */
/* Register default value on SPRB0: 0x00007FF0                                  */
/* Register default value on SPRHBM: 0x00007FF0                                 */
/* Register default value on SPRC0: 0x00007FF0                                  */
/* Register default value on SPRMCC: 0x00007FF0                                 */
/* Register default value on SPRUCC: 0x00007FF0                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Perfmon Counter Control Register
*/


#define IMI_PMONCNTRCFG_2_N1_SB_FBLP_REG 0x2C0A0005

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 res_threshold : 4;

                            /* Bits[3:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               This field is compared directly against an
                               incoming event value for events that can
                               increment by 1 or more in a given cycle. Since
                               the widest event from the ITC/OTC is 10 bits
                               (queue occupancy), but the counters are running
                               at half the speed of the TC, the increment is
                               sent to the counter once every two cycles and so
                               the threshold is 12 bit wide. The result of the
                               comparison is effectively a 1 bit wide event,
                               i.e., the counter will be incremented by 1 when
                               the comparison is true (the type of comparison
                               depends on the setting of the invert bit - see
                               bit 23 below) no matter how wide the original
                               event was. When this field is zero, threshold
                               comparison is disabled and the event is passed
                               without modification
                            */
    UINT32 chnlmask : 8;

                            /* Bits[11:4], Access Type=RW/P, default=0x000000FF*/

                            /*
                               This one-hot field specifies which PCIE links
                               should be considered when counting PerfMon
                               events. For example, if only bit 1 is set, then
                               only events corresponding to PCIE link 1 will be
                               counted
                            */
    UINT32 fcmask : 3;

                            /* Bits[14:12], Access Type=RW/P, default=0x00000007*/

                            /*
                               This one-hot field specifies which FCs should be
                               considered when counting PerfMon events: Bit 0 -
                               Posted requests Bit 1 - Non-posted requests Bit
                               2 - Completions
                            */
    UINT32 rsvd : 17;

                            /* Bits[31:15], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} IMI_PMONCNTRCFG_2_N1_SB_FBLP_STRUCT;

/* IMI_PMONCNTRCFG_3_N0_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x200020c8)                                                      */
/*      SPRB0 (0x200020d8)                                                      */
/*      SPRHBM (0x200020d8)                                                     */
/*      SPRC0 (0x200020d8)                                                      */
/*      SPRMCC (0x200020d8)                                                     */
/*      SPRUCC (0x200020d8)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Perfmon Counter Control Register
*/


#define IMI_PMONCNTRCFG_3_N0_SB_FBLP_REG 0x2C0A0006

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 eventselect : 8;

                            /* Bits[7:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               This field is used to decode the PerfMon event
                               which is selected. The encodings for each of the
                               valid UnCore PerfMon events can be found in the
                               respective individual unit performance
                               monitoring documentation
                            */
    UINT32 unitmask : 8;

                            /* Bits[15:8], Access Type=RW/P, default=0x00000000*/

                            /*
                               This mask selects the sub-events to be selected
                               for creation of the event. The selected sub-
                               events are bitwise OR-ed together to create
                               event. At least one sub-event must be selected
                               otherwise the PerfMon event signals will not
                               ever get asserted. Events with no sub-events
                               listed effectively have only one sub-event
                               =event -1 bit 8 must be set to 1 in this case
                            */
    UINT32 rsvd : 1;

                            /* Bits[16:16], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 counterreset : 1;

                            /* Bits[17:17], Access Type=RW/P, default=0x00000000*/

                            /*
                               When this bit is set, the corresponding counter
                               will be reset to 0. This allows for a quick
                               reset of the counter when changing event
                               encodings
                            */
    UINT32 edgedetect : 1;

                            /* Bits[18:18], Access Type=RW/P, default=0x00000000*/

                            /*
                               Edge Detect allows one to count either 0 to 1 or
                               1 to 0 transitions of a given event. For
                               example, we have an event that counts the number
                               of cycles in L1 mode in Intel QPI. By using edge
                               detect, one can count the number of times that
                               we entered L1 mode (by detecting the rising
                               edge).ect only works in conjunction with
                               threshholding. This is true even for events that
                               can only increment by 1 in a given cycle (like
                               the L1 example above). In this case, one should
                               set a threshhold of 1. One can also use Edge
                               Detect with queue occupancy events. For example,
                               if one wanted to count the number of times when
                               the TOR occupancy was larger than 5, one would
                               selet the TOR occupancy event with a threshold
                               of 5 and set the Edge Detect bit.ect can also be
                               used with the invert. This is generally not
                               particularly useful, as the count of falling
                               edges compared to rising edges will always on
                               differ by 1
                            */
    UINT32 rsvd_19 : 1;

                            /* Bits[19:19], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 overflowenable : 1;

                            /* Bits[20:20], Access Type=RW/P, default=0x00000000*/

                            /*
                               Setting this bit will enable the counter to send
                               an overflow signal. If this bit is not set, the
                               counter will wrap around when it overflows
                               without triggering anything. If this bit is set
                               and the Units configuration register has
                               Overflow enabled, then a signal will be
                               transmitted to the Ubox
                            */
    UINT32 rsvd_21 : 1;

                            /* Bits[21:21], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 counterenable : 1;

                            /* Bits[22:22], Access Type=RW/V/P, default=0x00000000*/

                            /*
                               This field is the local enable for the PerfMon
                               Counter. This bit must be asserted in order for
                               the PerfMon counter to begin counting the events
                               selected by the event select, unit mask, and
                               internal bits (see the fields below). There is
                               one bit per PerfMon Counter. Note that if this
                               bit is set to 1 but the Unit Control Registers
                               have determined that counting is disabled, then
                               the counter will not count
                            */
    UINT32 invert : 1;

                            /* Bits[23:23], Access Type=RW/P, default=0x00000000*/

                            /*
                               This bit indicates how the threshold field will
                               be compared to the incoming event. When 0, the
                               comparison that will be done is threshold >=
                               event. When set to 1, the comparison that will
                               be done is inverted from the case where this bit
                               is set to 0, i.e., threshold < event. The invert
                               bit only works when Threshhold != 0. So, if one
                               would like to invert a non-occupancy event (like
                               LLC Hit), one needs to set the threshhold to 1
                            */
    UINT32 res_threshold : 8;

                            /* Bits[31:24], Access Type=RW/P, default=0x00000000*/

                            /*
                               This field is compared directly against an
                               incoming event value for events that can
                               increment by 1 or more in a given cycle. Since
                               the widest event from the ITC/OTC is 10 bits
                               (queue occupancy), but the counters are running
                               at half the speed of the TC, the increment is
                               sent to the counter once every two cycles and so
                               the threshold is 12 bit wide. The result of the
                               comparison is effectively a 1 bit wide event,
                               i.e., the counter will be incremented by 1 when
                               the comparison is true (the type of comparison
                               depends on the setting of the invert bit - see
                               bit 23 below) no matter how wide the original
                               event was. When this field is zero, threshold
                               comparison is disabled and the event is passed
                               without modification
                            */

  } Bits;
  UINT32 Data;

} IMI_PMONCNTRCFG_3_N0_SB_FBLP_STRUCT;

/* IMI_PMONCNTRCFG_3_N1_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x200020cc)                                                      */
/*      SPRB0 (0x200020dc)                                                      */
/*      SPRHBM (0x200020dc)                                                     */
/*      SPRC0 (0x200020dc)                                                      */
/*      SPRMCC (0x200020dc)                                                     */
/*      SPRUCC (0x200020dc)                                                     */
/* Register default value on SPRA0: 0x00007FF0                                  */
/* Register default value on SPRB0: 0x00007FF0                                  */
/* Register default value on SPRHBM: 0x00007FF0                                 */
/* Register default value on SPRC0: 0x00007FF0                                  */
/* Register default value on SPRMCC: 0x00007FF0                                 */
/* Register default value on SPRUCC: 0x00007FF0                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: OS_W                                             */
/* SPRB0 Security PolicyGroup: OS_W                                             */
/* SPRHBM Security PolicyGroup: OS_W                                            */
/* SPRC0 Security PolicyGroup: OS_W                                             */
/* SPRMCC Security PolicyGroup: OS_W                                            */
/* SPRUCC Security PolicyGroup: OS_W                                            */
/* Perfmon Counter Control Register
*/


#define IMI_PMONCNTRCFG_3_N1_SB_FBLP_REG 0x2C0A0007

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 res_threshold : 4;

                            /* Bits[3:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               This field is compared directly against an
                               incoming event value for events that can
                               increment by 1 or more in a given cycle. Since
                               the widest event from the ITC/OTC is 10 bits
                               (queue occupancy), but the counters are running
                               at half the speed of the TC, the increment is
                               sent to the counter once every two cycles and so
                               the threshold is 12 bit wide. The result of the
                               comparison is effectively a 1 bit wide event,
                               i.e., the counter will be incremented by 1 when
                               the comparison is true (the type of comparison
                               depends on the setting of the invert bit - see
                               bit 23 below) no matter how wide the original
                               event was. When this field is zero, threshold
                               comparison is disabled and the event is passed
                               without modification
                            */
    UINT32 chnlmask : 8;

                            /* Bits[11:4], Access Type=RW/P, default=0x000000FF*/

                            /*
                               This one-hot field specifies which PCIE links
                               should be considered when counting PerfMon
                               events. For example, if only bit 1 is set, then
                               only events corresponding to PCIE link 1 will be
                               counted
                            */
    UINT32 fcmask : 3;

                            /* Bits[14:12], Access Type=RW/P, default=0x00000007*/

                            /*
                               This one-hot field specifies which FCs should be
                               considered when counting PerfMon events: Bit 0 -
                               Posted requests Bit 1 - Non-posted requests Bit
                               2 - Completions
                            */
    UINT32 rsvd : 17;

                            /* Bits[31:15], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} IMI_PMONCNTRCFG_3_N1_SB_FBLP_STRUCT;









































































































































/* LTLGENTRY0_SB_FBLP_REG supported on:                                         */
/*      SPRA0 (0x20002a00)                                                      */
/*      SPRB0 (0x20002a00)                                                      */
/*      SPRHBM (0x20002a00)                                                     */
/*      SPRC0 (0x20002a00)                                                      */
/*      SPRMCC (0x20002a00)                                                     */
/*      SPRUCC (0x20002a00)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY0_SB_FBLP_REG 0x2C022A00

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY0_SB_FBLP_STRUCT;

/* LTLGENTRY1_SB_FBLP_REG supported on:                                         */
/*      SPRA0 (0x20002a04)                                                      */
/*      SPRB0 (0x20002a04)                                                      */
/*      SPRHBM (0x20002a04)                                                     */
/*      SPRC0 (0x20002a04)                                                      */
/*      SPRMCC (0x20002a04)                                                     */
/*      SPRUCC (0x20002a04)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY1_SB_FBLP_REG 0x2C022A04

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY1_SB_FBLP_STRUCT;

/* LTLGENTRY2_SB_FBLP_REG supported on:                                         */
/*      SPRA0 (0x20002a08)                                                      */
/*      SPRB0 (0x20002a08)                                                      */
/*      SPRHBM (0x20002a08)                                                     */
/*      SPRC0 (0x20002a08)                                                      */
/*      SPRMCC (0x20002a08)                                                     */
/*      SPRUCC (0x20002a08)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY2_SB_FBLP_REG 0x2C022A08

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY2_SB_FBLP_STRUCT;

/* LTLGENTRY3_SB_FBLP_REG supported on:                                         */
/*      SPRA0 (0x20002a0c)                                                      */
/*      SPRB0 (0x20002a0c)                                                      */
/*      SPRHBM (0x20002a0c)                                                     */
/*      SPRC0 (0x20002a0c)                                                      */
/*      SPRMCC (0x20002a0c)                                                     */
/*      SPRUCC (0x20002a0c)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY3_SB_FBLP_REG 0x2C022A0C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY3_SB_FBLP_STRUCT;

/* LTLGENTRY4_SB_FBLP_REG supported on:                                         */
/*      SPRA0 (0x20002a10)                                                      */
/*      SPRB0 (0x20002a10)                                                      */
/*      SPRHBM (0x20002a10)                                                     */
/*      SPRC0 (0x20002a10)                                                      */
/*      SPRMCC (0x20002a10)                                                     */
/*      SPRUCC (0x20002a10)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY4_SB_FBLP_REG 0x2C022A10

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY4_SB_FBLP_STRUCT;

/* LTLGENTRY5_SB_FBLP_REG supported on:                                         */
/*      SPRA0 (0x20002a14)                                                      */
/*      SPRB0 (0x20002a14)                                                      */
/*      SPRHBM (0x20002a14)                                                     */
/*      SPRC0 (0x20002a14)                                                      */
/*      SPRMCC (0x20002a14)                                                     */
/*      SPRUCC (0x20002a14)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY5_SB_FBLP_REG 0x2C022A14

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY5_SB_FBLP_STRUCT;

/* LTLGENTRY6_SB_FBLP_REG supported on:                                         */
/*      SPRA0 (0x20002a18)                                                      */
/*      SPRB0 (0x20002a18)                                                      */
/*      SPRHBM (0x20002a18)                                                     */
/*      SPRC0 (0x20002a18)                                                      */
/*      SPRMCC (0x20002a18)                                                     */
/*      SPRUCC (0x20002a18)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY6_SB_FBLP_REG 0x2C022A18

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY6_SB_FBLP_STRUCT;

/* LTLGENTRY7_SB_FBLP_REG supported on:                                         */
/*      SPRA0 (0x20002a1c)                                                      */
/*      SPRB0 (0x20002a1c)                                                      */
/*      SPRHBM (0x20002a1c)                                                     */
/*      SPRC0 (0x20002a1c)                                                      */
/*      SPRMCC (0x20002a1c)                                                     */
/*      SPRUCC (0x20002a1c)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY7_SB_FBLP_REG 0x2C022A1C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY7_SB_FBLP_STRUCT;

/* LTLGENTRY8_SB_FBLP_REG supported on:                                         */
/*      SPRA0 (0x20002a20)                                                      */
/*      SPRB0 (0x20002a20)                                                      */
/*      SPRHBM (0x20002a20)                                                     */
/*      SPRC0 (0x20002a20)                                                      */
/*      SPRMCC (0x20002a20)                                                     */
/*      SPRUCC (0x20002a20)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY8_SB_FBLP_REG 0x2C022A20

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY8_SB_FBLP_STRUCT;

/* LTLGENTRY9_SB_FBLP_REG supported on:                                         */
/*      SPRA0 (0x20002a24)                                                      */
/*      SPRB0 (0x20002a24)                                                      */
/*      SPRHBM (0x20002a24)                                                     */
/*      SPRC0 (0x20002a24)                                                      */
/*      SPRMCC (0x20002a24)                                                     */
/*      SPRUCC (0x20002a24)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY9_SB_FBLP_REG 0x2C022A24

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY9_SB_FBLP_STRUCT;

/* LTLGENTRY10_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002a28)                                                      */
/*      SPRB0 (0x20002a28)                                                      */
/*      SPRHBM (0x20002a28)                                                     */
/*      SPRC0 (0x20002a28)                                                      */
/*      SPRMCC (0x20002a28)                                                     */
/*      SPRUCC (0x20002a28)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY10_SB_FBLP_REG 0x2C022A28

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY10_SB_FBLP_STRUCT;

/* LTLGENTRY11_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002a2c)                                                      */
/*      SPRB0 (0x20002a2c)                                                      */
/*      SPRHBM (0x20002a2c)                                                     */
/*      SPRC0 (0x20002a2c)                                                      */
/*      SPRMCC (0x20002a2c)                                                     */
/*      SPRUCC (0x20002a2c)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY11_SB_FBLP_REG 0x2C022A2C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY11_SB_FBLP_STRUCT;

/* LTLGENTRY12_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002a30)                                                      */
/*      SPRB0 (0x20002a30)                                                      */
/*      SPRHBM (0x20002a30)                                                     */
/*      SPRC0 (0x20002a30)                                                      */
/*      SPRMCC (0x20002a30)                                                     */
/*      SPRUCC (0x20002a30)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY12_SB_FBLP_REG 0x2C022A30

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY12_SB_FBLP_STRUCT;

/* LTLGENTRY13_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002a34)                                                      */
/*      SPRB0 (0x20002a34)                                                      */
/*      SPRHBM (0x20002a34)                                                     */
/*      SPRC0 (0x20002a34)                                                      */
/*      SPRMCC (0x20002a34)                                                     */
/*      SPRUCC (0x20002a34)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY13_SB_FBLP_REG 0x2C022A34

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY13_SB_FBLP_STRUCT;

/* LTLGENTRY14_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002a38)                                                      */
/*      SPRB0 (0x20002a38)                                                      */
/*      SPRHBM (0x20002a38)                                                     */
/*      SPRC0 (0x20002a38)                                                      */
/*      SPRMCC (0x20002a38)                                                     */
/*      SPRUCC (0x20002a38)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY14_SB_FBLP_REG 0x2C022A38

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY14_SB_FBLP_STRUCT;

/* LTLGENTRY15_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002a3c)                                                      */
/*      SPRB0 (0x20002a3c)                                                      */
/*      SPRHBM (0x20002a3c)                                                     */
/*      SPRC0 (0x20002a3c)                                                      */
/*      SPRMCC (0x20002a3c)                                                     */
/*      SPRUCC (0x20002a3c)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY15_SB_FBLP_REG 0x2C022A3C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY15_SB_FBLP_STRUCT;

/* LTLGENTRY16_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002a40)                                                      */
/*      SPRB0 (0x20002a40)                                                      */
/*      SPRHBM (0x20002a40)                                                     */
/*      SPRC0 (0x20002a40)                                                      */
/*      SPRMCC (0x20002a40)                                                     */
/*      SPRUCC (0x20002a40)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY16_SB_FBLP_REG 0x2C022A40

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY16_SB_FBLP_STRUCT;

/* LTLGENTRY17_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002a44)                                                      */
/*      SPRB0 (0x20002a44)                                                      */
/*      SPRHBM (0x20002a44)                                                     */
/*      SPRC0 (0x20002a44)                                                      */
/*      SPRMCC (0x20002a44)                                                     */
/*      SPRUCC (0x20002a44)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY17_SB_FBLP_REG 0x2C022A44

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY17_SB_FBLP_STRUCT;

/* LTLGENTRY18_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002a48)                                                      */
/*      SPRB0 (0x20002a48)                                                      */
/*      SPRHBM (0x20002a48)                                                     */
/*      SPRC0 (0x20002a48)                                                      */
/*      SPRMCC (0x20002a48)                                                     */
/*      SPRUCC (0x20002a48)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY18_SB_FBLP_REG 0x2C022A48

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY18_SB_FBLP_STRUCT;

/* LTLGENTRY19_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002a4c)                                                      */
/*      SPRB0 (0x20002a4c)                                                      */
/*      SPRHBM (0x20002a4c)                                                     */
/*      SPRC0 (0x20002a4c)                                                      */
/*      SPRMCC (0x20002a4c)                                                     */
/*      SPRUCC (0x20002a4c)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY19_SB_FBLP_REG 0x2C022A4C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY19_SB_FBLP_STRUCT;

/* LTLGENTRY20_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002a50)                                                      */
/*      SPRB0 (0x20002a50)                                                      */
/*      SPRHBM (0x20002a50)                                                     */
/*      SPRC0 (0x20002a50)                                                      */
/*      SPRMCC (0x20002a50)                                                     */
/*      SPRUCC (0x20002a50)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY20_SB_FBLP_REG 0x2C022A50

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY20_SB_FBLP_STRUCT;

/* LTLGENTRY21_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002a54)                                                      */
/*      SPRB0 (0x20002a54)                                                      */
/*      SPRHBM (0x20002a54)                                                     */
/*      SPRC0 (0x20002a54)                                                      */
/*      SPRMCC (0x20002a54)                                                     */
/*      SPRUCC (0x20002a54)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY21_SB_FBLP_REG 0x2C022A54

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY21_SB_FBLP_STRUCT;

/* LTLGENTRY22_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002a58)                                                      */
/*      SPRB0 (0x20002a58)                                                      */
/*      SPRHBM (0x20002a58)                                                     */
/*      SPRC0 (0x20002a58)                                                      */
/*      SPRMCC (0x20002a58)                                                     */
/*      SPRUCC (0x20002a58)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY22_SB_FBLP_REG 0x2C022A58

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY22_SB_FBLP_STRUCT;

/* LTLGENTRY23_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002a5c)                                                      */
/*      SPRB0 (0x20002a5c)                                                      */
/*      SPRHBM (0x20002a5c)                                                     */
/*      SPRC0 (0x20002a5c)                                                      */
/*      SPRMCC (0x20002a5c)                                                     */
/*      SPRUCC (0x20002a5c)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY23_SB_FBLP_REG 0x2C022A5C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY23_SB_FBLP_STRUCT;

/* LTLGENTRY24_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002a60)                                                      */
/*      SPRB0 (0x20002a60)                                                      */
/*      SPRHBM (0x20002a60)                                                     */
/*      SPRC0 (0x20002a60)                                                      */
/*      SPRMCC (0x20002a60)                                                     */
/*      SPRUCC (0x20002a60)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY24_SB_FBLP_REG 0x2C022A60

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY24_SB_FBLP_STRUCT;

/* LTLGENTRY25_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002a64)                                                      */
/*      SPRB0 (0x20002a64)                                                      */
/*      SPRHBM (0x20002a64)                                                     */
/*      SPRC0 (0x20002a64)                                                      */
/*      SPRMCC (0x20002a64)                                                     */
/*      SPRUCC (0x20002a64)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY25_SB_FBLP_REG 0x2C022A64

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY25_SB_FBLP_STRUCT;

/* LTLGENTRY26_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002a68)                                                      */
/*      SPRB0 (0x20002a68)                                                      */
/*      SPRHBM (0x20002a68)                                                     */
/*      SPRC0 (0x20002a68)                                                      */
/*      SPRMCC (0x20002a68)                                                     */
/*      SPRUCC (0x20002a68)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY26_SB_FBLP_REG 0x2C022A68

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY26_SB_FBLP_STRUCT;

/* LTLGENTRY27_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002a6c)                                                      */
/*      SPRB0 (0x20002a6c)                                                      */
/*      SPRHBM (0x20002a6c)                                                     */
/*      SPRC0 (0x20002a6c)                                                      */
/*      SPRMCC (0x20002a6c)                                                     */
/*      SPRUCC (0x20002a6c)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY27_SB_FBLP_REG 0x2C022A6C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY27_SB_FBLP_STRUCT;

/* LTLGENTRY28_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002a70)                                                      */
/*      SPRB0 (0x20002a70)                                                      */
/*      SPRHBM (0x20002a70)                                                     */
/*      SPRC0 (0x20002a70)                                                      */
/*      SPRMCC (0x20002a70)                                                     */
/*      SPRUCC (0x20002a70)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY28_SB_FBLP_REG 0x2C022A70

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY28_SB_FBLP_STRUCT;

/* LTLGENTRY29_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002a74)                                                      */
/*      SPRB0 (0x20002a74)                                                      */
/*      SPRHBM (0x20002a74)                                                     */
/*      SPRC0 (0x20002a74)                                                      */
/*      SPRMCC (0x20002a74)                                                     */
/*      SPRUCC (0x20002a74)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY29_SB_FBLP_REG 0x2C022A74

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY29_SB_FBLP_STRUCT;

/* LTLGENTRY30_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002a78)                                                      */
/*      SPRB0 (0x20002a78)                                                      */
/*      SPRHBM (0x20002a78)                                                     */
/*      SPRC0 (0x20002a78)                                                      */
/*      SPRMCC (0x20002a78)                                                     */
/*      SPRUCC (0x20002a78)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY30_SB_FBLP_REG 0x2C022A78

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY30_SB_FBLP_STRUCT;

/* LTLGENTRY31_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002a7c)                                                      */
/*      SPRB0 (0x20002a7c)                                                      */
/*      SPRHBM (0x20002a7c)                                                     */
/*      SPRC0 (0x20002a7c)                                                      */
/*      SPRMCC (0x20002a7c)                                                     */
/*      SPRUCC (0x20002a7c)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY31_SB_FBLP_REG 0x2C022A7C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY31_SB_FBLP_STRUCT;

/* LTLGENTRY32_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002a80)                                                      */
/*      SPRB0 (0x20002a80)                                                      */
/*      SPRHBM (0x20002a80)                                                     */
/*      SPRC0 (0x20002a80)                                                      */
/*      SPRMCC (0x20002a80)                                                     */
/*      SPRUCC (0x20002a80)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY32_SB_FBLP_REG 0x2C022A80

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY32_SB_FBLP_STRUCT;

/* LTLGENTRY33_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002a84)                                                      */
/*      SPRB0 (0x20002a84)                                                      */
/*      SPRHBM (0x20002a84)                                                     */
/*      SPRC0 (0x20002a84)                                                      */
/*      SPRMCC (0x20002a84)                                                     */
/*      SPRUCC (0x20002a84)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY33_SB_FBLP_REG 0x2C022A84

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY33_SB_FBLP_STRUCT;

/* LTLGENTRY34_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002a88)                                                      */
/*      SPRB0 (0x20002a88)                                                      */
/*      SPRHBM (0x20002a88)                                                     */
/*      SPRC0 (0x20002a88)                                                      */
/*      SPRMCC (0x20002a88)                                                     */
/*      SPRUCC (0x20002a88)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY34_SB_FBLP_REG 0x2C022A88

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY34_SB_FBLP_STRUCT;

/* LTLGENTRY35_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002a8c)                                                      */
/*      SPRB0 (0x20002a8c)                                                      */
/*      SPRHBM (0x20002a8c)                                                     */
/*      SPRC0 (0x20002a8c)                                                      */
/*      SPRMCC (0x20002a8c)                                                     */
/*      SPRUCC (0x20002a8c)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY35_SB_FBLP_REG 0x2C022A8C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY35_SB_FBLP_STRUCT;

/* LTLGENTRY36_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002a90)                                                      */
/*      SPRB0 (0x20002a90)                                                      */
/*      SPRHBM (0x20002a90)                                                     */
/*      SPRC0 (0x20002a90)                                                      */
/*      SPRMCC (0x20002a90)                                                     */
/*      SPRUCC (0x20002a90)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY36_SB_FBLP_REG 0x2C022A90

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY36_SB_FBLP_STRUCT;

/* LTLGENTRY37_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002a94)                                                      */
/*      SPRB0 (0x20002a94)                                                      */
/*      SPRHBM (0x20002a94)                                                     */
/*      SPRC0 (0x20002a94)                                                      */
/*      SPRMCC (0x20002a94)                                                     */
/*      SPRUCC (0x20002a94)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY37_SB_FBLP_REG 0x2C022A94

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY37_SB_FBLP_STRUCT;

/* LTLGENTRY38_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002a98)                                                      */
/*      SPRB0 (0x20002a98)                                                      */
/*      SPRHBM (0x20002a98)                                                     */
/*      SPRC0 (0x20002a98)                                                      */
/*      SPRMCC (0x20002a98)                                                     */
/*      SPRUCC (0x20002a98)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY38_SB_FBLP_REG 0x2C022A98

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY38_SB_FBLP_STRUCT;

/* LTLGENTRY39_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002a9c)                                                      */
/*      SPRB0 (0x20002a9c)                                                      */
/*      SPRHBM (0x20002a9c)                                                     */
/*      SPRC0 (0x20002a9c)                                                      */
/*      SPRMCC (0x20002a9c)                                                     */
/*      SPRUCC (0x20002a9c)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY39_SB_FBLP_REG 0x2C022A9C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY39_SB_FBLP_STRUCT;

/* LTLGENTRY40_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002aa0)                                                      */
/*      SPRB0 (0x20002aa0)                                                      */
/*      SPRHBM (0x20002aa0)                                                     */
/*      SPRC0 (0x20002aa0)                                                      */
/*      SPRMCC (0x20002aa0)                                                     */
/*      SPRUCC (0x20002aa0)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY40_SB_FBLP_REG 0x2C022AA0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY40_SB_FBLP_STRUCT;

/* LTLGENTRY41_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002aa4)                                                      */
/*      SPRB0 (0x20002aa4)                                                      */
/*      SPRHBM (0x20002aa4)                                                     */
/*      SPRC0 (0x20002aa4)                                                      */
/*      SPRMCC (0x20002aa4)                                                     */
/*      SPRUCC (0x20002aa4)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY41_SB_FBLP_REG 0x2C022AA4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY41_SB_FBLP_STRUCT;

/* LTLGENTRY42_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002aa8)                                                      */
/*      SPRB0 (0x20002aa8)                                                      */
/*      SPRHBM (0x20002aa8)                                                     */
/*      SPRC0 (0x20002aa8)                                                      */
/*      SPRMCC (0x20002aa8)                                                     */
/*      SPRUCC (0x20002aa8)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY42_SB_FBLP_REG 0x2C022AA8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY42_SB_FBLP_STRUCT;

/* LTLGENTRY43_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002aac)                                                      */
/*      SPRB0 (0x20002aac)                                                      */
/*      SPRHBM (0x20002aac)                                                     */
/*      SPRC0 (0x20002aac)                                                      */
/*      SPRMCC (0x20002aac)                                                     */
/*      SPRUCC (0x20002aac)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY43_SB_FBLP_REG 0x2C022AAC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY43_SB_FBLP_STRUCT;

/* LTLGENTRY44_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002ab0)                                                      */
/*      SPRB0 (0x20002ab0)                                                      */
/*      SPRHBM (0x20002ab0)                                                     */
/*      SPRC0 (0x20002ab0)                                                      */
/*      SPRMCC (0x20002ab0)                                                     */
/*      SPRUCC (0x20002ab0)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY44_SB_FBLP_REG 0x2C022AB0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY44_SB_FBLP_STRUCT;

/* LTLGENTRY45_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002ab4)                                                      */
/*      SPRB0 (0x20002ab4)                                                      */
/*      SPRHBM (0x20002ab4)                                                     */
/*      SPRC0 (0x20002ab4)                                                      */
/*      SPRMCC (0x20002ab4)                                                     */
/*      SPRUCC (0x20002ab4)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY45_SB_FBLP_REG 0x2C022AB4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY45_SB_FBLP_STRUCT;

/* LTLGENTRY46_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002ab8)                                                      */
/*      SPRB0 (0x20002ab8)                                                      */
/*      SPRHBM (0x20002ab8)                                                     */
/*      SPRC0 (0x20002ab8)                                                      */
/*      SPRMCC (0x20002ab8)                                                     */
/*      SPRUCC (0x20002ab8)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY46_SB_FBLP_REG 0x2C022AB8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY46_SB_FBLP_STRUCT;

/* LTLGENTRY47_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002abc)                                                      */
/*      SPRB0 (0x20002abc)                                                      */
/*      SPRHBM (0x20002abc)                                                     */
/*      SPRC0 (0x20002abc)                                                      */
/*      SPRMCC (0x20002abc)                                                     */
/*      SPRUCC (0x20002abc)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY47_SB_FBLP_REG 0x2C022ABC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY47_SB_FBLP_STRUCT;

/* LTLGENTRY48_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002ac0)                                                      */
/*      SPRB0 (0x20002ac0)                                                      */
/*      SPRHBM (0x20002ac0)                                                     */
/*      SPRC0 (0x20002ac0)                                                      */
/*      SPRMCC (0x20002ac0)                                                     */
/*      SPRUCC (0x20002ac0)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY48_SB_FBLP_REG 0x2C022AC0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY48_SB_FBLP_STRUCT;

/* LTLGENTRY49_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002ac4)                                                      */
/*      SPRB0 (0x20002ac4)                                                      */
/*      SPRHBM (0x20002ac4)                                                     */
/*      SPRC0 (0x20002ac4)                                                      */
/*      SPRMCC (0x20002ac4)                                                     */
/*      SPRUCC (0x20002ac4)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY49_SB_FBLP_REG 0x2C022AC4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY49_SB_FBLP_STRUCT;

/* LTLGENTRY50_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002ac8)                                                      */
/*      SPRB0 (0x20002ac8)                                                      */
/*      SPRHBM (0x20002ac8)                                                     */
/*      SPRC0 (0x20002ac8)                                                      */
/*      SPRMCC (0x20002ac8)                                                     */
/*      SPRUCC (0x20002ac8)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY50_SB_FBLP_REG 0x2C022AC8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY50_SB_FBLP_STRUCT;

/* LTLGENTRY51_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002acc)                                                      */
/*      SPRB0 (0x20002acc)                                                      */
/*      SPRHBM (0x20002acc)                                                     */
/*      SPRC0 (0x20002acc)                                                      */
/*      SPRMCC (0x20002acc)                                                     */
/*      SPRUCC (0x20002acc)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY51_SB_FBLP_REG 0x2C022ACC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY51_SB_FBLP_STRUCT;

/* LTLGENTRY52_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002ad0)                                                      */
/*      SPRB0 (0x20002ad0)                                                      */
/*      SPRHBM (0x20002ad0)                                                     */
/*      SPRC0 (0x20002ad0)                                                      */
/*      SPRMCC (0x20002ad0)                                                     */
/*      SPRUCC (0x20002ad0)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY52_SB_FBLP_REG 0x2C022AD0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY52_SB_FBLP_STRUCT;

/* LTLGENTRY53_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002ad4)                                                      */
/*      SPRB0 (0x20002ad4)                                                      */
/*      SPRHBM (0x20002ad4)                                                     */
/*      SPRC0 (0x20002ad4)                                                      */
/*      SPRMCC (0x20002ad4)                                                     */
/*      SPRUCC (0x20002ad4)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY53_SB_FBLP_REG 0x2C022AD4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY53_SB_FBLP_STRUCT;

/* LTLGENTRY54_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002ad8)                                                      */
/*      SPRB0 (0x20002ad8)                                                      */
/*      SPRHBM (0x20002ad8)                                                     */
/*      SPRC0 (0x20002ad8)                                                      */
/*      SPRMCC (0x20002ad8)                                                     */
/*      SPRUCC (0x20002ad8)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY54_SB_FBLP_REG 0x2C022AD8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY54_SB_FBLP_STRUCT;

/* LTLGENTRY55_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002adc)                                                      */
/*      SPRB0 (0x20002adc)                                                      */
/*      SPRHBM (0x20002adc)                                                     */
/*      SPRC0 (0x20002adc)                                                      */
/*      SPRMCC (0x20002adc)                                                     */
/*      SPRUCC (0x20002adc)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY55_SB_FBLP_REG 0x2C022ADC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY55_SB_FBLP_STRUCT;

/* LTLGENTRY56_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002ae0)                                                      */
/*      SPRB0 (0x20002ae0)                                                      */
/*      SPRHBM (0x20002ae0)                                                     */
/*      SPRC0 (0x20002ae0)                                                      */
/*      SPRMCC (0x20002ae0)                                                     */
/*      SPRUCC (0x20002ae0)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY56_SB_FBLP_REG 0x2C022AE0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY56_SB_FBLP_STRUCT;

/* LTLGENTRY57_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002ae4)                                                      */
/*      SPRB0 (0x20002ae4)                                                      */
/*      SPRHBM (0x20002ae4)                                                     */
/*      SPRC0 (0x20002ae4)                                                      */
/*      SPRMCC (0x20002ae4)                                                     */
/*      SPRUCC (0x20002ae4)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY57_SB_FBLP_REG 0x2C022AE4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY57_SB_FBLP_STRUCT;

/* LTLGENTRY58_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002ae8)                                                      */
/*      SPRB0 (0x20002ae8)                                                      */
/*      SPRHBM (0x20002ae8)                                                     */
/*      SPRC0 (0x20002ae8)                                                      */
/*      SPRMCC (0x20002ae8)                                                     */
/*      SPRUCC (0x20002ae8)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY58_SB_FBLP_REG 0x2C022AE8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY58_SB_FBLP_STRUCT;

/* LTLGENTRY59_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002aec)                                                      */
/*      SPRB0 (0x20002aec)                                                      */
/*      SPRHBM (0x20002aec)                                                     */
/*      SPRC0 (0x20002aec)                                                      */
/*      SPRMCC (0x20002aec)                                                     */
/*      SPRUCC (0x20002aec)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY59_SB_FBLP_REG 0x2C022AEC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY59_SB_FBLP_STRUCT;

/* LTLGENTRY60_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002af0)                                                      */
/*      SPRB0 (0x20002af0)                                                      */
/*      SPRHBM (0x20002af0)                                                     */
/*      SPRC0 (0x20002af0)                                                      */
/*      SPRMCC (0x20002af0)                                                     */
/*      SPRUCC (0x20002af0)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY60_SB_FBLP_REG 0x2C022AF0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY60_SB_FBLP_STRUCT;

/* LTLGENTRY61_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002af4)                                                      */
/*      SPRB0 (0x20002af4)                                                      */
/*      SPRHBM (0x20002af4)                                                     */
/*      SPRC0 (0x20002af4)                                                      */
/*      SPRMCC (0x20002af4)                                                     */
/*      SPRUCC (0x20002af4)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY61_SB_FBLP_REG 0x2C022AF4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY61_SB_FBLP_STRUCT;

/* LTLGENTRY62_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002af8)                                                      */
/*      SPRB0 (0x20002af8)                                                      */
/*      SPRHBM (0x20002af8)                                                     */
/*      SPRC0 (0x20002af8)                                                      */
/*      SPRMCC (0x20002af8)                                                     */
/*      SPRUCC (0x20002af8)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY62_SB_FBLP_REG 0x2C022AF8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY62_SB_FBLP_STRUCT;

/* LTLGENTRY63_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002afc)                                                      */
/*      SPRB0 (0x20002afc)                                                      */
/*      SPRHBM (0x20002afc)                                                     */
/*      SPRC0 (0x20002afc)                                                      */
/*      SPRMCC (0x20002afc)                                                     */
/*      SPRUCC (0x20002afc)                                                     */
/* Register default value on SPRA0: 0xFFFFFFFF                                  */
/* Register default value on SPRB0: 0xFFFFFFFF                                  */
/* Register default value on SPRHBM: 0xFFFFFFFF                                 */
/* Register default value on SPRC0: 0xFFFFFFFF                                  */
/* Register default value on SPRMCC: 0xFFFFFFFF                                 */
/* Register default value on SPRUCC: 0xFFFFFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Logger Entry
*/


#define LTLGENTRY63_SB_FBLP_REG 0x2C022AFC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 entry : 32;

                            /* Bits[31:0], Access Type=RO/V/P, default=0xFFFFFFFF*/

                            /*
                               [31] Time granularity bit 1=512ns 0=2ns Switch
                               between modes is done when [30:14] increments
                               past 1FFFFh [30:14] time unit count see bit 31
                               for unit definition [13:10] State exit arc
                               0=state not exited 1..15=see state specific map
                               [9:8] RxL0s State [7:4] LTSSM Main state [3:0]
                               LTSSM Sub state
                            */

  } Bits;
  UINT32 Data;

} LTLGENTRY63_SB_FBLP_STRUCT;



/* PIPECTL3_SB_FBLP_REG supported on:                                           */
/*      SPRA0 (0x20002b88)                                                      */
/*      SPRB0 (0x20002b88)                                                      */
/*      SPRHBM (0x20002b88)                                                     */
/*      SPRC0 (0x20002b88)                                                      */
/*      SPRMCC (0x20002b88)                                                     */
/*      SPRUCC (0x20002b88)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* SW Programming Note: BIOS should configure this register prior to link training (for situations such as a reset or SBR) to ensure that the LTSSM transitions to the correct intermediate states without any training issues that can potentially lead to a hang.
*/


#define PIPECTL3_SB_FBLP_REG 0x2C022B88

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 txswing : 1;

                            /* Bits[0:0], Access Type=RW/V/P, default=0x00000000*/

                            /*
                               Controls transmitter voltage swing level. Value:
                               0 Full swing (Normal) 1 Half swing (optional)
                               Implementation of this signal is optional if
                               only Full swing is supported. This signal is not
                               used at the 8.0 GT/s signaling rate. This is
                               also implemented as strap for project specific
                               usage.
                            */
    UINT32 rsvd : 8;

                            /* Bits[8:1], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 nodeemphg1 : 1;

                            /* Bits[9:9], Access Type=RW/V/P, default=0x00000000*/

                            /*
                               If in half swing mode at 2.5GT/s, use -3.5dB (0)
                               or 0dB (1) de-emphasis.
                            */
    UINT32 nodeemphg2 : 1;

                            /* Bits[10:10], Access Type=RW/V/P, default=0x00000000*/

                            /*
                               If in half swing mode at 5GT/s, use -3.5dB (0)
                               or 0dB (1) de-emphasis.
                            */
    UINT32 rsvd_11 : 21;

                            /* Bits[31:11], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} PIPECTL3_SB_FBLP_STRUCT;














/* STAGGERCTL_SB_FBLP_REG supported on:                                         */
/*      SPRA0 (0x10002be8)                                                      */
/*      SPRB0 (0x10002be8)                                                      */
/*      SPRHBM (0x10002be8)                                                     */
/*      SPRC0 (0x10002be8)                                                      */
/*      SPRMCC (0x10002be8)                                                     */
/*      SPRUCC (0x10002be8)                                                     */
/* Register default value on SPRA0: 0x00000039                                  */
/* Register default value on SPRB0: 0x00000039                                  */
/* Register default value on SPRHBM: 0x00000039                                 */
/* Register default value on SPRC0: 0x00000039                                  */
/* Register default value on SPRMCC: 0x00000039                                 */
/* Register default value on SPRUCC: 0x00000039                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* Stagger Control
*/


#define STAGGERCTL_SB_FBLP_REG 0x2C012BE8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 mode : 3;

                            /* Bits[2:0], Access Type=RW/V/P, default=0x00000001*/

                            /*
                               000 - disabled stagger (both tx and rx) 001 - 1
                               lane at a time 010 - 2 lanes at a time in
                               even/odd pairs (i.e 0,1 then 2,3 etc.) 011 - 4
                               lanes at a time (0,1,2,3 then 4,5,6,7 etc) 100 -
                               modulo 8 lanes at a time (i.e. for x16, 0,8 then
                               1,9 then 2,10 etc.) 101 - modulo 4 lanes at a
                               time (i.e. for x16, 0,4,8,12 then 1,5,9,13 then
                               2,6,10,14 etc.) 110 - modulo 2 lanes at a time
                               (or evens then odds) (i.e. for x8 0,2,4,6 then
                               1,3,5,7 etc.) mode 010 will look like no stagger
                               in 2 or less lane cluster mode 011 will look
                               like no stagger in 4 or less lane cluster mode
                               100 will look like 1 lane at a time in 8 or
                               fewer lane cluster mode 101 will look like 1
                               lane at a time in 4 or fewer lane cluster When
                               the soft strap to disable staggering is set (1),
                               the value of the MODE field will reset to 000 on
                               each primary reset de-assertion
                            */
    UINT16 rxstaggeren : 1;

                            /* Bits[3:3], Access Type=RW/P, default=0x00000001*/

                            /*
                               Include turning on/off the rx in the arbitration
                               (changing state of RxStandby while in PS0). This
                               is a don't care if MODE=000.
                            */
    UINT16 dlycnt : 4;

                            /* Bits[7:4], Access Type=RW/P, default=0x00000003*/

                            /*
                               Number of unit based counts to delay between
                               lane(s) granted ok to power state change.
                            */
    UINT16 dlyunit : 2;

                            /* Bits[9:8], Access Type=RW/P, default=0x00000000*/

                            /*
                               0 - DLYCNT*1cc + 1cc (cc=pclk period) 1 -
                               DLYCNT*4*2ns + 2cc with +0/-2ns error 2 -
                               DLYCNT*16*2ns + 2cc with +0/-2ns error 3 -
                               (DLYCNT*16+1)*64ns + 2cc with +0/-64ns error
                            */
    UINT16 lnrststaggeren : 1;

                            /* Bits[10:10], Access Type=RW/P, default=0x00000000*/

                            /*
                               Enables staggering of the PIPE lane resets in
                               the same manner as PowerDown and RxStandby.
                            */
    UINT16 rsvd : 5;

                            /* Bits[15:11], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT16 Data;

} STAGGERCTL_SB_FBLP_STRUCT;

/* DESKEWCTL2_SB_FBLP_REG supported on:                                         */
/*      SPRA0 (0x20002bf4)                                                      */
/*      SPRB0 (0x20002bf4)                                                      */
/*      SPRHBM (0x20002bf4)                                                     */
/*      SPRC0 (0x20002bf4)                                                      */
/*      SPRMCC (0x20002bf4)                                                     */
/*      SPRUCC (0x20002bf4)                                                     */
/* Register default value on SPRA0: 0x00000044                                  */
/* Register default value on SPRB0: 0x00000044                                  */
/* Register default value on SPRHBM: 0x00000044                                 */
/* Register default value on SPRC0: 0x00000044                                  */
/* Register default value on SPRMCC: 0x00000044                                 */
/* Register default value on SPRUCC: 0x00000044                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* DeSkew Control 2
*/


#define DESKEWCTL2_SB_FBLP_REG 0x2C022BF4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dbbypsuprate : 4;

                            /* Bits[3:0], Access Type=RW/P, default=0x00000004*/

                            /*
                               If DESKEWCTL.IDBEN is set, per rate enable
                               vector, bit is 0 8GT/s, bit 1 is 16GT/s, etc.
                            */
    UINT32 rxslipsuprate : 4;

                            /* Bits[7:4], Access Type=RW/P, default=0x00000004*/

                            /*
                               If DESKEWCTL.RXSLIPEN is set, per rate enable
                               vector, bit is 0 8GT/s, bit 1 is 16GT/s, etc.
                            */
    UINT32 rsvd : 24;

                            /* Bits[31:8], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} DESKEWCTL2_SB_FBLP_STRUCT;








/* RXTERMENCTL_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002c14)                                                      */
/*      SPRB0 (0x20002c14)                                                      */
/*      SPRHBM (0x20002c14)                                                     */
/*      SPRC0 (0x20002c14)                                                      */
/*      SPRMCC (0x20002c14)                                                     */
/*      SPRUCC (0x20002c14)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* RX TERM Enable Control
*/


#define RXTERMENCTL_SB_FBLP_REG 0x2C022C14

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 rxtermen : 16;

                            /* Bits[15:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               1 = enable rx term assertion for associated
                               lane, 0 = disable rx term assertion for
                               associated lane.
                            */
    UINT32 ovren : 1;

                            /* Bits[16:16], Access Type=RW/P, default=0x00000000*/

                            /*
                               1 = override normal mask, use RXTERMEN field, 0
                               = normal operation.
                            */
    UINT32 rsvd : 15;

                            /* Bits[31:17], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} RXTERMENCTL_SB_FBLP_STRUCT;


/* DESKEWCTL_SB_FBLP_REG supported on:                                          */
/*      SPRA0 (0x20002c1c)                                                      */
/*      SPRB0 (0x20002c1c)                                                      */
/*      SPRHBM (0x20002c1c)                                                     */
/*      SPRC0 (0x20002c1c)                                                      */
/*      SPRMCC (0x20002c1c)                                                     */
/*      SPRUCC (0x20002c1c)                                                     */
/* Register default value on SPRA0: 0x88821A44                                  */
/* Register default value on SPRB0: 0x88821A44                                  */
/* Register default value on SPRHBM: 0x88821A44                                 */
/* Register default value on SPRC0: 0x88821A44                                  */
/* Register default value on SPRMCC: 0x88821A44                                 */
/* Register default value on SPRUCC: 0x88821A44                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* DeSkew Control
*/


#define DESKEWCTL_SB_FBLP_REG 0x2C022C1C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 cfgdskskp : 1;

                            /* Bits[0:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               1: In Config, do deskew using SOS 0: In Config,
                               do deskew on TS COM
                            */
    UINT32 recdskskp : 1;

                            /* Bits[1:1], Access Type=RW/P, default=0x00000000*/

                            /*
                               1: In Recovery, do deskew using SOS 0: In
                               Recovery, do deskew on TS COM
                            */
    UINT32 dropcomskp : 1;

                            /* Bits[2:2], Access Type=RW/P, default=0x00000001*/

                            /*
                               1: Don't push the COM of an SOS into the deskew
                               buffer 0: Push SOS COM into deskew buffer
                            */
    UINT32 g1winsize : 5;

                            /* Bits[7:3], Access Type=RW/P, default=0x00000008*/

                            /*
                               For 2.5GT/s and 5GT/s rates, this is the number
                               of symbols expected to not be a deskew character
                               after one is seen. This is defined by the lane-
                               to-lane max wire skew, external repeaters, and
                               internal elastic buffer clock compensation. This
                               value is used to create a safe window for each
                               lane. When all lanes are in their safe window at
                               the same time, it's ok to start a training
                               deskew operation (no left over deskew characters
                               can be present).
                            */
    UINT32 g3winsize : 5;

                            /* Bits[12:8], Access Type=RW/P, default=0x0000001A*/

                            /*
                               For 8GT/s rates, this is the number of symbols
                               expected to not be a deskew character after one
                               is seen. This is defined by the lane-to-lane max
                               wire skew, external repeaters, and internal
                               elastic buffer clock compensation. This value is
                               used to create a safe window for each lane. When
                               all lanes are in their safe windows at the same
                               time, it's ok to start a training deskew
                               operation (no left over deskew characters can be
                               present).
                            */
    UINT32 maskdberr : 1;

                            /* Bits[13:13], Access Type=RW/P, default=0x00000000*/

                            /*
                               prevent DB errors from being promoted to PCIE
                               receiver error. Has no effect on
                               DESKEWSTS.DBERR.
                            */
    UINT32 idben : 1;

                            /* Bits[14:14], Access Type=RW/P, default=0x00000000*/

                            /*
                               If common clock and drift buffer is enabled,
                               then this bit controls enabling DB bypass If not
                               common clock or not drift buffer enabled, this
                               bit is ignored and bypass is not enabled
                            */
    UINT32 pdben : 1;

                            /* Bits[15:15], Access Type=RO, default=0x00000000*/

                            /*
                               Reserved for future enabling of deskew bypass in
                               PCIE mode
                            */
    UINT32 dbflim : 4;

                            /* Bits[19:16], Access Type=RW/P, default=0x00000002*/

                            /*
                               if the DB fail counter reaches limit, bypass
                               mode will be disabled - Fail counter increments
                               on each DB fail while in BYPASSED state - Fail
                               counter decrements on seeing 1024 aligned block
                               headers while in BYPASS_RDY or BYPASSED state A
                               value of 0 disabled the fail limit check
                            */
    UINT32 rxslipval : 5;

                            /* Bits[24:20], Access Type=RW/P, default=0x00000008*/

                            /* size of slip per adjustment */
    UINT32 rxslipcnt : 5;

                            /* Bits[29:25], Access Type=RW/P, default=0x00000004*/

                            /* Number of slip attempts before giving up */
    UINT32 rxslipen : 1;

                            /* Bits[30:30], Access Type=RW/P, default=0x00000000*/

                            /*
                               Enable reciever bit slip mode. DB Bypass mode
                               must be enabled as well.
                            */
    UINT32 rxslipbank0md : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000001*/

                            /*
                               Enable reciever bit slip logic to move block
                               aligner to bank 0 first before adjusting.
                            */

  } Bits;
  UINT32 Data;

} DESKEWCTL_SB_FBLP_STRUCT;



/* LTSSMTRNCTL_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x20002c28)                                                      */
/*      SPRB0 (0x20002c28)                                                      */
/*      SPRHBM (0x20002c28)                                                     */
/*      SPRC0 (0x20002c28)                                                      */
/*      SPRMCC (0x20002c28)                                                     */
/*      SPRUCC (0x20002c28)                                                     */
/* Register default value on SPRA0: 0x00BC4800                                  */
/* Register default value on SPRB0: 0x00BC4800                                  */
/* Register default value on SPRHBM: 0x00BC4800                                 */
/* Register default value on SPRC0: 0x00BC4800                                  */
/* Register default value on SPRMCC: 0x00BC4800                                 */
/* Register default value on SPRUCC: 0x00BC4800                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Training Control
*/


#define LTSSMTRNCTL_SB_FBLP_REG 0x2C022C28

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 widthmask : 5;

                            /* Bits[4:0], Access Type=RW/V/P, default=0x00000000*/

                            /*
                               Mask vector where any bit set to 1 will disable
                               a particular link width from being formed [4]
                               Disable x16 [3] Disable x8 [2] Disable x4 [1]
                               Disable x2 [0] Disable x1
                            */
    UINT32 reverseovvr : 1;

                            /* Bits[5:5], Access Type=RW/P, default=0x00000000*/

                            /*
                               1: Disables dynamic lane reversal support and
                               sets the lane ordered based on the REVERSEVAL
                               field 0: Dynamic lane reversal is enabled
                            */
    UINT32 reverseval : 1;

                            /* Bits[6:6], Access Type=RW/P, default=0x00000000*/

                            /*
                               1: if reverse override enabled, force link to
                               only operate in reverse 0: if reverse override
                               enabled, force link to only operate in non-
                               reverse
                            */
    UINT32 rsvd : 1;

                            /* Bits[7:7], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 halftsrcvd : 1;

                            /* Bits[8:8], Access Type=RW/P, default=0x00000000*/

                            /*
                               When set to 1, these things are enabled -
                               Polling.Config only requires 3 TSes be received
                               - Confg.LWS only requires 6 TSes be received -
                               Config.Complete only requires 3 TS2s be received
                               - Recovery.RcvrCfg only requires 3 TS2s be
                               received
                            */
    UINT32 dbleiescnt : 1;

                            /* Bits[9:9], Access Type=RW/P, default=0x00000000*/

                            /*
                               1: Interval between EIES transmission set to 62
                               TSes 0: standard spec defined interval
                            */
    UINT32 dbltssend : 1;

                            /* Bits[10:10], Access Type=RW/P, default=0x00000000*/

                            /*
                               When set to 1, these things are enabled - In HVM
                               short train mode, send 32 TS1s in Polling.Active
                               - Send 32 TS2s after receiving 1 in
                               Polling.Config - Send 48 TS2s after receiving 1
                               in Config.Complete - Send 90 TS1s in
                               Recovery.RcvrLock - Send 32 TS2s after receiving
                               1 in Recovery.RcvrCfg (directed speed bit in
                               Rec.RcvrLck was 0) - Send 64 TS2s after
                               receiving 1 matching TS2 in Recovery.RcvrCfg
                               (directed speed bit in Rec.RcvrLck was 1) - Send
                               32 TS2s after receiving 1 mis-matching TS in
                               Recovery.RcvrCfg (directed speed bit in
                               Rec.RcvrLck was 1) - Recovery.Idle to Detect arc
                               is Disabled, LTSSM will go to L0 instead
                            */
    UINT32 detquiettoen : 1;

                            /* Bits[11:11], Access Type=RW/P, default=0x00000001*/

                            /*
                               1: Enable normal timeout arc of Detect.Quiet 0:
                               Disable timeout arc of Detect.Quiet (this would
                               cause immediate exit of the state, not wait on
                               EI exit)
                            */
    UINT32 dmiport : 1;

                            /* Bits[12:12], Access Type=RW/P, default=0x00000000*/

                            /*
                               1: Port should train as if a DMI port 0: normal
                               PCIe training
                            */
    UINT32 gotorcvrlckrecidleto : 1;

                            /* Bits[13:13], Access Type=RW/P, default=0x00000000*/

                            /*
                               1: On a timeout in Rec.Idle that would normally
                               go to Detect, go back to Rec.RcvrLck (disables
                               Rec.Idle to Detect arc) 0: Normal Rec.Idle to
                               Detect arc.
                            */
    UINT32 leakage_wa : 1;

                            /* Bits[14:14], Access Type=RW/P, default=0x00000001*/

                            /*
                               1: On a Polling.Active timeout with some lanes
                               exiting EI, but not all the same lanes as
                               detected a receiver, go back to detect rather
                               than the specified timeout arcs. If the same
                               thing happens a second time, take path to
                               specified timeout arcs. 0: Normal Polling.Active
                               to Polling.Compliance arcs apply
                            */
    UINT32 send_256_idles : 1;

                            /* Bits[15:15], Access Type=RW/P, default=0x00000000*/

                            /*
                               1: Force a minimum of 256 logical idles to be
                               sent in Config.Idle and Recovery.Idle 0: Follow
                               PCIe spec defined 16 minimum logical idles to be
                               sent.
                            */
    UINT32 waitrcvrcfgtillsossent : 1;

                            /* Bits[16:16], Access Type=RW/P, default=0x00000000*/

                            /*
                               1: Stay in Rec.RcvrCfg until an SOS is sent
                               prior to transitioning to Rec.Idle. This is in
                               addition to normal RcvrCfg->Idle conditions. 0:
                               Normal Rec.RcvrCfg exit to Rec.Idle conditions
                            */
    UINT32 dislinkdown : 1;

                            /* Bits[17:17], Access Type=RW/P, default=0x00000000*/

                            /*
                               1: Disables reporting of link down when going to
                               detect after achieving Link Up. This will
                               prevent a link down reset from occurring in an
                               upstream port. 0: Normal link down events occur.
                            */
    UINT32 enforcedrec : 1;

                            /* Bits[18:18], Access Type=RW/P, default=0x00000001*/

                            /*
                               1: Enable forced entry to Recovery if the EB
                               goes empty or full. 0: EB errors don't cause a
                               recovery entry
                            */
    UINT32 enforcrecnotallsos : 1;

                            /* Bits[19:19], Access Type=RW/P, default=0x00000001*/

                            /*
                               1: Enable forcing entry to Recovery if some but
                               not all active lanes receive an SOS. If SOS COMs
                               are being dropped going into the deskew buffer,
                               this feature has no value. 0: Don't check for
                               all active lanes receiving an SOS.
                            */
    UINT32 surlnkdnen : 1;

                            /* Bits[20:20], Access Type=RW/P, default=0x00000001*/

                            /*
                               1: Enable reporting of phy layer specific
                               conditions for calculating surprise link down.
                               0: Disables surprise link down reporting
                            */
    UINT32 detquietdeteiany : 1;

                            /* Bits[21:21], Access Type=RW/P, default=0x00000001*/

                            /*
                               1: Allow EI exit to cause an exit from
                               Detect.Quiet 0: Don't allow EI exit to cause
                               early exit from Detect.Quiet
                            */
    UINT32 eiexit2recto : 8;

                            /* Bits[29:22], Access Type=RW/P, default=0x00000002*/

                            /*
                               Minimum time to ignore incoming data when
                               exiting a speed change. field bit 7:6 - unit 11
                               -> 128us --> 0 to 8ms 10 -> 16us --> 0 to 512us
                               01 -> 1us --> 0 to 64us 00 -> 256ns --> 0 to
                               16us field bit [5:0] val result time is val*unit
                               if val is 0, timer will expire immediately
                            */
    UINT32 enfdeemphovr : 1;

                            /* Bits[30:30], Access Type=RW/P, default=0x00000000*/

                            /*
                               Use LinkCtrl.SelDeemp field as transmitter de-
                               emphasis no matter what is being requested in
                               received TS.
                            */
    UINT32 locklane0 : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set to 1, lane 0 can not move in Config state
                               once link reaches L0 after exiting Detect. If
                               not set, the link can reverse in Config after
                               reaching L0 after exiting Detect.
                            */

  } Bits;
  UINT32 Data;

} LTSSMTRNCTL_SB_FBLP_STRUCT;

/* LTSSMTRNCTL2_SB_FBLP_REG supported on:                                       */
/*      SPRA0 (0x20002c2c)                                                      */
/*      SPRB0 (0x20002c2c)                                                      */
/*      SPRHBM (0x20002c2c)                                                     */
/*      SPRC0 (0x20002c2c)                                                      */
/*      SPRMCC (0x20002c2c)                                                     */
/*      SPRUCC (0x20002c2c)                                                     */
/* Register default value on SPRA0: 0xC8172000                                  */
/* Register default value on SPRB0: 0xC8172000                                  */
/* Register default value on SPRHBM: 0xC8172000                                 */
/* Register default value on SPRC0: 0xC8172000                                  */
/* Register default value on SPRMCC: 0xC8172000                                 */
/* Register default value on SPRUCC: 0xC8172000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Training Control Register 2
*/


#define LTSSMTRNCTL2_SB_FBLP_REG 0x2C022C2C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 slotwidth : 3;

                            /* Bits[2:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               0 - Use design max width 1 - x1, 2 - x2, 3 - x4,
                               4 - x8, 5 - x16, 6 - Reserved 7 - Auto (detects
                               slot width based on receiver detect results) The
                               lanes to use are always anchored to physical
                               lane 0. So if the slotwidth is programmed to a
                               x4 and the physical port is x8 capable, lanes
                               4-7 will never be used. In this example, logical
                               lane 0 can be placed on either physical lane 0
                               or physical lane 3.
                            */
    UINT32 slotwidthovr : 1;

                            /* Bits[3:3], Access Type=RW/P, default=0x00000000*/

                            /*
                               Allow this register to override the slot width
                               strap (1=override, 0=use strap)
                            */
    UINT32 autosltwmask : 4;

                            /* Bits[7:4], Access Type=RW/P, default=0x00000000*/

                            /*
                               Mask off the ability to form a specific slot
                               width when the slot width logic (result of strap
                               and override) is in auto detect mode. bit map
                               (1=disable, 0=allow) [3] x16 [2] x8 [1] x4 [0]
                               x2 Default value: 0h -- all widths supported in
                               auto slot mode
                            */
    UINT32 selflb : 1;

                            /* Bits[8:8], Access Type=RW/P, default=0x00000000*/

                            /*
                               1=part is running in self loopback, 0=part is
                               running in normal mode.
                            */
    UINT32 rsvd : 4;

                            /* Bits[12:9], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 clkreqsmpdly : 3;

                            /* Bits[15:13], Access Type=RW/P, default=0x00000001*/

                            /*
                               This field defines the delay window from when
                               the CLKREQ drive control pin (pm2g_en_clkreq) is
                               de-asserted to the time the controller starts
                               sampling the GPIO's input result
                               (pg2m_clkreq_b). This window of time allows for
                               the wire-or operation to settle and propagate
                               back to the controller. 0 - 80ns 1 - 160ns 2 -
                               320ns 3 - 520ns 4 - 1040ns 5 - 2080ns 6 - 4160ns
                               7 - 12000ns
                            */
    UINT32 txrxdetpol : 1;

                            /* Bits[16:16], Access Type=RW/P, default=0x00000001*/

                            /* Enable tx receiver detect polling */
    UINT32 txrxdetpoltermdis : 1;

                            /* Bits[17:17], Access Type=RW/P, default=0x00000001*/

                            /*
                               If IO supports, disable receiver termination
                               during Detect.Sleep. Some IOs may do this no
                               matter what this is set to when lane reset
                               asserted
                            */
    UINT32 txrxdetpolidl : 2;

                            /* Bits[19:18], Access Type=RW/P, default=0x00000001*/

                            /*
                               Time to remain in Detect.Sleep 00 - 500ms 01 -
                               1sec 10 - 5sec 11 - S/W gated (set LinkCtl.RL or
                               SpeedCtl.RL to break)
                            */
    UINT32 txrxdetpolatt : 2;

                            /* Bits[21:20], Access Type=RW/P, default=0x00000001*/

                            /*
                               Number of detection attempts until entry to
                               Detect.Sleep. This is the limit used after the
                               first Detect.Sleep entry or exit from Detect.
                               The initial limit is 64, subsequent limits are
                               as follows: 00 - 2 attempts 01 - 8 attempts 10 -
                               16 attempts 11 - 64 attempts
                            */
    UINT32 rprstmd : 1;

                            /* Bits[22:22], Access Type=RW/P, default=0x00000000*/

                            /*
                               0: Use LTSSM Hot Reset (acts as if Bus Control
                               Sec. Bus Reset bit set) 1: Use LTSSM Link
                               Disable (acts as if Link Control Link Disable
                               bit set) NOTE: State is persistent until a
                               primary reset is observed.
                            */
    UINT32 rsvd_23 : 1;

                            /* Bits[23:23], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 eiexit2rectomax : 8;

                            /* Bits[31:24], Access Type=RW/P, default=0x000000C8*/

                            /*
                               Maximum time to ignore incoming data when
                               exiting a speed change or L1. This time may not
                               be seen if the RxValid for all lanes is seen
                               first and minimum time has also been met. field
                               bit 7:6 - unit 11 -> 128us --> 0 to 8ms 10 ->
                               16us --> 0 to 512us 01 -> 1us --> 0 to 64us 00
                               -> 256ns --> 0 to 16us field bit [5:0] val
                               result time is val*unit if val is 0, timer will
                               expire immediately Un-gate of decode is defined
                               as: min_time and (max_time | RxValAll)
                            */

  } Bits;
  UINT32 Data;

} LTSSMTRNCTL2_SB_FBLP_STRUCT;



/* SOSCTL_SB_FBLP_REG supported on:                                             */
/*      SPRA0 (0x20002c38)                                                      */
/*      SPRB0 (0x20002c38)                                                      */
/*      SPRHBM (0x20002c38)                                                     */
/*      SPRC0 (0x20002c38)                                                      */
/*      SPRMCC (0x20002c38)                                                     */
/*      SPRUCC (0x20002c38)                                                     */
/* Register default value on SPRA0: 0x00025AE4                                  */
/* Register default value on SPRB0: 0x00025AE4                                  */
/* Register default value on SPRHBM: 0x00025AE4                                 */
/* Register default value on SPRC0: 0x00025AE4                                  */
/* Register default value on SPRMCC: 0x00025AE4                                 */
/* Register default value on SPRUCC: 0x00025AE4                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BOOT_W                                           */
/* SPRB0 Security PolicyGroup: BOOT_W                                           */
/* SPRHBM Security PolicyGroup: BOOT_W                                          */
/* SPRC0 Security PolicyGroup: BOOT_W                                           */
/* SPRMCC Security PolicyGroup: BOOT_W                                          */
/* SPRUCC Security PolicyGroup: BOOT_W                                          */
/* SOS Control
*/


#define SOSCTL_SB_FBLP_REG 0x2C022C38

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 sosinterval : 11;

                            /* Bits[10:0], Access Type=RW/P, default=0x000002E4*/

                            /*
                               Symbol between SOS insertions For 2.5GTs/ and
                               5GT/s modes = val * 2 For 8GT/s mode = val * 8
                            */
    UINT32 srissosint : 11;

                            /* Bits[21:11], Access Type=RW/P, default=0x0000004B*/

                            /*
                               SOS interval used in SRIS mode (high frequency
                               interval). Same interval definition as the
                               SOSINTERVAL field.
                            */
    UINT32 srisen : 1;

                            /* Bits[22:22], Access Type=RW/V/P, default=0x00000000*/

                            /*
                               This field should be set prior to link training
                               and may be loaded via fuse or strap. When
                               enabled, the high frequency SOS interval is
                               defined in SRISSOSINT and the low frequency SOS
                               interval is defined in SOSINTERVAL.
                            */
    UINT32 rsvd : 9;

                            /* Bits[31:23], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} SOSCTL_SB_FBLP_STRUCT;

/* LTSSMSTATEJMP_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20002c3c)                                                      */
/*      SPRB0 (0x20002c3c)                                                      */
/*      SPRHBM (0x20002c3c)                                                     */
/*      SPRC0 (0x20002c3c)                                                      */
/*      SPRMCC (0x20002c3c)                                                     */
/*      SPRUCC (0x20002c3c)                                                     */
/* Register default value on SPRA0: 0x00000010                                  */
/* Register default value on SPRB0: 0x00000010                                  */
/* Register default value on SPRHBM: 0x00000010                                 */
/* Register default value on SPRC0: 0x00000010                                  */
/* Register default value on SPRMCC: 0x00000010                                 */
/* Register default value on SPRUCC: 0x00000010                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM State Jump Control
*/


#define LTSSMSTATEJMP_SB_FBLP_REG 0x2C022C3C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 forcemstlb : 1;

                            /* Bits[0:0], Access Type=RW/P, default=0x00000000*/

                            /* unused */
    UINT32 exitslvlb : 1;

                            /* Bits[1:1], Access Type=RW/P, default=0x00000000*/

                            /*
                               Provides a directed means by which to exit slave
                               loopback
                            */
    UINT32 forcedetect : 1;

                            /* Bits[2:2], Access Type=RW/P, default=0x00000000*/

                            /*
                               1: Forces link into the detect state and holds
                               it there 0: release link from detect When
                               released, an upstream port will follow the same
                               path as if it had a link down event. This means
                               asserting reset to the device. See the no link
                               down control bit to avoid this.
                            */
    UINT32 modifpollb : 1;

                            /* Bits[3:3], Access Type=RW/P, default=0x00000000*/

                            /* TBA. Leave at 0 */
    UINT32 no_compliance : 1;

                            /* Bits[4:4], Access Type=RW/P, default=0x00000001*/

                            /*
                               1: Disabled entry to compliance using the load
                               board mechanism 0: Normal compliance entry rules
                            */
    UINT32 prel0widthmask : 5;

                            /* Bits[9:5], Access Type=RW/P, default=0x00000000*/

                            /*
                               Mask vector where any bit set to 1 will disable
                               a particular link width from being formed only
                               applies to initial training (pre-link up)
                               training. [4] Disable x16 [3] Disable x8 [2]
                               Disable x4 [1] Disable x2 [0] Disable x1
                            */
    UINT32 hardforce : 1;

                            /* Bits[10:10], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, any event that forces an immediate
                               return to detect (i.e. assertion of FORDETECT or
                               SPEEDCTL.FORCEGEN2/3) will also cause a reset to
                               be applied to the PIPE interface. If not set,
                               forced entry to Detect will always attempt to
                               complete any outstanding PIPE interface
                               handshakes.
                            */
    UINT32 rsvd : 21;

                            /* Bits[31:11], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} LTSSMSTATEJMP_SB_FBLP_STRUCT;

/* LTSSMSTATECTR_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20002c40)                                                      */
/*      SPRB0 (0x20002c40)                                                      */
/*      SPRHBM (0x20002c40)                                                     */
/*      SPRC0 (0x20002c40)                                                      */
/*      SPRMCC (0x20002c40)                                                     */
/*      SPRUCC (0x20002c40)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM State Control
*/


#define LTSSMSTATECTR_SB_FBLP_REG 0x2C022C40

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 sel : 2;

                            /* Bits[1:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               Select event to count 0 - Any Recovery Entry 1 -
                               LTLGSMEV0 triggers 2 - LTLGSMEV1 triggers 3 -
                               LTLGSMEV0 triggers OR LTLGSMEV1 triggers
                            */
    UINT32 rsvd : 14;

                            /* Bits[15:2], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 count : 15;

                            /* Bits[30:16], Access Type=RW/1C/V/P, default=0x00000000*/

                            /* Current count */
    UINT32 countovrflow : 1;

                            /* Bits[31:31], Access Type=RW/1C/V/P, default=0x00000000*/

                            /* Indication that count has overflowed */

  } Bits;
  UINT32 Data;

} LTSSMSTATECTR_SB_FBLP_STRUCT;





/* LTLNERRCTRL_SB_FBLP_REG supported on:                                        */
/*      SPRA0 (0x10002c54)                                                      */
/*      SPRB0 (0x10002c54)                                                      */
/*      SPRHBM (0x10002c54)                                                     */
/*      SPRC0 (0x10002c54)                                                      */
/*      SPRMCC (0x10002c54)                                                     */
/*      SPRUCC (0x10002c54)                                                     */
/* Register default value on SPRA0: 0x00008000                                  */
/* Register default value on SPRB0: 0x00008000                                  */
/* Register default value on SPRHBM: 0x00008000                                 */
/* Register default value on SPRC0: 0x00008000                                  */
/* Register default value on SPRMCC: 0x00008000                                 */
/* Register default value on SPRUCC: 0x00008000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LTSSM Lane Error Control
*/


#define LTLNERRCTRL_SB_FBLP_REG 0x2C012C54

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 sel1 : 4;

                            /* Bits[3:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               On triggering of the event selected by EVSEL[0],
                               the following information will be logged in
                               LTLNERRLOG.STS1 based on this field's settings
                               0: Log lanes that do not receive expect number
                               of TSes 1: Log lanes that do not receive at
                               least 2 TSes 2: Log lanes that do not complete
                               the send TS after receive TS handshake 3: Log
                               lanes that do not receive expected number of
                               TSes with EC=00 4: Log lanes that do not receive
                               expected number of TSes with EC=01 5: Log lanes
                               that do not receive expected number of TSes with
                               EC=10 6: Log lanes that do not receive expected
                               number of TSes with EC=11 7: Log lanes that do
                               not receive TSes with either Disable bit set or
                               Hot Reset bit set 8: Log lanes that do not
                               receive TSes with loopback bit set 9: Log lanes
                               that do not receive TSes with a retimer present
                               bit set (first or second retimer) 10: Log lanes
                               that have their Receiver SM still in Idle 11:
                               Log lanes that are in an inferred EI state 12:
                               Log lanes that are in an electrical idle state
                               (internal EI stat tracking says in EI) 13: Log
                               lanes that do not see PIPE's RxValid asserted
                               14: Log lanes that are not in PIPE powerdown P0
                               state 15: Log lanes that have not completed a
                               PIPE powerdown state change
                            */
    UINT16 sel2 : 4;

                            /* Bits[7:4], Access Type=RW/P, default=0x00000000*/

                            /*
                               On triggering of the event selected by EVSEL[1],
                               the following information will be logged in
                               LTLNERRLOG.STS2 based on this field's settings
                               0: Log lanes that do not receive expect number
                               of TSes 1: Log lanes that do not receive at
                               least 2 TSes 2: Log lanes that do not complete
                               the send TS after receive TS handshake 3: Log
                               lanes that do not receive expected number of
                               TSes with EC=00 4: Log lanes that do not receive
                               expected number of TSes with EC=01 5: Log lanes
                               that do not receive expected number of TSes with
                               EC=10 6: Log lanes that do not receive expected
                               number of TSes with EC=11 7: Log lanes that do
                               not receive TSes with either Disable bit set or
                               Hot Reset bit set 8: Log lanes that do not
                               receive TSes with loopback bit set 9: Log lanes
                               that do not receive TSes with a retimer present
                               bit set (first or second retimer) 10: Log lanes
                               that have their Receiver SM still in Idle 11:
                               Log lanes that are in an inferred EI state 12:
                               Log lanes that are in an electrical idle state
                               (internal EI stat tracking says in EI) 13: Log
                               lanes that do not see PIPE's RxValid asserted
                               14: Log lanes that are not in PIPE powerdown P0
                               state 15: Log lanes that have not completed a
                               PIPE powerdown state change
                            */
    UINT16 evsel : 2;

                            /* Bits[9:8], Access Type=RW/P, default=0x00000000*/

                            /*
                               Event Select bit [0] Select what event trigger
                               to use to trigger SEL1 data. (0) LTLGSMEV0 (1)
                               LTLGTMEV (of sub logger 0) bit [1] Select what
                               event trigger to use to trigger SEL2 data. (0)
                               LTLGSMEV1 (1) LTLGTMEV (of sub logger 0) The
                               triggered field of the LTLG*EV* register
                               selected by this field should be cleared in
                               order for the event trigger to occur. This is in
                               addition to clearing of the corresponding
                               LTLNERRSTS.CAPTURED field.
                            */
    UINT16 rsvd : 4;

                            /* Bits[13:10], Access Type=RO, default=None*/

                            /* Reserved */
    UINT16 parlograte : 2;

                            /* Bits[15:14], Access Type=RW/P, default=0x00000002*/

                            /*
                               What rate to log parity errors for in G5*DPMSTS
                               registers. 00=Gen3,01=Gen4,10=Gen5,11=Rserved
                            */

  } Bits;
  UINT16 Data;

} LTLNERRCTRL_SB_FBLP_STRUCT;



/* LPIFCTL_SB_FBLP_REG supported on:                                            */
/*      SPRA0 (0x20002c68)                                                      */
/*      SPRB0 (0x20002c68)                                                      */
/*      SPRHBM (0x20002c68)                                                     */
/*      SPRC0 (0x20002c68)                                                      */
/*      SPRMCC (0x20002c68)                                                     */
/*      SPRUCC (0x20002c68)                                                     */
/* Register default value on SPRA0: 0x00000004                                  */
/* Register default value on SPRB0: 0x00000004                                  */
/* Register default value on SPRHBM: 0x00000004                                 */
/* Register default value on SPRC0: 0x00000004                                  */
/* Register default value on SPRMCC: 0x00000004                                 */
/* Register default value on SPRUCC: 0x00000004                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* LPIF Control
*/


#define LPIFCTL_SB_FBLP_REG 0x2C022C68

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 holdlinkerr : 1;

                            /* Bits[0:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, LPIF Status SM holds in LINKERROR until
                               LPIFSTS.LINKERROR is cleared.
                            */
    UINT32 disholdrec : 1;

                            /* Bits[1:1], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, LPIF request for retrain does not hold
                               LTSSM in Recovery but acts like a constant
                               retrain request on return to L0 If cleared, an
                               LPIF request for RETRAIN will hold LTSSM in
                               Recovery.RcvrConfig but will not cause a state
                               timeout (if 48ms would be exceeded, LTSSM will
                               exit to L0 and go back to Recovery)
                            */
    UINT32 masktknerr : 1;

                            /* Bits[2:2], Access Type=RW/P, default=0x00000001*/

                            /* --deprecated-- */
    UINT32 nointdis : 1;

                            /* Bits[3:3], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the LPIF status SM will ignore a change
                               in state request once it sees a request for
                               Disable until it reaches the Disabled,
                               LinkError, or Reset state status.
                            */
    UINT32 nointhr : 1;

                            /* Bits[4:4], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, the LPIF status SM will ignore a change
                               in state request once it sees a request for
                               LinkReset until it reaches the LinkReset,
                               LinkError, or Reset state status.
                            */
    UINT32 holddetectexit : 1;

                            /* Bits[5:5], Access Type=RW/P, default=0x00000000*/

                            /*
                               If set, a re-entry to LPIF status RESET must see
                               a request sequence of NOP->ACTIVE to stop
                               blocking LTSSM from exiting Detect. If cleared,
                               link layer must manage holding the LTSSM off by
                               not requesting NOP while status is RESET.
                            */
    UINT32 rsvd : 26;

                            /* Bits[31:6], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} LPIFCTL_SB_FBLP_STRUCT;

/* CSR_IAL_STREAMID_SB_FBLP_REG supported on:                                   */
/*      SPRA0 (0x20002c6c)                                                      */
/*      SPRB0 (0x20002c6c)                                                      */
/*      SPRHBM (0x20002c6c)                                                     */
/*      SPRC0 (0x20002c6c)                                                      */
/*      SPRMCC (0x20002c6c)                                                     */
/*      SPRUCC (0x20002c6c)                                                     */
/* Register default value on SPRA0: 0x00FF5533                                  */
/* Register default value on SPRB0: 0x00FF5533                                  */
/* Register default value on SPRHBM: 0x00FF5533                                 */
/* Register default value on SPRC0: 0x00FF5533                                  */
/* Register default value on SPRMCC: 0x00FF5533                                 */
/* Register default value on SPRUCC: 0x00FF5533                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* IAL LPIF Protocol/Stream Map
*/


#define CSR_IAL_STREAMID_SB_FBLP_REG 0x2C022C6C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 csr_ial_io_streamid : 8;

                            /* Bits[7:0], Access Type=RW/P, default=0x00000033*/

                            /* Stream Id for IAL.IO */
    UINT32 csr_ial_mem_streamid : 8;

                            /* Bits[15:8], Access Type=RW/P, default=0x00000055*/

                            /* Stream Id for IAL.MEM */
    UINT32 csr_ial_almp_streamid : 8;

                            /* Bits[23:16], Access Type=RW/P, default=0x000000FF*/

                            /* Stream Id for IAL.ALMP */
    UINT32 rsvd : 8;

                            /* Bits[31:24], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} CSR_IAL_STREAMID_SB_FBLP_STRUCT;

/* IAPCTL2_SB_FBLP_REG supported on:                                            */
/*      SPRA0 (0x20002c70)                                                      */
/*      SPRB0 (0x20002c70)                                                      */
/*      SPRHBM (0x20002c70)                                                     */
/*      SPRC0 (0x20002c70)                                                      */
/*      SPRMCC (0x20002c70)                                                     */
/*      SPRUCC (0x20002c70)                                                     */
/* Register default value on SPRA0: 0x00000107                                  */
/* Register default value on SPRB0: 0x80860107                                  */
/* Register default value on SPRHBM: 0x80860107                                 */
/* Register default value on SPRC0: 0x1E980107                                  */
/* Register default value on SPRMCC: 0x1E980107                                 */
/* Register default value on SPRUCC: 0x1E980107                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* IAL Alternate Protocol Control2
*/


#define IAPCTL2_SB_FBLP_REG 0x2C022C70

#if defined(SPRA0_HOST)
typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 ialwidthmask : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000007*/

                            /* inserted reg from XML modification tool */
    UINT32 rsvd : 3;

                            /* Bits[7:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ialinvratelnkdn : 1;

                            /* Bits[8:8], Access Type=RW/P, default=0x00000001*/

                            /*
                               When set will force link down if IAL link goes
                               to 2.5GT/s or 5GT/s post reaching L0 at 8GT/s or
                               higher
                            */
    UINT32 ialinvrateto : 2;

                            /* Bits[10:9], Access Type=RW/P, default=0x00000000*/

                            /*
                               if IALINVRATELNKDN=1, this fields is ignored,
                               else 00 - Timer disabled, no forced link down 01
                               - Wait 1ms for rate recovery, if expires, force
                               link down 10 - Wait 20ms for rate recovery, if
                               expires, force link down 11 - Wait 200ms for
                               rate recovery, if expires, force link down Rate
                               Recovery is defined as starting when link goes
                               to 2.5GT/s or 5GT/s post reaching L0 at 8GT/s or
                               higher
                            */
    UINT32 rsvd_11 : 21;

                            /* Bits[31:11], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} IAPCTL2_SB_FBLP_SPRA0_STRUCT;
#endif /* (SPRA0_HOST) */

#if defined(SPRB0_HOST) || defined(SPRHBM_HOST) || defined(SPRC0_HOST) || defined(SPRMCC_HOST) || defined(SPRUCC_HOST)
typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 ialwidthmask : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000007*/

                            /* inserted reg from XML modification tool */
    UINT32 rsvd : 3;

                            /* Bits[7:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ialinvratelnkdn : 1;

                            /* Bits[8:8], Access Type=RW/P, default=0x00000001*/

                            /*
                               When set will force link down if IAL link goes
                               to 2.5GT/s or 5GT/s post reaching L0 at 8GT/s or
                               higher
                            */
    UINT32 ialinvrateto : 2;

                            /* Bits[10:9], Access Type=RW/P, default=0x00000000*/

                            /*
                               if IALINVRATELNKDN=1, this fields is ignored,
                               else 00 - Timer disabled, no forced link down 01
                               - Wait 1ms for rate recovery, if expires, force
                               link down 10 - Wait 20ms for rate recovery, if
                               expires, force link down 11 - Wait 200ms for
                               rate recovery, if expires, force link down Rate
                               Recovery is defined as starting when link goes
                               to 2.5GT/s or 5GT/s post reaching L0 at 8GT/s or
                               higher
                            */
    UINT32 rsvd_11 : 1;

                            /* Bits[11:11], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 apid : 3;

                            /* Bits[14:12], Access Type=RW/P, default=0x00000000*/

                            /*
                               Alt Protocol ID in CXL Modified TS Info1 field
                               (byte 8 bits 7:5)
                            */
    UINT32 rsvd_15 : 1;

                            /* Bits[15:15], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 vid : 16;

                            /* Bits[31:16], Access Type=RW/P, default=0x00008086*/

                            /* VID used during alternate protocol negotiation */

  } Bits;
  UINT32 Data;

} IAPCTL2_SB_FBLP_SPRB0_SPRHBM_SPRC0_SPRMCC_SPRUCC_STRUCT;
#endif /* (SPRB0_HOST) || defined(SPRHBM_HOST) || defined(SPRC0_HOST) || defined(SPRMCC_HOST) || defined(SPRUCC_HOST) */

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 ialwidthmask : 5;

                            /* Bits[4:0], Access Type=RW/P, default=0x00000007*/

                            /* inserted reg from XML modification tool */
    UINT32 rsvd : 3;

                            /* Bits[7:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 ialinvratelnkdn : 1;

                            /* Bits[8:8], Access Type=RW/P, default=0x00000001*/

                            /*
                               When set will force link down if IAL link goes
                               to 2.5GT/s or 5GT/s post reaching L0 at 8GT/s or
                               higher
                            */
    UINT32 ialinvrateto : 2;

                            /* Bits[10:9], Access Type=RW/P, default=0x00000000*/

                            /*
                               if IALINVRATELNKDN=1, this fields is ignored,
                               else 00 - Timer disabled, no forced link down 01
                               - Wait 1ms for rate recovery, if expires, force
                               link down 10 - Wait 20ms for rate recovery, if
                               expires, force link down 11 - Wait 200ms for
                               rate recovery, if expires, force link down Rate
                               Recovery is defined as starting when link goes
                               to 2.5GT/s or 5GT/s post reaching L0 at 8GT/s or
                               higher
                            */
    UINT32 rsvd_11 : 21;

                            /* Bits[31:11], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} IAPCTL2_SB_FBLP_STRUCT;

/* DRIFT_BUF_SEL_SB_FBLP_REG supported on:                                      */
/*      SPRA0 (0x20002c74)                                                      */
/*      SPRB0 (0x20002c74)                                                      */
/*      SPRHBM (0x20002c74)                                                     */
/*      SPRC0 (0x20002c74)                                                      */
/*      SPRMCC (0x20002c74)                                                     */
/*      SPRUCC (0x20002c74)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DRIFT_BUF_SEL
*/


#define DRIFT_BUF_SEL_SB_FBLP_REG 0x2C022C74

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 csr_drift_sel_bits : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */

  } Bits;
  UINT32 Data;

} DRIFT_BUF_SEL_SB_FBLP_STRUCT;

/* PSF_BYPASS_CONTROL_SB_FBLP_REG supported on:                                 */
/*      SPRA0 (0x20002c78)                                                      */
/*      SPRB0 (0x20002c78)                                                      */
/*      SPRHBM (0x20002c78)                                                     */
/*      SPRC0 (0x20002c78)                                                      */
/*      SPRMCC (0x20002c78)                                                     */
/*      SPRUCC (0x20002c78)                                                     */
/* Register default value on SPRA0: 0x00000001                                  */
/* Register default value on SPRB0: 0x00000001                                  */
/* Register default value on SPRHBM: 0x00000001                                 */
/* Register default value on SPRC0: 0x00000001                                  */
/* Register default value on SPRMCC: 0x00000001                                 */
/* Register default value on SPRUCC: 0x00000001                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* PSF_BYPASS_CONTROL
*/


#define PSF_BYPASS_CONTROL_SB_FBLP_REG 0x2C022C78

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 enable_psf_bypass : 1;

                            /* Bits[0:0], Access Type=RW/P, default=0x00000001*/

                            /* inserted reg from XML modification tool */
    UINT32 force_psf_bypass : 1;

                            /* Bits[1:1], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */
    UINT32 rsvd : 30;

                            /* Bits[31:2], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} PSF_BYPASS_CONTROL_SB_FBLP_STRUCT;

/* CSR_SBDEVCLKGCTL_SB_FBLP_REG supported on:                                   */
/*      SPRA0 (0x10002c7c)                                                      */
/*      SPRB0 (0x10002c7c)                                                      */
/*      SPRHBM (0x10002c7c)                                                     */
/*      SPRC0 (0x10002c7c)                                                      */
/*      SPRMCC (0x10002c7c)                                                     */
/*      SPRUCC (0x10002c7c)                                                     */
/* Register default value on SPRA0: 0x00000020                                  */
/* Register default value on SPRB0: 0x00000020                                  */
/* Register default value on SPRHBM: 0x00000020                                 */
/* Register default value on SPRC0: 0x00000020                                  */
/* Register default value on SPRMCC: 0x00000020                                 */
/* Register default value on SPRUCC: 0x00000020                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CSR_SBDEVCLKGCTL
*/


#define CSR_SBDEVCLKGCTL_SB_FBLP_REG 0x2C012C7C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 icge : 1;

                            /* Bits[0:0], Access Type=RW/P, default=0x00000000*/

                            /* Clock gate enable */
    UINT16 ict : 8;

                            /* Bits[8:1], Access Type=RW/P, default=0x00000010*/

                            /*
                               Idle Counter for Agent ISM movement from ACTIVE
                               to IDLEREQ
                            */
    UINT16 rsvd : 7;

                            /* Bits[15:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT16 Data;

} CSR_SBDEVCLKGCTL_SB_FBLP_STRUCT;


/* CSR_PCS_MUX_SEL_SB_FBLP_REG supported on:                                    */
/*      SPRA0 (0x10002c8a)                                                      */
/*      SPRB0 (0x10002c8a)                                                      */
/*      SPRHBM (0x10002c8a)                                                     */
/*      SPRC0 (0x10002c8a)                                                      */
/*      SPRMCC (0x10002c8a)                                                     */
/*      SPRUCC (0x10002c8a)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: BTSMM_W                                          */
/* SPRB0 Security PolicyGroup: BTSMM_W                                          */
/* SPRHBM Security PolicyGroup: BTSMM_W                                         */
/* SPRC0 Security PolicyGroup: BTSMM_W                                          */
/* SPRMCC Security PolicyGroup: BTSMM_W                                         */
/* SPRUCC Security PolicyGroup: BTSMM_W                                         */
/* CSR_PCS_MUX_SEL
*/


#define CSR_PCS_MUX_SEL_SB_FBLP_REG 0x2C012C8A

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT16 lane_sel : 8;

                            /* Bits[7:0], Access Type=RW/P, default=0x00000000*/

                            /*
                               Each bit controls a pair of pcs lanes Bit 0 -
                               lanes 0,1, Bit 1 - lanes 2,3, 0 - Gen4, 1 - Gen5
                            */
    UINT16 lane_sel_val : 1;

                            /* Bits[8:8], Access Type=RW/P, default=0x00000000*/

                            /* 1-LANE_SEL is valid, 0-LANE_SEL is invalid */
    UINT16 rsvd : 7;

                            /* Bits[15:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT16 Data;

} CSR_PCS_MUX_SEL_SB_FBLP_STRUCT;




































/* DFX_LCE_G1_PAT_MARK_BUF0_SB_FBLP_REG supported on:                           */
/*      SPRA0 (0x20002eac)                                                      */
/*      SPRB0 (0x20002eac)                                                      */
/*      SPRHBM (0x20002eac)                                                     */
/*      SPRC0 (0x20002eac)                                                      */
/*      SPRMCC (0x20002eac)                                                     */
/*      SPRUCC (0x20002eac)                                                     */
/* Register default value on SPRA0: 0x32CF0AF0                                  */
/* Register default value on SPRB0: 0x32CF0AF0                                  */
/* Register default value on SPRHBM: 0x32CF0AF0                                 */
/* Register default value on SPRC0: 0x32CF0AF0                                  */
/* Register default value on SPRMCC: 0x32CF0AF0                                 */
/* Register default value on SPRUCC: 0x32CF0AF0                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_PAT_MARK_BUF0
*/


#define DFX_LCE_G1_PAT_MARK_BUF0_SB_FBLP_REG 0x2C022EAC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 csr_marker_8b_ver : 8;

                            /* Bits[7:0], Access Type=RW/P, default=0x000000F0*/

                            /* 8b version of the Marker symbols */
    UINT32 csr_8b_marker_kchar : 1;

                            /* Bits[8:8], Access Type=RW/P, default=0x00000000*/

                            /* Use with caution: Kchar indicators for 8b Marker */
    UINT32 csr_marker_enable : 1;

                            /* Bits[9:9], Access Type=RW/P, default=0x00000001*/

                            /* Enable custom Marker */
    UINT32 csr_marker_10b_ver_0 : 10;

                            /* Bits[19:10], Access Type=RW/P, default=0x000003C2*/

                            /* 10b version of Marker-0 */
    UINT32 csr_marker_10b_ver_1 : 10;

                            /* Bits[29:20], Access Type=RW/P, default=0x0000032C*/

                            /* 10b version of Marker-1 */
    UINT32 csr_lceg3_clk_en : 1;

                            /* Bits[30:30], Access Type=RW/P, default=0x00000000*/

                            /* Enable clk to lceg3 */
    UINT32 csr_lceg1_clk_en : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /* Enable clk to lceg1 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_PAT_MARK_BUF0_SB_FBLP_STRUCT;

/* DFX_LCE_G1_PAT_MARK_BUF1_SB_FBLP_REG supported on:                           */
/*      SPRA0 (0x20002eb0)                                                      */
/*      SPRB0 (0x20002eb0)                                                      */
/*      SPRHBM (0x20002eb0)                                                     */
/*      SPRC0 (0x20002eb0)                                                      */
/*      SPRMCC (0x20002eb0)                                                     */
/*      SPRUCC (0x20002eb0)                                                     */
/* Register default value on SPRA0: 0x32CF0AF0                                  */
/* Register default value on SPRB0: 0x32CF0AF0                                  */
/* Register default value on SPRHBM: 0x32CF0AF0                                 */
/* Register default value on SPRC0: 0x32CF0AF0                                  */
/* Register default value on SPRMCC: 0x32CF0AF0                                 */
/* Register default value on SPRUCC: 0x32CF0AF0                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_PAT_MARK_BUF1
*/


#define DFX_LCE_G1_PAT_MARK_BUF1_SB_FBLP_REG 0x2C022EB0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 csr_marker_8b_ver : 8;

                            /* Bits[7:0], Access Type=RW/P, default=0x000000F0*/

                            /* 8b version of the Marker symbols */
    UINT32 csr_8b_marker_kchar : 1;

                            /* Bits[8:8], Access Type=RW/P, default=0x00000000*/

                            /* Use with caution: Kchar indicators for 8b Marker */
    UINT32 csr_marker_enable : 1;

                            /* Bits[9:9], Access Type=RW/P, default=0x00000001*/

                            /* Enable custom Marker */
    UINT32 csr_marker_10b_ver_0 : 10;

                            /* Bits[19:10], Access Type=RW/P, default=0x000003C2*/

                            /* 10b version of Marker-0 */
    UINT32 csr_marker_10b_ver_1 : 10;

                            /* Bits[29:20], Access Type=RW/P, default=0x0000032C*/

                            /* 10b version of Marker-1 */
    UINT32 csr_lceg3_clk_en : 1;

                            /* Bits[30:30], Access Type=RW/P, default=0x00000000*/

                            /* Enable clk to lceg3 */
    UINT32 csr_lceg1_clk_en : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /* Enable clk to lceg1 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_PAT_MARK_BUF1_SB_FBLP_STRUCT;

/* DFX_LCE_G1_PAT_MARK_BUF2_SB_FBLP_REG supported on:                           */
/*      SPRA0 (0x20002eb4)                                                      */
/*      SPRB0 (0x20002eb4)                                                      */
/*      SPRHBM (0x20002eb4)                                                     */
/*      SPRC0 (0x20002eb4)                                                      */
/*      SPRMCC (0x20002eb4)                                                     */
/*      SPRUCC (0x20002eb4)                                                     */
/* Register default value on SPRA0: 0x32CF0AF0                                  */
/* Register default value on SPRB0: 0x32CF0AF0                                  */
/* Register default value on SPRHBM: 0x32CF0AF0                                 */
/* Register default value on SPRC0: 0x32CF0AF0                                  */
/* Register default value on SPRMCC: 0x32CF0AF0                                 */
/* Register default value on SPRUCC: 0x32CF0AF0                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_PAT_MARK_BUF2
*/


#define DFX_LCE_G1_PAT_MARK_BUF2_SB_FBLP_REG 0x2C022EB4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 csr_marker_8b_ver : 8;

                            /* Bits[7:0], Access Type=RW/P, default=0x000000F0*/

                            /* 8b version of the Marker symbols */
    UINT32 csr_8b_marker_kchar : 1;

                            /* Bits[8:8], Access Type=RW/P, default=0x00000000*/

                            /* Use with caution: Kchar indicators for 8b Marker */
    UINT32 csr_marker_enable : 1;

                            /* Bits[9:9], Access Type=RW/P, default=0x00000001*/

                            /* Enable custom Marker */
    UINT32 csr_marker_10b_ver_0 : 10;

                            /* Bits[19:10], Access Type=RW/P, default=0x000003C2*/

                            /* 10b version of Marker-0 */
    UINT32 csr_marker_10b_ver_1 : 10;

                            /* Bits[29:20], Access Type=RW/P, default=0x0000032C*/

                            /* 10b version of Marker-1 */
    UINT32 csr_lceg3_clk_en : 1;

                            /* Bits[30:30], Access Type=RW/P, default=0x00000000*/

                            /* Enable clk to lceg3 */
    UINT32 csr_lceg1_clk_en : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /* Enable clk to lceg1 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_PAT_MARK_BUF2_SB_FBLP_STRUCT;

/* DFX_LCE_G1_PAT_MARK_BUF3_SB_FBLP_REG supported on:                           */
/*      SPRA0 (0x20002eb8)                                                      */
/*      SPRB0 (0x20002eb8)                                                      */
/*      SPRHBM (0x20002eb8)                                                     */
/*      SPRC0 (0x20002eb8)                                                      */
/*      SPRMCC (0x20002eb8)                                                     */
/*      SPRUCC (0x20002eb8)                                                     */
/* Register default value on SPRA0: 0x32CF0AF0                                  */
/* Register default value on SPRB0: 0x32CF0AF0                                  */
/* Register default value on SPRHBM: 0x32CF0AF0                                 */
/* Register default value on SPRC0: 0x32CF0AF0                                  */
/* Register default value on SPRMCC: 0x32CF0AF0                                 */
/* Register default value on SPRUCC: 0x32CF0AF0                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_PAT_MARK_BUF3
*/


#define DFX_LCE_G1_PAT_MARK_BUF3_SB_FBLP_REG 0x2C022EB8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 csr_marker_8b_ver : 8;

                            /* Bits[7:0], Access Type=RW/P, default=0x000000F0*/

                            /* 8b version of the Marker symbols */
    UINT32 csr_8b_marker_kchar : 1;

                            /* Bits[8:8], Access Type=RW/P, default=0x00000000*/

                            /* Use with caution: Kchar indicators for 8b Marker */
    UINT32 csr_marker_enable : 1;

                            /* Bits[9:9], Access Type=RW/P, default=0x00000001*/

                            /* Enable custom Marker */
    UINT32 csr_marker_10b_ver_0 : 10;

                            /* Bits[19:10], Access Type=RW/P, default=0x000003C2*/

                            /* 10b version of Marker-0 */
    UINT32 csr_marker_10b_ver_1 : 10;

                            /* Bits[29:20], Access Type=RW/P, default=0x0000032C*/

                            /* 10b version of Marker-1 */
    UINT32 csr_lceg3_clk_en : 1;

                            /* Bits[30:30], Access Type=RW/P, default=0x00000000*/

                            /* Enable clk to lceg3 */
    UINT32 csr_lceg1_clk_en : 1;

                            /* Bits[31:31], Access Type=RW/P, default=0x00000000*/

                            /* Enable clk to lceg1 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_PAT_MARK_BUF3_SB_FBLP_STRUCT;

/* DFX_LCE_G1_PAT_ERR_BUF0_SB_FBLP_REG supported on:                            */
/*      SPRA0 (0x20002ebc)                                                      */
/*      SPRB0 (0x20002ebc)                                                      */
/*      SPRHBM (0x20002ebc)                                                     */
/*      SPRC0 (0x20002ebc)                                                      */
/*      SPRMCC (0x20002ebc)                                                     */
/*      SPRUCC (0x20002ebc)                                                     */
/* Register default value on SPRA0: 0x10050005                                  */
/* Register default value on SPRB0: 0x10050005                                  */
/* Register default value on SPRHBM: 0x10050005                                 */
/* Register default value on SPRC0: 0x10050005                                  */
/* Register default value on SPRMCC: 0x10050005                                 */
/* Register default value on SPRUCC: 0x10050005                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_PAT_ERR_BUF0
*/


#define DFX_LCE_G1_PAT_ERR_BUF0_SB_FBLP_REG 0x2C022EBC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 csr_inject_n_err : 16;

                            /* Bits[15:0], Access Type=RW/P, default=0x00000005*/

                            /* Introduce N errors by User */
    UINT32 csr_isi_n_count : 8;

                            /* Bits[23:16], Access Type=RW/P, default=0x00000005*/

                            /* No of ISI patterns to be recieved in Train Phase */
    UINT32 csr_load_n_seeds : 8;

                            /* Bits[31:24], Access Type=RW/P, default=0x00000010*/

                            /* No of seds to load for RXPRBS lock */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_PAT_ERR_BUF0_SB_FBLP_STRUCT;

/* DFX_LCE_G1_PAT_ERR_BUF1_SB_FBLP_REG supported on:                            */
/*      SPRA0 (0x20002ec0)                                                      */
/*      SPRB0 (0x20002ec0)                                                      */
/*      SPRHBM (0x20002ec0)                                                     */
/*      SPRC0 (0x20002ec0)                                                      */
/*      SPRMCC (0x20002ec0)                                                     */
/*      SPRUCC (0x20002ec0)                                                     */
/* Register default value on SPRA0: 0x10050005                                  */
/* Register default value on SPRB0: 0x10050005                                  */
/* Register default value on SPRHBM: 0x10050005                                 */
/* Register default value on SPRC0: 0x10050005                                  */
/* Register default value on SPRMCC: 0x10050005                                 */
/* Register default value on SPRUCC: 0x10050005                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_PAT_ERR_BUF1
*/


#define DFX_LCE_G1_PAT_ERR_BUF1_SB_FBLP_REG 0x2C022EC0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 csr_inject_n_err : 16;

                            /* Bits[15:0], Access Type=RW/P, default=0x00000005*/

                            /* Introduce N errors by User */
    UINT32 csr_isi_n_count : 8;

                            /* Bits[23:16], Access Type=RW/P, default=0x00000005*/

                            /* No of ISI patterns to be recieved in Train Phase */
    UINT32 csr_load_n_seeds : 8;

                            /* Bits[31:24], Access Type=RW/P, default=0x00000010*/

                            /* No of seds to load for RXPRBS lock */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_PAT_ERR_BUF1_SB_FBLP_STRUCT;

/* DFX_LCE_G1_PAT_ERR_BUF2_SB_FBLP_REG supported on:                            */
/*      SPRA0 (0x20002ec4)                                                      */
/*      SPRB0 (0x20002ec4)                                                      */
/*      SPRHBM (0x20002ec4)                                                     */
/*      SPRC0 (0x20002ec4)                                                      */
/*      SPRMCC (0x20002ec4)                                                     */
/*      SPRUCC (0x20002ec4)                                                     */
/* Register default value on SPRA0: 0x10050005                                  */
/* Register default value on SPRB0: 0x10050005                                  */
/* Register default value on SPRHBM: 0x10050005                                 */
/* Register default value on SPRC0: 0x10050005                                  */
/* Register default value on SPRMCC: 0x10050005                                 */
/* Register default value on SPRUCC: 0x10050005                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_PAT_ERR_BUF2
*/


#define DFX_LCE_G1_PAT_ERR_BUF2_SB_FBLP_REG 0x2C022EC4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 csr_inject_n_err : 16;

                            /* Bits[15:0], Access Type=RW/P, default=0x00000005*/

                            /* Introduce N errors by User */
    UINT32 csr_isi_n_count : 8;

                            /* Bits[23:16], Access Type=RW/P, default=0x00000005*/

                            /* No of ISI patterns to be recieved in Train Phase */
    UINT32 csr_load_n_seeds : 8;

                            /* Bits[31:24], Access Type=RW/P, default=0x00000010*/

                            /* No of seds to load for RXPRBS lock */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_PAT_ERR_BUF2_SB_FBLP_STRUCT;

/* DFX_LCE_G1_PAT_ERR_BUF3_SB_FBLP_REG supported on:                            */
/*      SPRA0 (0x20002ec8)                                                      */
/*      SPRB0 (0x20002ec8)                                                      */
/*      SPRHBM (0x20002ec8)                                                     */
/*      SPRC0 (0x20002ec8)                                                      */
/*      SPRMCC (0x20002ec8)                                                     */
/*      SPRUCC (0x20002ec8)                                                     */
/* Register default value on SPRA0: 0x10050005                                  */
/* Register default value on SPRB0: 0x10050005                                  */
/* Register default value on SPRHBM: 0x10050005                                 */
/* Register default value on SPRC0: 0x10050005                                  */
/* Register default value on SPRMCC: 0x10050005                                 */
/* Register default value on SPRUCC: 0x10050005                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_PAT_ERR_BUF3
*/


#define DFX_LCE_G1_PAT_ERR_BUF3_SB_FBLP_REG 0x2C022EC8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 csr_inject_n_err : 16;

                            /* Bits[15:0], Access Type=RW/P, default=0x00000005*/

                            /* Introduce N errors by User */
    UINT32 csr_isi_n_count : 8;

                            /* Bits[23:16], Access Type=RW/P, default=0x00000005*/

                            /* No of ISI patterns to be recieved in Train Phase */
    UINT32 csr_load_n_seeds : 8;

                            /* Bits[31:24], Access Type=RW/P, default=0x00000010*/

                            /* No of seds to load for RXPRBS lock */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_PAT_ERR_BUF3_SB_FBLP_STRUCT;

/* DFX_LCE_G1_PAT_SOS_BUF0_SB_FBLP_REG supported on:                            */
/*      SPRA0 (0x20002ecc)                                                      */
/*      SPRB0 (0x20002ecc)                                                      */
/*      SPRHBM (0x20002ecc)                                                     */
/*      SPRC0 (0x20002ecc)                                                      */
/*      SPRMCC (0x20002ecc)                                                     */
/*      SPRUCC (0x20002ecc)                                                     */
/* Register default value on SPRA0: 0xF0FC0100                                  */
/* Register default value on SPRB0: 0xF0FC0100                                  */
/* Register default value on SPRHBM: 0xF0FC0100                                 */
/* Register default value on SPRC0: 0xF0FC0100                                  */
/* Register default value on SPRMCC: 0xF0FC0100                                 */
/* Register default value on SPRUCC: 0xF0FC0100                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_PAT_SOS_BUF0
*/


#define DFX_LCE_G1_PAT_SOS_BUF0_SB_FBLP_REG 0x2C022ECC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 sos_interval : 16;

                            /* Bits[15:0], Access Type=RW/P, default=0x00000100*/

                            /* SOS interval in pclk */
    UINT32 patbuf_mode_per_lane : 4;

                            /* Bits[19:16], Access Type=RW/P, default=0x0000000C*/

                            /* Pat buf mode per lane (1-> PATBUF, 0->PRBS) */
    UINT32 mode_8b_perlane : 4;

                            /* Bits[23:20], Access Type=RW/P, default=0x0000000F*/

                            /* 8b mode signal per lane */
    UINT32 lce_start_options : 4;

                            /* Bits[27:24], Access Type=RW/P, default=0x00000000*/

                            /* LCE start options */
    UINT32 enable_sos_mode_perlane : 4;

                            /* Bits[31:28], Access Type=RW/P, default=0x0000000F*/

                            /* Enable SOS insertion */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_PAT_SOS_BUF0_SB_FBLP_STRUCT;

/* DFX_LCE_G1_PAT_SOS_BUF1_SB_FBLP_REG supported on:                            */
/*      SPRA0 (0x20002ed0)                                                      */
/*      SPRB0 (0x20002ed0)                                                      */
/*      SPRHBM (0x20002ed0)                                                     */
/*      SPRC0 (0x20002ed0)                                                      */
/*      SPRMCC (0x20002ed0)                                                     */
/*      SPRUCC (0x20002ed0)                                                     */
/* Register default value on SPRA0: 0xF0FC0100                                  */
/* Register default value on SPRB0: 0xF0FC0100                                  */
/* Register default value on SPRHBM: 0xF0FC0100                                 */
/* Register default value on SPRC0: 0xF0FC0100                                  */
/* Register default value on SPRMCC: 0xF0FC0100                                 */
/* Register default value on SPRUCC: 0xF0FC0100                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_PAT_SOS_BUF1
*/


#define DFX_LCE_G1_PAT_SOS_BUF1_SB_FBLP_REG 0x2C022ED0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 sos_interval : 16;

                            /* Bits[15:0], Access Type=RW/P, default=0x00000100*/

                            /* SOS interval in pclk */
    UINT32 patbuf_mode_per_lane : 4;

                            /* Bits[19:16], Access Type=RW/P, default=0x0000000C*/

                            /* Pat buf mode per lane (1-> PATBUF, 0->PRBS) */
    UINT32 mode_8b_perlane : 4;

                            /* Bits[23:20], Access Type=RW/P, default=0x0000000F*/

                            /* 8b mode signal per lane */
    UINT32 lce_start_options : 4;

                            /* Bits[27:24], Access Type=RW/P, default=0x00000000*/

                            /* LCE start options */
    UINT32 enable_sos_mode_perlane : 4;

                            /* Bits[31:28], Access Type=RW/P, default=0x0000000F*/

                            /* Enable SOS insertion */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_PAT_SOS_BUF1_SB_FBLP_STRUCT;

/* DFX_LCE_G1_PAT_SOS_BUF2_SB_FBLP_REG supported on:                            */
/*      SPRA0 (0x20002ed4)                                                      */
/*      SPRB0 (0x20002ed4)                                                      */
/*      SPRHBM (0x20002ed4)                                                     */
/*      SPRC0 (0x20002ed4)                                                      */
/*      SPRMCC (0x20002ed4)                                                     */
/*      SPRUCC (0x20002ed4)                                                     */
/* Register default value on SPRA0: 0xF0FC0100                                  */
/* Register default value on SPRB0: 0xF0FC0100                                  */
/* Register default value on SPRHBM: 0xF0FC0100                                 */
/* Register default value on SPRC0: 0xF0FC0100                                  */
/* Register default value on SPRMCC: 0xF0FC0100                                 */
/* Register default value on SPRUCC: 0xF0FC0100                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_PAT_SOS_BUF2
*/


#define DFX_LCE_G1_PAT_SOS_BUF2_SB_FBLP_REG 0x2C022ED4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 sos_interval : 16;

                            /* Bits[15:0], Access Type=RW/P, default=0x00000100*/

                            /* SOS interval in pclk */
    UINT32 patbuf_mode_per_lane : 4;

                            /* Bits[19:16], Access Type=RW/P, default=0x0000000C*/

                            /* Pat buf mode per lane (1-> PATBUF, 0->PRBS) */
    UINT32 mode_8b_perlane : 4;

                            /* Bits[23:20], Access Type=RW/P, default=0x0000000F*/

                            /* 8b mode signal per lane */
    UINT32 lce_start_options : 4;

                            /* Bits[27:24], Access Type=RW/P, default=0x00000000*/

                            /* LCE start options */
    UINT32 enable_sos_mode_perlane : 4;

                            /* Bits[31:28], Access Type=RW/P, default=0x0000000F*/

                            /* Enable SOS insertion */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_PAT_SOS_BUF2_SB_FBLP_STRUCT;

/* DFX_LCE_G1_PAT_SOS_BUF3_SB_FBLP_REG supported on:                            */
/*      SPRA0 (0x20002ed8)                                                      */
/*      SPRB0 (0x20002ed8)                                                      */
/*      SPRHBM (0x20002ed8)                                                     */
/*      SPRC0 (0x20002ed8)                                                      */
/*      SPRMCC (0x20002ed8)                                                     */
/*      SPRUCC (0x20002ed8)                                                     */
/* Register default value on SPRA0: 0xF0FC0100                                  */
/* Register default value on SPRB0: 0xF0FC0100                                  */
/* Register default value on SPRHBM: 0xF0FC0100                                 */
/* Register default value on SPRC0: 0xF0FC0100                                  */
/* Register default value on SPRMCC: 0xF0FC0100                                 */
/* Register default value on SPRUCC: 0xF0FC0100                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_PAT_SOS_BUF3
*/


#define DFX_LCE_G1_PAT_SOS_BUF3_SB_FBLP_REG 0x2C022ED8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 sos_interval : 16;

                            /* Bits[15:0], Access Type=RW/P, default=0x00000100*/

                            /* SOS interval in pclk */
    UINT32 patbuf_mode_per_lane : 4;

                            /* Bits[19:16], Access Type=RW/P, default=0x0000000C*/

                            /* Pat buf mode per lane (1-> PATBUF, 0->PRBS) */
    UINT32 mode_8b_perlane : 4;

                            /* Bits[23:20], Access Type=RW/P, default=0x0000000F*/

                            /* 8b mode signal per lane */
    UINT32 lce_start_options : 4;

                            /* Bits[27:24], Access Type=RW/P, default=0x00000000*/

                            /* LCE start options */
    UINT32 enable_sos_mode_perlane : 4;

                            /* Bits[31:28], Access Type=RW/P, default=0x0000000F*/

                            /* Enable SOS insertion */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_PAT_SOS_BUF3_SB_FBLP_STRUCT;

/* DFX_LCE_G1_PAT_SOS_ERR_BUF0_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x20002edc)                                                      */
/*      SPRB0 (0x20002edc)                                                      */
/*      SPRHBM (0x20002edc)                                                     */
/*      SPRC0 (0x20002edc)                                                      */
/*      SPRMCC (0x20002edc)                                                     */
/*      SPRUCC (0x20002edc)                                                     */
/* Register default value on SPRA0: 0x0000009F                                  */
/* Register default value on SPRB0: 0x0000009F                                  */
/* Register default value on SPRHBM: 0x0000009F                                 */
/* Register default value on SPRC0: 0x0000009F                                  */
/* Register default value on SPRMCC: 0x0000009F                                 */
/* Register default value on SPRUCC: 0x0000009F                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_PAT_SOS_ERR_BUF0
*/


#define DFX_LCE_G1_PAT_SOS_ERR_BUF0_SB_FBLP_REG 0x2C022EDC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 send_intial_sos_per_lane : 4;

                            /* Bits[3:0], Access Type=RW/P, default=0x0000000F*/

                            /* Send initial SOS per lane */
    UINT32 robust_train_en_per_lane : 4;

                            /* Bits[7:4], Access Type=RW/P, default=0x00000009*/

                            /* Enable Robust per lane */
    UINT32 stop_on_err_per_lane : 4;

                            /* Bits[11:8], Access Type=RW/P, default=0x00000000*/

                            /* Auto stop on recieving max error count */
    UINT32 csr_en_err_inj_per_lane : 4;

                            /* Bits[15:12], Access Type=RW/P, default=0x00000000*/

                            /* Enable error injection per lane */
    UINT32 csr_poly_sel_lane_msb : 4;

                            /* Bits[19:16], Access Type=RW/P, default=0x00000000*/

                            /* Polynomial select (lceg3) MSB bits */
    UINT32 csr_bypass_sync_phase : 4;

                            /* Bits[23:20], Access Type=RW/P, default=0x00000000*/

                            /*
                               Skip the synchronization phase between Tx and Rx
                               LFSR
                            */
    UINT32 buf3_field1 : 4;

                            /* Bits[27:24], Access Type=RW/P, default=0x00000000*/

                            /* BUF3_FIELD1 */
    UINT32 buf3_field2 : 4;

                            /* Bits[31:28], Access Type=RW/P, default=0x00000000*/

                            /* BUF3_FIELD2 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_PAT_SOS_ERR_BUF0_SB_FBLP_STRUCT;

/* DFX_LCE_G1_PAT_SOS_ERR_BUF1_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x20002ee0)                                                      */
/*      SPRB0 (0x20002ee0)                                                      */
/*      SPRHBM (0x20002ee0)                                                     */
/*      SPRC0 (0x20002ee0)                                                      */
/*      SPRMCC (0x20002ee0)                                                     */
/*      SPRUCC (0x20002ee0)                                                     */
/* Register default value on SPRA0: 0x0000009F                                  */
/* Register default value on SPRB0: 0x0000009F                                  */
/* Register default value on SPRHBM: 0x0000009F                                 */
/* Register default value on SPRC0: 0x0000009F                                  */
/* Register default value on SPRMCC: 0x0000009F                                 */
/* Register default value on SPRUCC: 0x0000009F                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_PAT_SOS_ERR_BUF1
*/


#define DFX_LCE_G1_PAT_SOS_ERR_BUF1_SB_FBLP_REG 0x2C022EE0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 send_intial_sos_per_lane : 4;

                            /* Bits[3:0], Access Type=RW/P, default=0x0000000F*/

                            /* Send initial SOS per lane */
    UINT32 robust_train_en_per_lane : 4;

                            /* Bits[7:4], Access Type=RW/P, default=0x00000009*/

                            /* Enable Robust per lane */
    UINT32 stop_on_err_per_lane : 4;

                            /* Bits[11:8], Access Type=RW/P, default=0x00000000*/

                            /* Auto stop on recieving max error count */
    UINT32 csr_en_err_inj_per_lane : 4;

                            /* Bits[15:12], Access Type=RW/P, default=0x00000000*/

                            /* Enable error injection per lane */
    UINT32 csr_poly_sel_lane_msb : 4;

                            /* Bits[19:16], Access Type=RW/P, default=0x00000000*/

                            /* Polynomial select (lceg3) MSB bits */
    UINT32 csr_bypass_sync_phase : 4;

                            /* Bits[23:20], Access Type=RW/P, default=0x00000000*/

                            /*
                               Skip the synchronization phase between Tx and Rx
                               LFSR
                            */
    UINT32 buf3_field1 : 4;

                            /* Bits[27:24], Access Type=RW/P, default=0x00000000*/

                            /* BUF3_FIELD1 */
    UINT32 buf3_field2 : 4;

                            /* Bits[31:28], Access Type=RW/P, default=0x00000000*/

                            /* BUF3_FIELD2 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_PAT_SOS_ERR_BUF1_SB_FBLP_STRUCT;

/* DFX_LCE_G1_PAT_SOS_ERR_BUF2_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x20002ee4)                                                      */
/*      SPRB0 (0x20002ee4)                                                      */
/*      SPRHBM (0x20002ee4)                                                     */
/*      SPRC0 (0x20002ee4)                                                      */
/*      SPRMCC (0x20002ee4)                                                     */
/*      SPRUCC (0x20002ee4)                                                     */
/* Register default value on SPRA0: 0x0000009F                                  */
/* Register default value on SPRB0: 0x0000009F                                  */
/* Register default value on SPRHBM: 0x0000009F                                 */
/* Register default value on SPRC0: 0x0000009F                                  */
/* Register default value on SPRMCC: 0x0000009F                                 */
/* Register default value on SPRUCC: 0x0000009F                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_PAT_SOS_ERR_BUF2
*/


#define DFX_LCE_G1_PAT_SOS_ERR_BUF2_SB_FBLP_REG 0x2C022EE4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 send_intial_sos_per_lane : 4;

                            /* Bits[3:0], Access Type=RW/P, default=0x0000000F*/

                            /* Send initial SOS per lane */
    UINT32 robust_train_en_per_lane : 4;

                            /* Bits[7:4], Access Type=RW/P, default=0x00000009*/

                            /* Enable Robust per lane */
    UINT32 stop_on_err_per_lane : 4;

                            /* Bits[11:8], Access Type=RW/P, default=0x00000000*/

                            /* Auto stop on recieving max error count */
    UINT32 csr_en_err_inj_per_lane : 4;

                            /* Bits[15:12], Access Type=RW/P, default=0x00000000*/

                            /* Enable error injection per lane */
    UINT32 csr_poly_sel_lane_msb : 4;

                            /* Bits[19:16], Access Type=RW/P, default=0x00000000*/

                            /* Polynomial select (lceg3) MSB bits */
    UINT32 csr_bypass_sync_phase : 4;

                            /* Bits[23:20], Access Type=RW/P, default=0x00000000*/

                            /*
                               Skip the synchronization phase between Tx and Rx
                               LFSR
                            */
    UINT32 buf3_field1 : 4;

                            /* Bits[27:24], Access Type=RW/P, default=0x00000000*/

                            /* BUF3_FIELD1 */
    UINT32 buf3_field2 : 4;

                            /* Bits[31:28], Access Type=RW/P, default=0x00000000*/

                            /* BUF3_FIELD2 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_PAT_SOS_ERR_BUF2_SB_FBLP_STRUCT;

/* DFX_LCE_G1_PAT_SOS_ERR_BUF3_SB_FBLP_REG supported on:                        */
/*      SPRA0 (0x20002ee8)                                                      */
/*      SPRB0 (0x20002ee8)                                                      */
/*      SPRHBM (0x20002ee8)                                                     */
/*      SPRC0 (0x20002ee8)                                                      */
/*      SPRMCC (0x20002ee8)                                                     */
/*      SPRUCC (0x20002ee8)                                                     */
/* Register default value on SPRA0: 0x0000009F                                  */
/* Register default value on SPRB0: 0x0000009F                                  */
/* Register default value on SPRHBM: 0x0000009F                                 */
/* Register default value on SPRC0: 0x0000009F                                  */
/* Register default value on SPRMCC: 0x0000009F                                 */
/* Register default value on SPRUCC: 0x0000009F                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_PAT_SOS_ERR_BUF3
*/


#define DFX_LCE_G1_PAT_SOS_ERR_BUF3_SB_FBLP_REG 0x2C022EE8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 send_intial_sos_per_lane : 4;

                            /* Bits[3:0], Access Type=RW/P, default=0x0000000F*/

                            /* Send initial SOS per lane */
    UINT32 robust_train_en_per_lane : 4;

                            /* Bits[7:4], Access Type=RW/P, default=0x00000009*/

                            /* Enable Robust per lane */
    UINT32 stop_on_err_per_lane : 4;

                            /* Bits[11:8], Access Type=RW/P, default=0x00000000*/

                            /* Auto stop on recieving max error count */
    UINT32 csr_en_err_inj_per_lane : 4;

                            /* Bits[15:12], Access Type=RW/P, default=0x00000000*/

                            /* Enable error injection per lane */
    UINT32 csr_poly_sel_lane_msb : 4;

                            /* Bits[19:16], Access Type=RW/P, default=0x00000000*/

                            /* Polynomial select (lceg3) MSB bits */
    UINT32 csr_bypass_sync_phase : 4;

                            /* Bits[23:20], Access Type=RW/P, default=0x00000000*/

                            /*
                               Skip the synchronization phase between Tx and Rx
                               LFSR
                            */
    UINT32 buf3_field1 : 4;

                            /* Bits[27:24], Access Type=RW/P, default=0x00000000*/

                            /* BUF3_FIELD1 */
    UINT32 buf3_field2 : 4;

                            /* Bits[31:28], Access Type=RW/P, default=0x00000000*/

                            /* BUF3_FIELD2 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_PAT_SOS_ERR_BUF3_SB_FBLP_STRUCT;

/* DFX_PRBS_SEED_0_SB_FBLP_REG supported on:                                    */
/*      SPRA0 (0x20002eec)                                                      */
/*      SPRB0 (0x20002eec)                                                      */
/*      SPRHBM (0x20002eec)                                                     */
/*      SPRC0 (0x20002eec)                                                      */
/*      SPRMCC (0x20002eec)                                                     */
/*      SPRUCC (0x20002eec)                                                     */
/* Register default value on SPRA0: 0x00001000                                  */
/* Register default value on SPRB0: 0x00001000                                  */
/* Register default value on SPRHBM: 0x00001000                                 */
/* Register default value on SPRC0: 0x00001000                                  */
/* Register default value on SPRMCC: 0x00001000                                 */
/* Register default value on SPRUCC: 0x00001000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_PRBS_SEED_0
*/


#define DFX_PRBS_SEED_0_SB_FBLP_REG 0x2C022EEC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 csr_inject_err_at_interval_32b : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x00001000*/

                            /*
                               32b counter for clks cnt between 2 consequtive
                               errors in error injection feature
                            */

  } Bits;
  UINT32 Data;

} DFX_PRBS_SEED_0_SB_FBLP_STRUCT;

/* DFX_PRBS_SEED_1_SB_FBLP_REG supported on:                                    */
/*      SPRA0 (0x20002ef0)                                                      */
/*      SPRB0 (0x20002ef0)                                                      */
/*      SPRHBM (0x20002ef0)                                                     */
/*      SPRC0 (0x20002ef0)                                                      */
/*      SPRMCC (0x20002ef0)                                                     */
/*      SPRUCC (0x20002ef0)                                                     */
/* Register default value on SPRA0: 0x00001000                                  */
/* Register default value on SPRB0: 0x00001000                                  */
/* Register default value on SPRHBM: 0x00001000                                 */
/* Register default value on SPRC0: 0x00001000                                  */
/* Register default value on SPRMCC: 0x00001000                                 */
/* Register default value on SPRUCC: 0x00001000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_PRBS_SEED_1
*/


#define DFX_PRBS_SEED_1_SB_FBLP_REG 0x2C022EF0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 csr_inject_err_at_interval_32b : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x00001000*/

                            /*
                               32b counter for clks cnt between 2 consequtive
                               errors in error injection feature
                            */

  } Bits;
  UINT32 Data;

} DFX_PRBS_SEED_1_SB_FBLP_STRUCT;

/* DFX_PRBS_SEED_2_SB_FBLP_REG supported on:                                    */
/*      SPRA0 (0x20002ef4)                                                      */
/*      SPRB0 (0x20002ef4)                                                      */
/*      SPRHBM (0x20002ef4)                                                     */
/*      SPRC0 (0x20002ef4)                                                      */
/*      SPRMCC (0x20002ef4)                                                     */
/*      SPRUCC (0x20002ef4)                                                     */
/* Register default value on SPRA0: 0x00001000                                  */
/* Register default value on SPRB0: 0x00001000                                  */
/* Register default value on SPRHBM: 0x00001000                                 */
/* Register default value on SPRC0: 0x00001000                                  */
/* Register default value on SPRMCC: 0x00001000                                 */
/* Register default value on SPRUCC: 0x00001000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_PRBS_SEED_2
*/


#define DFX_PRBS_SEED_2_SB_FBLP_REG 0x2C022EF4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 csr_inject_err_at_interval_32b : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x00001000*/

                            /*
                               32b counter for clks cnt between 2 consequtive
                               errors in error injection feature
                            */

  } Bits;
  UINT32 Data;

} DFX_PRBS_SEED_2_SB_FBLP_STRUCT;

/* DFX_PRBS_SEED_3_SB_FBLP_REG supported on:                                    */
/*      SPRA0 (0x20002ef8)                                                      */
/*      SPRB0 (0x20002ef8)                                                      */
/*      SPRHBM (0x20002ef8)                                                     */
/*      SPRC0 (0x20002ef8)                                                      */
/*      SPRMCC (0x20002ef8)                                                     */
/*      SPRUCC (0x20002ef8)                                                     */
/* Register default value on SPRA0: 0x00001000                                  */
/* Register default value on SPRB0: 0x00001000                                  */
/* Register default value on SPRHBM: 0x00001000                                 */
/* Register default value on SPRC0: 0x00001000                                  */
/* Register default value on SPRMCC: 0x00001000                                 */
/* Register default value on SPRUCC: 0x00001000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_PRBS_SEED_3
*/


#define DFX_PRBS_SEED_3_SB_FBLP_REG 0x2C022EF8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 csr_inject_err_at_interval_32b : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x00001000*/

                            /*
                               32b counter for clks cnt between 2 consequtive
                               errors in error injection feature
                            */

  } Bits;
  UINT32 Data;

} DFX_PRBS_SEED_3_SB_FBLP_STRUCT;

/* DFX_PRBS_SEED_BIT_0_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x2efc)                                                          */
/*      SPRB0 (0x2efc)                                                          */
/*      SPRHBM (0x2efc)                                                         */
/*      SPRC0 (0x2efc)                                                          */
/*      SPRMCC (0x2efc)                                                         */
/*      SPRUCC (0x2efc)                                                         */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_PRBS_SEED_BIT_0
*/


#define DFX_PRBS_SEED_BIT_0_SB_FBLP_REG 0x2C002EFC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT8 seed1_field0 : 4;

                            /* Bits[3:0], Access Type=RW/P, default=0x00000000*/

                            /* SEED1_FIELD0 */
    UINT8 seed1_bit4 : 1;

                            /* Bits[4:4], Access Type=RW/P, default=0x00000000*/

                            /* SEED1_BIT4 */
    UINT8 seed1_bit5 : 1;

                            /* Bits[5:5], Access Type=RW/P, default=0x00000000*/

                            /* SEED1_BIT5 */
    UINT8 seed1_bit6 : 1;

                            /* Bits[6:6], Access Type=RW/P, default=0x00000000*/

                            /* SEED1_BIT6 */
    UINT8 seed1_bit7 : 1;

                            /* Bits[7:7], Access Type=RW/P, default=0x00000000*/

                            /* SEED1_BIT7 */

  } Bits;
  UINT8 Data;

} DFX_PRBS_SEED_BIT_0_SB_FBLP_STRUCT;

/* DFX_PRBS_SEED_BIT_1_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x2efd)                                                          */
/*      SPRB0 (0x2efd)                                                          */
/*      SPRHBM (0x2efd)                                                         */
/*      SPRC0 (0x2efd)                                                          */
/*      SPRMCC (0x2efd)                                                         */
/*      SPRUCC (0x2efd)                                                         */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_PRBS_SEED_BIT_1
*/


#define DFX_PRBS_SEED_BIT_1_SB_FBLP_REG 0x2C002EFD

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT8 seed1_field0 : 4;

                            /* Bits[3:0], Access Type=RW/P, default=0x00000000*/

                            /* SEED1_FIELD0 */
    UINT8 seed1_bit4 : 1;

                            /* Bits[4:4], Access Type=RW/P, default=0x00000000*/

                            /* SEED1_BIT4 */
    UINT8 seed1_bit5 : 1;

                            /* Bits[5:5], Access Type=RW/P, default=0x00000000*/

                            /* SEED1_BIT5 */
    UINT8 seed1_bit6 : 1;

                            /* Bits[6:6], Access Type=RW/P, default=0x00000000*/

                            /* SEED1_BIT6 */
    UINT8 seed1_bit7 : 1;

                            /* Bits[7:7], Access Type=RW/P, default=0x00000000*/

                            /* SEED1_BIT7 */

  } Bits;
  UINT8 Data;

} DFX_PRBS_SEED_BIT_1_SB_FBLP_STRUCT;

/* DFX_PRBS_SEED_BIT_2_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x2efe)                                                          */
/*      SPRB0 (0x2efe)                                                          */
/*      SPRHBM (0x2efe)                                                         */
/*      SPRC0 (0x2efe)                                                          */
/*      SPRMCC (0x2efe)                                                         */
/*      SPRUCC (0x2efe)                                                         */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_PRBS_SEED_BIT_2
*/


#define DFX_PRBS_SEED_BIT_2_SB_FBLP_REG 0x2C002EFE

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT8 seed1_field0 : 4;

                            /* Bits[3:0], Access Type=RW/P, default=0x00000000*/

                            /* SEED1_FIELD0 */
    UINT8 seed1_bit4 : 1;

                            /* Bits[4:4], Access Type=RW/P, default=0x00000000*/

                            /* SEED1_BIT4 */
    UINT8 seed1_bit5 : 1;

                            /* Bits[5:5], Access Type=RW/P, default=0x00000000*/

                            /* SEED1_BIT5 */
    UINT8 seed1_bit6 : 1;

                            /* Bits[6:6], Access Type=RW/P, default=0x00000000*/

                            /* SEED1_BIT6 */
    UINT8 seed1_bit7 : 1;

                            /* Bits[7:7], Access Type=RW/P, default=0x00000000*/

                            /* SEED1_BIT7 */

  } Bits;
  UINT8 Data;

} DFX_PRBS_SEED_BIT_2_SB_FBLP_STRUCT;

/* DFX_PRBS_SEED_BIT_3_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x2eff)                                                          */
/*      SPRB0 (0x2eff)                                                          */
/*      SPRHBM (0x2eff)                                                         */
/*      SPRC0 (0x2eff)                                                          */
/*      SPRMCC (0x2eff)                                                         */
/*      SPRUCC (0x2eff)                                                         */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_PRBS_SEED_BIT_3
*/


#define DFX_PRBS_SEED_BIT_3_SB_FBLP_REG 0x2C002EFF

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT8 seed1_field0 : 4;

                            /* Bits[3:0], Access Type=RW/P, default=0x00000000*/

                            /* SEED1_FIELD0 */
    UINT8 seed1_bit4 : 1;

                            /* Bits[4:4], Access Type=RW/P, default=0x00000000*/

                            /* SEED1_BIT4 */
    UINT8 seed1_bit5 : 1;

                            /* Bits[5:5], Access Type=RW/P, default=0x00000000*/

                            /* SEED1_BIT5 */
    UINT8 seed1_bit6 : 1;

                            /* Bits[6:6], Access Type=RW/P, default=0x00000000*/

                            /* SEED1_BIT6 */
    UINT8 seed1_bit7 : 1;

                            /* Bits[7:7], Access Type=RW/P, default=0x00000000*/

                            /* SEED1_BIT7 */

  } Bits;
  UINT8 Data;

} DFX_PRBS_SEED_BIT_3_SB_FBLP_STRUCT;

/* DFX_LCE_G1_TRAINING_EA_0_SB_FBLP_REG supported on:                           */
/*      SPRA0 (0x20002f00)                                                      */
/*      SPRB0 (0x20002f00)                                                      */
/*      SPRHBM (0x20002f00)                                                     */
/*      SPRC0 (0x20002f00)                                                      */
/*      SPRMCC (0x20002f00)                                                     */
/*      SPRUCC (0x20002f00)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_TRAINING_EA_0
*/


#define DFX_LCE_G1_TRAINING_EA_0_SB_FBLP_REG 0x2C022F00

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg1_max_err_cnt : 16;

                            /* Bits[15:0], Access Type=RW/P, default=0x00000000*/

                            /* max err cnt before LCE stops checking */
    UINT32 lceg1_stop_on_max_err_per_lane : 4;

                            /* Bits[19:16], Access Type=RW/P, default=0x00000000*/

                            /* Auto Stop on reaching max error cnt (per lane) */
    UINT32 lceg1_reset_err_cnt : 1;

                            /* Bits[20:20], Access Type=RW/P, default=0x00000000*/

                            /* reset error cnt (per port) */
    UINT32 prbs_8b_mode_stride_length : 1;

                            /* Bits[21:21], Access Type=RW/P, default=0x00000000*/

                            /*
                               In 8b mode, set to 1 to make the stride length 8
                               for 8b mode as well
                            */
    UINT32 sos_cnt_wrt_tx_data_valid : 1;

                            /* Bits[22:22], Access Type=RW/P, default=0x00000000*/

                            /* sos cnt moves with every tx data valid */
    UINT32 lceg1_start_port : 1;

                            /* Bits[23:23], Access Type=RW/P, default=0x00000000*/

                            /* lceg1 start 4 lanes at a time */
    UINT32 lceg1_train0_field0 : 4;

                            /* Bits[27:24], Access Type=RW/P, default=0x00000000*/

                            /* train field 0 */
    UINT32 lceg1_train0_field1 : 4;

                            /* Bits[31:28], Access Type=RW/P, default=0x00000000*/

                            /* train field 1 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_TRAINING_EA_0_SB_FBLP_STRUCT;

/* DFX_LCE_G1_TRAINING_EA_1_SB_FBLP_REG supported on:                           */
/*      SPRA0 (0x20002f04)                                                      */
/*      SPRB0 (0x20002f04)                                                      */
/*      SPRHBM (0x20002f04)                                                     */
/*      SPRC0 (0x20002f04)                                                      */
/*      SPRMCC (0x20002f04)                                                     */
/*      SPRUCC (0x20002f04)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_TRAINING_EA_1
*/


#define DFX_LCE_G1_TRAINING_EA_1_SB_FBLP_REG 0x2C022F04

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg1_max_err_cnt : 16;

                            /* Bits[15:0], Access Type=RW/P, default=0x00000000*/

                            /* max err cnt before LCE stops checking */
    UINT32 lceg1_stop_on_max_err_per_lane : 4;

                            /* Bits[19:16], Access Type=RW/P, default=0x00000000*/

                            /* Auto Stop on reaching max error cnt (per lane) */
    UINT32 lceg1_reset_err_cnt : 1;

                            /* Bits[20:20], Access Type=RW/P, default=0x00000000*/

                            /* reset error cnt (per port) */
    UINT32 prbs_8b_mode_stride_length : 1;

                            /* Bits[21:21], Access Type=RW/P, default=0x00000000*/

                            /*
                               In 8b mode, set to 1 to make the stride length 8
                               for 8b mode as well
                            */
    UINT32 sos_cnt_wrt_tx_data_valid : 1;

                            /* Bits[22:22], Access Type=RW/P, default=0x00000000*/

                            /* sos cnt moves with every tx data valid */
    UINT32 lceg1_start_port : 1;

                            /* Bits[23:23], Access Type=RW/P, default=0x00000000*/

                            /* lceg1 start 4 lanes at a time */
    UINT32 lceg1_train0_field0 : 4;

                            /* Bits[27:24], Access Type=RW/P, default=0x00000000*/

                            /* train field 0 */
    UINT32 lceg1_train0_field1 : 4;

                            /* Bits[31:28], Access Type=RW/P, default=0x00000000*/

                            /* train field 1 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_TRAINING_EA_1_SB_FBLP_STRUCT;

/* DFX_LCE_G1_TRAINING_EA_2_SB_FBLP_REG supported on:                           */
/*      SPRA0 (0x20002f08)                                                      */
/*      SPRB0 (0x20002f08)                                                      */
/*      SPRHBM (0x20002f08)                                                     */
/*      SPRC0 (0x20002f08)                                                      */
/*      SPRMCC (0x20002f08)                                                     */
/*      SPRUCC (0x20002f08)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_TRAINING_EA_2
*/


#define DFX_LCE_G1_TRAINING_EA_2_SB_FBLP_REG 0x2C022F08

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg1_max_err_cnt : 16;

                            /* Bits[15:0], Access Type=RW/P, default=0x00000000*/

                            /* max err cnt before LCE stops checking */
    UINT32 lceg1_stop_on_max_err_per_lane : 4;

                            /* Bits[19:16], Access Type=RW/P, default=0x00000000*/

                            /* Auto Stop on reaching max error cnt (per lane) */
    UINT32 lceg1_reset_err_cnt : 1;

                            /* Bits[20:20], Access Type=RW/P, default=0x00000000*/

                            /* reset error cnt (per port) */
    UINT32 prbs_8b_mode_stride_length : 1;

                            /* Bits[21:21], Access Type=RW/P, default=0x00000000*/

                            /*
                               In 8b mode, set to 1 to make the stride length 8
                               for 8b mode as well
                            */
    UINT32 sos_cnt_wrt_tx_data_valid : 1;

                            /* Bits[22:22], Access Type=RW/P, default=0x00000000*/

                            /* sos cnt moves with every tx data valid */
    UINT32 lceg1_start_port : 1;

                            /* Bits[23:23], Access Type=RW/P, default=0x00000000*/

                            /* lceg1 start 4 lanes at a time */
    UINT32 lceg1_train0_field0 : 4;

                            /* Bits[27:24], Access Type=RW/P, default=0x00000000*/

                            /* train field 0 */
    UINT32 lceg1_train0_field1 : 4;

                            /* Bits[31:28], Access Type=RW/P, default=0x00000000*/

                            /* train field 1 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_TRAINING_EA_2_SB_FBLP_STRUCT;

/* DFX_LCE_G1_TRAINING_EA_3_SB_FBLP_REG supported on:                           */
/*      SPRA0 (0x20002f0c)                                                      */
/*      SPRB0 (0x20002f0c)                                                      */
/*      SPRHBM (0x20002f0c)                                                     */
/*      SPRC0 (0x20002f0c)                                                      */
/*      SPRMCC (0x20002f0c)                                                     */
/*      SPRUCC (0x20002f0c)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* DFX_LCE_G1_TRAINING_EA_3
*/


#define DFX_LCE_G1_TRAINING_EA_3_SB_FBLP_REG 0x2C022F0C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg1_max_err_cnt : 16;

                            /* Bits[15:0], Access Type=RW/P, default=0x00000000*/

                            /* max err cnt before LCE stops checking */
    UINT32 lceg1_stop_on_max_err_per_lane : 4;

                            /* Bits[19:16], Access Type=RW/P, default=0x00000000*/

                            /* Auto Stop on reaching max error cnt (per lane) */
    UINT32 lceg1_reset_err_cnt : 1;

                            /* Bits[20:20], Access Type=RW/P, default=0x00000000*/

                            /* reset error cnt (per port) */
    UINT32 prbs_8b_mode_stride_length : 1;

                            /* Bits[21:21], Access Type=RW/P, default=0x00000000*/

                            /*
                               In 8b mode, set to 1 to make the stride length 8
                               for 8b mode as well
                            */
    UINT32 sos_cnt_wrt_tx_data_valid : 1;

                            /* Bits[22:22], Access Type=RW/P, default=0x00000000*/

                            /* sos cnt moves with every tx data valid */
    UINT32 lceg1_start_port : 1;

                            /* Bits[23:23], Access Type=RW/P, default=0x00000000*/

                            /* lceg1 start 4 lanes at a time */
    UINT32 lceg1_train0_field0 : 4;

                            /* Bits[27:24], Access Type=RW/P, default=0x00000000*/

                            /* train field 0 */
    UINT32 lceg1_train0_field1 : 4;

                            /* Bits[31:28], Access Type=RW/P, default=0x00000000*/

                            /* train field 1 */

  } Bits;
  UINT32 Data;

} DFX_LCE_G1_TRAINING_EA_3_SB_FBLP_STRUCT;

/* CR_LCEG3_SEED_PROG_0_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x20002f10)                                                      */
/*      SPRB0 (0x20002f10)                                                      */
/*      SPRHBM (0x20002f10)                                                     */
/*      SPRC0 (0x20002f10)                                                      */
/*      SPRMCC (0x20002f10)                                                     */
/*      SPRUCC (0x20002f10)                                                     */
/* Register default value on SPRA0: 0xF03FFFFF                                  */
/* Register default value on SPRB0: 0xF03FFFFF                                  */
/* Register default value on SPRHBM: 0xF03FFFFF                                 */
/* Register default value on SPRC0: 0xF03FFFFF                                  */
/* Register default value on SPRMCC: 0xF03FFFFF                                 */
/* Register default value on SPRUCC: 0xF03FFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_SEED_PROG_0
*/


#define CR_LCEG3_SEED_PROG_0_SB_FBLP_REG 0x2C022F10

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 csr_tx_prbs_lfsr_seed : 23;

                            /* Bits[22:0], Access Type=RW/P, default=0x003FFFFF*/

                            /* Initial Seed value */
    UINT32 csr_tx_prbs_seed_tag : 9;

                            /* Bits[31:23], Access Type=RW/P, default=0x000001E0*/

                            /* tag Value to Indicate Data is a LFSR Seed */

  } Bits;
  UINT32 Data;

} CR_LCEG3_SEED_PROG_0_SB_FBLP_STRUCT;

/* CR_LCEG3_SEED_PROG_1_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x20002f14)                                                      */
/*      SPRB0 (0x20002f14)                                                      */
/*      SPRHBM (0x20002f14)                                                     */
/*      SPRC0 (0x20002f14)                                                      */
/*      SPRMCC (0x20002f14)                                                     */
/*      SPRUCC (0x20002f14)                                                     */
/* Register default value on SPRA0: 0xF03FFFFF                                  */
/* Register default value on SPRB0: 0xF03FFFFF                                  */
/* Register default value on SPRHBM: 0xF03FFFFF                                 */
/* Register default value on SPRC0: 0xF03FFFFF                                  */
/* Register default value on SPRMCC: 0xF03FFFFF                                 */
/* Register default value on SPRUCC: 0xF03FFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_SEED_PROG_1
*/


#define CR_LCEG3_SEED_PROG_1_SB_FBLP_REG 0x2C022F14

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 csr_tx_prbs_lfsr_seed : 23;

                            /* Bits[22:0], Access Type=RW/P, default=0x003FFFFF*/

                            /* Initial Seed value */
    UINT32 csr_tx_prbs_seed_tag : 9;

                            /* Bits[31:23], Access Type=RW/P, default=0x000001E0*/

                            /* tag Value to Indicate Data is a LFSR Seed */

  } Bits;
  UINT32 Data;

} CR_LCEG3_SEED_PROG_1_SB_FBLP_STRUCT;

/* CR_LCEG3_SEED_PROG_2_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x20002f18)                                                      */
/*      SPRB0 (0x20002f18)                                                      */
/*      SPRHBM (0x20002f18)                                                     */
/*      SPRC0 (0x20002f18)                                                      */
/*      SPRMCC (0x20002f18)                                                     */
/*      SPRUCC (0x20002f18)                                                     */
/* Register default value on SPRA0: 0xF03FFFFF                                  */
/* Register default value on SPRB0: 0xF03FFFFF                                  */
/* Register default value on SPRHBM: 0xF03FFFFF                                 */
/* Register default value on SPRC0: 0xF03FFFFF                                  */
/* Register default value on SPRMCC: 0xF03FFFFF                                 */
/* Register default value on SPRUCC: 0xF03FFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_SEED_PROG_2
*/


#define CR_LCEG3_SEED_PROG_2_SB_FBLP_REG 0x2C022F18

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 csr_tx_prbs_lfsr_seed : 23;

                            /* Bits[22:0], Access Type=RW/P, default=0x003FFFFF*/

                            /* Initial Seed value */
    UINT32 csr_tx_prbs_seed_tag : 9;

                            /* Bits[31:23], Access Type=RW/P, default=0x000001E0*/

                            /* tag Value to Indicate Data is a LFSR Seed */

  } Bits;
  UINT32 Data;

} CR_LCEG3_SEED_PROG_2_SB_FBLP_STRUCT;

/* CR_LCEG3_SEED_PROG_3_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x20002f1c)                                                      */
/*      SPRB0 (0x20002f1c)                                                      */
/*      SPRHBM (0x20002f1c)                                                     */
/*      SPRC0 (0x20002f1c)                                                      */
/*      SPRMCC (0x20002f1c)                                                     */
/*      SPRUCC (0x20002f1c)                                                     */
/* Register default value on SPRA0: 0xF03FFFFF                                  */
/* Register default value on SPRB0: 0xF03FFFFF                                  */
/* Register default value on SPRHBM: 0xF03FFFFF                                 */
/* Register default value on SPRC0: 0xF03FFFFF                                  */
/* Register default value on SPRMCC: 0xF03FFFFF                                 */
/* Register default value on SPRUCC: 0xF03FFFFF                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_SEED_PROG_3
*/


#define CR_LCEG3_SEED_PROG_3_SB_FBLP_REG 0x2C022F1C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 csr_tx_prbs_lfsr_seed : 23;

                            /* Bits[22:0], Access Type=RW/P, default=0x003FFFFF*/

                            /* Initial Seed value */
    UINT32 csr_tx_prbs_seed_tag : 9;

                            /* Bits[31:23], Access Type=RW/P, default=0x000001E0*/

                            /* tag Value to Indicate Data is a LFSR Seed */

  } Bits;
  UINT32 Data;

} CR_LCEG3_SEED_PROG_3_SB_FBLP_STRUCT;

/* CR_LCEG3_CNT_PROG_0_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x20002f20)                                                      */
/*      SPRB0 (0x20002f20)                                                      */
/*      SPRHBM (0x20002f20)                                                     */
/*      SPRC0 (0x20002f20)                                                      */
/*      SPRMCC (0x20002f20)                                                     */
/*      SPRUCC (0x20002f20)                                                     */
/* Register default value on SPRA0: 0x01001010                                  */
/* Register default value on SPRB0: 0x01001010                                  */
/* Register default value on SPRHBM: 0x01001010                                 */
/* Register default value on SPRC0: 0x01001010                                  */
/* Register default value on SPRMCC: 0x01001010                                 */
/* Register default value on SPRUCC: 0x01001010                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CNT_PROG_0
*/


#define CR_LCEG3_CNT_PROG_0_SB_FBLP_REG 0x2C022F20

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 csr_prbs_load_seed_n_cnt : 8;

                            /* Bits[7:0], Access Type=RW/P, default=0x00000010*/

                            /* Number of Seeds needed to Lock */
    UINT32 csr_eieos_n_cnt : 8;

                            /* Bits[15:8], Access Type=RW/P, default=0x00000010*/

                            /* How many EIEOS Blocks to Observe for training */
    UINT32 cri_dfx_sos_interval : 16;

                            /* Bits[31:16], Access Type=RW/P, default=0x00000100*/

                            /* SoS Counter. Insert Skip when count reaches Zero */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CNT_PROG_0_SB_FBLP_STRUCT;

/* CR_LCEG3_CNT_PROG_1_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x20002f24)                                                      */
/*      SPRB0 (0x20002f24)                                                      */
/*      SPRHBM (0x20002f24)                                                     */
/*      SPRC0 (0x20002f24)                                                      */
/*      SPRMCC (0x20002f24)                                                     */
/*      SPRUCC (0x20002f24)                                                     */
/* Register default value on SPRA0: 0x01001010                                  */
/* Register default value on SPRB0: 0x01001010                                  */
/* Register default value on SPRHBM: 0x01001010                                 */
/* Register default value on SPRC0: 0x01001010                                  */
/* Register default value on SPRMCC: 0x01001010                                 */
/* Register default value on SPRUCC: 0x01001010                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CNT_PROG_1
*/


#define CR_LCEG3_CNT_PROG_1_SB_FBLP_REG 0x2C022F24

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 csr_prbs_load_seed_n_cnt : 8;

                            /* Bits[7:0], Access Type=RW/P, default=0x00000010*/

                            /* Number of Seeds needed to Lock */
    UINT32 csr_eieos_n_cnt : 8;

                            /* Bits[15:8], Access Type=RW/P, default=0x00000010*/

                            /* How many EIEOS Blocks to Observe for training */
    UINT32 cri_dfx_sos_interval : 16;

                            /* Bits[31:16], Access Type=RW/P, default=0x00000100*/

                            /* SoS Counter. Insert Skip when count reaches Zero */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CNT_PROG_1_SB_FBLP_STRUCT;

/* CR_LCEG3_CNT_PROG_2_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x20002f28)                                                      */
/*      SPRB0 (0x20002f28)                                                      */
/*      SPRHBM (0x20002f28)                                                     */
/*      SPRC0 (0x20002f28)                                                      */
/*      SPRMCC (0x20002f28)                                                     */
/*      SPRUCC (0x20002f28)                                                     */
/* Register default value on SPRA0: 0x01001010                                  */
/* Register default value on SPRB0: 0x01001010                                  */
/* Register default value on SPRHBM: 0x01001010                                 */
/* Register default value on SPRC0: 0x01001010                                  */
/* Register default value on SPRMCC: 0x01001010                                 */
/* Register default value on SPRUCC: 0x01001010                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CNT_PROG_2
*/


#define CR_LCEG3_CNT_PROG_2_SB_FBLP_REG 0x2C022F28

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 csr_prbs_load_seed_n_cnt : 8;

                            /* Bits[7:0], Access Type=RW/P, default=0x00000010*/

                            /* Number of Seeds needed to Lock */
    UINT32 csr_eieos_n_cnt : 8;

                            /* Bits[15:8], Access Type=RW/P, default=0x00000010*/

                            /* How many EIEOS Blocks to Observe for training */
    UINT32 cri_dfx_sos_interval : 16;

                            /* Bits[31:16], Access Type=RW/P, default=0x00000100*/

                            /* SoS Counter. Insert Skip when count reaches Zero */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CNT_PROG_2_SB_FBLP_STRUCT;

/* CR_LCEG3_CNT_PROG_3_SB_FBLP_REG supported on:                                */
/*      SPRA0 (0x20002f2c)                                                      */
/*      SPRB0 (0x20002f2c)                                                      */
/*      SPRHBM (0x20002f2c)                                                     */
/*      SPRC0 (0x20002f2c)                                                      */
/*      SPRMCC (0x20002f2c)                                                     */
/*      SPRUCC (0x20002f2c)                                                     */
/* Register default value on SPRA0: 0x01001010                                  */
/* Register default value on SPRB0: 0x01001010                                  */
/* Register default value on SPRHBM: 0x01001010                                 */
/* Register default value on SPRC0: 0x01001010                                  */
/* Register default value on SPRMCC: 0x01001010                                 */
/* Register default value on SPRUCC: 0x01001010                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CNT_PROG_3
*/


#define CR_LCEG3_CNT_PROG_3_SB_FBLP_REG 0x2C022F2C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 csr_prbs_load_seed_n_cnt : 8;

                            /* Bits[7:0], Access Type=RW/P, default=0x00000010*/

                            /* Number of Seeds needed to Lock */
    UINT32 csr_eieos_n_cnt : 8;

                            /* Bits[15:8], Access Type=RW/P, default=0x00000010*/

                            /* How many EIEOS Blocks to Observe for training */
    UINT32 cri_dfx_sos_interval : 16;

                            /* Bits[31:16], Access Type=RW/P, default=0x00000100*/

                            /* SoS Counter. Insert Skip when count reaches Zero */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CNT_PROG_3_SB_FBLP_STRUCT;

/* CR_LCEG3_CFG_AND_CNT_REG_0_SB_FBLP_REG supported on:                         */
/*      SPRA0 (0x20002f30)                                                      */
/*      SPRB0 (0x20002f30)                                                      */
/*      SPRHBM (0x20002f30)                                                     */
/*      SPRC0 (0x20002f30)                                                      */
/*      SPRMCC (0x20002f30)                                                     */
/*      SPRUCC (0x20002f30)                                                     */
/* Register default value on SPRA0: 0x00070C14                                  */
/* Register default value on SPRB0: 0x00070C14                                  */
/* Register default value on SPRHBM: 0x00070C14                                 */
/* Register default value on SPRC0: 0x00070C14                                  */
/* Register default value on SPRMCC: 0x00070C14                                 */
/* Register default value on SPRUCC: 0x00070C14                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CFG_AND_CNT_REG_0
*/


#define CR_LCEG3_CFG_AND_CNT_REG_0_SB_FBLP_REG 0x2C022F30

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg3_start : 1;

                            /* Bits[0:0], Access Type=RW/P, default=0x00000000*/

                            /* Master On switch for LCEG3+ */
    UINT32 cr_lceg3_clk_en : 1;

                            /* Bits[1:1], Access Type=RW/P, default=0x00000000*/

                            /*
                               Enable Clks for Lceg3- set before the lceg3
                               start
                            */
    UINT32 cr_sos_mode : 1;

                            /* Bits[2:2], Access Type=RW/P, default=0x00000001*/

                            /*
                               Send SoS at regular Intervals - Make Zero only
                               as a defeature
                            */
    UINT32 csr_eieos_only : 1;

                            /* Bits[3:3], Access Type=RW/P, default=0x00000000*/

                            /*
                               Switch to Send ONLY EIEOS- NO - ISI (Use only if
                               needed)
                            */
    UINT32 stop_on_max_err : 1;

                            /* Bits[4:4], Access Type=RW/P, default=0x00000001*/

                            /* Stop when Err Cnt reaches Max err Cnt value */
    UINT32 reset_err_cnt : 1;

                            /* Bits[5:5], Access Type=RW/P, default=0x00000000*/

                            /* Clear Err Cnt */
    UINT32 cnt_sos_with_txdata_valid : 1;

                            /* Bits[6:6], Access Type=RW/P, default=0x00000000*/

                            /*
                               Increment SOS Cnt with DATA VALID instead of
                               CLK. (DEFAULT OFF)
                            */
    UINT32 en_custom_training_pattern : 1;

                            /* Bits[7:7], Access Type=RW/P, default=0x00000000*/

                            /*
                               enable custom training pattern instead of ISI
                               pattern. (P2 spare reg has the 32b programmble
                               training pattern)
                            */
    UINT32 pat_buf_mode_per_lane : 4;

                            /* Bits[11:8], Access Type=RW/P, default=0x0000000C*/

                            /* Per lane PAT BUF MODE */
    UINT32 lceg3_poly_sel_lsb_per_lane : 4;

                            /* Bits[15:12], Access Type=RW/P, default=0x00000000*/

                            /*
                               Polynomial select per lane lsb bit options per
                               port
                            */
    UINT32 max_err_cnt : 16;

                            /* Bits[31:16], Access Type=RW/P, default=0x00000007*/

                            /* Allow 2^(max_err_cnt) errors */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CFG_AND_CNT_REG_0_SB_FBLP_STRUCT;

/* CR_LCEG3_CFG_AND_CNT_REG_1_SB_FBLP_REG supported on:                         */
/*      SPRA0 (0x20002f34)                                                      */
/*      SPRB0 (0x20002f34)                                                      */
/*      SPRHBM (0x20002f34)                                                     */
/*      SPRC0 (0x20002f34)                                                      */
/*      SPRMCC (0x20002f34)                                                     */
/*      SPRUCC (0x20002f34)                                                     */
/* Register default value on SPRA0: 0x00070C14                                  */
/* Register default value on SPRB0: 0x00070C14                                  */
/* Register default value on SPRHBM: 0x00070C14                                 */
/* Register default value on SPRC0: 0x00070C14                                  */
/* Register default value on SPRMCC: 0x00070C14                                 */
/* Register default value on SPRUCC: 0x00070C14                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CFG_AND_CNT_REG_1
*/


#define CR_LCEG3_CFG_AND_CNT_REG_1_SB_FBLP_REG 0x2C022F34

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg3_start : 1;

                            /* Bits[0:0], Access Type=RW/P, default=0x00000000*/

                            /* Master On switch for LCEG3+ */
    UINT32 cr_lceg3_clk_en : 1;

                            /* Bits[1:1], Access Type=RW/P, default=0x00000000*/

                            /*
                               Enable Clks for Lceg3- set before the lceg3
                               start
                            */
    UINT32 cr_sos_mode : 1;

                            /* Bits[2:2], Access Type=RW/P, default=0x00000001*/

                            /*
                               Send SoS at regular Intervals - Make Zero only
                               as a defeature
                            */
    UINT32 csr_eieos_only : 1;

                            /* Bits[3:3], Access Type=RW/P, default=0x00000000*/

                            /*
                               Switch to Send ONLY EIEOS- NO - ISI (Use only if
                               needed)
                            */
    UINT32 stop_on_max_err : 1;

                            /* Bits[4:4], Access Type=RW/P, default=0x00000001*/

                            /* Stop when Err Cnt reaches Max err Cnt value */
    UINT32 reset_err_cnt : 1;

                            /* Bits[5:5], Access Type=RW/P, default=0x00000000*/

                            /* Clear Err Cnt */
    UINT32 cnt_sos_with_txdata_valid : 1;

                            /* Bits[6:6], Access Type=RW/P, default=0x00000000*/

                            /*
                               Increment SOS Cnt with DATA VALID instead of
                               CLK. (DEFAULT OFF)
                            */
    UINT32 en_custom_training_pattern : 1;

                            /* Bits[7:7], Access Type=RW/P, default=0x00000000*/

                            /*
                               enable custom training pattern instead of ISI
                               pattern. (P2 spare reg has the 32b programmble
                               training pattern)
                            */
    UINT32 pat_buf_mode_per_lane : 4;

                            /* Bits[11:8], Access Type=RW/P, default=0x0000000C*/

                            /* Per lane PAT BUF MODE */
    UINT32 lceg3_poly_sel_lsb_per_lane : 4;

                            /* Bits[15:12], Access Type=RW/P, default=0x00000000*/

                            /*
                               Polynomial select per lane lsb bit options per
                               port
                            */
    UINT32 max_err_cnt : 16;

                            /* Bits[31:16], Access Type=RW/P, default=0x00000007*/

                            /* Allow 2^(max_err_cnt) errors */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CFG_AND_CNT_REG_1_SB_FBLP_STRUCT;

/* CR_LCEG3_CFG_AND_CNT_REG_2_SB_FBLP_REG supported on:                         */
/*      SPRA0 (0x20002f38)                                                      */
/*      SPRB0 (0x20002f38)                                                      */
/*      SPRHBM (0x20002f38)                                                     */
/*      SPRC0 (0x20002f38)                                                      */
/*      SPRMCC (0x20002f38)                                                     */
/*      SPRUCC (0x20002f38)                                                     */
/* Register default value on SPRA0: 0x00070C14                                  */
/* Register default value on SPRB0: 0x00070C14                                  */
/* Register default value on SPRHBM: 0x00070C14                                 */
/* Register default value on SPRC0: 0x00070C14                                  */
/* Register default value on SPRMCC: 0x00070C14                                 */
/* Register default value on SPRUCC: 0x00070C14                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CFG_AND_CNT_REG_2
*/


#define CR_LCEG3_CFG_AND_CNT_REG_2_SB_FBLP_REG 0x2C022F38

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg3_start : 1;

                            /* Bits[0:0], Access Type=RW/P, default=0x00000000*/

                            /* Master On switch for LCEG3+ */
    UINT32 cr_lceg3_clk_en : 1;

                            /* Bits[1:1], Access Type=RW/P, default=0x00000000*/

                            /*
                               Enable Clks for Lceg3- set before the lceg3
                               start
                            */
    UINT32 cr_sos_mode : 1;

                            /* Bits[2:2], Access Type=RW/P, default=0x00000001*/

                            /*
                               Send SoS at regular Intervals - Make Zero only
                               as a defeature
                            */
    UINT32 csr_eieos_only : 1;

                            /* Bits[3:3], Access Type=RW/P, default=0x00000000*/

                            /*
                               Switch to Send ONLY EIEOS- NO - ISI (Use only if
                               needed)
                            */
    UINT32 stop_on_max_err : 1;

                            /* Bits[4:4], Access Type=RW/P, default=0x00000001*/

                            /* Stop when Err Cnt reaches Max err Cnt value */
    UINT32 reset_err_cnt : 1;

                            /* Bits[5:5], Access Type=RW/P, default=0x00000000*/

                            /* Clear Err Cnt */
    UINT32 cnt_sos_with_txdata_valid : 1;

                            /* Bits[6:6], Access Type=RW/P, default=0x00000000*/

                            /*
                               Increment SOS Cnt with DATA VALID instead of
                               CLK. (DEFAULT OFF)
                            */
    UINT32 en_custom_training_pattern : 1;

                            /* Bits[7:7], Access Type=RW/P, default=0x00000000*/

                            /*
                               enable custom training pattern instead of ISI
                               pattern. (P2 spare reg has the 32b programmble
                               training pattern)
                            */
    UINT32 pat_buf_mode_per_lane : 4;

                            /* Bits[11:8], Access Type=RW/P, default=0x0000000C*/

                            /* Per lane PAT BUF MODE */
    UINT32 lceg3_poly_sel_lsb_per_lane : 4;

                            /* Bits[15:12], Access Type=RW/P, default=0x00000000*/

                            /*
                               Polynomial select per lane lsb bit options per
                               port
                            */
    UINT32 max_err_cnt : 16;

                            /* Bits[31:16], Access Type=RW/P, default=0x00000007*/

                            /* Allow 2^(max_err_cnt) errors */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CFG_AND_CNT_REG_2_SB_FBLP_STRUCT;

/* CR_LCEG3_CFG_AND_CNT_REG_3_SB_FBLP_REG supported on:                         */
/*      SPRA0 (0x20002f3c)                                                      */
/*      SPRB0 (0x20002f3c)                                                      */
/*      SPRHBM (0x20002f3c)                                                     */
/*      SPRC0 (0x20002f3c)                                                      */
/*      SPRMCC (0x20002f3c)                                                     */
/*      SPRUCC (0x20002f3c)                                                     */
/* Register default value on SPRA0: 0x00070C14                                  */
/* Register default value on SPRB0: 0x00070C14                                  */
/* Register default value on SPRHBM: 0x00070C14                                 */
/* Register default value on SPRC0: 0x00070C14                                  */
/* Register default value on SPRMCC: 0x00070C14                                 */
/* Register default value on SPRUCC: 0x00070C14                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_CFG_AND_CNT_REG_3
*/


#define CR_LCEG3_CFG_AND_CNT_REG_3_SB_FBLP_REG 0x2C022F3C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 lceg3_start : 1;

                            /* Bits[0:0], Access Type=RW/P, default=0x00000000*/

                            /* Master On switch for LCEG3+ */
    UINT32 cr_lceg3_clk_en : 1;

                            /* Bits[1:1], Access Type=RW/P, default=0x00000000*/

                            /*
                               Enable Clks for Lceg3- set before the lceg3
                               start
                            */
    UINT32 cr_sos_mode : 1;

                            /* Bits[2:2], Access Type=RW/P, default=0x00000001*/

                            /*
                               Send SoS at regular Intervals - Make Zero only
                               as a defeature
                            */
    UINT32 csr_eieos_only : 1;

                            /* Bits[3:3], Access Type=RW/P, default=0x00000000*/

                            /*
                               Switch to Send ONLY EIEOS- NO - ISI (Use only if
                               needed)
                            */
    UINT32 stop_on_max_err : 1;

                            /* Bits[4:4], Access Type=RW/P, default=0x00000001*/

                            /* Stop when Err Cnt reaches Max err Cnt value */
    UINT32 reset_err_cnt : 1;

                            /* Bits[5:5], Access Type=RW/P, default=0x00000000*/

                            /* Clear Err Cnt */
    UINT32 cnt_sos_with_txdata_valid : 1;

                            /* Bits[6:6], Access Type=RW/P, default=0x00000000*/

                            /*
                               Increment SOS Cnt with DATA VALID instead of
                               CLK. (DEFAULT OFF)
                            */
    UINT32 en_custom_training_pattern : 1;

                            /* Bits[7:7], Access Type=RW/P, default=0x00000000*/

                            /*
                               enable custom training pattern instead of ISI
                               pattern. (P2 spare reg has the 32b programmble
                               training pattern)
                            */
    UINT32 pat_buf_mode_per_lane : 4;

                            /* Bits[11:8], Access Type=RW/P, default=0x0000000C*/

                            /* Per lane PAT BUF MODE */
    UINT32 lceg3_poly_sel_lsb_per_lane : 4;

                            /* Bits[15:12], Access Type=RW/P, default=0x00000000*/

                            /*
                               Polynomial select per lane lsb bit options per
                               port
                            */
    UINT32 max_err_cnt : 16;

                            /* Bits[31:16], Access Type=RW/P, default=0x00000007*/

                            /* Allow 2^(max_err_cnt) errors */

  } Bits;
  UINT32 Data;

} CR_LCEG3_CFG_AND_CNT_REG_3_SB_FBLP_STRUCT;

/* CR_LCEG3_PATBUF0_MSB_0_N0_SB_FBLP_REG supported on:                          */
/*      SPRA0 (0x20002f40)                                                      */
/*      SPRB0 (0x20002f40)                                                      */
/*      SPRHBM (0x20002f40)                                                     */
/*      SPRC0 (0x20002f40)                                                      */
/*      SPRMCC (0x20002f40)                                                     */
/*      SPRUCC (0x20002f40)                                                     */
/* Register default value on SPRA0: 0x33333333                                  */
/* Register default value on SPRB0: 0x33333333                                  */
/* Register default value on SPRHBM: 0x33333333                                 */
/* Register default value on SPRC0: 0x33333333                                  */
/* Register default value on SPRMCC: 0x33333333                                 */
/* Register default value on SPRUCC: 0x33333333                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_PATBUF0_MSB_0
*/


#define CR_LCEG3_PATBUF0_MSB_0_N0_SB_FBLP_REG 0x2C022F40

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 patbuf0_msb64 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x33333333*/

                            /*
                               Pattern Buffer 0 - for Sending Programmable Data
                               (MSB 64 b)
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_PATBUF0_MSB_0_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_PATBUF0_MSB_0_N1_SB_FBLP_REG supported on:                          */
/*      SPRA0 (0x20002f44)                                                      */
/*      SPRB0 (0x20002f44)                                                      */
/*      SPRHBM (0x20002f44)                                                     */
/*      SPRC0 (0x20002f44)                                                      */
/*      SPRMCC (0x20002f44)                                                     */
/*      SPRUCC (0x20002f44)                                                     */
/* Register default value on SPRA0: 0x44444444                                  */
/* Register default value on SPRB0: 0x44444444                                  */
/* Register default value on SPRHBM: 0x44444444                                 */
/* Register default value on SPRC0: 0x44444444                                  */
/* Register default value on SPRMCC: 0x44444444                                 */
/* Register default value on SPRUCC: 0x44444444                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_PATBUF0_MSB_0
*/


#define CR_LCEG3_PATBUF0_MSB_0_N1_SB_FBLP_REG 0x2C022F44

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 patbuf0_msb64 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x44444444*/

                            /*
                               Pattern Buffer 0 - for Sending Programmable Data
                               (MSB 64 b)
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_PATBUF0_MSB_0_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_PATBUF0_MSB_1_N0_SB_FBLP_REG supported on:                          */
/*      SPRA0 (0x20002f48)                                                      */
/*      SPRB0 (0x20002f48)                                                      */
/*      SPRHBM (0x20002f48)                                                     */
/*      SPRC0 (0x20002f48)                                                      */
/*      SPRMCC (0x20002f48)                                                     */
/*      SPRUCC (0x20002f48)                                                     */
/* Register default value on SPRA0: 0x33333333                                  */
/* Register default value on SPRB0: 0x33333333                                  */
/* Register default value on SPRHBM: 0x33333333                                 */
/* Register default value on SPRC0: 0x33333333                                  */
/* Register default value on SPRMCC: 0x33333333                                 */
/* Register default value on SPRUCC: 0x33333333                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_PATBUF0_MSB_1
*/


#define CR_LCEG3_PATBUF0_MSB_1_N0_SB_FBLP_REG 0x2C022F48

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 patbuf0_msb64 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x33333333*/

                            /*
                               Pattern Buffer 0 - for Sending Programmable Data
                               (MSB 64 b)
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_PATBUF0_MSB_1_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_PATBUF0_MSB_1_N1_SB_FBLP_REG supported on:                          */
/*      SPRA0 (0x20002f4c)                                                      */
/*      SPRB0 (0x20002f4c)                                                      */
/*      SPRHBM (0x20002f4c)                                                     */
/*      SPRC0 (0x20002f4c)                                                      */
/*      SPRMCC (0x20002f4c)                                                     */
/*      SPRUCC (0x20002f4c)                                                     */
/* Register default value on SPRA0: 0x44444444                                  */
/* Register default value on SPRB0: 0x44444444                                  */
/* Register default value on SPRHBM: 0x44444444                                 */
/* Register default value on SPRC0: 0x44444444                                  */
/* Register default value on SPRMCC: 0x44444444                                 */
/* Register default value on SPRUCC: 0x44444444                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_PATBUF0_MSB_1
*/


#define CR_LCEG3_PATBUF0_MSB_1_N1_SB_FBLP_REG 0x2C022F4C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 patbuf0_msb64 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x44444444*/

                            /*
                               Pattern Buffer 0 - for Sending Programmable Data
                               (MSB 64 b)
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_PATBUF0_MSB_1_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_PATBUF0_MSB_2_N0_SB_FBLP_REG supported on:                          */
/*      SPRA0 (0x20002f50)                                                      */
/*      SPRB0 (0x20002f50)                                                      */
/*      SPRHBM (0x20002f50)                                                     */
/*      SPRC0 (0x20002f50)                                                      */
/*      SPRMCC (0x20002f50)                                                     */
/*      SPRUCC (0x20002f50)                                                     */
/* Register default value on SPRA0: 0x33333333                                  */
/* Register default value on SPRB0: 0x33333333                                  */
/* Register default value on SPRHBM: 0x33333333                                 */
/* Register default value on SPRC0: 0x33333333                                  */
/* Register default value on SPRMCC: 0x33333333                                 */
/* Register default value on SPRUCC: 0x33333333                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_PATBUF0_MSB_2
*/


#define CR_LCEG3_PATBUF0_MSB_2_N0_SB_FBLP_REG 0x2C022F50

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 patbuf0_msb64 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x33333333*/

                            /*
                               Pattern Buffer 0 - for Sending Programmable Data
                               (MSB 64 b)
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_PATBUF0_MSB_2_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_PATBUF0_MSB_2_N1_SB_FBLP_REG supported on:                          */
/*      SPRA0 (0x20002f54)                                                      */
/*      SPRB0 (0x20002f54)                                                      */
/*      SPRHBM (0x20002f54)                                                     */
/*      SPRC0 (0x20002f54)                                                      */
/*      SPRMCC (0x20002f54)                                                     */
/*      SPRUCC (0x20002f54)                                                     */
/* Register default value on SPRA0: 0x44444444                                  */
/* Register default value on SPRB0: 0x44444444                                  */
/* Register default value on SPRHBM: 0x44444444                                 */
/* Register default value on SPRC0: 0x44444444                                  */
/* Register default value on SPRMCC: 0x44444444                                 */
/* Register default value on SPRUCC: 0x44444444                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_PATBUF0_MSB_2
*/


#define CR_LCEG3_PATBUF0_MSB_2_N1_SB_FBLP_REG 0x2C022F54

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 patbuf0_msb64 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x44444444*/

                            /*
                               Pattern Buffer 0 - for Sending Programmable Data
                               (MSB 64 b)
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_PATBUF0_MSB_2_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_PATBUF0_MSB_3_N0_SB_FBLP_REG supported on:                          */
/*      SPRA0 (0x20002f58)                                                      */
/*      SPRB0 (0x20002f58)                                                      */
/*      SPRHBM (0x20002f58)                                                     */
/*      SPRC0 (0x20002f58)                                                      */
/*      SPRMCC (0x20002f58)                                                     */
/*      SPRUCC (0x20002f58)                                                     */
/* Register default value on SPRA0: 0x33333333                                  */
/* Register default value on SPRB0: 0x33333333                                  */
/* Register default value on SPRHBM: 0x33333333                                 */
/* Register default value on SPRC0: 0x33333333                                  */
/* Register default value on SPRMCC: 0x33333333                                 */
/* Register default value on SPRUCC: 0x33333333                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_PATBUF0_MSB_3
*/


#define CR_LCEG3_PATBUF0_MSB_3_N0_SB_FBLP_REG 0x2C022F58

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 patbuf0_msb64 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x33333333*/

                            /*
                               Pattern Buffer 0 - for Sending Programmable Data
                               (MSB 64 b)
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_PATBUF0_MSB_3_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_PATBUF0_MSB_3_N1_SB_FBLP_REG supported on:                          */
/*      SPRA0 (0x20002f5c)                                                      */
/*      SPRB0 (0x20002f5c)                                                      */
/*      SPRHBM (0x20002f5c)                                                     */
/*      SPRC0 (0x20002f5c)                                                      */
/*      SPRMCC (0x20002f5c)                                                     */
/*      SPRUCC (0x20002f5c)                                                     */
/* Register default value on SPRA0: 0x44444444                                  */
/* Register default value on SPRB0: 0x44444444                                  */
/* Register default value on SPRHBM: 0x44444444                                 */
/* Register default value on SPRC0: 0x44444444                                  */
/* Register default value on SPRMCC: 0x44444444                                 */
/* Register default value on SPRUCC: 0x44444444                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_PATBUF0_MSB_3
*/


#define CR_LCEG3_PATBUF0_MSB_3_N1_SB_FBLP_REG 0x2C022F5C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 patbuf0_msb64 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x44444444*/

                            /*
                               Pattern Buffer 0 - for Sending Programmable Data
                               (MSB 64 b)
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_PATBUF0_MSB_3_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_PATBUF0_LSB_0_N0_SB_FBLP_REG supported on:                          */
/*      SPRA0 (0x20002f60)                                                      */
/*      SPRB0 (0x20002f60)                                                      */
/*      SPRHBM (0x20002f60)                                                     */
/*      SPRC0 (0x20002f60)                                                      */
/*      SPRMCC (0x20002f60)                                                     */
/*      SPRUCC (0x20002f60)                                                     */
/* Register default value on SPRA0: 0x11111111                                  */
/* Register default value on SPRB0: 0x11111111                                  */
/* Register default value on SPRHBM: 0x11111111                                 */
/* Register default value on SPRC0: 0x11111111                                  */
/* Register default value on SPRMCC: 0x11111111                                 */
/* Register default value on SPRUCC: 0x11111111                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_PATBUF0_LSB_0
*/


#define CR_LCEG3_PATBUF0_LSB_0_N0_SB_FBLP_REG 0x2C022F60

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 patbuf0_lsb64 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x11111111*/

                            /*
                               Pattern Buffer 0 - for Sending Programmable Data
                               (LSB 64b)
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_PATBUF0_LSB_0_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_PATBUF0_LSB_0_N1_SB_FBLP_REG supported on:                          */
/*      SPRA0 (0x20002f64)                                                      */
/*      SPRB0 (0x20002f64)                                                      */
/*      SPRHBM (0x20002f64)                                                     */
/*      SPRC0 (0x20002f64)                                                      */
/*      SPRMCC (0x20002f64)                                                     */
/*      SPRUCC (0x20002f64)                                                     */
/* Register default value on SPRA0: 0x22222222                                  */
/* Register default value on SPRB0: 0x22222222                                  */
/* Register default value on SPRHBM: 0x22222222                                 */
/* Register default value on SPRC0: 0x22222222                                  */
/* Register default value on SPRMCC: 0x22222222                                 */
/* Register default value on SPRUCC: 0x22222222                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_PATBUF0_LSB_0
*/


#define CR_LCEG3_PATBUF0_LSB_0_N1_SB_FBLP_REG 0x2C022F64

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 patbuf0_lsb64 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x22222222*/

                            /*
                               Pattern Buffer 0 - for Sending Programmable Data
                               (LSB 64b)
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_PATBUF0_LSB_0_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_PATBUF0_LSB_1_N0_SB_FBLP_REG supported on:                          */
/*      SPRA0 (0x20002f68)                                                      */
/*      SPRB0 (0x20002f68)                                                      */
/*      SPRHBM (0x20002f68)                                                     */
/*      SPRC0 (0x20002f68)                                                      */
/*      SPRMCC (0x20002f68)                                                     */
/*      SPRUCC (0x20002f68)                                                     */
/* Register default value on SPRA0: 0x11111111                                  */
/* Register default value on SPRB0: 0x11111111                                  */
/* Register default value on SPRHBM: 0x11111111                                 */
/* Register default value on SPRC0: 0x11111111                                  */
/* Register default value on SPRMCC: 0x11111111                                 */
/* Register default value on SPRUCC: 0x11111111                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_PATBUF0_LSB_1
*/


#define CR_LCEG3_PATBUF0_LSB_1_N0_SB_FBLP_REG 0x2C022F68

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 patbuf0_lsb64 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x11111111*/

                            /*
                               Pattern Buffer 0 - for Sending Programmable Data
                               (LSB 64b)
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_PATBUF0_LSB_1_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_PATBUF0_LSB_1_N1_SB_FBLP_REG supported on:                          */
/*      SPRA0 (0x20002f6c)                                                      */
/*      SPRB0 (0x20002f6c)                                                      */
/*      SPRHBM (0x20002f6c)                                                     */
/*      SPRC0 (0x20002f6c)                                                      */
/*      SPRMCC (0x20002f6c)                                                     */
/*      SPRUCC (0x20002f6c)                                                     */
/* Register default value on SPRA0: 0x22222222                                  */
/* Register default value on SPRB0: 0x22222222                                  */
/* Register default value on SPRHBM: 0x22222222                                 */
/* Register default value on SPRC0: 0x22222222                                  */
/* Register default value on SPRMCC: 0x22222222                                 */
/* Register default value on SPRUCC: 0x22222222                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_PATBUF0_LSB_1
*/


#define CR_LCEG3_PATBUF0_LSB_1_N1_SB_FBLP_REG 0x2C022F6C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 patbuf0_lsb64 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x22222222*/

                            /*
                               Pattern Buffer 0 - for Sending Programmable Data
                               (LSB 64b)
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_PATBUF0_LSB_1_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_PATBUF0_LSB_2_N0_SB_FBLP_REG supported on:                          */
/*      SPRA0 (0x20002f70)                                                      */
/*      SPRB0 (0x20002f70)                                                      */
/*      SPRHBM (0x20002f70)                                                     */
/*      SPRC0 (0x20002f70)                                                      */
/*      SPRMCC (0x20002f70)                                                     */
/*      SPRUCC (0x20002f70)                                                     */
/* Register default value on SPRA0: 0x11111111                                  */
/* Register default value on SPRB0: 0x11111111                                  */
/* Register default value on SPRHBM: 0x11111111                                 */
/* Register default value on SPRC0: 0x11111111                                  */
/* Register default value on SPRMCC: 0x11111111                                 */
/* Register default value on SPRUCC: 0x11111111                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_PATBUF0_LSB_2
*/


#define CR_LCEG3_PATBUF0_LSB_2_N0_SB_FBLP_REG 0x2C022F70

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 patbuf0_lsb64 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x11111111*/

                            /*
                               Pattern Buffer 0 - for Sending Programmable Data
                               (LSB 64b)
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_PATBUF0_LSB_2_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_PATBUF0_LSB_2_N1_SB_FBLP_REG supported on:                          */
/*      SPRA0 (0x20002f74)                                                      */
/*      SPRB0 (0x20002f74)                                                      */
/*      SPRHBM (0x20002f74)                                                     */
/*      SPRC0 (0x20002f74)                                                      */
/*      SPRMCC (0x20002f74)                                                     */
/*      SPRUCC (0x20002f74)                                                     */
/* Register default value on SPRA0: 0x22222222                                  */
/* Register default value on SPRB0: 0x22222222                                  */
/* Register default value on SPRHBM: 0x22222222                                 */
/* Register default value on SPRC0: 0x22222222                                  */
/* Register default value on SPRMCC: 0x22222222                                 */
/* Register default value on SPRUCC: 0x22222222                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_PATBUF0_LSB_2
*/


#define CR_LCEG3_PATBUF0_LSB_2_N1_SB_FBLP_REG 0x2C022F74

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 patbuf0_lsb64 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x22222222*/

                            /*
                               Pattern Buffer 0 - for Sending Programmable Data
                               (LSB 64b)
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_PATBUF0_LSB_2_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_PATBUF0_LSB_3_N0_SB_FBLP_REG supported on:                          */
/*      SPRA0 (0x20002f78)                                                      */
/*      SPRB0 (0x20002f78)                                                      */
/*      SPRHBM (0x20002f78)                                                     */
/*      SPRC0 (0x20002f78)                                                      */
/*      SPRMCC (0x20002f78)                                                     */
/*      SPRUCC (0x20002f78)                                                     */
/* Register default value on SPRA0: 0x11111111                                  */
/* Register default value on SPRB0: 0x11111111                                  */
/* Register default value on SPRHBM: 0x11111111                                 */
/* Register default value on SPRC0: 0x11111111                                  */
/* Register default value on SPRMCC: 0x11111111                                 */
/* Register default value on SPRUCC: 0x11111111                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_PATBUF0_LSB_3
*/


#define CR_LCEG3_PATBUF0_LSB_3_N0_SB_FBLP_REG 0x2C022F78

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 patbuf0_lsb64 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x11111111*/

                            /*
                               Pattern Buffer 0 - for Sending Programmable Data
                               (LSB 64b)
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_PATBUF0_LSB_3_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_PATBUF0_LSB_3_N1_SB_FBLP_REG supported on:                          */
/*      SPRA0 (0x20002f7c)                                                      */
/*      SPRB0 (0x20002f7c)                                                      */
/*      SPRHBM (0x20002f7c)                                                     */
/*      SPRC0 (0x20002f7c)                                                      */
/*      SPRMCC (0x20002f7c)                                                     */
/*      SPRUCC (0x20002f7c)                                                     */
/* Register default value on SPRA0: 0x22222222                                  */
/* Register default value on SPRB0: 0x22222222                                  */
/* Register default value on SPRHBM: 0x22222222                                 */
/* Register default value on SPRC0: 0x22222222                                  */
/* Register default value on SPRMCC: 0x22222222                                 */
/* Register default value on SPRUCC: 0x22222222                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_PATBUF0_LSB_3
*/


#define CR_LCEG3_PATBUF0_LSB_3_N1_SB_FBLP_REG 0x2C022F7C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 patbuf0_lsb64 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x22222222*/

                            /*
                               Pattern Buffer 0 - for Sending Programmable Data
                               (LSB 64b)
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_PATBUF0_LSB_3_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_PATBUF1_MSB_0_N0_SB_FBLP_REG supported on:                          */
/*      SPRA0 (0x20002f80)                                                      */
/*      SPRB0 (0x20002f80)                                                      */
/*      SPRHBM (0x20002f80)                                                     */
/*      SPRC0 (0x20002f80)                                                      */
/*      SPRMCC (0x20002f80)                                                     */
/*      SPRUCC (0x20002f80)                                                     */
/* Register default value on SPRA0: 0x77777777                                  */
/* Register default value on SPRB0: 0x77777777                                  */
/* Register default value on SPRHBM: 0x77777777                                 */
/* Register default value on SPRC0: 0x77777777                                  */
/* Register default value on SPRMCC: 0x77777777                                 */
/* Register default value on SPRUCC: 0x77777777                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_PATBUF1_MSB_0
*/


#define CR_LCEG3_PATBUF1_MSB_0_N0_SB_FBLP_REG 0x2C022F80

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 patbuf1_msb64 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x77777777*/

                            /*
                               Pattern Buffer 1 - for Sending Programmable Data
                               (MSB 64 b)
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_PATBUF1_MSB_0_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_PATBUF1_MSB_0_N1_SB_FBLP_REG supported on:                          */
/*      SPRA0 (0x20002f84)                                                      */
/*      SPRB0 (0x20002f84)                                                      */
/*      SPRHBM (0x20002f84)                                                     */
/*      SPRC0 (0x20002f84)                                                      */
/*      SPRMCC (0x20002f84)                                                     */
/*      SPRUCC (0x20002f84)                                                     */
/* Register default value on SPRA0: 0x88888888                                  */
/* Register default value on SPRB0: 0x88888888                                  */
/* Register default value on SPRHBM: 0x88888888                                 */
/* Register default value on SPRC0: 0x88888888                                  */
/* Register default value on SPRMCC: 0x88888888                                 */
/* Register default value on SPRUCC: 0x88888888                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_PATBUF1_MSB_0
*/


#define CR_LCEG3_PATBUF1_MSB_0_N1_SB_FBLP_REG 0x2C022F84

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 patbuf1_msb64 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x88888888*/

                            /*
                               Pattern Buffer 1 - for Sending Programmable Data
                               (MSB 64 b)
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_PATBUF1_MSB_0_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_PATBUF1_MSB_1_N0_SB_FBLP_REG supported on:                          */
/*      SPRA0 (0x20002f88)                                                      */
/*      SPRB0 (0x20002f88)                                                      */
/*      SPRHBM (0x20002f88)                                                     */
/*      SPRC0 (0x20002f88)                                                      */
/*      SPRMCC (0x20002f88)                                                     */
/*      SPRUCC (0x20002f88)                                                     */
/* Register default value on SPRA0: 0x77777777                                  */
/* Register default value on SPRB0: 0x77777777                                  */
/* Register default value on SPRHBM: 0x77777777                                 */
/* Register default value on SPRC0: 0x77777777                                  */
/* Register default value on SPRMCC: 0x77777777                                 */
/* Register default value on SPRUCC: 0x77777777                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_PATBUF1_MSB_1
*/


#define CR_LCEG3_PATBUF1_MSB_1_N0_SB_FBLP_REG 0x2C022F88

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 patbuf1_msb64 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x77777777*/

                            /*
                               Pattern Buffer 1 - for Sending Programmable Data
                               (MSB 64 b)
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_PATBUF1_MSB_1_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_PATBUF1_MSB_1_N1_SB_FBLP_REG supported on:                          */
/*      SPRA0 (0x20002f8c)                                                      */
/*      SPRB0 (0x20002f8c)                                                      */
/*      SPRHBM (0x20002f8c)                                                     */
/*      SPRC0 (0x20002f8c)                                                      */
/*      SPRMCC (0x20002f8c)                                                     */
/*      SPRUCC (0x20002f8c)                                                     */
/* Register default value on SPRA0: 0x88888888                                  */
/* Register default value on SPRB0: 0x88888888                                  */
/* Register default value on SPRHBM: 0x88888888                                 */
/* Register default value on SPRC0: 0x88888888                                  */
/* Register default value on SPRMCC: 0x88888888                                 */
/* Register default value on SPRUCC: 0x88888888                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_PATBUF1_MSB_1
*/


#define CR_LCEG3_PATBUF1_MSB_1_N1_SB_FBLP_REG 0x2C022F8C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 patbuf1_msb64 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x88888888*/

                            /*
                               Pattern Buffer 1 - for Sending Programmable Data
                               (MSB 64 b)
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_PATBUF1_MSB_1_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_PATBUF1_MSB_2_N0_SB_FBLP_REG supported on:                          */
/*      SPRA0 (0x20002f90)                                                      */
/*      SPRB0 (0x20002f90)                                                      */
/*      SPRHBM (0x20002f90)                                                     */
/*      SPRC0 (0x20002f90)                                                      */
/*      SPRMCC (0x20002f90)                                                     */
/*      SPRUCC (0x20002f90)                                                     */
/* Register default value on SPRA0: 0x77777777                                  */
/* Register default value on SPRB0: 0x77777777                                  */
/* Register default value on SPRHBM: 0x77777777                                 */
/* Register default value on SPRC0: 0x77777777                                  */
/* Register default value on SPRMCC: 0x77777777                                 */
/* Register default value on SPRUCC: 0x77777777                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_PATBUF1_MSB_2
*/


#define CR_LCEG3_PATBUF1_MSB_2_N0_SB_FBLP_REG 0x2C022F90

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 patbuf1_msb64 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x77777777*/

                            /*
                               Pattern Buffer 1 - for Sending Programmable Data
                               (MSB 64 b)
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_PATBUF1_MSB_2_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_PATBUF1_MSB_2_N1_SB_FBLP_REG supported on:                          */
/*      SPRA0 (0x20002f94)                                                      */
/*      SPRB0 (0x20002f94)                                                      */
/*      SPRHBM (0x20002f94)                                                     */
/*      SPRC0 (0x20002f94)                                                      */
/*      SPRMCC (0x20002f94)                                                     */
/*      SPRUCC (0x20002f94)                                                     */
/* Register default value on SPRA0: 0x88888888                                  */
/* Register default value on SPRB0: 0x88888888                                  */
/* Register default value on SPRHBM: 0x88888888                                 */
/* Register default value on SPRC0: 0x88888888                                  */
/* Register default value on SPRMCC: 0x88888888                                 */
/* Register default value on SPRUCC: 0x88888888                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_PATBUF1_MSB_2
*/


#define CR_LCEG3_PATBUF1_MSB_2_N1_SB_FBLP_REG 0x2C022F94

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 patbuf1_msb64 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x88888888*/

                            /*
                               Pattern Buffer 1 - for Sending Programmable Data
                               (MSB 64 b)
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_PATBUF1_MSB_2_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_PATBUF1_MSB_3_N0_SB_FBLP_REG supported on:                          */
/*      SPRA0 (0x20002f98)                                                      */
/*      SPRB0 (0x20002f98)                                                      */
/*      SPRHBM (0x20002f98)                                                     */
/*      SPRC0 (0x20002f98)                                                      */
/*      SPRMCC (0x20002f98)                                                     */
/*      SPRUCC (0x20002f98)                                                     */
/* Register default value on SPRA0: 0x77777777                                  */
/* Register default value on SPRB0: 0x77777777                                  */
/* Register default value on SPRHBM: 0x77777777                                 */
/* Register default value on SPRC0: 0x77777777                                  */
/* Register default value on SPRMCC: 0x77777777                                 */
/* Register default value on SPRUCC: 0x77777777                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_PATBUF1_MSB_3
*/


#define CR_LCEG3_PATBUF1_MSB_3_N0_SB_FBLP_REG 0x2C022F98

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 patbuf1_msb64 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x77777777*/

                            /*
                               Pattern Buffer 1 - for Sending Programmable Data
                               (MSB 64 b)
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_PATBUF1_MSB_3_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_PATBUF1_MSB_3_N1_SB_FBLP_REG supported on:                          */
/*      SPRA0 (0x20002f9c)                                                      */
/*      SPRB0 (0x20002f9c)                                                      */
/*      SPRHBM (0x20002f9c)                                                     */
/*      SPRC0 (0x20002f9c)                                                      */
/*      SPRMCC (0x20002f9c)                                                     */
/*      SPRUCC (0x20002f9c)                                                     */
/* Register default value on SPRA0: 0x88888888                                  */
/* Register default value on SPRB0: 0x88888888                                  */
/* Register default value on SPRHBM: 0x88888888                                 */
/* Register default value on SPRC0: 0x88888888                                  */
/* Register default value on SPRMCC: 0x88888888                                 */
/* Register default value on SPRUCC: 0x88888888                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_PATBUF1_MSB_3
*/


#define CR_LCEG3_PATBUF1_MSB_3_N1_SB_FBLP_REG 0x2C022F9C

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 patbuf1_msb64 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x88888888*/

                            /*
                               Pattern Buffer 1 - for Sending Programmable Data
                               (MSB 64 b)
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_PATBUF1_MSB_3_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_PATBUF1_LSB_0_N0_SB_FBLP_REG supported on:                          */
/*      SPRA0 (0x20002fa0)                                                      */
/*      SPRB0 (0x20002fa0)                                                      */
/*      SPRHBM (0x20002fa0)                                                     */
/*      SPRC0 (0x20002fa0)                                                      */
/*      SPRMCC (0x20002fa0)                                                     */
/*      SPRUCC (0x20002fa0)                                                     */
/* Register default value on SPRA0: 0x55555555                                  */
/* Register default value on SPRB0: 0x55555555                                  */
/* Register default value on SPRHBM: 0x55555555                                 */
/* Register default value on SPRC0: 0x55555555                                  */
/* Register default value on SPRMCC: 0x55555555                                 */
/* Register default value on SPRUCC: 0x55555555                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_PATBUF1_LSB_0
*/


#define CR_LCEG3_PATBUF1_LSB_0_N0_SB_FBLP_REG 0x2C022FA0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 patbuf1_lsb64 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x55555555*/

                            /*
                               Pattern Buffer 1 - for Sending Programmable Data
                               (LSB 64b)
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_PATBUF1_LSB_0_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_PATBUF1_LSB_0_N1_SB_FBLP_REG supported on:                          */
/*      SPRA0 (0x20002fa4)                                                      */
/*      SPRB0 (0x20002fa4)                                                      */
/*      SPRHBM (0x20002fa4)                                                     */
/*      SPRC0 (0x20002fa4)                                                      */
/*      SPRMCC (0x20002fa4)                                                     */
/*      SPRUCC (0x20002fa4)                                                     */
/* Register default value on SPRA0: 0x66666666                                  */
/* Register default value on SPRB0: 0x66666666                                  */
/* Register default value on SPRHBM: 0x66666666                                 */
/* Register default value on SPRC0: 0x66666666                                  */
/* Register default value on SPRMCC: 0x66666666                                 */
/* Register default value on SPRUCC: 0x66666666                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_PATBUF1_LSB_0
*/


#define CR_LCEG3_PATBUF1_LSB_0_N1_SB_FBLP_REG 0x2C022FA4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 patbuf1_lsb64 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x66666666*/

                            /*
                               Pattern Buffer 1 - for Sending Programmable Data
                               (LSB 64b)
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_PATBUF1_LSB_0_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_PATBUF1_LSB_1_N0_SB_FBLP_REG supported on:                          */
/*      SPRA0 (0x20002fa8)                                                      */
/*      SPRB0 (0x20002fa8)                                                      */
/*      SPRHBM (0x20002fa8)                                                     */
/*      SPRC0 (0x20002fa8)                                                      */
/*      SPRMCC (0x20002fa8)                                                     */
/*      SPRUCC (0x20002fa8)                                                     */
/* Register default value on SPRA0: 0x55555555                                  */
/* Register default value on SPRB0: 0x55555555                                  */
/* Register default value on SPRHBM: 0x55555555                                 */
/* Register default value on SPRC0: 0x55555555                                  */
/* Register default value on SPRMCC: 0x55555555                                 */
/* Register default value on SPRUCC: 0x55555555                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_PATBUF1_LSB_1
*/


#define CR_LCEG3_PATBUF1_LSB_1_N0_SB_FBLP_REG 0x2C022FA8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 patbuf1_lsb64 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x55555555*/

                            /*
                               Pattern Buffer 1 - for Sending Programmable Data
                               (LSB 64b)
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_PATBUF1_LSB_1_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_PATBUF1_LSB_1_N1_SB_FBLP_REG supported on:                          */
/*      SPRA0 (0x20002fac)                                                      */
/*      SPRB0 (0x20002fac)                                                      */
/*      SPRHBM (0x20002fac)                                                     */
/*      SPRC0 (0x20002fac)                                                      */
/*      SPRMCC (0x20002fac)                                                     */
/*      SPRUCC (0x20002fac)                                                     */
/* Register default value on SPRA0: 0x66666666                                  */
/* Register default value on SPRB0: 0x66666666                                  */
/* Register default value on SPRHBM: 0x66666666                                 */
/* Register default value on SPRC0: 0x66666666                                  */
/* Register default value on SPRMCC: 0x66666666                                 */
/* Register default value on SPRUCC: 0x66666666                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_PATBUF1_LSB_1
*/


#define CR_LCEG3_PATBUF1_LSB_1_N1_SB_FBLP_REG 0x2C022FAC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 patbuf1_lsb64 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x66666666*/

                            /*
                               Pattern Buffer 1 - for Sending Programmable Data
                               (LSB 64b)
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_PATBUF1_LSB_1_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_PATBUF1_LSB_2_N0_SB_FBLP_REG supported on:                          */
/*      SPRA0 (0x20002fb0)                                                      */
/*      SPRB0 (0x20002fb0)                                                      */
/*      SPRHBM (0x20002fb0)                                                     */
/*      SPRC0 (0x20002fb0)                                                      */
/*      SPRMCC (0x20002fb0)                                                     */
/*      SPRUCC (0x20002fb0)                                                     */
/* Register default value on SPRA0: 0x55555555                                  */
/* Register default value on SPRB0: 0x55555555                                  */
/* Register default value on SPRHBM: 0x55555555                                 */
/* Register default value on SPRC0: 0x55555555                                  */
/* Register default value on SPRMCC: 0x55555555                                 */
/* Register default value on SPRUCC: 0x55555555                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_PATBUF1_LSB_2
*/


#define CR_LCEG3_PATBUF1_LSB_2_N0_SB_FBLP_REG 0x2C022FB0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 patbuf1_lsb64 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x55555555*/

                            /*
                               Pattern Buffer 1 - for Sending Programmable Data
                               (LSB 64b)
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_PATBUF1_LSB_2_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_PATBUF1_LSB_2_N1_SB_FBLP_REG supported on:                          */
/*      SPRA0 (0x20002fb4)                                                      */
/*      SPRB0 (0x20002fb4)                                                      */
/*      SPRHBM (0x20002fb4)                                                     */
/*      SPRC0 (0x20002fb4)                                                      */
/*      SPRMCC (0x20002fb4)                                                     */
/*      SPRUCC (0x20002fb4)                                                     */
/* Register default value on SPRA0: 0x66666666                                  */
/* Register default value on SPRB0: 0x66666666                                  */
/* Register default value on SPRHBM: 0x66666666                                 */
/* Register default value on SPRC0: 0x66666666                                  */
/* Register default value on SPRMCC: 0x66666666                                 */
/* Register default value on SPRUCC: 0x66666666                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_PATBUF1_LSB_2
*/


#define CR_LCEG3_PATBUF1_LSB_2_N1_SB_FBLP_REG 0x2C022FB4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 patbuf1_lsb64 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x66666666*/

                            /*
                               Pattern Buffer 1 - for Sending Programmable Data
                               (LSB 64b)
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_PATBUF1_LSB_2_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_PATBUF1_LSB_3_N0_SB_FBLP_REG supported on:                          */
/*      SPRA0 (0x20002fb8)                                                      */
/*      SPRB0 (0x20002fb8)                                                      */
/*      SPRHBM (0x20002fb8)                                                     */
/*      SPRC0 (0x20002fb8)                                                      */
/*      SPRMCC (0x20002fb8)                                                     */
/*      SPRUCC (0x20002fb8)                                                     */
/* Register default value on SPRA0: 0x55555555                                  */
/* Register default value on SPRB0: 0x55555555                                  */
/* Register default value on SPRHBM: 0x55555555                                 */
/* Register default value on SPRC0: 0x55555555                                  */
/* Register default value on SPRMCC: 0x55555555                                 */
/* Register default value on SPRUCC: 0x55555555                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_PATBUF1_LSB_3
*/


#define CR_LCEG3_PATBUF1_LSB_3_N0_SB_FBLP_REG 0x2C022FB8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 patbuf1_lsb64 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x55555555*/

                            /*
                               Pattern Buffer 1 - for Sending Programmable Data
                               (LSB 64b)
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_PATBUF1_LSB_3_N0_SB_FBLP_STRUCT;

/* CR_LCEG3_PATBUF1_LSB_3_N1_SB_FBLP_REG supported on:                          */
/*      SPRA0 (0x20002fbc)                                                      */
/*      SPRB0 (0x20002fbc)                                                      */
/*      SPRHBM (0x20002fbc)                                                     */
/*      SPRC0 (0x20002fbc)                                                      */
/*      SPRMCC (0x20002fbc)                                                     */
/*      SPRUCC (0x20002fbc)                                                     */
/* Register default value on SPRA0: 0x66666666                                  */
/* Register default value on SPRB0: 0x66666666                                  */
/* Register default value on SPRHBM: 0x66666666                                 */
/* Register default value on SPRC0: 0x66666666                                  */
/* Register default value on SPRMCC: 0x66666666                                 */
/* Register default value on SPRUCC: 0x66666666                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_PATBUF1_LSB_3
*/


#define CR_LCEG3_PATBUF1_LSB_3_N1_SB_FBLP_REG 0x2C022FBC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 patbuf1_lsb64 : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x66666666*/

                            /*
                               Pattern Buffer 1 - for Sending Programmable Data
                               (LSB 64b)
                            */

  } Bits;
  UINT32 Data;

} CR_LCEG3_PATBUF1_LSB_3_N1_SB_FBLP_STRUCT;

/* CR_LCEG3_START_REG_0_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x20002fc0)                                                      */
/*      SPRB0 (0x20002fc0)                                                      */
/*      SPRHBM (0x20002fc0)                                                     */
/*      SPRC0 (0x20002fc0)                                                      */
/*      SPRMCC (0x20002fc0)                                                     */
/*      SPRUCC (0x20002fc0)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_START_REG_0
*/


#define CR_LCEG3_START_REG_0_SB_FBLP_REG 0x2C022FC0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 pcs_spare_csr_fld : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */

  } Bits;
  UINT32 Data;

} CR_LCEG3_START_REG_0_SB_FBLP_STRUCT;

/* CR_LCEG3_START_REG_1_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x20002fc4)                                                      */
/*      SPRB0 (0x20002fc4)                                                      */
/*      SPRHBM (0x20002fc4)                                                     */
/*      SPRC0 (0x20002fc4)                                                      */
/*      SPRMCC (0x20002fc4)                                                     */
/*      SPRUCC (0x20002fc4)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_START_REG_1
*/


#define CR_LCEG3_START_REG_1_SB_FBLP_REG 0x2C022FC4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 pcs_spare_csr_fld : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */

  } Bits;
  UINT32 Data;

} CR_LCEG3_START_REG_1_SB_FBLP_STRUCT;

/* CR_LCEG3_START_REG_2_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x20002fc8)                                                      */
/*      SPRB0 (0x20002fc8)                                                      */
/*      SPRHBM (0x20002fc8)                                                     */
/*      SPRC0 (0x20002fc8)                                                      */
/*      SPRMCC (0x20002fc8)                                                     */
/*      SPRUCC (0x20002fc8)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_START_REG_2
*/


#define CR_LCEG3_START_REG_2_SB_FBLP_REG 0x2C022FC8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 pcs_spare_csr_fld : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */

  } Bits;
  UINT32 Data;

} CR_LCEG3_START_REG_2_SB_FBLP_STRUCT;

/* CR_LCEG3_START_REG_3_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x20002fcc)                                                      */
/*      SPRB0 (0x20002fcc)                                                      */
/*      SPRHBM (0x20002fcc)                                                     */
/*      SPRC0 (0x20002fcc)                                                      */
/*      SPRMCC (0x20002fcc)                                                     */
/*      SPRUCC (0x20002fcc)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_START_REG_3
*/


#define CR_LCEG3_START_REG_3_SB_FBLP_REG 0x2C022FCC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 pcs_spare_csr_fld : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */

  } Bits;
  UINT32 Data;

} CR_LCEG3_START_REG_3_SB_FBLP_STRUCT;

/* CR_LCEG3_TRAIN_REG_0_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x20002fd0)                                                      */
/*      SPRB0 (0x20002fd0)                                                      */
/*      SPRHBM (0x20002fd0)                                                     */
/*      SPRC0 (0x20002fd0)                                                      */
/*      SPRMCC (0x20002fd0)                                                     */
/*      SPRUCC (0x20002fd0)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_TRAIN_REG_0
*/


#define CR_LCEG3_TRAIN_REG_0_SB_FBLP_REG 0x2C022FD0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 pcs_spare_csr_fld : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */

  } Bits;
  UINT32 Data;

} CR_LCEG3_TRAIN_REG_0_SB_FBLP_STRUCT;

/* CR_LCEG3_TRAIN_REG_1_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x20002fd4)                                                      */
/*      SPRB0 (0x20002fd4)                                                      */
/*      SPRHBM (0x20002fd4)                                                     */
/*      SPRC0 (0x20002fd4)                                                      */
/*      SPRMCC (0x20002fd4)                                                     */
/*      SPRUCC (0x20002fd4)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_TRAIN_REG_1
*/


#define CR_LCEG3_TRAIN_REG_1_SB_FBLP_REG 0x2C022FD4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 pcs_spare_csr_fld : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */

  } Bits;
  UINT32 Data;

} CR_LCEG3_TRAIN_REG_1_SB_FBLP_STRUCT;

/* CR_LCEG3_TRAIN_REG_2_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x20002fd8)                                                      */
/*      SPRB0 (0x20002fd8)                                                      */
/*      SPRHBM (0x20002fd8)                                                     */
/*      SPRC0 (0x20002fd8)                                                      */
/*      SPRMCC (0x20002fd8)                                                     */
/*      SPRUCC (0x20002fd8)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_TRAIN_REG_2
*/


#define CR_LCEG3_TRAIN_REG_2_SB_FBLP_REG 0x2C022FD8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 pcs_spare_csr_fld : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */

  } Bits;
  UINT32 Data;

} CR_LCEG3_TRAIN_REG_2_SB_FBLP_STRUCT;

/* CR_LCEG3_TRAIN_REG_3_SB_FBLP_REG supported on:                               */
/*      SPRA0 (0x20002fdc)                                                      */
/*      SPRB0 (0x20002fdc)                                                      */
/*      SPRHBM (0x20002fdc)                                                     */
/*      SPRC0 (0x20002fdc)                                                      */
/*      SPRMCC (0x20002fdc)                                                     */
/*      SPRUCC (0x20002fdc)                                                     */
/* Register default value on SPRA0: 0x00000000                                  */
/* Register default value on SPRB0: 0x00000000                                  */
/* Register default value on SPRHBM: 0x00000000                                 */
/* Register default value on SPRC0: 0x00000000                                  */
/* Register default value on SPRMCC: 0x00000000                                 */
/* Register default value on SPRUCC: 0x00000000                                 */
/* SPRA0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRB0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRHBM Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRC0 Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0            */
/* SPRMCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* SPRUCC Register File:    sprsp_top/pcie_ivyrn4x16[0]/rp0/msg_inst0           */
/* Struct generated from SPRA0 BDF: 0_0_0                                       */
/* SPRA0 Security PolicyGroup: DFX1                                             */
/* SPRB0 Security PolicyGroup: DFX1                                             */
/* SPRHBM Security PolicyGroup: DFX1                                            */
/* SPRC0 Security PolicyGroup: DFX1                                             */
/* SPRMCC Security PolicyGroup: DFX1                                            */
/* SPRUCC Security PolicyGroup: DFX1                                            */
/* CR_LCEG3_TRAIN_REG_3
*/


#define CR_LCEG3_TRAIN_REG_3_SB_FBLP_REG 0x2C022FDC

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 pcs_spare_csr_fld : 32;

                            /* Bits[31:0], Access Type=RW/P, default=0x00000000*/

                            /* inserted reg from XML modification tool */

  } Bits;
  UINT32 Data;

} CR_LCEG3_TRAIN_REG_3_SB_FBLP_STRUCT;
#endif /* _SB_FBLP_h */
