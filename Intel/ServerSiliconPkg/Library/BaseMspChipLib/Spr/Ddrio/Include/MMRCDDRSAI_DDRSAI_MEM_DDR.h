/** @file
  File name:    MMRCDDRSAI_DDRSAI_MEM_DDR.h
  Input File:   SPR_MRC_DDR.xlsx
  THIS FILE IS AUTO-GENERATED BY THE MSP TOOL. DO NOT CHANGE THIS CODE.
  If edits are needed in this file, they must be done via the MSP tool.
  If there is additional project-specific data required by the MSP, it
  can be placed in MMRCDDRSAI_DDRSAI_MEM_DDR.h, which is used for non-tool-generated
  data
  Includes register defines specific to a project.

  @copyright
  INTEL CONFIDENTIAL
  Copyright 2005 - 2020 Intel Corporation. <BR>

  The source code contained or described herein and all documents related to the
  source code ("Material") are owned by Intel Corporation or its suppliers or
  licensors. Title to the Material remains with Intel Corporation or its suppliers
  and licensors. The Material may contain trade secrets and proprietary    and
  confidential information of Intel Corporation and its suppliers and licensors,
  and is protected by worldwide copyright and trade secret laws and treaty
  provisions. No part of the Material may be used, copied, reproduced, modified,
  published, uploaded, posted, transmitted, distributed, or disclosed in any way
  without Intel's prior express written permission.

  No license under any patent, copyright, trade secret or other intellectual
  property right is granted to or conferred upon you by disclosure or delivery
  of the Materials, either expressly, by implication, inducement, estoppel or
  otherwise. Any license under such intellectual property rights must be
  express and approved by Intel in writing.

  Unless otherwise agreed by Intel in writing, you may not remove or alter
  this notice or any other notice embedded in Materials by Intel or
  Intel's suppliers or licensors in any way.
**/

#ifndef _MMRCDDRSAI_DDRSAI_MEM_DDR_H_DDR_
#define _MMRCDDRSAI_DDRSAI_MEM_DDR_H_DDR_

#include "MspDataTypes.h"

#define DDRIO_BIOS_RAC_LO_DDRSAI_DDRSAI_MEM_REG_DDR        0x0001FF00
typedef union {
  struct {
    //
    // Bit-vector used to determine which agents are allowed read access to registers
    // in MEMIO_BOOT security policy group, based on the value from each agent's 6bit
    // SAI field. 
    // 
    // Bits[31:0], RW, default = 0x300021E
    //
    UINT32 reserved : 32;
  } Bits;
  UINT32 Data;
} DDRIO_BIOS_RAC_LO_DDRSAI_DDRSAI_MEM_STRUCT_DDR;

#define DDRIO_BIOS_RAC_HI_DDRSAI_DDRSAI_MEM_REG_DDR        0x0001FF04
typedef union {
  struct {
    //
    // Bit-vector used to determine which agents are allowed read access to registers
    // in MEMIO_BOOT security policy group, based on the value from each agent's 6bit
    // SAI field. 
    // 
    // Bits[31:0], RW, default = 0x20000500
    //
    UINT32 reserved : 32;
  } Bits;
  UINT32 Data;
} DDRIO_BIOS_RAC_HI_DDRSAI_DDRSAI_MEM_STRUCT_DDR;

#define DDRIO_BIOS_WAC_LO_DDRSAI_DDRSAI_MEM_REG_DDR        0x0001FF08
typedef union {
  struct {
    //
    // Bit-vector used to determine which agents are allowed write access to registers
    // in MEMIO_BOOT security policy group, based on the value from each agent's 6bit
    // SAI field. 
    // 
    // Bits[31:0], RW, default = 0x100021A
    //
    UINT32 reserved : 32;
  } Bits;
  UINT32 Data;
} DDRIO_BIOS_WAC_LO_DDRSAI_DDRSAI_MEM_STRUCT_DDR;

#define DDRIO_BIOS_WAC_HI_DDRSAI_DDRSAI_MEM_REG_DDR        0x0001FF0C
typedef union {
  struct {
    //
    // Bit-vector used to determine which agents are allowed write access to registers
    // in MEMIO_BOOT security policy group, based on the value from each agent's 6bit
    // SAI field. 
    // 
    // Bits[31:0], RW, default = 0x20000400
    //
    UINT32 reserved : 32;
  } Bits;
  UINT32 Data;
} DDRIO_BIOS_WAC_HI_DDRSAI_DDRSAI_MEM_STRUCT_DDR;

#define DDRIO_BIOS_CP_LO_DDRSAI_DDRSAI_MEM_REG_DDR         0x0001FF10
typedef union {
  struct {
    //
    // Bit-vector used to determine which agents are allowed write access to MEMIO_BOOT
    // WAC, RAC and CP registers, based on the value from each agent's 6bit SAI field.
    // 
    // Bits[31:0], RW, default = 0x1000208
    //
    UINT32 reserved : 32;
  } Bits;
  UINT32 Data;
} DDRIO_BIOS_CP_LO_DDRSAI_DDRSAI_MEM_STRUCT_DDR;

#define DDRIO_BIOS_CP_HI_DDRSAI_DDRSAI_MEM_REG_DDR         0x0001FF14
typedef union {
  struct {
    //
    // Bit-vector used to determine which agents are allowed write access to MEMIO_BOOT
    // WAC, RAC and CP registers, based on the value from each agent's 6bit SAI field.
    // 
    // Bits[31:0], RW, default = 0x400
    //
    UINT32 reserved : 32;
  } Bits;
  UINT32 Data;
} DDRIO_BIOS_CP_HI_DDRSAI_DDRSAI_MEM_STRUCT_DDR;


#endif // _MMRCDDRSAI_DDRSAI_MEM_DDR_H_DDR_
