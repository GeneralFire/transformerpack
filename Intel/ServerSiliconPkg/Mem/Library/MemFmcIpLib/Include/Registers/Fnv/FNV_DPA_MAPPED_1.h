
/** @file
  FNV_DPA_MAPPED_1.h

  @copyright
  INTEL CONFIDENTIAL
  Copyright 2007 - 2018 Intel Corporation. <BR>
  
  The source code contained or described herein and all documents related to the
  source code ("Material") are owned by Intel Corporation or its suppliers or
  licensors. Title to the Material remains with Intel Corporation or its suppliers
  and licensors. The Material may contain trade secrets and proprietary    and
  confidential information of Intel Corporation and its suppliers and licensors,
  and is protected by worldwide copyright and trade secret laws and treaty
  provisions. No part of the Material may be used, copied, reproduced, modified,
  published, uploaded, posted, transmitted, distributed, or disclosed in any way
  without Intel's prior express written permission.
  
  No license under any patent, copyright, trade secret or other intellectual
  property right is granted to or conferred upon you by disclosure or delivery
  of the Materials, either expressly, by implication, inducement, estoppel or
  otherwise. Any license under such intellectual property rights must be
  express and approved by Intel in writing.
  
  Unless otherwise agreed by Intel in writing, you may not remove or alter
  this notice or any other notice embedded in Materials by Intel or
  Intel's suppliers or licensors in any way.
  
  This file contains Silicon register definitions.
  
  This is a generated file; please do not modify it directly.
  
**/

/* The following security policy groups are used by registers in this file:     */

/* BWV Security Policy Groups:                                                  */


#ifndef _FNV_DPA_MAPPED_1_h
#define _FNV_DPA_MAPPED_1_h
#include "DataTypes.h"

/* BM_BW_ADDR_L_0_FNV_DPA_MAPPED_1_REG supported on:                            */
/*      BWV (0x40001000)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_0_FNV_DPA_MAPPED_1_REG 0x1B140000

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_0_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_0_FNV_DPA_MAPPED_1_REG supported on:                            */
/*      BWV (0x40001004)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_0_FNV_DPA_MAPPED_1_REG 0x1B140004

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_0_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_0_FNV_DPA_MAPPED_1_REG supported on:                            */
/*      BWV (0x40001008)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_0_FNV_DPA_MAPPED_1_REG 0x1B140008

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_0_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_1_FNV_DPA_MAPPED_1_REG supported on:                            */
/*      BWV (0x40001010)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_1_FNV_DPA_MAPPED_1_REG 0x1B140010

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_1_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_1_FNV_DPA_MAPPED_1_REG supported on:                            */
/*      BWV (0x40001014)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_1_FNV_DPA_MAPPED_1_REG 0x1B140014

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_1_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_1_FNV_DPA_MAPPED_1_REG supported on:                            */
/*      BWV (0x40001018)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_1_FNV_DPA_MAPPED_1_REG 0x1B140018

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_1_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_2_FNV_DPA_MAPPED_1_REG supported on:                            */
/*      BWV (0x40001020)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_2_FNV_DPA_MAPPED_1_REG 0x1B140020

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_2_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_2_FNV_DPA_MAPPED_1_REG supported on:                            */
/*      BWV (0x40001024)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_2_FNV_DPA_MAPPED_1_REG 0x1B140024

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_2_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_2_FNV_DPA_MAPPED_1_REG supported on:                            */
/*      BWV (0x40001028)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_2_FNV_DPA_MAPPED_1_REG 0x1B140028

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_2_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_3_FNV_DPA_MAPPED_1_REG supported on:                            */
/*      BWV (0x40001030)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_3_FNV_DPA_MAPPED_1_REG 0x1B140030

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_3_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_3_FNV_DPA_MAPPED_1_REG supported on:                            */
/*      BWV (0x40001034)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_3_FNV_DPA_MAPPED_1_REG 0x1B140034

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_3_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_3_FNV_DPA_MAPPED_1_REG supported on:                            */
/*      BWV (0x40001038)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_3_FNV_DPA_MAPPED_1_REG 0x1B140038

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_3_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_4_FNV_DPA_MAPPED_1_REG supported on:                            */
/*      BWV (0x40001040)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_4_FNV_DPA_MAPPED_1_REG 0x1B140040

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_4_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_4_FNV_DPA_MAPPED_1_REG supported on:                            */
/*      BWV (0x40001044)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_4_FNV_DPA_MAPPED_1_REG 0x1B140044

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_4_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_4_FNV_DPA_MAPPED_1_REG supported on:                            */
/*      BWV (0x40001048)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_4_FNV_DPA_MAPPED_1_REG 0x1B140048

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_4_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_5_FNV_DPA_MAPPED_1_REG supported on:                            */
/*      BWV (0x40001050)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_5_FNV_DPA_MAPPED_1_REG 0x1B140050

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_5_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_5_FNV_DPA_MAPPED_1_REG supported on:                            */
/*      BWV (0x40001054)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_5_FNV_DPA_MAPPED_1_REG 0x1B140054

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_5_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_5_FNV_DPA_MAPPED_1_REG supported on:                            */
/*      BWV (0x40001058)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_5_FNV_DPA_MAPPED_1_REG 0x1B140058

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_5_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_6_FNV_DPA_MAPPED_1_REG supported on:                            */
/*      BWV (0x40001060)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_6_FNV_DPA_MAPPED_1_REG 0x1B140060

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_6_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_6_FNV_DPA_MAPPED_1_REG supported on:                            */
/*      BWV (0x40001064)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_6_FNV_DPA_MAPPED_1_REG 0x1B140064

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_6_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_6_FNV_DPA_MAPPED_1_REG supported on:                            */
/*      BWV (0x40001068)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_6_FNV_DPA_MAPPED_1_REG 0x1B140068

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_6_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_7_FNV_DPA_MAPPED_1_REG supported on:                            */
/*      BWV (0x40001070)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_7_FNV_DPA_MAPPED_1_REG 0x1B140070

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_7_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_7_FNV_DPA_MAPPED_1_REG supported on:                            */
/*      BWV (0x40001074)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_7_FNV_DPA_MAPPED_1_REG 0x1B140074

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_7_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_7_FNV_DPA_MAPPED_1_REG supported on:                            */
/*      BWV (0x40001078)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_7_FNV_DPA_MAPPED_1_REG 0x1B140078

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_7_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_8_FNV_DPA_MAPPED_1_REG supported on:                            */
/*      BWV (0x40001080)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_8_FNV_DPA_MAPPED_1_REG 0x1B140080

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_8_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_8_FNV_DPA_MAPPED_1_REG supported on:                            */
/*      BWV (0x40001084)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_8_FNV_DPA_MAPPED_1_REG 0x1B140084

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_8_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_8_FNV_DPA_MAPPED_1_REG supported on:                            */
/*      BWV (0x40001088)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_8_FNV_DPA_MAPPED_1_REG 0x1B140088

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_8_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_9_FNV_DPA_MAPPED_1_REG supported on:                            */
/*      BWV (0x40001090)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_9_FNV_DPA_MAPPED_1_REG 0x1B140090

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_9_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_9_FNV_DPA_MAPPED_1_REG supported on:                            */
/*      BWV (0x40001094)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_9_FNV_DPA_MAPPED_1_REG 0x1B140094

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_9_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_9_FNV_DPA_MAPPED_1_REG supported on:                            */
/*      BWV (0x40001098)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_9_FNV_DPA_MAPPED_1_REG 0x1B140098

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_9_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_10_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400010a0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_10_FNV_DPA_MAPPED_1_REG 0x1B1400A0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_10_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_10_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400010a4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_10_FNV_DPA_MAPPED_1_REG 0x1B1400A4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_10_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_10_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400010a8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_10_FNV_DPA_MAPPED_1_REG 0x1B1400A8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_10_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_11_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400010b0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_11_FNV_DPA_MAPPED_1_REG 0x1B1400B0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_11_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_11_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400010b4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_11_FNV_DPA_MAPPED_1_REG 0x1B1400B4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_11_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_11_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400010b8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_11_FNV_DPA_MAPPED_1_REG 0x1B1400B8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_11_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_12_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400010c0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_12_FNV_DPA_MAPPED_1_REG 0x1B1400C0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_12_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_12_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400010c4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_12_FNV_DPA_MAPPED_1_REG 0x1B1400C4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_12_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_12_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400010c8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_12_FNV_DPA_MAPPED_1_REG 0x1B1400C8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_12_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_13_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400010d0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_13_FNV_DPA_MAPPED_1_REG 0x1B1400D0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_13_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_13_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400010d4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_13_FNV_DPA_MAPPED_1_REG 0x1B1400D4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_13_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_13_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400010d8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_13_FNV_DPA_MAPPED_1_REG 0x1B1400D8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_13_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_14_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400010e0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_14_FNV_DPA_MAPPED_1_REG 0x1B1400E0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_14_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_14_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400010e4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_14_FNV_DPA_MAPPED_1_REG 0x1B1400E4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_14_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_14_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400010e8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_14_FNV_DPA_MAPPED_1_REG 0x1B1400E8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_14_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_15_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400010f0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_15_FNV_DPA_MAPPED_1_REG 0x1B1400F0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_15_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_15_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400010f4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_15_FNV_DPA_MAPPED_1_REG 0x1B1400F4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_15_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_15_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400010f8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_15_FNV_DPA_MAPPED_1_REG 0x1B1400F8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_15_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_16_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001100)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_16_FNV_DPA_MAPPED_1_REG 0x1B140100

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_16_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_16_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001104)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_16_FNV_DPA_MAPPED_1_REG 0x1B140104

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_16_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_16_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001108)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_16_FNV_DPA_MAPPED_1_REG 0x1B140108

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_16_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_17_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001110)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_17_FNV_DPA_MAPPED_1_REG 0x1B140110

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_17_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_17_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001114)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_17_FNV_DPA_MAPPED_1_REG 0x1B140114

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_17_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_17_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001118)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_17_FNV_DPA_MAPPED_1_REG 0x1B140118

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_17_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_18_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001120)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_18_FNV_DPA_MAPPED_1_REG 0x1B140120

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_18_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_18_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001124)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_18_FNV_DPA_MAPPED_1_REG 0x1B140124

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_18_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_18_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001128)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_18_FNV_DPA_MAPPED_1_REG 0x1B140128

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_18_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_19_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001130)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_19_FNV_DPA_MAPPED_1_REG 0x1B140130

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_19_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_19_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001134)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_19_FNV_DPA_MAPPED_1_REG 0x1B140134

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_19_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_19_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001138)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_19_FNV_DPA_MAPPED_1_REG 0x1B140138

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_19_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_20_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001140)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_20_FNV_DPA_MAPPED_1_REG 0x1B140140

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_20_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_20_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001144)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_20_FNV_DPA_MAPPED_1_REG 0x1B140144

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_20_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_20_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001148)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_20_FNV_DPA_MAPPED_1_REG 0x1B140148

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_20_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_21_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001150)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_21_FNV_DPA_MAPPED_1_REG 0x1B140150

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_21_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_21_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001154)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_21_FNV_DPA_MAPPED_1_REG 0x1B140154

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_21_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_21_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001158)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_21_FNV_DPA_MAPPED_1_REG 0x1B140158

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_21_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_22_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001160)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_22_FNV_DPA_MAPPED_1_REG 0x1B140160

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_22_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_22_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001164)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_22_FNV_DPA_MAPPED_1_REG 0x1B140164

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_22_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_22_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001168)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_22_FNV_DPA_MAPPED_1_REG 0x1B140168

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_22_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_23_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001170)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_23_FNV_DPA_MAPPED_1_REG 0x1B140170

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_23_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_23_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001174)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_23_FNV_DPA_MAPPED_1_REG 0x1B140174

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_23_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_23_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001178)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_23_FNV_DPA_MAPPED_1_REG 0x1B140178

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_23_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_24_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001180)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_24_FNV_DPA_MAPPED_1_REG 0x1B140180

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_24_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_24_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001184)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_24_FNV_DPA_MAPPED_1_REG 0x1B140184

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_24_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_24_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001188)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_24_FNV_DPA_MAPPED_1_REG 0x1B140188

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_24_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_25_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001190)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_25_FNV_DPA_MAPPED_1_REG 0x1B140190

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_25_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_25_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001194)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_25_FNV_DPA_MAPPED_1_REG 0x1B140194

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_25_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_25_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001198)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_25_FNV_DPA_MAPPED_1_REG 0x1B140198

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_25_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_26_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400011a0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_26_FNV_DPA_MAPPED_1_REG 0x1B1401A0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_26_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_26_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400011a4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_26_FNV_DPA_MAPPED_1_REG 0x1B1401A4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_26_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_26_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400011a8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_26_FNV_DPA_MAPPED_1_REG 0x1B1401A8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_26_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_27_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400011b0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_27_FNV_DPA_MAPPED_1_REG 0x1B1401B0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_27_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_27_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400011b4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_27_FNV_DPA_MAPPED_1_REG 0x1B1401B4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_27_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_27_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400011b8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_27_FNV_DPA_MAPPED_1_REG 0x1B1401B8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_27_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_28_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400011c0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_28_FNV_DPA_MAPPED_1_REG 0x1B1401C0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_28_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_28_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400011c4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_28_FNV_DPA_MAPPED_1_REG 0x1B1401C4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_28_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_28_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400011c8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_28_FNV_DPA_MAPPED_1_REG 0x1B1401C8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_28_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_29_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400011d0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_29_FNV_DPA_MAPPED_1_REG 0x1B1401D0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_29_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_29_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400011d4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_29_FNV_DPA_MAPPED_1_REG 0x1B1401D4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_29_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_29_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400011d8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_29_FNV_DPA_MAPPED_1_REG 0x1B1401D8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_29_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_30_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400011e0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_30_FNV_DPA_MAPPED_1_REG 0x1B1401E0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_30_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_30_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400011e4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_30_FNV_DPA_MAPPED_1_REG 0x1B1401E4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_30_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_30_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400011e8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_30_FNV_DPA_MAPPED_1_REG 0x1B1401E8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_30_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_31_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400011f0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_31_FNV_DPA_MAPPED_1_REG 0x1B1401F0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_31_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_31_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400011f4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_31_FNV_DPA_MAPPED_1_REG 0x1B1401F4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_31_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_31_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400011f8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_31_FNV_DPA_MAPPED_1_REG 0x1B1401F8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_31_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_32_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001200)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_32_FNV_DPA_MAPPED_1_REG 0x1B140200

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_32_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_32_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001204)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_32_FNV_DPA_MAPPED_1_REG 0x1B140204

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_32_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_32_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001208)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_32_FNV_DPA_MAPPED_1_REG 0x1B140208

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_32_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_33_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001210)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_33_FNV_DPA_MAPPED_1_REG 0x1B140210

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_33_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_33_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001214)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_33_FNV_DPA_MAPPED_1_REG 0x1B140214

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_33_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_33_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001218)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_33_FNV_DPA_MAPPED_1_REG 0x1B140218

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_33_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_34_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001220)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_34_FNV_DPA_MAPPED_1_REG 0x1B140220

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_34_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_34_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001224)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_34_FNV_DPA_MAPPED_1_REG 0x1B140224

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_34_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_34_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001228)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_34_FNV_DPA_MAPPED_1_REG 0x1B140228

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_34_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_35_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001230)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_35_FNV_DPA_MAPPED_1_REG 0x1B140230

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_35_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_35_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001234)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_35_FNV_DPA_MAPPED_1_REG 0x1B140234

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_35_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_35_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001238)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_35_FNV_DPA_MAPPED_1_REG 0x1B140238

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_35_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_36_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001240)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_36_FNV_DPA_MAPPED_1_REG 0x1B140240

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_36_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_36_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001244)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_36_FNV_DPA_MAPPED_1_REG 0x1B140244

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_36_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_36_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001248)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_36_FNV_DPA_MAPPED_1_REG 0x1B140248

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_36_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_37_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001250)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_37_FNV_DPA_MAPPED_1_REG 0x1B140250

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_37_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_37_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001254)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_37_FNV_DPA_MAPPED_1_REG 0x1B140254

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_37_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_37_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001258)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_37_FNV_DPA_MAPPED_1_REG 0x1B140258

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_37_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_38_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001260)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_38_FNV_DPA_MAPPED_1_REG 0x1B140260

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_38_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_38_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001264)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_38_FNV_DPA_MAPPED_1_REG 0x1B140264

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_38_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_38_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001268)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_38_FNV_DPA_MAPPED_1_REG 0x1B140268

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_38_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_39_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001270)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_39_FNV_DPA_MAPPED_1_REG 0x1B140270

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_39_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_39_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001274)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_39_FNV_DPA_MAPPED_1_REG 0x1B140274

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_39_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_39_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001278)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_39_FNV_DPA_MAPPED_1_REG 0x1B140278

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_39_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_40_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001280)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_40_FNV_DPA_MAPPED_1_REG 0x1B140280

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_40_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_40_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001284)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_40_FNV_DPA_MAPPED_1_REG 0x1B140284

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_40_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_40_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001288)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_40_FNV_DPA_MAPPED_1_REG 0x1B140288

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_40_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_41_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001290)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_41_FNV_DPA_MAPPED_1_REG 0x1B140290

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_41_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_41_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001294)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_41_FNV_DPA_MAPPED_1_REG 0x1B140294

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_41_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_41_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001298)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_41_FNV_DPA_MAPPED_1_REG 0x1B140298

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_41_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_42_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400012a0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_42_FNV_DPA_MAPPED_1_REG 0x1B1402A0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_42_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_42_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400012a4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_42_FNV_DPA_MAPPED_1_REG 0x1B1402A4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_42_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_42_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400012a8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_42_FNV_DPA_MAPPED_1_REG 0x1B1402A8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_42_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_43_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400012b0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_43_FNV_DPA_MAPPED_1_REG 0x1B1402B0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_43_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_43_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400012b4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_43_FNV_DPA_MAPPED_1_REG 0x1B1402B4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_43_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_43_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400012b8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_43_FNV_DPA_MAPPED_1_REG 0x1B1402B8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_43_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_44_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400012c0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_44_FNV_DPA_MAPPED_1_REG 0x1B1402C0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_44_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_44_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400012c4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_44_FNV_DPA_MAPPED_1_REG 0x1B1402C4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_44_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_44_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400012c8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_44_FNV_DPA_MAPPED_1_REG 0x1B1402C8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_44_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_45_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400012d0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_45_FNV_DPA_MAPPED_1_REG 0x1B1402D0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_45_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_45_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400012d4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_45_FNV_DPA_MAPPED_1_REG 0x1B1402D4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_45_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_45_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400012d8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_45_FNV_DPA_MAPPED_1_REG 0x1B1402D8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_45_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_46_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400012e0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_46_FNV_DPA_MAPPED_1_REG 0x1B1402E0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_46_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_46_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400012e4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_46_FNV_DPA_MAPPED_1_REG 0x1B1402E4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_46_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_46_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400012e8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_46_FNV_DPA_MAPPED_1_REG 0x1B1402E8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_46_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_47_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400012f0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_47_FNV_DPA_MAPPED_1_REG 0x1B1402F0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_47_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_47_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400012f4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_47_FNV_DPA_MAPPED_1_REG 0x1B1402F4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_47_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_47_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400012f8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_47_FNV_DPA_MAPPED_1_REG 0x1B1402F8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_47_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_48_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001300)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_48_FNV_DPA_MAPPED_1_REG 0x1B140300

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_48_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_48_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001304)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_48_FNV_DPA_MAPPED_1_REG 0x1B140304

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_48_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_48_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001308)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_48_FNV_DPA_MAPPED_1_REG 0x1B140308

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_48_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_49_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001310)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_49_FNV_DPA_MAPPED_1_REG 0x1B140310

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_49_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_49_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001314)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_49_FNV_DPA_MAPPED_1_REG 0x1B140314

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_49_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_49_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001318)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_49_FNV_DPA_MAPPED_1_REG 0x1B140318

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_49_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_50_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001320)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_50_FNV_DPA_MAPPED_1_REG 0x1B140320

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_50_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_50_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001324)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_50_FNV_DPA_MAPPED_1_REG 0x1B140324

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_50_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_50_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001328)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_50_FNV_DPA_MAPPED_1_REG 0x1B140328

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_50_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_51_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001330)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_51_FNV_DPA_MAPPED_1_REG 0x1B140330

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_51_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_51_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001334)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_51_FNV_DPA_MAPPED_1_REG 0x1B140334

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_51_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_51_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001338)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_51_FNV_DPA_MAPPED_1_REG 0x1B140338

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_51_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_52_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001340)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_52_FNV_DPA_MAPPED_1_REG 0x1B140340

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_52_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_52_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001344)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_52_FNV_DPA_MAPPED_1_REG 0x1B140344

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_52_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_52_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001348)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_52_FNV_DPA_MAPPED_1_REG 0x1B140348

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_52_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_53_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001350)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_53_FNV_DPA_MAPPED_1_REG 0x1B140350

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_53_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_53_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001354)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_53_FNV_DPA_MAPPED_1_REG 0x1B140354

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_53_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_53_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001358)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_53_FNV_DPA_MAPPED_1_REG 0x1B140358

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_53_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_54_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001360)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_54_FNV_DPA_MAPPED_1_REG 0x1B140360

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_54_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_54_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001364)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_54_FNV_DPA_MAPPED_1_REG 0x1B140364

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_54_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_54_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001368)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_54_FNV_DPA_MAPPED_1_REG 0x1B140368

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_54_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_55_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001370)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_55_FNV_DPA_MAPPED_1_REG 0x1B140370

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_55_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_55_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001374)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_55_FNV_DPA_MAPPED_1_REG 0x1B140374

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_55_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_55_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001378)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_55_FNV_DPA_MAPPED_1_REG 0x1B140378

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_55_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_56_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001380)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_56_FNV_DPA_MAPPED_1_REG 0x1B140380

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_56_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_56_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001384)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_56_FNV_DPA_MAPPED_1_REG 0x1B140384

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_56_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_56_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001388)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_56_FNV_DPA_MAPPED_1_REG 0x1B140388

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_56_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_57_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001390)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_57_FNV_DPA_MAPPED_1_REG 0x1B140390

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_57_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_57_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001394)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_57_FNV_DPA_MAPPED_1_REG 0x1B140394

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_57_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_57_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001398)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_57_FNV_DPA_MAPPED_1_REG 0x1B140398

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_57_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_58_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400013a0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_58_FNV_DPA_MAPPED_1_REG 0x1B1403A0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_58_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_58_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400013a4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_58_FNV_DPA_MAPPED_1_REG 0x1B1403A4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_58_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_58_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400013a8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_58_FNV_DPA_MAPPED_1_REG 0x1B1403A8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_58_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_59_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400013b0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_59_FNV_DPA_MAPPED_1_REG 0x1B1403B0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_59_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_59_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400013b4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_59_FNV_DPA_MAPPED_1_REG 0x1B1403B4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_59_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_59_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400013b8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_59_FNV_DPA_MAPPED_1_REG 0x1B1403B8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_59_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_60_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400013c0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_60_FNV_DPA_MAPPED_1_REG 0x1B1403C0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_60_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_60_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400013c4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_60_FNV_DPA_MAPPED_1_REG 0x1B1403C4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_60_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_60_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400013c8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_60_FNV_DPA_MAPPED_1_REG 0x1B1403C8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_60_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_61_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400013d0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_61_FNV_DPA_MAPPED_1_REG 0x1B1403D0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_61_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_61_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400013d4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_61_FNV_DPA_MAPPED_1_REG 0x1B1403D4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_61_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_61_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400013d8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_61_FNV_DPA_MAPPED_1_REG 0x1B1403D8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_61_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_62_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400013e0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_62_FNV_DPA_MAPPED_1_REG 0x1B1403E0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_62_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_62_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400013e4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_62_FNV_DPA_MAPPED_1_REG 0x1B1403E4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_62_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_62_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400013e8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_62_FNV_DPA_MAPPED_1_REG 0x1B1403E8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_62_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_63_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400013f0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_63_FNV_DPA_MAPPED_1_REG 0x1B1403F0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_63_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_63_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400013f4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_63_FNV_DPA_MAPPED_1_REG 0x1B1403F4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_63_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_63_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400013f8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_63_FNV_DPA_MAPPED_1_REG 0x1B1403F8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_63_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_64_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001400)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_64_FNV_DPA_MAPPED_1_REG 0x1B140400

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_64_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_64_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001404)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_64_FNV_DPA_MAPPED_1_REG 0x1B140404

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_64_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_64_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001408)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_64_FNV_DPA_MAPPED_1_REG 0x1B140408

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_64_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_65_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001410)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_65_FNV_DPA_MAPPED_1_REG 0x1B140410

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_65_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_65_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001414)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_65_FNV_DPA_MAPPED_1_REG 0x1B140414

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_65_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_65_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001418)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_65_FNV_DPA_MAPPED_1_REG 0x1B140418

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_65_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_66_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001420)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_66_FNV_DPA_MAPPED_1_REG 0x1B140420

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_66_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_66_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001424)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_66_FNV_DPA_MAPPED_1_REG 0x1B140424

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_66_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_66_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001428)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_66_FNV_DPA_MAPPED_1_REG 0x1B140428

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_66_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_67_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001430)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_67_FNV_DPA_MAPPED_1_REG 0x1B140430

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_67_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_67_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001434)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_67_FNV_DPA_MAPPED_1_REG 0x1B140434

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_67_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_67_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001438)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_67_FNV_DPA_MAPPED_1_REG 0x1B140438

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_67_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_68_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001440)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_68_FNV_DPA_MAPPED_1_REG 0x1B140440

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_68_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_68_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001444)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_68_FNV_DPA_MAPPED_1_REG 0x1B140444

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_68_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_68_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001448)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_68_FNV_DPA_MAPPED_1_REG 0x1B140448

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_68_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_69_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001450)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_69_FNV_DPA_MAPPED_1_REG 0x1B140450

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_69_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_69_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001454)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_69_FNV_DPA_MAPPED_1_REG 0x1B140454

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_69_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_69_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001458)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_69_FNV_DPA_MAPPED_1_REG 0x1B140458

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_69_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_70_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001460)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_70_FNV_DPA_MAPPED_1_REG 0x1B140460

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_70_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_70_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001464)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_70_FNV_DPA_MAPPED_1_REG 0x1B140464

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_70_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_70_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001468)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_70_FNV_DPA_MAPPED_1_REG 0x1B140468

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_70_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_71_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001470)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_71_FNV_DPA_MAPPED_1_REG 0x1B140470

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_71_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_71_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001474)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_71_FNV_DPA_MAPPED_1_REG 0x1B140474

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_71_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_71_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001478)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_71_FNV_DPA_MAPPED_1_REG 0x1B140478

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_71_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_72_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001480)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_72_FNV_DPA_MAPPED_1_REG 0x1B140480

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_72_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_72_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001484)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_72_FNV_DPA_MAPPED_1_REG 0x1B140484

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_72_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_72_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001488)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_72_FNV_DPA_MAPPED_1_REG 0x1B140488

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_72_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_73_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001490)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_73_FNV_DPA_MAPPED_1_REG 0x1B140490

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_73_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_73_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001494)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_73_FNV_DPA_MAPPED_1_REG 0x1B140494

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_73_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_73_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001498)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_73_FNV_DPA_MAPPED_1_REG 0x1B140498

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_73_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_74_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400014a0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_74_FNV_DPA_MAPPED_1_REG 0x1B1404A0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_74_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_74_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400014a4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_74_FNV_DPA_MAPPED_1_REG 0x1B1404A4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_74_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_74_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400014a8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_74_FNV_DPA_MAPPED_1_REG 0x1B1404A8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_74_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_75_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400014b0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_75_FNV_DPA_MAPPED_1_REG 0x1B1404B0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_75_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_75_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400014b4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_75_FNV_DPA_MAPPED_1_REG 0x1B1404B4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_75_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_75_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400014b8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_75_FNV_DPA_MAPPED_1_REG 0x1B1404B8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_75_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_76_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400014c0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_76_FNV_DPA_MAPPED_1_REG 0x1B1404C0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_76_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_76_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400014c4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_76_FNV_DPA_MAPPED_1_REG 0x1B1404C4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_76_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_76_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400014c8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_76_FNV_DPA_MAPPED_1_REG 0x1B1404C8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_76_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_77_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400014d0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_77_FNV_DPA_MAPPED_1_REG 0x1B1404D0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_77_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_77_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400014d4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_77_FNV_DPA_MAPPED_1_REG 0x1B1404D4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_77_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_77_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400014d8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_77_FNV_DPA_MAPPED_1_REG 0x1B1404D8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_77_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_78_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400014e0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_78_FNV_DPA_MAPPED_1_REG 0x1B1404E0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_78_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_78_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400014e4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_78_FNV_DPA_MAPPED_1_REG 0x1B1404E4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_78_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_78_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400014e8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_78_FNV_DPA_MAPPED_1_REG 0x1B1404E8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_78_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_79_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400014f0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_79_FNV_DPA_MAPPED_1_REG 0x1B1404F0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_79_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_79_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400014f4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_79_FNV_DPA_MAPPED_1_REG 0x1B1404F4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_79_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_79_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400014f8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_79_FNV_DPA_MAPPED_1_REG 0x1B1404F8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_79_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_80_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001500)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_80_FNV_DPA_MAPPED_1_REG 0x1B140500

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_80_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_80_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001504)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_80_FNV_DPA_MAPPED_1_REG 0x1B140504

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_80_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_80_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001508)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_80_FNV_DPA_MAPPED_1_REG 0x1B140508

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_80_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_81_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001510)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_81_FNV_DPA_MAPPED_1_REG 0x1B140510

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_81_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_81_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001514)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_81_FNV_DPA_MAPPED_1_REG 0x1B140514

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_81_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_81_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001518)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_81_FNV_DPA_MAPPED_1_REG 0x1B140518

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_81_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_82_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001520)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_82_FNV_DPA_MAPPED_1_REG 0x1B140520

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_82_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_82_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001524)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_82_FNV_DPA_MAPPED_1_REG 0x1B140524

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_82_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_82_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001528)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_82_FNV_DPA_MAPPED_1_REG 0x1B140528

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_82_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_83_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001530)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_83_FNV_DPA_MAPPED_1_REG 0x1B140530

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_83_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_83_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001534)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_83_FNV_DPA_MAPPED_1_REG 0x1B140534

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_83_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_83_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001538)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_83_FNV_DPA_MAPPED_1_REG 0x1B140538

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_83_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_84_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001540)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_84_FNV_DPA_MAPPED_1_REG 0x1B140540

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_84_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_84_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001544)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_84_FNV_DPA_MAPPED_1_REG 0x1B140544

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_84_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_84_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001548)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_84_FNV_DPA_MAPPED_1_REG 0x1B140548

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_84_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_85_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001550)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_85_FNV_DPA_MAPPED_1_REG 0x1B140550

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_85_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_85_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001554)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_85_FNV_DPA_MAPPED_1_REG 0x1B140554

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_85_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_85_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001558)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_85_FNV_DPA_MAPPED_1_REG 0x1B140558

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_85_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_86_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001560)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_86_FNV_DPA_MAPPED_1_REG 0x1B140560

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_86_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_86_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001564)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_86_FNV_DPA_MAPPED_1_REG 0x1B140564

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_86_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_86_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001568)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_86_FNV_DPA_MAPPED_1_REG 0x1B140568

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_86_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_87_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001570)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_87_FNV_DPA_MAPPED_1_REG 0x1B140570

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_87_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_87_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001574)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_87_FNV_DPA_MAPPED_1_REG 0x1B140574

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_87_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_87_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001578)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_87_FNV_DPA_MAPPED_1_REG 0x1B140578

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_87_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_88_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001580)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_88_FNV_DPA_MAPPED_1_REG 0x1B140580

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_88_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_88_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001584)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_88_FNV_DPA_MAPPED_1_REG 0x1B140584

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_88_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_88_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001588)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_88_FNV_DPA_MAPPED_1_REG 0x1B140588

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_88_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_89_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001590)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_89_FNV_DPA_MAPPED_1_REG 0x1B140590

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_89_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_89_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001594)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_89_FNV_DPA_MAPPED_1_REG 0x1B140594

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_89_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_89_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001598)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_89_FNV_DPA_MAPPED_1_REG 0x1B140598

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_89_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_90_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400015a0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_90_FNV_DPA_MAPPED_1_REG 0x1B1405A0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_90_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_90_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400015a4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_90_FNV_DPA_MAPPED_1_REG 0x1B1405A4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_90_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_90_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400015a8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_90_FNV_DPA_MAPPED_1_REG 0x1B1405A8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_90_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_91_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400015b0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_91_FNV_DPA_MAPPED_1_REG 0x1B1405B0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_91_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_91_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400015b4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_91_FNV_DPA_MAPPED_1_REG 0x1B1405B4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_91_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_91_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400015b8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_91_FNV_DPA_MAPPED_1_REG 0x1B1405B8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_91_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_92_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400015c0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_92_FNV_DPA_MAPPED_1_REG 0x1B1405C0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_92_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_92_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400015c4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_92_FNV_DPA_MAPPED_1_REG 0x1B1405C4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_92_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_92_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400015c8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_92_FNV_DPA_MAPPED_1_REG 0x1B1405C8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_92_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_93_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400015d0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_93_FNV_DPA_MAPPED_1_REG 0x1B1405D0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_93_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_93_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400015d4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_93_FNV_DPA_MAPPED_1_REG 0x1B1405D4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_93_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_93_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400015d8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_93_FNV_DPA_MAPPED_1_REG 0x1B1405D8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_93_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_94_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400015e0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_94_FNV_DPA_MAPPED_1_REG 0x1B1405E0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_94_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_94_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400015e4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_94_FNV_DPA_MAPPED_1_REG 0x1B1405E4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_94_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_94_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400015e8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_94_FNV_DPA_MAPPED_1_REG 0x1B1405E8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_94_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_95_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400015f0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_95_FNV_DPA_MAPPED_1_REG 0x1B1405F0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_95_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_95_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400015f4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_95_FNV_DPA_MAPPED_1_REG 0x1B1405F4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_95_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_95_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x400015f8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_95_FNV_DPA_MAPPED_1_REG 0x1B1405F8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_95_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_96_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001600)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_96_FNV_DPA_MAPPED_1_REG 0x1B140600

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_96_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_96_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001604)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_96_FNV_DPA_MAPPED_1_REG 0x1B140604

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_96_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_96_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001608)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_96_FNV_DPA_MAPPED_1_REG 0x1B140608

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_96_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_97_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001610)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_97_FNV_DPA_MAPPED_1_REG 0x1B140610

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_97_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_97_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001614)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_97_FNV_DPA_MAPPED_1_REG 0x1B140614

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_97_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_97_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001618)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_97_FNV_DPA_MAPPED_1_REG 0x1B140618

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_97_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_98_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001620)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_98_FNV_DPA_MAPPED_1_REG 0x1B140620

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_98_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_98_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001624)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_98_FNV_DPA_MAPPED_1_REG 0x1B140624

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_98_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_98_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001628)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_98_FNV_DPA_MAPPED_1_REG 0x1B140628

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_98_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_99_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001630)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_99_FNV_DPA_MAPPED_1_REG 0x1B140630

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_99_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_99_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001634)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_99_FNV_DPA_MAPPED_1_REG 0x1B140634

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_99_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_99_FNV_DPA_MAPPED_1_REG supported on:                           */
/*      BWV (0x40001638)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_99_FNV_DPA_MAPPED_1_REG 0x1B140638

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_99_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_100_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001640)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_100_FNV_DPA_MAPPED_1_REG 0x1B140640

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_100_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_100_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001644)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_100_FNV_DPA_MAPPED_1_REG 0x1B140644

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_100_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_100_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001648)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_100_FNV_DPA_MAPPED_1_REG 0x1B140648

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_100_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_101_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001650)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_101_FNV_DPA_MAPPED_1_REG 0x1B140650

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_101_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_101_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001654)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_101_FNV_DPA_MAPPED_1_REG 0x1B140654

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_101_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_101_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001658)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_101_FNV_DPA_MAPPED_1_REG 0x1B140658

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_101_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_102_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001660)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_102_FNV_DPA_MAPPED_1_REG 0x1B140660

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_102_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_102_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001664)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_102_FNV_DPA_MAPPED_1_REG 0x1B140664

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_102_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_102_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001668)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_102_FNV_DPA_MAPPED_1_REG 0x1B140668

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_102_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_103_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001670)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_103_FNV_DPA_MAPPED_1_REG 0x1B140670

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_103_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_103_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001674)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_103_FNV_DPA_MAPPED_1_REG 0x1B140674

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_103_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_103_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001678)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_103_FNV_DPA_MAPPED_1_REG 0x1B140678

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_103_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_104_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001680)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_104_FNV_DPA_MAPPED_1_REG 0x1B140680

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_104_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_104_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001684)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_104_FNV_DPA_MAPPED_1_REG 0x1B140684

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_104_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_104_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001688)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_104_FNV_DPA_MAPPED_1_REG 0x1B140688

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_104_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_105_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001690)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_105_FNV_DPA_MAPPED_1_REG 0x1B140690

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_105_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_105_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001694)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_105_FNV_DPA_MAPPED_1_REG 0x1B140694

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_105_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_105_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001698)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_105_FNV_DPA_MAPPED_1_REG 0x1B140698

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_105_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_106_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400016a0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_106_FNV_DPA_MAPPED_1_REG 0x1B1406A0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_106_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_106_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400016a4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_106_FNV_DPA_MAPPED_1_REG 0x1B1406A4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_106_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_106_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400016a8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_106_FNV_DPA_MAPPED_1_REG 0x1B1406A8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_106_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_107_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400016b0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_107_FNV_DPA_MAPPED_1_REG 0x1B1406B0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_107_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_107_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400016b4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_107_FNV_DPA_MAPPED_1_REG 0x1B1406B4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_107_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_107_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400016b8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_107_FNV_DPA_MAPPED_1_REG 0x1B1406B8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_107_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_108_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400016c0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_108_FNV_DPA_MAPPED_1_REG 0x1B1406C0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_108_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_108_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400016c4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_108_FNV_DPA_MAPPED_1_REG 0x1B1406C4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_108_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_108_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400016c8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_108_FNV_DPA_MAPPED_1_REG 0x1B1406C8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_108_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_109_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400016d0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_109_FNV_DPA_MAPPED_1_REG 0x1B1406D0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_109_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_109_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400016d4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_109_FNV_DPA_MAPPED_1_REG 0x1B1406D4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_109_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_109_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400016d8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_109_FNV_DPA_MAPPED_1_REG 0x1B1406D8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_109_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_110_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400016e0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_110_FNV_DPA_MAPPED_1_REG 0x1B1406E0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_110_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_110_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400016e4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_110_FNV_DPA_MAPPED_1_REG 0x1B1406E4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_110_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_110_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400016e8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_110_FNV_DPA_MAPPED_1_REG 0x1B1406E8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_110_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_111_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400016f0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_111_FNV_DPA_MAPPED_1_REG 0x1B1406F0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_111_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_111_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400016f4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_111_FNV_DPA_MAPPED_1_REG 0x1B1406F4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_111_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_111_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400016f8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_111_FNV_DPA_MAPPED_1_REG 0x1B1406F8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_111_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_112_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001700)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_112_FNV_DPA_MAPPED_1_REG 0x1B140700

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_112_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_112_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001704)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_112_FNV_DPA_MAPPED_1_REG 0x1B140704

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_112_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_112_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001708)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_112_FNV_DPA_MAPPED_1_REG 0x1B140708

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_112_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_113_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001710)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_113_FNV_DPA_MAPPED_1_REG 0x1B140710

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_113_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_113_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001714)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_113_FNV_DPA_MAPPED_1_REG 0x1B140714

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_113_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_113_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001718)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_113_FNV_DPA_MAPPED_1_REG 0x1B140718

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_113_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_114_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001720)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_114_FNV_DPA_MAPPED_1_REG 0x1B140720

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_114_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_114_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001724)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_114_FNV_DPA_MAPPED_1_REG 0x1B140724

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_114_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_114_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001728)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_114_FNV_DPA_MAPPED_1_REG 0x1B140728

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_114_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_115_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001730)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_115_FNV_DPA_MAPPED_1_REG 0x1B140730

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_115_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_115_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001734)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_115_FNV_DPA_MAPPED_1_REG 0x1B140734

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_115_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_115_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001738)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_115_FNV_DPA_MAPPED_1_REG 0x1B140738

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_115_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_116_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001740)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_116_FNV_DPA_MAPPED_1_REG 0x1B140740

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_116_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_116_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001744)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_116_FNV_DPA_MAPPED_1_REG 0x1B140744

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_116_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_116_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001748)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_116_FNV_DPA_MAPPED_1_REG 0x1B140748

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_116_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_117_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001750)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_117_FNV_DPA_MAPPED_1_REG 0x1B140750

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_117_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_117_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001754)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_117_FNV_DPA_MAPPED_1_REG 0x1B140754

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_117_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_117_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001758)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_117_FNV_DPA_MAPPED_1_REG 0x1B140758

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_117_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_118_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001760)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_118_FNV_DPA_MAPPED_1_REG 0x1B140760

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_118_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_118_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001764)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_118_FNV_DPA_MAPPED_1_REG 0x1B140764

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_118_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_118_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001768)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_118_FNV_DPA_MAPPED_1_REG 0x1B140768

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_118_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_119_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001770)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_119_FNV_DPA_MAPPED_1_REG 0x1B140770

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_119_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_119_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001774)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_119_FNV_DPA_MAPPED_1_REG 0x1B140774

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_119_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_119_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001778)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_119_FNV_DPA_MAPPED_1_REG 0x1B140778

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_119_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_120_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001780)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_120_FNV_DPA_MAPPED_1_REG 0x1B140780

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_120_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_120_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001784)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_120_FNV_DPA_MAPPED_1_REG 0x1B140784

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_120_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_120_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001788)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_120_FNV_DPA_MAPPED_1_REG 0x1B140788

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_120_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_121_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001790)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_121_FNV_DPA_MAPPED_1_REG 0x1B140790

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_121_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_121_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001794)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_121_FNV_DPA_MAPPED_1_REG 0x1B140794

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_121_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_121_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001798)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_121_FNV_DPA_MAPPED_1_REG 0x1B140798

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_121_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_122_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400017a0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_122_FNV_DPA_MAPPED_1_REG 0x1B1407A0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_122_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_122_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400017a4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_122_FNV_DPA_MAPPED_1_REG 0x1B1407A4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_122_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_122_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400017a8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_122_FNV_DPA_MAPPED_1_REG 0x1B1407A8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_122_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_123_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400017b0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_123_FNV_DPA_MAPPED_1_REG 0x1B1407B0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_123_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_123_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400017b4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_123_FNV_DPA_MAPPED_1_REG 0x1B1407B4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_123_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_123_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400017b8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_123_FNV_DPA_MAPPED_1_REG 0x1B1407B8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_123_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_124_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400017c0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_124_FNV_DPA_MAPPED_1_REG 0x1B1407C0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_124_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_124_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400017c4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_124_FNV_DPA_MAPPED_1_REG 0x1B1407C4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_124_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_124_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400017c8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_124_FNV_DPA_MAPPED_1_REG 0x1B1407C8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_124_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_125_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400017d0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_125_FNV_DPA_MAPPED_1_REG 0x1B1407D0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_125_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_125_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400017d4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_125_FNV_DPA_MAPPED_1_REG 0x1B1407D4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_125_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_125_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400017d8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_125_FNV_DPA_MAPPED_1_REG 0x1B1407D8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_125_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_126_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400017e0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_126_FNV_DPA_MAPPED_1_REG 0x1B1407E0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_126_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_126_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400017e4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_126_FNV_DPA_MAPPED_1_REG 0x1B1407E4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_126_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_126_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400017e8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_126_FNV_DPA_MAPPED_1_REG 0x1B1407E8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_126_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_127_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400017f0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_127_FNV_DPA_MAPPED_1_REG 0x1B1407F0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_127_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_127_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400017f4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_127_FNV_DPA_MAPPED_1_REG 0x1B1407F4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_127_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_127_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400017f8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_127_FNV_DPA_MAPPED_1_REG 0x1B1407F8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_127_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_128_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001800)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_128_FNV_DPA_MAPPED_1_REG 0x1B140800

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_128_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_128_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001804)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_128_FNV_DPA_MAPPED_1_REG 0x1B140804

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_128_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_128_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001808)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_128_FNV_DPA_MAPPED_1_REG 0x1B140808

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_128_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_129_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001810)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_129_FNV_DPA_MAPPED_1_REG 0x1B140810

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_129_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_129_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001814)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_129_FNV_DPA_MAPPED_1_REG 0x1B140814

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_129_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_129_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001818)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_129_FNV_DPA_MAPPED_1_REG 0x1B140818

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_129_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_130_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001820)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_130_FNV_DPA_MAPPED_1_REG 0x1B140820

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_130_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_130_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001824)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_130_FNV_DPA_MAPPED_1_REG 0x1B140824

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_130_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_130_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001828)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_130_FNV_DPA_MAPPED_1_REG 0x1B140828

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_130_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_131_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001830)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_131_FNV_DPA_MAPPED_1_REG 0x1B140830

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_131_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_131_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001834)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_131_FNV_DPA_MAPPED_1_REG 0x1B140834

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_131_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_131_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001838)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_131_FNV_DPA_MAPPED_1_REG 0x1B140838

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_131_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_132_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001840)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_132_FNV_DPA_MAPPED_1_REG 0x1B140840

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_132_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_132_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001844)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_132_FNV_DPA_MAPPED_1_REG 0x1B140844

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_132_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_132_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001848)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_132_FNV_DPA_MAPPED_1_REG 0x1B140848

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_132_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_133_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001850)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_133_FNV_DPA_MAPPED_1_REG 0x1B140850

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_133_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_133_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001854)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_133_FNV_DPA_MAPPED_1_REG 0x1B140854

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_133_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_133_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001858)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_133_FNV_DPA_MAPPED_1_REG 0x1B140858

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_133_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_134_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001860)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_134_FNV_DPA_MAPPED_1_REG 0x1B140860

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_134_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_134_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001864)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_134_FNV_DPA_MAPPED_1_REG 0x1B140864

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_134_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_134_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001868)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_134_FNV_DPA_MAPPED_1_REG 0x1B140868

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_134_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_135_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001870)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_135_FNV_DPA_MAPPED_1_REG 0x1B140870

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_135_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_135_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001874)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_135_FNV_DPA_MAPPED_1_REG 0x1B140874

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_135_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_135_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001878)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_135_FNV_DPA_MAPPED_1_REG 0x1B140878

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_135_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_136_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001880)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_136_FNV_DPA_MAPPED_1_REG 0x1B140880

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_136_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_136_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001884)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_136_FNV_DPA_MAPPED_1_REG 0x1B140884

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_136_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_136_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001888)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_136_FNV_DPA_MAPPED_1_REG 0x1B140888

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_136_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_137_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001890)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_137_FNV_DPA_MAPPED_1_REG 0x1B140890

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_137_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_137_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001894)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_137_FNV_DPA_MAPPED_1_REG 0x1B140894

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_137_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_137_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001898)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_137_FNV_DPA_MAPPED_1_REG 0x1B140898

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_137_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_138_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400018a0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_138_FNV_DPA_MAPPED_1_REG 0x1B1408A0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_138_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_138_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400018a4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_138_FNV_DPA_MAPPED_1_REG 0x1B1408A4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_138_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_138_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400018a8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_138_FNV_DPA_MAPPED_1_REG 0x1B1408A8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_138_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_139_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400018b0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_139_FNV_DPA_MAPPED_1_REG 0x1B1408B0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_139_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_139_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400018b4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_139_FNV_DPA_MAPPED_1_REG 0x1B1408B4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_139_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_139_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400018b8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_139_FNV_DPA_MAPPED_1_REG 0x1B1408B8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_139_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_140_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400018c0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_140_FNV_DPA_MAPPED_1_REG 0x1B1408C0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_140_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_140_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400018c4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_140_FNV_DPA_MAPPED_1_REG 0x1B1408C4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_140_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_140_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400018c8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_140_FNV_DPA_MAPPED_1_REG 0x1B1408C8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_140_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_141_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400018d0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_141_FNV_DPA_MAPPED_1_REG 0x1B1408D0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_141_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_141_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400018d4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_141_FNV_DPA_MAPPED_1_REG 0x1B1408D4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_141_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_141_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400018d8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_141_FNV_DPA_MAPPED_1_REG 0x1B1408D8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_141_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_142_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400018e0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_142_FNV_DPA_MAPPED_1_REG 0x1B1408E0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_142_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_142_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400018e4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_142_FNV_DPA_MAPPED_1_REG 0x1B1408E4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_142_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_142_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400018e8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_142_FNV_DPA_MAPPED_1_REG 0x1B1408E8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_142_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_143_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400018f0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_143_FNV_DPA_MAPPED_1_REG 0x1B1408F0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_143_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_143_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400018f4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_143_FNV_DPA_MAPPED_1_REG 0x1B1408F4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_143_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_143_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400018f8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_143_FNV_DPA_MAPPED_1_REG 0x1B1408F8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_143_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_144_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001900)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_144_FNV_DPA_MAPPED_1_REG 0x1B140900

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_144_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_144_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001904)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_144_FNV_DPA_MAPPED_1_REG 0x1B140904

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_144_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_144_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001908)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_144_FNV_DPA_MAPPED_1_REG 0x1B140908

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_144_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_145_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001910)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_145_FNV_DPA_MAPPED_1_REG 0x1B140910

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_145_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_145_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001914)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_145_FNV_DPA_MAPPED_1_REG 0x1B140914

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_145_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_145_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001918)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_145_FNV_DPA_MAPPED_1_REG 0x1B140918

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_145_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_146_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001920)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_146_FNV_DPA_MAPPED_1_REG 0x1B140920

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_146_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_146_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001924)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_146_FNV_DPA_MAPPED_1_REG 0x1B140924

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_146_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_146_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001928)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_146_FNV_DPA_MAPPED_1_REG 0x1B140928

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_146_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_147_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001930)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_147_FNV_DPA_MAPPED_1_REG 0x1B140930

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_147_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_147_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001934)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_147_FNV_DPA_MAPPED_1_REG 0x1B140934

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_147_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_147_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001938)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_147_FNV_DPA_MAPPED_1_REG 0x1B140938

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_147_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_148_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001940)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_148_FNV_DPA_MAPPED_1_REG 0x1B140940

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_148_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_148_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001944)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_148_FNV_DPA_MAPPED_1_REG 0x1B140944

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_148_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_148_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001948)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_148_FNV_DPA_MAPPED_1_REG 0x1B140948

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_148_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_149_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001950)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_149_FNV_DPA_MAPPED_1_REG 0x1B140950

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_149_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_149_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001954)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_149_FNV_DPA_MAPPED_1_REG 0x1B140954

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_149_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_149_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001958)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_149_FNV_DPA_MAPPED_1_REG 0x1B140958

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_149_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_150_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001960)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_150_FNV_DPA_MAPPED_1_REG 0x1B140960

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_150_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_150_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001964)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_150_FNV_DPA_MAPPED_1_REG 0x1B140964

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_150_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_150_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001968)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_150_FNV_DPA_MAPPED_1_REG 0x1B140968

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_150_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_151_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001970)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_151_FNV_DPA_MAPPED_1_REG 0x1B140970

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_151_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_151_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001974)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_151_FNV_DPA_MAPPED_1_REG 0x1B140974

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_151_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_151_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001978)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_151_FNV_DPA_MAPPED_1_REG 0x1B140978

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_151_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_152_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001980)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_152_FNV_DPA_MAPPED_1_REG 0x1B140980

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_152_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_152_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001984)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_152_FNV_DPA_MAPPED_1_REG 0x1B140984

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_152_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_152_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001988)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_152_FNV_DPA_MAPPED_1_REG 0x1B140988

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_152_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_153_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001990)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_153_FNV_DPA_MAPPED_1_REG 0x1B140990

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_153_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_153_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001994)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_153_FNV_DPA_MAPPED_1_REG 0x1B140994

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_153_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_153_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001998)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_153_FNV_DPA_MAPPED_1_REG 0x1B140998

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_153_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_154_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400019a0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_154_FNV_DPA_MAPPED_1_REG 0x1B1409A0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_154_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_154_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400019a4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_154_FNV_DPA_MAPPED_1_REG 0x1B1409A4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_154_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_154_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400019a8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_154_FNV_DPA_MAPPED_1_REG 0x1B1409A8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_154_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_155_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400019b0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_155_FNV_DPA_MAPPED_1_REG 0x1B1409B0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_155_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_155_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400019b4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_155_FNV_DPA_MAPPED_1_REG 0x1B1409B4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_155_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_155_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400019b8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_155_FNV_DPA_MAPPED_1_REG 0x1B1409B8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_155_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_156_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400019c0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_156_FNV_DPA_MAPPED_1_REG 0x1B1409C0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_156_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_156_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400019c4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_156_FNV_DPA_MAPPED_1_REG 0x1B1409C4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_156_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_156_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400019c8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_156_FNV_DPA_MAPPED_1_REG 0x1B1409C8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_156_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_157_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400019d0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_157_FNV_DPA_MAPPED_1_REG 0x1B1409D0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_157_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_157_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400019d4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_157_FNV_DPA_MAPPED_1_REG 0x1B1409D4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_157_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_157_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400019d8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_157_FNV_DPA_MAPPED_1_REG 0x1B1409D8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_157_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_158_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400019e0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_158_FNV_DPA_MAPPED_1_REG 0x1B1409E0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_158_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_158_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400019e4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_158_FNV_DPA_MAPPED_1_REG 0x1B1409E4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_158_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_158_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400019e8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_158_FNV_DPA_MAPPED_1_REG 0x1B1409E8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_158_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_159_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400019f0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_159_FNV_DPA_MAPPED_1_REG 0x1B1409F0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_159_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_159_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400019f4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_159_FNV_DPA_MAPPED_1_REG 0x1B1409F4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_159_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_159_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x400019f8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_159_FNV_DPA_MAPPED_1_REG 0x1B1409F8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_159_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_160_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001a00)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_160_FNV_DPA_MAPPED_1_REG 0x1B140A00

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_160_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_160_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001a04)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_160_FNV_DPA_MAPPED_1_REG 0x1B140A04

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_160_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_160_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001a08)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_160_FNV_DPA_MAPPED_1_REG 0x1B140A08

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_160_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_161_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001a10)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_161_FNV_DPA_MAPPED_1_REG 0x1B140A10

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_161_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_161_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001a14)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_161_FNV_DPA_MAPPED_1_REG 0x1B140A14

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_161_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_161_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001a18)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_161_FNV_DPA_MAPPED_1_REG 0x1B140A18

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_161_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_162_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001a20)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_162_FNV_DPA_MAPPED_1_REG 0x1B140A20

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_162_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_162_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001a24)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_162_FNV_DPA_MAPPED_1_REG 0x1B140A24

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_162_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_162_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001a28)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_162_FNV_DPA_MAPPED_1_REG 0x1B140A28

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_162_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_163_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001a30)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_163_FNV_DPA_MAPPED_1_REG 0x1B140A30

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_163_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_163_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001a34)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_163_FNV_DPA_MAPPED_1_REG 0x1B140A34

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_163_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_163_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001a38)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_163_FNV_DPA_MAPPED_1_REG 0x1B140A38

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_163_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_164_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001a40)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_164_FNV_DPA_MAPPED_1_REG 0x1B140A40

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_164_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_164_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001a44)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_164_FNV_DPA_MAPPED_1_REG 0x1B140A44

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_164_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_164_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001a48)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_164_FNV_DPA_MAPPED_1_REG 0x1B140A48

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_164_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_165_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001a50)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_165_FNV_DPA_MAPPED_1_REG 0x1B140A50

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_165_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_165_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001a54)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_165_FNV_DPA_MAPPED_1_REG 0x1B140A54

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_165_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_165_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001a58)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_165_FNV_DPA_MAPPED_1_REG 0x1B140A58

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_165_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_166_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001a60)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_166_FNV_DPA_MAPPED_1_REG 0x1B140A60

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_166_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_166_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001a64)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_166_FNV_DPA_MAPPED_1_REG 0x1B140A64

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_166_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_166_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001a68)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_166_FNV_DPA_MAPPED_1_REG 0x1B140A68

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_166_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_167_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001a70)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_167_FNV_DPA_MAPPED_1_REG 0x1B140A70

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_167_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_167_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001a74)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_167_FNV_DPA_MAPPED_1_REG 0x1B140A74

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_167_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_167_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001a78)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_167_FNV_DPA_MAPPED_1_REG 0x1B140A78

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_167_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_168_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001a80)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_168_FNV_DPA_MAPPED_1_REG 0x1B140A80

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_168_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_168_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001a84)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_168_FNV_DPA_MAPPED_1_REG 0x1B140A84

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_168_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_168_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001a88)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_168_FNV_DPA_MAPPED_1_REG 0x1B140A88

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_168_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_169_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001a90)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_169_FNV_DPA_MAPPED_1_REG 0x1B140A90

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_169_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_169_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001a94)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_169_FNV_DPA_MAPPED_1_REG 0x1B140A94

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_169_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_169_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001a98)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_169_FNV_DPA_MAPPED_1_REG 0x1B140A98

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_169_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_170_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001aa0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_170_FNV_DPA_MAPPED_1_REG 0x1B140AA0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_170_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_170_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001aa4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_170_FNV_DPA_MAPPED_1_REG 0x1B140AA4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_170_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_170_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001aa8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_170_FNV_DPA_MAPPED_1_REG 0x1B140AA8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_170_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_171_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ab0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_171_FNV_DPA_MAPPED_1_REG 0x1B140AB0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_171_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_171_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ab4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_171_FNV_DPA_MAPPED_1_REG 0x1B140AB4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_171_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_171_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ab8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_171_FNV_DPA_MAPPED_1_REG 0x1B140AB8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_171_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_172_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ac0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_172_FNV_DPA_MAPPED_1_REG 0x1B140AC0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_172_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_172_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ac4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_172_FNV_DPA_MAPPED_1_REG 0x1B140AC4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_172_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_172_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ac8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_172_FNV_DPA_MAPPED_1_REG 0x1B140AC8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_172_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_173_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ad0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_173_FNV_DPA_MAPPED_1_REG 0x1B140AD0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_173_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_173_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ad4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_173_FNV_DPA_MAPPED_1_REG 0x1B140AD4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_173_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_173_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ad8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_173_FNV_DPA_MAPPED_1_REG 0x1B140AD8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_173_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_174_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ae0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_174_FNV_DPA_MAPPED_1_REG 0x1B140AE0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_174_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_174_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ae4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_174_FNV_DPA_MAPPED_1_REG 0x1B140AE4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_174_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_174_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ae8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_174_FNV_DPA_MAPPED_1_REG 0x1B140AE8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_174_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_175_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001af0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_175_FNV_DPA_MAPPED_1_REG 0x1B140AF0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_175_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_175_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001af4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_175_FNV_DPA_MAPPED_1_REG 0x1B140AF4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_175_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_175_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001af8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_175_FNV_DPA_MAPPED_1_REG 0x1B140AF8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_175_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_176_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001b00)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_176_FNV_DPA_MAPPED_1_REG 0x1B140B00

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_176_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_176_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001b04)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_176_FNV_DPA_MAPPED_1_REG 0x1B140B04

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_176_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_176_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001b08)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_176_FNV_DPA_MAPPED_1_REG 0x1B140B08

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_176_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_177_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001b10)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_177_FNV_DPA_MAPPED_1_REG 0x1B140B10

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_177_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_177_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001b14)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_177_FNV_DPA_MAPPED_1_REG 0x1B140B14

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_177_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_177_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001b18)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_177_FNV_DPA_MAPPED_1_REG 0x1B140B18

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_177_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_178_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001b20)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_178_FNV_DPA_MAPPED_1_REG 0x1B140B20

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_178_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_178_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001b24)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_178_FNV_DPA_MAPPED_1_REG 0x1B140B24

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_178_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_178_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001b28)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_178_FNV_DPA_MAPPED_1_REG 0x1B140B28

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_178_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_179_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001b30)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_179_FNV_DPA_MAPPED_1_REG 0x1B140B30

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_179_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_179_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001b34)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_179_FNV_DPA_MAPPED_1_REG 0x1B140B34

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_179_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_179_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001b38)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_179_FNV_DPA_MAPPED_1_REG 0x1B140B38

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_179_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_180_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001b40)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_180_FNV_DPA_MAPPED_1_REG 0x1B140B40

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_180_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_180_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001b44)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_180_FNV_DPA_MAPPED_1_REG 0x1B140B44

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_180_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_180_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001b48)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_180_FNV_DPA_MAPPED_1_REG 0x1B140B48

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_180_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_181_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001b50)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_181_FNV_DPA_MAPPED_1_REG 0x1B140B50

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_181_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_181_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001b54)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_181_FNV_DPA_MAPPED_1_REG 0x1B140B54

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_181_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_181_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001b58)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_181_FNV_DPA_MAPPED_1_REG 0x1B140B58

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_181_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_182_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001b60)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_182_FNV_DPA_MAPPED_1_REG 0x1B140B60

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_182_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_182_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001b64)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_182_FNV_DPA_MAPPED_1_REG 0x1B140B64

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_182_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_182_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001b68)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_182_FNV_DPA_MAPPED_1_REG 0x1B140B68

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_182_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_183_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001b70)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_183_FNV_DPA_MAPPED_1_REG 0x1B140B70

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_183_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_183_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001b74)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_183_FNV_DPA_MAPPED_1_REG 0x1B140B74

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_183_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_183_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001b78)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_183_FNV_DPA_MAPPED_1_REG 0x1B140B78

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_183_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_184_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001b80)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_184_FNV_DPA_MAPPED_1_REG 0x1B140B80

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_184_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_184_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001b84)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_184_FNV_DPA_MAPPED_1_REG 0x1B140B84

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_184_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_184_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001b88)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_184_FNV_DPA_MAPPED_1_REG 0x1B140B88

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_184_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_185_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001b90)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_185_FNV_DPA_MAPPED_1_REG 0x1B140B90

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_185_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_185_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001b94)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_185_FNV_DPA_MAPPED_1_REG 0x1B140B94

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_185_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_185_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001b98)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_185_FNV_DPA_MAPPED_1_REG 0x1B140B98

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_185_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_186_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ba0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_186_FNV_DPA_MAPPED_1_REG 0x1B140BA0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_186_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_186_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ba4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_186_FNV_DPA_MAPPED_1_REG 0x1B140BA4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_186_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_186_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ba8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_186_FNV_DPA_MAPPED_1_REG 0x1B140BA8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_186_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_187_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001bb0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_187_FNV_DPA_MAPPED_1_REG 0x1B140BB0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_187_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_187_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001bb4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_187_FNV_DPA_MAPPED_1_REG 0x1B140BB4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_187_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_187_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001bb8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_187_FNV_DPA_MAPPED_1_REG 0x1B140BB8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_187_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_188_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001bc0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_188_FNV_DPA_MAPPED_1_REG 0x1B140BC0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_188_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_188_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001bc4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_188_FNV_DPA_MAPPED_1_REG 0x1B140BC4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_188_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_188_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001bc8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_188_FNV_DPA_MAPPED_1_REG 0x1B140BC8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_188_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_189_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001bd0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_189_FNV_DPA_MAPPED_1_REG 0x1B140BD0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_189_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_189_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001bd4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_189_FNV_DPA_MAPPED_1_REG 0x1B140BD4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_189_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_189_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001bd8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_189_FNV_DPA_MAPPED_1_REG 0x1B140BD8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_189_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_190_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001be0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_190_FNV_DPA_MAPPED_1_REG 0x1B140BE0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_190_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_190_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001be4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_190_FNV_DPA_MAPPED_1_REG 0x1B140BE4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_190_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_190_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001be8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_190_FNV_DPA_MAPPED_1_REG 0x1B140BE8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_190_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_191_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001bf0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_191_FNV_DPA_MAPPED_1_REG 0x1B140BF0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_191_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_191_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001bf4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_191_FNV_DPA_MAPPED_1_REG 0x1B140BF4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_191_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_191_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001bf8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_191_FNV_DPA_MAPPED_1_REG 0x1B140BF8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_191_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_192_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001c00)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_192_FNV_DPA_MAPPED_1_REG 0x1B140C00

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_192_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_192_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001c04)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_192_FNV_DPA_MAPPED_1_REG 0x1B140C04

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_192_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_192_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001c08)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_192_FNV_DPA_MAPPED_1_REG 0x1B140C08

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_192_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_193_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001c10)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_193_FNV_DPA_MAPPED_1_REG 0x1B140C10

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_193_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_193_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001c14)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_193_FNV_DPA_MAPPED_1_REG 0x1B140C14

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_193_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_193_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001c18)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_193_FNV_DPA_MAPPED_1_REG 0x1B140C18

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_193_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_194_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001c20)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_194_FNV_DPA_MAPPED_1_REG 0x1B140C20

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_194_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_194_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001c24)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_194_FNV_DPA_MAPPED_1_REG 0x1B140C24

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_194_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_194_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001c28)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_194_FNV_DPA_MAPPED_1_REG 0x1B140C28

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_194_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_195_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001c30)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_195_FNV_DPA_MAPPED_1_REG 0x1B140C30

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_195_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_195_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001c34)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_195_FNV_DPA_MAPPED_1_REG 0x1B140C34

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_195_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_195_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001c38)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_195_FNV_DPA_MAPPED_1_REG 0x1B140C38

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_195_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_196_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001c40)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_196_FNV_DPA_MAPPED_1_REG 0x1B140C40

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_196_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_196_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001c44)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_196_FNV_DPA_MAPPED_1_REG 0x1B140C44

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_196_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_196_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001c48)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_196_FNV_DPA_MAPPED_1_REG 0x1B140C48

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_196_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_197_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001c50)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_197_FNV_DPA_MAPPED_1_REG 0x1B140C50

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_197_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_197_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001c54)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_197_FNV_DPA_MAPPED_1_REG 0x1B140C54

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_197_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_197_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001c58)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_197_FNV_DPA_MAPPED_1_REG 0x1B140C58

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_197_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_198_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001c60)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_198_FNV_DPA_MAPPED_1_REG 0x1B140C60

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_198_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_198_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001c64)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_198_FNV_DPA_MAPPED_1_REG 0x1B140C64

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_198_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_198_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001c68)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_198_FNV_DPA_MAPPED_1_REG 0x1B140C68

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_198_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_199_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001c70)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_199_FNV_DPA_MAPPED_1_REG 0x1B140C70

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_199_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_199_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001c74)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_199_FNV_DPA_MAPPED_1_REG 0x1B140C74

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_199_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_199_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001c78)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_199_FNV_DPA_MAPPED_1_REG 0x1B140C78

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_199_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_200_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001c80)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_200_FNV_DPA_MAPPED_1_REG 0x1B140C80

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_200_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_200_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001c84)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_200_FNV_DPA_MAPPED_1_REG 0x1B140C84

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_200_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_200_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001c88)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_200_FNV_DPA_MAPPED_1_REG 0x1B140C88

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_200_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_201_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001c90)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_201_FNV_DPA_MAPPED_1_REG 0x1B140C90

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_201_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_201_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001c94)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_201_FNV_DPA_MAPPED_1_REG 0x1B140C94

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_201_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_201_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001c98)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_201_FNV_DPA_MAPPED_1_REG 0x1B140C98

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_201_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_202_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ca0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_202_FNV_DPA_MAPPED_1_REG 0x1B140CA0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_202_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_202_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ca4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_202_FNV_DPA_MAPPED_1_REG 0x1B140CA4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_202_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_202_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ca8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_202_FNV_DPA_MAPPED_1_REG 0x1B140CA8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_202_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_203_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001cb0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_203_FNV_DPA_MAPPED_1_REG 0x1B140CB0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_203_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_203_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001cb4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_203_FNV_DPA_MAPPED_1_REG 0x1B140CB4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_203_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_203_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001cb8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_203_FNV_DPA_MAPPED_1_REG 0x1B140CB8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_203_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_204_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001cc0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_204_FNV_DPA_MAPPED_1_REG 0x1B140CC0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_204_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_204_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001cc4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_204_FNV_DPA_MAPPED_1_REG 0x1B140CC4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_204_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_204_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001cc8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_204_FNV_DPA_MAPPED_1_REG 0x1B140CC8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_204_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_205_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001cd0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_205_FNV_DPA_MAPPED_1_REG 0x1B140CD0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_205_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_205_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001cd4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_205_FNV_DPA_MAPPED_1_REG 0x1B140CD4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_205_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_205_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001cd8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_205_FNV_DPA_MAPPED_1_REG 0x1B140CD8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_205_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_206_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ce0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_206_FNV_DPA_MAPPED_1_REG 0x1B140CE0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_206_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_206_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ce4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_206_FNV_DPA_MAPPED_1_REG 0x1B140CE4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_206_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_206_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ce8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_206_FNV_DPA_MAPPED_1_REG 0x1B140CE8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_206_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_207_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001cf0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_207_FNV_DPA_MAPPED_1_REG 0x1B140CF0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_207_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_207_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001cf4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_207_FNV_DPA_MAPPED_1_REG 0x1B140CF4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_207_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_207_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001cf8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_207_FNV_DPA_MAPPED_1_REG 0x1B140CF8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_207_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_208_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001d00)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_208_FNV_DPA_MAPPED_1_REG 0x1B140D00

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_208_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_208_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001d04)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_208_FNV_DPA_MAPPED_1_REG 0x1B140D04

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_208_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_208_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001d08)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_208_FNV_DPA_MAPPED_1_REG 0x1B140D08

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_208_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_209_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001d10)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_209_FNV_DPA_MAPPED_1_REG 0x1B140D10

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_209_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_209_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001d14)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_209_FNV_DPA_MAPPED_1_REG 0x1B140D14

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_209_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_209_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001d18)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_209_FNV_DPA_MAPPED_1_REG 0x1B140D18

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_209_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_210_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001d20)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_210_FNV_DPA_MAPPED_1_REG 0x1B140D20

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_210_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_210_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001d24)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_210_FNV_DPA_MAPPED_1_REG 0x1B140D24

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_210_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_210_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001d28)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_210_FNV_DPA_MAPPED_1_REG 0x1B140D28

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_210_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_211_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001d30)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_211_FNV_DPA_MAPPED_1_REG 0x1B140D30

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_211_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_211_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001d34)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_211_FNV_DPA_MAPPED_1_REG 0x1B140D34

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_211_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_211_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001d38)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_211_FNV_DPA_MAPPED_1_REG 0x1B140D38

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_211_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_212_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001d40)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_212_FNV_DPA_MAPPED_1_REG 0x1B140D40

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_212_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_212_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001d44)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_212_FNV_DPA_MAPPED_1_REG 0x1B140D44

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_212_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_212_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001d48)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_212_FNV_DPA_MAPPED_1_REG 0x1B140D48

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_212_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_213_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001d50)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_213_FNV_DPA_MAPPED_1_REG 0x1B140D50

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_213_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_213_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001d54)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_213_FNV_DPA_MAPPED_1_REG 0x1B140D54

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_213_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_213_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001d58)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_213_FNV_DPA_MAPPED_1_REG 0x1B140D58

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_213_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_214_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001d60)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_214_FNV_DPA_MAPPED_1_REG 0x1B140D60

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_214_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_214_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001d64)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_214_FNV_DPA_MAPPED_1_REG 0x1B140D64

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_214_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_214_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001d68)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_214_FNV_DPA_MAPPED_1_REG 0x1B140D68

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_214_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_215_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001d70)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_215_FNV_DPA_MAPPED_1_REG 0x1B140D70

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_215_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_215_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001d74)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_215_FNV_DPA_MAPPED_1_REG 0x1B140D74

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_215_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_215_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001d78)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_215_FNV_DPA_MAPPED_1_REG 0x1B140D78

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_215_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_216_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001d80)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_216_FNV_DPA_MAPPED_1_REG 0x1B140D80

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_216_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_216_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001d84)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_216_FNV_DPA_MAPPED_1_REG 0x1B140D84

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_216_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_216_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001d88)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_216_FNV_DPA_MAPPED_1_REG 0x1B140D88

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_216_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_217_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001d90)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_217_FNV_DPA_MAPPED_1_REG 0x1B140D90

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_217_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_217_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001d94)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_217_FNV_DPA_MAPPED_1_REG 0x1B140D94

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_217_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_217_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001d98)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_217_FNV_DPA_MAPPED_1_REG 0x1B140D98

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_217_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_218_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001da0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_218_FNV_DPA_MAPPED_1_REG 0x1B140DA0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_218_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_218_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001da4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_218_FNV_DPA_MAPPED_1_REG 0x1B140DA4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_218_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_218_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001da8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_218_FNV_DPA_MAPPED_1_REG 0x1B140DA8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_218_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_219_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001db0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_219_FNV_DPA_MAPPED_1_REG 0x1B140DB0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_219_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_219_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001db4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_219_FNV_DPA_MAPPED_1_REG 0x1B140DB4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_219_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_219_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001db8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_219_FNV_DPA_MAPPED_1_REG 0x1B140DB8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_219_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_220_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001dc0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_220_FNV_DPA_MAPPED_1_REG 0x1B140DC0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_220_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_220_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001dc4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_220_FNV_DPA_MAPPED_1_REG 0x1B140DC4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_220_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_220_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001dc8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_220_FNV_DPA_MAPPED_1_REG 0x1B140DC8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_220_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_221_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001dd0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_221_FNV_DPA_MAPPED_1_REG 0x1B140DD0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_221_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_221_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001dd4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_221_FNV_DPA_MAPPED_1_REG 0x1B140DD4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_221_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_221_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001dd8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_221_FNV_DPA_MAPPED_1_REG 0x1B140DD8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_221_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_222_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001de0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_222_FNV_DPA_MAPPED_1_REG 0x1B140DE0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_222_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_222_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001de4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_222_FNV_DPA_MAPPED_1_REG 0x1B140DE4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_222_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_222_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001de8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_222_FNV_DPA_MAPPED_1_REG 0x1B140DE8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_222_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_223_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001df0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_223_FNV_DPA_MAPPED_1_REG 0x1B140DF0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_223_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_223_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001df4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_223_FNV_DPA_MAPPED_1_REG 0x1B140DF4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_223_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_223_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001df8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_223_FNV_DPA_MAPPED_1_REG 0x1B140DF8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_223_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_224_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001e00)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_224_FNV_DPA_MAPPED_1_REG 0x1B140E00

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_224_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_224_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001e04)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_224_FNV_DPA_MAPPED_1_REG 0x1B140E04

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_224_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_224_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001e08)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_224_FNV_DPA_MAPPED_1_REG 0x1B140E08

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_224_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_225_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001e10)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_225_FNV_DPA_MAPPED_1_REG 0x1B140E10

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_225_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_225_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001e14)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_225_FNV_DPA_MAPPED_1_REG 0x1B140E14

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_225_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_225_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001e18)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_225_FNV_DPA_MAPPED_1_REG 0x1B140E18

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_225_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_226_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001e20)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_226_FNV_DPA_MAPPED_1_REG 0x1B140E20

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_226_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_226_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001e24)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_226_FNV_DPA_MAPPED_1_REG 0x1B140E24

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_226_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_226_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001e28)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_226_FNV_DPA_MAPPED_1_REG 0x1B140E28

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_226_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_227_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001e30)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_227_FNV_DPA_MAPPED_1_REG 0x1B140E30

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_227_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_227_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001e34)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_227_FNV_DPA_MAPPED_1_REG 0x1B140E34

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_227_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_227_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001e38)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_227_FNV_DPA_MAPPED_1_REG 0x1B140E38

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_227_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_228_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001e40)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_228_FNV_DPA_MAPPED_1_REG 0x1B140E40

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_228_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_228_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001e44)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_228_FNV_DPA_MAPPED_1_REG 0x1B140E44

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_228_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_228_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001e48)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_228_FNV_DPA_MAPPED_1_REG 0x1B140E48

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_228_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_229_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001e50)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_229_FNV_DPA_MAPPED_1_REG 0x1B140E50

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_229_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_229_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001e54)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_229_FNV_DPA_MAPPED_1_REG 0x1B140E54

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_229_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_229_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001e58)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_229_FNV_DPA_MAPPED_1_REG 0x1B140E58

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_229_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_230_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001e60)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_230_FNV_DPA_MAPPED_1_REG 0x1B140E60

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_230_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_230_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001e64)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_230_FNV_DPA_MAPPED_1_REG 0x1B140E64

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_230_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_230_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001e68)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_230_FNV_DPA_MAPPED_1_REG 0x1B140E68

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_230_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_231_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001e70)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_231_FNV_DPA_MAPPED_1_REG 0x1B140E70

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_231_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_231_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001e74)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_231_FNV_DPA_MAPPED_1_REG 0x1B140E74

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_231_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_231_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001e78)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_231_FNV_DPA_MAPPED_1_REG 0x1B140E78

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_231_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_232_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001e80)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_232_FNV_DPA_MAPPED_1_REG 0x1B140E80

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_232_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_232_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001e84)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_232_FNV_DPA_MAPPED_1_REG 0x1B140E84

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_232_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_232_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001e88)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_232_FNV_DPA_MAPPED_1_REG 0x1B140E88

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_232_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_233_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001e90)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_233_FNV_DPA_MAPPED_1_REG 0x1B140E90

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_233_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_233_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001e94)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_233_FNV_DPA_MAPPED_1_REG 0x1B140E94

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_233_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_233_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001e98)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_233_FNV_DPA_MAPPED_1_REG 0x1B140E98

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_233_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_234_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ea0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_234_FNV_DPA_MAPPED_1_REG 0x1B140EA0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_234_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_234_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ea4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_234_FNV_DPA_MAPPED_1_REG 0x1B140EA4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_234_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_234_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ea8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_234_FNV_DPA_MAPPED_1_REG 0x1B140EA8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_234_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_235_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001eb0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_235_FNV_DPA_MAPPED_1_REG 0x1B140EB0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_235_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_235_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001eb4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_235_FNV_DPA_MAPPED_1_REG 0x1B140EB4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_235_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_235_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001eb8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_235_FNV_DPA_MAPPED_1_REG 0x1B140EB8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_235_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_236_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ec0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_236_FNV_DPA_MAPPED_1_REG 0x1B140EC0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_236_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_236_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ec4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_236_FNV_DPA_MAPPED_1_REG 0x1B140EC4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_236_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_236_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ec8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_236_FNV_DPA_MAPPED_1_REG 0x1B140EC8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_236_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_237_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ed0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_237_FNV_DPA_MAPPED_1_REG 0x1B140ED0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_237_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_237_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ed4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_237_FNV_DPA_MAPPED_1_REG 0x1B140ED4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_237_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_237_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ed8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_237_FNV_DPA_MAPPED_1_REG 0x1B140ED8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_237_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_238_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ee0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_238_FNV_DPA_MAPPED_1_REG 0x1B140EE0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_238_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_238_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ee4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_238_FNV_DPA_MAPPED_1_REG 0x1B140EE4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_238_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_238_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ee8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_238_FNV_DPA_MAPPED_1_REG 0x1B140EE8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_238_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_239_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ef0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_239_FNV_DPA_MAPPED_1_REG 0x1B140EF0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_239_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_239_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ef4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_239_FNV_DPA_MAPPED_1_REG 0x1B140EF4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_239_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_239_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ef8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_239_FNV_DPA_MAPPED_1_REG 0x1B140EF8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_239_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_240_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001f00)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_240_FNV_DPA_MAPPED_1_REG 0x1B140F00

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_240_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_240_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001f04)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_240_FNV_DPA_MAPPED_1_REG 0x1B140F04

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_240_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_240_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001f08)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_240_FNV_DPA_MAPPED_1_REG 0x1B140F08

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_240_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_241_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001f10)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_241_FNV_DPA_MAPPED_1_REG 0x1B140F10

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_241_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_241_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001f14)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_241_FNV_DPA_MAPPED_1_REG 0x1B140F14

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_241_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_241_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001f18)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_241_FNV_DPA_MAPPED_1_REG 0x1B140F18

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_241_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_242_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001f20)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_242_FNV_DPA_MAPPED_1_REG 0x1B140F20

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_242_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_242_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001f24)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_242_FNV_DPA_MAPPED_1_REG 0x1B140F24

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_242_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_242_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001f28)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_242_FNV_DPA_MAPPED_1_REG 0x1B140F28

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_242_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_243_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001f30)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_243_FNV_DPA_MAPPED_1_REG 0x1B140F30

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_243_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_243_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001f34)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_243_FNV_DPA_MAPPED_1_REG 0x1B140F34

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_243_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_243_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001f38)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_243_FNV_DPA_MAPPED_1_REG 0x1B140F38

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_243_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_244_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001f40)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_244_FNV_DPA_MAPPED_1_REG 0x1B140F40

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_244_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_244_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001f44)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_244_FNV_DPA_MAPPED_1_REG 0x1B140F44

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_244_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_244_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001f48)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_244_FNV_DPA_MAPPED_1_REG 0x1B140F48

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_244_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_245_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001f50)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_245_FNV_DPA_MAPPED_1_REG 0x1B140F50

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_245_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_245_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001f54)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_245_FNV_DPA_MAPPED_1_REG 0x1B140F54

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_245_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_245_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001f58)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_245_FNV_DPA_MAPPED_1_REG 0x1B140F58

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_245_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_246_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001f60)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_246_FNV_DPA_MAPPED_1_REG 0x1B140F60

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_246_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_246_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001f64)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_246_FNV_DPA_MAPPED_1_REG 0x1B140F64

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_246_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_246_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001f68)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_246_FNV_DPA_MAPPED_1_REG 0x1B140F68

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_246_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_247_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001f70)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_247_FNV_DPA_MAPPED_1_REG 0x1B140F70

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_247_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_247_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001f74)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_247_FNV_DPA_MAPPED_1_REG 0x1B140F74

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_247_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_247_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001f78)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_247_FNV_DPA_MAPPED_1_REG 0x1B140F78

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_247_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_248_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001f80)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_248_FNV_DPA_MAPPED_1_REG 0x1B140F80

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_248_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_248_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001f84)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_248_FNV_DPA_MAPPED_1_REG 0x1B140F84

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_248_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_248_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001f88)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_248_FNV_DPA_MAPPED_1_REG 0x1B140F88

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_248_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_249_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001f90)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_249_FNV_DPA_MAPPED_1_REG 0x1B140F90

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_249_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_249_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001f94)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_249_FNV_DPA_MAPPED_1_REG 0x1B140F94

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_249_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_249_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001f98)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_249_FNV_DPA_MAPPED_1_REG 0x1B140F98

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_249_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_250_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001fa0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_250_FNV_DPA_MAPPED_1_REG 0x1B140FA0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_250_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_250_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001fa4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_250_FNV_DPA_MAPPED_1_REG 0x1B140FA4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_250_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_250_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001fa8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_250_FNV_DPA_MAPPED_1_REG 0x1B140FA8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_250_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_251_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001fb0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_251_FNV_DPA_MAPPED_1_REG 0x1B140FB0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_251_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_251_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001fb4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_251_FNV_DPA_MAPPED_1_REG 0x1B140FB4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_251_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_251_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001fb8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_251_FNV_DPA_MAPPED_1_REG 0x1B140FB8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_251_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_252_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001fc0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_252_FNV_DPA_MAPPED_1_REG 0x1B140FC0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_252_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_252_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001fc4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_252_FNV_DPA_MAPPED_1_REG 0x1B140FC4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_252_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_252_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001fc8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_252_FNV_DPA_MAPPED_1_REG 0x1B140FC8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_252_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_253_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001fd0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_253_FNV_DPA_MAPPED_1_REG 0x1B140FD0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_253_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_253_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001fd4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_253_FNV_DPA_MAPPED_1_REG 0x1B140FD4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_253_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_253_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001fd8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_253_FNV_DPA_MAPPED_1_REG 0x1B140FD8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_253_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_254_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001fe0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_254_FNV_DPA_MAPPED_1_REG 0x1B140FE0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_254_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_254_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001fe4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_254_FNV_DPA_MAPPED_1_REG 0x1B140FE4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_254_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_254_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001fe8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_254_FNV_DPA_MAPPED_1_REG 0x1B140FE8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_254_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_L_255_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ff0)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window.
*/


#define BM_BW_ADDR_L_255_FNV_DPA_MAPPED_1_REG 0x1B140FF0

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 32;

                            /* Bits[31:0], Access Type=RW, default=0x00000000*/

                            /* DPA Address[37:6] */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_L_255_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_ADDR_H_255_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ff4)                                                        */
/* Register default value on BWV: 0x00000018                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the DPA Base Address of the Block Window and R/W Unlock Controls
*/


#define BM_BW_ADDR_H_255_FNV_DPA_MAPPED_1_REG 0x1B140FF4

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa : 5;

                            /* Bits[4:0], Access Type=RW, default=0x00000018*/

                            /* DPA Address[42:38] */
    UINT32 rsvd : 11;

                            /* Bits[15:5], Access Type=RO, default=None*/

                            /* Reserved */
    UINT32 win_size : 8;

                            /* Bits[23:16], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies # of cachelines to be transferred[br]
                               0x0 - 44 - Valid range [br] 0x45-ff - Rsvd
                            */
    UINT32 rw_lock : 1;

                            /* Bits[24:24], Access Type=RW, default=0x00000000*/

                            /*
                               Specifies if Window is setup for reads or
                               writes[br] 0 - Window is set for all reads and
                               only directory/metadata writes (no regular
                               writes permitted)[br] 1 - Window is set for all
                               reads and writes
                            */
    UINT32 rsvd_25 : 7;

                            /* Bits[31:25], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_ADDR_H_255_FNV_DPA_MAPPED_1_STRUCT;

/* BM_BW_STATUS_255_FNV_DPA_MAPPED_1_REG supported on:                          */
/*      BWV (0x40001ff8)                                                        */
/* Register default value on BWV: 0x00000000                                    */
/* BWV Register File:    0_0_1_BWV                                              */
/* Struct generated from BWV BDF: 0_0_1                                         */
/* BWV Security PolicyGroup:                                                    */
/* This register contains the Status of the current Block Access.
*/


#define BM_BW_STATUS_255_FNV_DPA_MAPPED_1_REG 0x1B140FF8

typedef union {
  ///
  /// Individual bit fields
  ///
  struct {
    UINT32 dpa_err : 1;

                            /* Bits[0:0], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = Invalid DPA Error detected on read or write. */
    UINT32 ngn_err : 1;

                            /* Bits[1:1], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = NGN uncorrectable read error. RMW for write
                               does not affect this bit
                            */
    UINT32 wr_err : 1;

                            /* Bits[2:2], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Write command sent when Block Window is set
                               up for Read determined by bm_bw_addr_h.rw_lock
                               bit. The write was still allowed to complete and
                               the write data was accepted.
                            */
    UINT32 rd_err : 1;

                            /* Bits[3:3], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during DPA lookup on
                               this Block Window.
                            */
    UINT32 pm_err : 1;

                            /* Bits[4:4], Access Type=RW1CV, default=0x00000000*/

                            /* 1 = PM range of DPA space was locked. */
    UINT32 bw_disable_err : 1;

                            /* Bits[5:5], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = BW Access attempted when Block Window
                               Read/Write Unlock is disabled.
                            */
    UINT32 ait_psn_err : 1;

                            /* Bits[6:6], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = AIT Poison detected on read. Write command
                               doesn't update this status.
                            */
    UINT32 db_rd_err : 1;

                            /* Bits[7:7], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Read.
                            */
    UINT32 db_wr_err : 1;

                            /* Bits[8:8], Access Type=RW1CV, default=0x00000000*/

                            /*
                               1 = Parity error detected during Directory
                               Buffer Write.
                            */
    UINT32 rsvd : 23;

                            /* Bits[31:9], Access Type=RO, default=None*/

                            /* Reserved */

  } Bits;
  UINT32 Data;

} BM_BW_STATUS_255_FNV_DPA_MAPPED_1_STRUCT;
#endif /* _FNV_DPA_MAPPED_1_h */
