## @file
# Platform Package
# Cross Platform Modules for Tiano
#
# @copyright
# INTEL CONFIDENTIAL
# Copyright 2008 - 2020 Intel Corporation. <BR>
#
# The source code contained or described herein and all documents related to the
# source code ("Material") are owned by Intel Corporation or its suppliers or
# licensors. Title to the Material remains with Intel Corporation or its suppliers
# and licensors. The Material may contain trade secrets and proprietary    and
# confidential information of Intel Corporation and its suppliers and licensors,
# and is protected by worldwide copyright and trade secret laws and treaty
# provisions. No part of the Material may be used, copied, reproduced, modified,
# published, uploaded, posted, transmitted, distributed, or disclosed in any way
# without Intel's prior express written permission.
#
# No license under any patent, copyright, trade secret or other intellectual
# property right is granted to or conferred upon you by disclosure or delivery
# of the Materials, either expressly, by implication, inducement, estoppel or
# otherwise. Any license under such intellectual property rights must be
# express and approved by Intel in writing.
#
# Unless otherwise agreed by Intel in writing, you may not remove or alter
# this notice or any other notice embedded in Materials by Intel or
# Intel's suppliers or licensors in any way.
##

[Defines]
  DEC_SPECIFICATION              = 0x00010005
  PACKAGE_NAME                   = PlatformPkg
  PACKAGE_GUID                   = 9A29FD32-8C72-4b25-A7C4-767F7A2838EB
  PACKAGE_VERSION                = 0.91

[Includes]
 Include
 Include/Protocol
# APTIOV_SERVER_OVERRIDE_RC_START: Support DINO Stack ASL Device generation for DSDT through AMI_DINO.asl.
 Tool/BoardInfo
# APTOIV_SERVER_OVERRIDE_RC_END:
[Guids]
  gClvBootTimeTestExecution                           = { 0x3ff7d152, 0xef86, 0x47c3, { 0x97, 0xb0, 0xce, 0xd9, 0xbb, 0x80, 0x9a, 0x67 } }
  gMeInfoSetupGuid                                    = { 0x78259433, 0x7b6d, 0x4db3, { 0x9a, 0xe8, 0x36, 0xc4, 0xc2, 0xc3, 0xa1, 0x7d } }
  gEfiGlobalVariableGuid                              = { 0x8BE4DF61, 0x93CA, 0x11D2, { 0xAA, 0x0D, 0x00, 0xE0, 0x98, 0x03, 0x2B, 0x8C } }
  gEfiVariableArchProtocolGuid                        = { 0x1E5668E2, 0x8481, 0x11D4, { 0xBC, 0xF1, 0x00, 0x80, 0xC7, 0x3C, 0x88, 0x81 } }
  gEfiVariableWriteArchProtocolGuid                   = { 0x6441F818, 0x6362, 0x4E44, { 0xB5, 0x70, 0x7D, 0xBA, 0x31, 0xDD, 0x24, 0x53 } }

[Ppis]


[Protocols]
#
# UBA_START
#
  gEfiPlatformTypeArcherCityRPProtocolGuid            = { 0x321a5648, 0xcdaa, 0x4c17, { 0x80, 0x21, 0x6f, 0x79, 0x92, 0xbd, 0xd6, 0x2c } }
  gEfiPlatformTypeArcherCityModularProtocolGuid       = { 0x79c82d89, 0x1fee, 0x498c, { 0xa1, 0x59, 0x93, 0xa9, 0x22, 0xce, 0x3d, 0xbf } }
  gEfiPlatformTypeArcherCityEVBProtocolGuid           = { 0xb36c4162, 0x8c39, 0x48e3, { 0xbd, 0x11, 0xe1, 0xb5, 0xc3, 0x23, 0x75, 0xe9 } }
  gEfiPlatformTypeArcherCityXPVProtocolGuid           = { 0xe86a6ff3, 0x502e, 0x483c, { 0xbe, 0xab, 0x8e, 0x94, 0xbe, 0x72, 0x8a, 0x5f } }
  gEfiPlatformTypeBigPineKeyProtocolGuid              = { 0xe03e93a0, 0x3cc8, 0x466e, { 0xb7, 0x14, 0x72, 0xfd, 0xd6, 0xa5, 0x33, 0xa3 } }
#
# UBA_END
#
  gEfiSmbiosProtocolGuid                              = { 0x3583ff6, 0xcb36, 0x4940, { 0x94, 0x7e, 0xb9, 0xb3, 0x9f, 0x4a, 0xfa, 0xf7} }

[PcdsFixedAtBuild]
  # Archer City IMON SVID VR Address
  gPlatformTokenSpaceGuid.PcdArcherCitySvidVrVccfaEhvFivr|0x03|UINT8|0x30000000  #BIT4 => SVID BUS 0, BIT3-BIT0 => VR ADDRESS 3 VCCFA_EHV_FIVR

[PcdsDynamic, PcdsDynamicEx]

[PcdsFeatureFlag.common]
  gRasPkgTokenSpaceGuid.PcdWheaEnable|FALSE|BOOLEAN|0xE00000028

##
## Those PCDs are used to control build process.
##

  #
  # SV Tools
  #
  gPlatformFeatureTokenSpaceGuid.PcdXmlCliEnable|TRUE|BOOLEAN|0xE0000000
  gPlatformFeatureTokenSpaceGuid.PcdSvBiosEnable|TRUE|BOOLEAN|0xE000002E
  #
  #
  #

